{
  "swagger": "2.0",
  "info": {
    "version": "",
    "title": "Yammer API",
    "description": "TODO: Add Description",
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    }
  },
  "host": "example.com",
  "basePath": "/",
  "securityDefinitions": {},
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/{yamURI}/users/in_group/{group_id}.json": {
      "get": {
        "description": " Users in a group. Supports the page parameter.",
        "operationId": "Get_Users in a Group_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "broadcast",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/users/following/{userID}.json": {
      "get": {
        "description": "",
        "tags": [
          "Users"
        ],
        "operationId": "Get_Who is the User Following_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "full_name",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "job_title",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "department",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/messages.json": {
      "get": {
        "description": "All public messages in the user’s (whose access token is being used to make the API call henceforth referred to as current user) Yammer network. Corresponds to “All” conversations in the Yammer web interface.",
        "tags": [
          "Messages"
        ],
        "operationId": "GET Messages_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      },
      "post": {
        "description": "Create a new message. The response body will include the new message formatted the same way as message polling above. This allows your app to immediately display the newly-posted message back to the user",
        "tags": [
          "Messages"
        ],
        "operationId": "Create_'Create Message' JSON_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "x-is-map": false,
            "schema": {
              "$ref": "#/definitions/'CreateMessage'JSONRequest"
            }
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/messages/bookmarked_by.json": {
      "get": {
        "description": "\n",
        "tags": [
          "Messages"
        ],
        "operationId": "Get_Messages Bookmarked by Current User_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/relationships.json": {
      "get": {
        "description": "Show org chart relationships. Defaults to user_current, supports user_id.",
        "tags": [
          "Relationships"
        ],
        "operationId": "Get_Show Org Chart_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "full_name",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "job_title",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "department",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      },
      "post": {
        "description": "Add an org chart relationship. Specify id of the user for whom the relationship is being added as user_id, if the user is not the current user. Use [ subordinate | superior | colleague ] to create the relationship.",
        "operationId": "Add a Relationshipd_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "x-is-map": false,
            "schema": {
              "$ref": "#/definitions/AddaRelationshipdRequest"
            }
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/group_memberships.json": {
      "post": {
        "description": "Join the group specified by the numeric string ID.",
        "operationId": "Create_Join a group_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      },
      "delete": {
        "description": "Join the group specified by the numeric string ID.",
        "operationId": "Delete_Leave a group_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/users.json": {
      "get": {
        "description": "Results will be returned sorted by number of messages, instead of the default behavior of sorting alphabetically.",
        "tags": [
          "Users"
        ],
        "operationId": "Retrieve Users by # messages_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "full_name",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "job_title",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "department",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      },
      "put": {
        "description": "Update an existing user. Current user should be a verified admin in a paid Yammer network to perform this action",
        "tags": [
          "Users"
        ],
        "operationId": "Update a User by JSON_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "x-is-map": false,
            "schema": {
              "$ref": "#/definitions/UpdateaUserbyJSONRequest"
            }
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      },
      "post": {
        "description": "Create an existing user. Current user should be a verified admin in a paid Yammer network to perform this action",
        "tags": [
          "Users"
        ],
        "operationId": "Create a User by JSON_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "x-is-map": false,
            "schema": {
              "$ref": "#/definitions/CreateaUserbyJSONRequest"
            }
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/users/by_email.json": {
      "get": {
        "description": "View data about a user",
        "tags": [
          "Users"
        ],
        "operationId": "Get_Specific User by Email_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/streams/activities.json": {
      "get": {
        "description": "\n",
        "operationId": "Get_View Activities_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pending_attachment1",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "file"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/activity.json": {
      "post": {
        "description": "\n",
        "operationId": "Create an Activity _",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "required": true,
            "x-is-map": false,
            "schema": {
              "$ref": "#/definitions/CreateanActivityRequest"
            }
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/messages/following.json": {
      "get": {
        "description": "The “Following” feed which is conversations involving people, groups and topics that the user is following.",
        "tags": [
          "Messages"
        ],
        "operationId": "GET 'Following' Messages_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/messages/in_thread/14622342.json": {
      "get": {
        "description": "\n",
        "tags": [
          "Messages"
        ],
        "operationId": "Get_In Thread Messages_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/suggestions.json": {
      "get": {
        "description": "Show suggested groups to join and users to follow.",
        "tags": [
          "Suggestions"
        ],
        "operationId": "Get_Suggested Groups and Users_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/oauth.json": {
      "post": {
        "description": "\n",
        "operationId": "Create_Generate Tokens_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "consumer_key",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/users/current.json": {
      "get": {
        "description": "View data about the current user",
        "tags": [
          "Users"
        ],
        "operationId": "Get_Current User_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/messages/my_feed.json": {
      "get": {
        "description": "The user’s feed, based on the selection they have made between “Following” and “Top” conversations.\n",
        "tags": [
          "Messages"
        ],
        "operationId": "GET 'My Feed' Messages_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/messages/{message_id}.json": {
      "get": {
        "description": "Returns a specfic message using the messageID key in the environment keys",
        "operationId": "Get_'Specific Message'_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      },
      "delete": {
        "description": "Remove a message. The message must be owned by the current user\n\nDELETE requests should use querystring parameters. If your app does not support the DELETE method you can do a POST with the parameter _method=DELETE.",
        "operationId": "Delete_'Specific Message'_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/users/followed_by/{userID}.json": {
      "get": {
        "description": "",
        "tags": [
          "Users"
        ],
        "operationId": "Get_Who is the User Followed By?_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "full_name",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "job_title",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "department",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/messages/liked_by.json": {
      "get": {
        "description": "\n",
        "tags": [
          "Messages"
        ],
        "operationId": "Get_Messages Liked by Current User_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/messages/sent.json": {
      "get": {
        "description": "All messages sent by the user. Alias for /api/v1/messages/from_user/logged-in_user_id.format.",
        "tags": [
          "Messages"
        ],
        "operationId": "Get_'Sent' Messages_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/messages/in_group/9651.json": {
      "get": {
        "description": "\n",
        "tags": [
          "Messages"
        ],
        "operationId": "Get_Messages in a Specific Group_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/messages/private.json": {
      "get": {
        "description": "Private messages received by the user.",
        "tags": [
          "Messages"
        ],
        "operationId": "Get_'Private' Messages_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/users/{user_id}.json": {
      "get": {
        "description": "View data about a user",
        "operationId": "Get_Specific User by ID_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "broadcast",
            "in": "formData",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/autocomplete/ranked": {
      "get": {
        "description": "Return typeahead suggestions for the prefix passed",
        "operationId": "Get_Return Users, Group, OGs[5]_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "prefix",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "models",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/groups.json": {
      "get": {
        "description": "",
        "tags": [
          "Groups"
        ],
        "operationId": "List Active Groups_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/export": {
      "get": {
        "description": "Exports data from Network",
        "tags": [
          "Data Export"
        ],
        "operationId": "Get_Export of Data_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "include_ens",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "boolean"
          },
          {
            "name": "since",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/messages/inbox.json": {
      "get": {
        "description": "",
        "tags": [
          "Messages"
        ],
        "operationId": "Get_'Inbox' Messages_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/invitations.json": {
      "post": {
        "description": "email - The email address of the user being invited. This can be specified multiple times to invite multiple users, or using email1 through email20",
        "operationId": "Create_Invites a user to the current user’s Yammer networ_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/networks/current.json": {
      "get": {
        "description": "Facilitates switching a user between different Yammer networks. All Yammer web requests contain a network permalink in the URL (https://www.yammer.com/network_permalink/resource_path) to denote the network context. API requests use a different OAuth token for each user/network combination.\n\nParameters:\ninclude_suspended=TRUE - Optional. Include networks the user is suspended in.\n\nexclude_own_messages_from_unseen=TRUE - Optional. Exclude the user’s own messages from the unseen count. This is good for unread badges.",
        "tags": [
          "Networks"
        ],
        "operationId": "Get_Network Request_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "include_suspended",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "boolean"
          },
          {
            "name": "exclude_own_messages_from_unseen",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "boolean"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/messages/received.json": {
      "get": {
        "description": "All messages received by the user.",
        "tags": [
          "Messages"
        ],
        "operationId": "Get_'Received' Messages_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/streams/notifications.json": {
      "get": {
        "description": "Get the notifications feed for the current user.",
        "tags": [
          "Notifications"
        ],
        "operationId": "Get_Notifications_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/api/v1/oauth/tokens.json": {
      "get": {
        "description": "\n",
        "operationId": "Get Tokens_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "consumer_key",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/networks/exportable.json": {
      "get": {
        "description": "\n",
        "tags": [
          "Networks"
        ],
        "operationId": "Get_Exportable Networks_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/search.json": {
      "get": {
        "description": "\tThe search resource will return a list of messages, users, topics and groups that match the user’s search query.\n\n\n\nsearch - The search query.\n\npage - Only 20 results of each type will be returned for each page, but a total count is returned with each query. page=1 (the default) will return items 1-20, page=2 will return items 21-30, etc.\n\nnum_per_page - This allows you to limit the number of results of each type per page, up to a maximum of 20, the default value.\n",
        "operationId": "Search Request_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "num_per_page",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    },
    "/{yamURI}/messages/algo.json": {
      "get": {
        "description": "The algorithmic feed for the user that corresponds to “Top” conversations, which is what the vast majority of users will see in the Yammer web interface.",
        "tags": [
          "Messages"
        ],
        "operationId": "GET 'Algo' Messages_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yamURI",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": []
      }
    }
  },
  "definitions": {
    "'CreateMessagewithOpenGraphObject'JSONcopyRequest": {
      "title": "'Create Message with Open Graph Object' JSON copyRequest",
      "type": "object",
      "properties": {
        "body": {
          "type": "string"
        },
        "og_url": {
          "type": "string"
        },
        "og_fetch": {
          "type": "boolean"
        }
      },
      "required": [
        "body",
        "og_url",
        "og_fetch"
      ]
    },
    "CreateanActivityRequest": {
      "title": "Create an Activity Request",
      "type": "object",
      "properties": {
        "activity": {
          "$ref": "#/definitions/Activity"
        }
      },
      "required": [
        "activity"
      ]
    },
    "Activity": {
      "title": "Activity",
      "type": "object",
      "properties": {
        "actor": {
          "$ref": "#/definitions/Actor"
        },
        "action": {
          "type": "string"
        },
        "object": {
          "$ref": "#/definitions/Object4"
        },
        "private": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        }
      },
      "required": [
        "actor",
        "action",
        "object",
        "private",
        "message",
        "users"
      ]
    },
    "Actor": {
      "title": "Actor",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "email"
      ]
    },
    "Object4": {
      "title": "Object4",
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      },
      "required": [
        "url",
        "description",
        "type",
        "title",
        "image"
      ]
    },
    "User": {
      "title": "User",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "email"
      ]
    },
    "UpdateaUserbyJSONRequest": {
      "title": "Update a User by JSONRequest",
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "job_title": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      },
      "required": [
        "email",
        "full_name",
        "job_title",
        "department",
        "location"
      ]
    },
    "CreateaUserbyJSONRequest": {
      "title": "Create a User by JSONRequest",
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "job_title": {
          "type": "string"
        },
        "department": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      },
      "required": [
        "email",
        "full_name",
        "job_title",
        "department",
        "location"
      ]
    },
    "AddaRelationshipdRequest": {
      "title": "Add a RelationshipdRequest",
      "type": "object",
      "properties": {
        "superior": {
          "type": "string"
        }
      },
      "required": [
        "superior"
      ]
    },
    "'CreateMessage'JSONRequest": {
      "title": "'Create Message' JSONRequest",
      "type": "object",
      "properties": {
        "body": {
          "type": "string"
        },
        "group_id": {
          "type": "integer",
          "format": "int64"
        },
        "topic1": {
          "type": "string"
        }
      },
      "required": [
        "body",
        "group_id",
        "topic1"
      ]
    }
  }
}
