swagger: '2.0'
info:
  version: '2016-04-12'
  x-release: v4
  title: AWS X-Ray
  description: AWS X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: aws.amazon.com
  x-serviceName: xray
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/xray-2016-04-12.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
    - format: swagger
      version: '2.0'
      url: 'https://raw.githubusercontent.com/mermade/openapi-definitions/master/aws/xray/2016-04-12/swagger.yaml'
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
x-logo:
  url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
  backgroundColor: '#FFFFFF'
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/xray/'
host: xray.amazonaws.com
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /Traces:
    post:
      operationId: BatchGetTraces
      description: Retrieves a list of traces specified by ID. Each trace is a collection of segment documents that originates from a single request. Use <code>GetTraceSummaries</code> to get a list of trace IDs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchGetTracesResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/BatchGetTracesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /ServiceGraph:
    post:
      operationId: GetServiceGraph
      description: 'Retrieves a document that describes services that process incoming requests, and downstream services that they call as a result. Root services process incoming requests and make calls to downstream services. Root services are applications that use the AWS X-Ray SDK. Downstream services can be other applications, AWS resources, HTTP web APIs, or SQL databases.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetServiceGraphResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetServiceGraphRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /TraceGraph:
    post:
      operationId: GetTraceGraph
      description: Retrieves a service graph for one or more specific trace IDs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTraceGraphResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetTraceGraphRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /TraceSummaries:
    post:
      operationId: GetTraceSummaries
      description: 'Retrieves IDs and metadata for traces available for a specified time frame using an optional filter. To get the full traces, pass the trace IDs to <code>BatchGetTraces</code>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTraceSummariesResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetTraceSummariesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /TelemetryRecords:
    post:
      operationId: PutTelemetryRecords
      description: Used by the AWS X-Ray daemon to upload telemetry.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutTelemetryRecordsResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutTelemetryRecordsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /TraceSegments:
    post:
      operationId: PutTraceSegments
      description: 'Uploads segment documents to AWS X-Ray. The X-Ray SDK generates segment documents and sends them to the X-Ray daemon, which uploads them in batches. A segment document can be a completed segment, an in-progress segment, or an array of subsegments.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutTraceSegmentsResult'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottledException
          schema:
            $ref: '#/definitions/ThrottledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutTraceSegmentsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  Alias:
    type: object
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The canonical name of the alias.
      Names:
        $ref: '#/definitions/AliasNames'
        description: 'A list of names for the alias, including the canonical name.'
      Type:
        $ref: '#/definitions/String'
        description: The type of the alias.
    description: An alias for an edge.
  AliasList:
    type: array
    items:
      $ref: '#/definitions/Alias'
  AliasNames:
    type: array
    items:
      $ref: '#/definitions/String'
  AnnotationKey:
    type: string
  AnnotationValue:
    type: object
    properties:
      NumberValue:
        $ref: '#/definitions/NullableDouble'
        description: Value for a Number annotation.
      BooleanValue:
        $ref: '#/definitions/NullableBoolean'
        description: Value for a Boolean annotation.
      StringValue:
        $ref: '#/definitions/String'
        description: Value for a String annotation.
    description: 'Value of a segment annotation. Has one of three value types: Number, Boolean or String.'
  Annotations:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AnnotationKey'
        value:
          $ref: '#/definitions/ValuesWithServiceIds'
  BackendConnectionErrors:
    type: object
    properties:
      TimeoutCount:
        $ref: '#/definitions/NullableInteger'
        description: ''
      ConnectionRefusedCount:
        $ref: '#/definitions/NullableInteger'
        description: ''
      HTTPCode4XXCount:
        $ref: '#/definitions/NullableInteger'
        description: ''
      HTTPCode5XXCount:
        $ref: '#/definitions/NullableInteger'
        description: ''
      UnknownHostCount:
        $ref: '#/definitions/NullableInteger'
        description: ''
      OtherCount:
        $ref: '#/definitions/NullableInteger'
        description: ''
    description: ''
  BatchGetTracesRequest:
    type: object
    required:
      - TraceIds
    properties:
      TraceIds:
        $ref: '#/definitions/TraceIdList'
        description: Specify the trace IDs of requests for which to retrieve segments.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination token. Not used.
  BatchGetTracesResult:
    type: object
    properties:
      Traces:
        $ref: '#/definitions/TraceList'
        description: Full traces for the specified requests.
      UnprocessedTraceIds:
        $ref: '#/definitions/UnprocessedTraceIdList'
        description: Trace IDs of requests that haven't been processed.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination token. Not used.
  Double:
    type: number
    format: double
  Edge:
    type: object
    properties:
      ReferenceId:
        $ref: '#/definitions/NullableInteger'
        description: Identifier of the edge. Unique within a service map.
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: The start time of the first segment on the edge.
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: The end time of the last segment on the edge.
      SummaryStatistics:
        $ref: '#/definitions/EdgeStatistics'
        description: Response statistics for segments on the edge.
      ResponseTimeHistogram:
        $ref: '#/definitions/Histogram'
        description: Histogram describing the prominence of response times on the edge.
      Aliases:
        $ref: '#/definitions/AliasList'
        description: Aliases for the edge.
    description: Information about a connection between two services.
  EdgeList:
    type: array
    items:
      $ref: '#/definitions/Edge'
  EdgeStatistics:
    type: object
    properties:
      OkCount:
        $ref: '#/definitions/NullableLong'
        description: The number of requests that completed with a 2xx Success status code.
      ErrorStatistics:
        $ref: '#/definitions/ErrorStatistics'
        description: Information about requests that failed with a 4xx Client Error status code.
      FaultStatistics:
        $ref: '#/definitions/FaultStatistics'
        description: Information about requests that failed with a 5xx Server Error status code.
      TotalCount:
        $ref: '#/definitions/NullableLong'
        description: The total number of completed requests.
      TotalResponseTime:
        $ref: '#/definitions/NullableDouble'
        description: The aggregate response time of completed requests.
    description: Response statistics for an edge.
  ErrorStatistics:
    type: object
    properties:
      ThrottleCount:
        $ref: '#/definitions/NullableLong'
        description: The number of requests that failed with a 419 throttling status code.
      OtherCount:
        $ref: '#/definitions/NullableLong'
        description: The number of requests that failed with untracked 4xx Client Error status codes.
      TotalCount:
        $ref: '#/definitions/NullableLong'
        description: The total number of requests that failed with a 4xx Client Error status code.
    description: Information about requests that failed with a 4xx Client Error status code.
  FaultStatistics:
    type: object
    properties:
      OtherCount:
        $ref: '#/definitions/NullableLong'
        description: The number of requests that failed with untracked 5xx Server Error status codes.
      TotalCount:
        $ref: '#/definitions/NullableLong'
        description: The total number of requests that failed with a 5xx Server Error status code.
    description: Information about requests that failed with a 5xx Server Error status code.
  FilterExpression:
    type: string
    minLength: 0
    maxLength: 2000
  GetServiceGraphRequest:
    type: object
    required:
      - StartTime
      - EndTime
    properties:
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: The start of the time frame for which to generate a graph.
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: The end of the time frame for which to generate a graph.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination token. Not used.
  GetServiceGraphResult:
    type: object
    properties:
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: The start of the time frame for which the graph was generated.
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: The end of the time frame for which the graph was generated.
      Services:
        $ref: '#/definitions/ServiceList'
        description: The services that have processed a traced request during the specified time frame.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination token. Not used.
  GetTraceGraphRequest:
    type: object
    required:
      - TraceIds
    properties:
      TraceIds:
        $ref: '#/definitions/TraceIdList'
        description: Trace IDs of requests for which to generate a service graph.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination token. Not used.
  GetTraceGraphResult:
    type: object
    properties:
      Services:
        $ref: '#/definitions/ServiceList'
        description: The services that have processed one of the specified requests.
      NextToken:
        $ref: '#/definitions/String'
        description: Pagination token. Not used.
  GetTraceSummariesRequest:
    type: object
    required:
      - StartTime
      - EndTime
    properties:
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: The start of the time frame for which to retrieve traces.
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: The end of the time frame for which to retrieve traces.
      Sampling:
        $ref: '#/definitions/NullableBoolean'
        description: Set to <code>true</code> to get summaries for only a subset of available traces.
      FilterExpression:
        $ref: '#/definitions/FilterExpression'
        description: Specify a filter expression to retrieve trace summaries for services or requests that meet certain requirements.
      NextToken:
        $ref: '#/definitions/String'
        description: Specify the pagination token returned by a previous request to retrieve the next page of results.
  GetTraceSummariesResult:
    type: object
    properties:
      TraceSummaries:
        $ref: '#/definitions/TraceSummaryList'
        description: Trace IDs and metadata for traces that were found in the specified time frame.
      ApproximateTime:
        $ref: '#/definitions/Timestamp'
        description: The start time of this page of results.
      TracesProcessedCount:
        $ref: '#/definitions/NullableLong'
        description: The number of traces that were processed to get this set of summaries.
      NextToken:
        $ref: '#/definitions/String'
        description: 'If the requested time frame contained more than one page of results, you can use this token to retrieve the next page. The first page contains the most most recent results, closest to the end of the time frame.'
  Histogram:
    type: array
    items:
      $ref: '#/definitions/HistogramEntry'
  HistogramEntry:
    type: object
    properties:
      Value:
        $ref: '#/definitions/Double'
        description: The value of the entry.
      Count:
        $ref: '#/definitions/Integer'
        description: The prevalence of the entry.
    description: 'An entry in a histogram for a statistic. A histogram maps the range of observed values on the X axis, and the prevalence of each value on the Y axis.'
  Http:
    type: object
    properties:
      HttpURL:
        $ref: '#/definitions/String'
        description: The request URL.
      HttpStatus:
        $ref: '#/definitions/NullableInteger'
        description: The response status.
      HttpMethod:
        $ref: '#/definitions/String'
        description: The request method.
      UserAgent:
        $ref: '#/definitions/String'
        description: The request's user agent string.
      ClientIp:
        $ref: '#/definitions/String'
        description: The IP address of the requestor.
    description: Information about an HTTP request.
  Integer:
    type: integer
  InvalidRequestException:
    type: object
    properties: {}
    description: The request is missing required parameters or has invalid parameters.
  NullableBoolean:
    type: boolean
  NullableDouble:
    type: number
    format: double
  NullableInteger:
    type: integer
  NullableLong:
    type: integer
  PutTelemetryRecordsRequest:
    type: object
    required:
      - TelemetryRecords
    properties:
      TelemetryRecords:
        $ref: '#/definitions/TelemetryRecordList'
        description: ''
      EC2InstanceId:
        $ref: '#/definitions/String'
        description: ''
      Hostname:
        $ref: '#/definitions/String'
        description: ''
      ResourceARN:
        $ref: '#/definitions/String'
        description: ''
  PutTelemetryRecordsResult:
    type: object
    properties: {}
  PutTraceSegmentsRequest:
    type: object
    required:
      - TraceSegmentDocuments
    properties:
      TraceSegmentDocuments:
        $ref: '#/definitions/TraceSegmentDocumentList'
        description: '<p>A JSON document defining one or more segments or subsegments. Segments must include the following fields.</p> <p class="title"> <b>Required Segment Document Fields</b> </p> <ul> <li> <p> <code>name</code> - The name of the service that handled the request.</p> </li> <li> <p> <code>id</code> - A 64-bit identifier for the segment, unique among segments in the same trace, in 16 hexadecimal digits.</p> </li> <li> <p> <code>trace_id</code> - A unique identifier that connects all segments and subsegments originating from a single client request.</p> </li> <li> <p> <code>start_time</code> - Time the segment or subsegment was created, in floating point seconds in epoch time, accurate to milliseconds. For example, <code>1480615200.010</code> or <code>1.480615200010E9</code>.</p> </li> <li> <p> <code>end_time</code> - Time the segment or subsegment was closed. For example, <code>1480615200.090</code> or <code>1.480615200090E9</code>. Specify either an <code>end_time</code> or <code>in_progress</code>.</p> </li> <li> <p> <code>in_progress</code> - Set to <code>true</code> instead of specifying an <code>end_time</code> to record that a segment has been started, but is not complete. Send an in progress segment when your application receives a request that will take a long time to serve, to trace the fact that the request was received. When the response is sent, send the complete segment to overwrite the in-progress segment.</p> </li> </ul> <p>A <code>trace_id</code> consists of three numbers separated by hyphens. For example, 1-58406520-a006649127e371903a2de979. This includes:</p> <p class="title"> <b>Trace ID Format</b> </p> <ul> <li> <p>The version number, i.e. <code>1</code>.</p> </li> <li> <p>The time of the original request, in Unix epoch time, in 8 hexadecimal digits. For example, 10:00AM December 2nd, 2016 PST in epoch time is <code>1480615200</code> seconds, or <code>58406520</code> in hexadecimal.</p> </li> <li> <p>A 96-bit identifier for the trace, globally unique, in 24 hexadecimal digits.</p> </li> </ul>'
  PutTraceSegmentsResult:
    type: object
    properties:
      UnprocessedTraceSegments:
        $ref: '#/definitions/UnprocessedTraceSegmentList'
        description: Segments that failed processing.
  Segment:
    type: object
    properties:
      Id:
        $ref: '#/definitions/SegmentId'
        description: The segment's ID.
      Document:
        $ref: '#/definitions/SegmentDocument'
        description: The segment document.
    description: Information about a segment
  SegmentDocument:
    type: string
    minLength: 1
  SegmentId:
    type: string
    minLength: 16
    maxLength: 16
  SegmentList:
    type: array
    items:
      $ref: '#/definitions/Segment'
  Service:
    type: object
    properties:
      ReferenceId:
        $ref: '#/definitions/NullableInteger'
        description: Identifier for the service. Unique within the service map.
      Name:
        $ref: '#/definitions/String'
        description: The canonical name of the service.
      Names:
        $ref: '#/definitions/ServiceNames'
        description: 'A list of names for the service, including the canonical name.'
      Root:
        $ref: '#/definitions/NullableBoolean'
        description: Indicates that the service was the first service to process a request.
      AccountId:
        $ref: '#/definitions/String'
        description: Identifier of the AWS account in which the service runs.
      Type:
        $ref: '#/definitions/String'
        description: '<p>The type of service.</p> <ul> <li> <p>AWS Resource - The type of an AWS resource. For example, <code>AWS::EC2::Instance</code> for a application running on Amazon EC2 or <code>AWS::DynamoDB::Table</code> for an Amazon DynamoDB table that the application used.</p> </li> <li> <p>AWS Service - The type of an AWS service. For example, <code>AWS::DynamoDB</code> for downstream calls to Amazon DynamoDB that didn''t target a specific table.</p> </li> <li> <p> <code>client</code> - Represents the clients that sent requests to a root service.</p> </li> <li> <p> <code>remote</code> - A downstream service of indeterminate type.</p> </li> </ul>'
      State:
        $ref: '#/definitions/String'
        description: The service's state.
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: The start time of the first segment that the service generated.
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: The end time of the last segment that the service generated.
      Edges:
        $ref: '#/definitions/EdgeList'
        description: Connections to downstream services.
      SummaryStatistics:
        $ref: '#/definitions/ServiceStatistics'
        description: Aggregated statistics for the service.
      DurationHistogram:
        $ref: '#/definitions/Histogram'
        description: Histogram mapping the spread of trace durations
    description: 'Information about an application that processed requests, users that made requests, or downstream services, resources and applications that an application used.'
  ServiceId:
    type: object
    properties:
      Name:
        $ref: '#/definitions/String'
        description: ''
      Names:
        $ref: '#/definitions/ServiceNames'
        description: ''
      AccountId:
        $ref: '#/definitions/String'
        description: ''
      Type:
        $ref: '#/definitions/String'
        description: ''
    description: ''
  ServiceIds:
    type: array
    items:
      $ref: '#/definitions/ServiceId'
  ServiceList:
    type: array
    items:
      $ref: '#/definitions/Service'
  ServiceNames:
    type: array
    items:
      $ref: '#/definitions/String'
  ServiceStatistics:
    type: object
    properties:
      OkCount:
        $ref: '#/definitions/NullableLong'
        description: The number of requests that completed with a 2xx Success status code.
      ErrorStatistics:
        $ref: '#/definitions/ErrorStatistics'
        description: Information about requests that failed with a 4xx Client Error status code.
      FaultStatistics:
        $ref: '#/definitions/FaultStatistics'
        description: Information about requests that failed with a 5xx Server Error status code.
      TotalCount:
        $ref: '#/definitions/NullableLong'
        description: The total number of completed requests.
      TotalResponseTime:
        $ref: '#/definitions/NullableDouble'
        description: The aggregate response time of completed requests.
    description: Response statistics for a service.
  String:
    type: string
  TelemetryRecord:
    type: object
    properties:
      Timestamp:
        $ref: '#/definitions/Timestamp'
        description: ''
      SegmentsReceivedCount:
        $ref: '#/definitions/NullableInteger'
        description: ''
      SegmentsSentCount:
        $ref: '#/definitions/NullableInteger'
        description: ''
      SegmentsSpilloverCount:
        $ref: '#/definitions/NullableInteger'
        description: ''
      SegmentsRejectedCount:
        $ref: '#/definitions/NullableInteger'
        description: ''
      BackendConnectionErrors:
        $ref: '#/definitions/BackendConnectionErrors'
        description: ''
    description: ''
  TelemetryRecordList:
    type: array
    items:
      $ref: '#/definitions/TelemetryRecord'
  ThrottledException:
    type: object
    properties: {}
    description: The request exceeds the maximum number of requests per second.
  Timestamp:
    type: string
    format: date-time
  Trace:
    type: object
    properties:
      Id:
        $ref: '#/definitions/TraceId'
        description: The unique identifier for the request that generated the trace's segments and subsegments.
      Duration:
        $ref: '#/definitions/NullableDouble'
        description: The length of time in seconds between the start time of the root segment and the end time of the last segment that completed.
      Segments:
        $ref: '#/definitions/SegmentList'
        description: Segment documents for the segments and subsegments that comprise the trace.
    description: A collection of segment documents with matching trace IDs.
  TraceId:
    type: string
    minLength: 35
    maxLength: 35
  TraceIdList:
    type: array
    items:
      $ref: '#/definitions/TraceId'
  TraceList:
    type: array
    items:
      $ref: '#/definitions/Trace'
  TraceSegmentDocument:
    type: string
  TraceSegmentDocumentList:
    type: array
    items:
      $ref: '#/definitions/TraceSegmentDocument'
  TraceSummary:
    type: object
    properties:
      Id:
        $ref: '#/definitions/TraceId'
        description: The unique identifier for the request that generated the trace's segments and subsegments.
      Duration:
        $ref: '#/definitions/NullableDouble'
        description: The length of time in seconds between the start time of the root segment and the end time of the last segment that completed.
      ResponseTime:
        $ref: '#/definitions/NullableDouble'
        description: 'The length of time in seconds between the start and end times of the root segment. If the service performs work asynchronously, the response time measures the time before the response is sent to the user, while the duration measures the amount of time before the last traced activity completes.'
      HasFault:
        $ref: '#/definitions/NullableBoolean'
        description: One or more of the segment documents has a 500 series error.
      HasError:
        $ref: '#/definitions/NullableBoolean'
        description: One or more of the segment documents has a 400 series error.
      HasThrottle:
        $ref: '#/definitions/NullableBoolean'
        description: One or more of the segment documents has a 429 throttling error.
      IsPartial:
        $ref: '#/definitions/NullableBoolean'
        description: One or more of the segment documents is in progress.
      Http:
        $ref: '#/definitions/Http'
        description: Information about the HTTP request served by the trace.
      Annotations:
        $ref: '#/definitions/Annotations'
        description: Annotations from the trace's segment documents.
      Users:
        $ref: '#/definitions/TraceUsers'
        description: Users from the trace's segment documents.
      ServiceIds:
        $ref: '#/definitions/ServiceIds'
        description: Service IDs from the trace's segment documents.
    description: Metadata generated from the segment documents in a trace.
  TraceSummaryList:
    type: array
    items:
      $ref: '#/definitions/TraceSummary'
  TraceUser:
    type: object
    properties:
      UserName:
        $ref: '#/definitions/String'
        description: The user's name.
      ServiceIds:
        $ref: '#/definitions/ServiceIds'
        description: Services that the user's request hit.
    description: Information about a user recorded in segment documents.
  TraceUsers:
    type: array
    items:
      $ref: '#/definitions/TraceUser'
  UnprocessedTraceIdList:
    type: array
    items:
      $ref: '#/definitions/TraceId'
  UnprocessedTraceSegment:
    type: object
    properties:
      Id:
        $ref: '#/definitions/String'
        description: The segment's ID.
      ErrorCode:
        $ref: '#/definitions/String'
        description: The error that caused processing to fail.
      Message:
        $ref: '#/definitions/String'
        description: The error message.
    description: Information about a segment that failed processing.
  UnprocessedTraceSegmentList:
    type: array
    items:
      $ref: '#/definitions/UnprocessedTraceSegment'
  ValueWithServiceIds:
    type: object
    properties:
      AnnotationValue:
        $ref: '#/definitions/AnnotationValue'
        description: Values of the annotation.
      ServiceIds:
        $ref: '#/definitions/ServiceIds'
        description: Services to which the annotation applies.
    description: Information about a segment annotation.
  ValuesWithServiceIds:
    type: array
    items:
      $ref: '#/definitions/ValueWithServiceIds'
