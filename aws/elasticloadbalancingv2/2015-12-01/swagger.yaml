swagger: '2.0'
info:
  version: '2015-12-01'
  x-release: v4
  title: Elastic Load Balancing
  description: '<fullname>Elastic Load Balancing</fullname> <p>A load balancer distributes incoming traffic across targets, such as your EC2 instances. This enables you to increase the availability of your application. The load balancer also monitors the health of its registered targets and ensures that it routes traffic only to healthy targets. You configure your load balancer to accept incoming traffic by specifying one or more listeners, which are configured with a protocol and port number for connections from clients to the load balancer. You configure a target group with a protocol and port number for connections from the load balancer to the targets, and with health check settings to be used when checking the health status of the targets.</p> <p>Elastic Load Balancing supports two types of load balancers: Classic Load Balancers and Application Load Balancers. A Classic Load Balancer makes routing and load balancing decisions either at the transport layer (TCP/SSL) or the application layer (HTTP/HTTPS), and supports either EC2-Classic or a VPC. An Application Load Balancer makes routing and load balancing decisions at the application layer (HTTP/HTTPS), supports path-based routing, and can route requests to one or more ports on each EC2 instance or container instance in your virtual private cloud (VPC). For more information, see the <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/">Elastic Load Balancing User Guide</a>.</p> <p>This reference covers the 2015-12-01 API, which supports Application Load Balancers. The 2012-06-01 API supports Classic Load Balancers.</p> <p>To get started, complete the following tasks:</p> <ol> <li> <p>Create an Application Load Balancer using <a>CreateLoadBalancer</a>.</p> </li> <li> <p>Create a target group using <a>CreateTargetGroup</a>.</p> </li> <li> <p>Register targets for the target group using <a>RegisterTargets</a>.</p> </li> <li> <p>Create one or more listeners for your load balancer using <a>CreateListener</a>.</p> </li> <li> <p>(Optional) Create one or more rules for content routing based on URL using <a>CreateRule</a>.</p> </li> </ol> <p>To delete an Application Load Balancer and its related resources, complete the following tasks:</p> <ol> <li> <p>Delete the load balancer using <a>DeleteLoadBalancer</a>.</p> </li> <li> <p>Delete the target group using <a>DeleteTargetGroup</a>.</p> </li> </ol> <p>All Elastic Load Balancing operations are idempotent, which means that they complete at most one time. If you repeat an operation, it succeeds.</p>'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: aws.amazon.com
  x-serviceName: elasticloadbalancing
  x-origin:
    format: swagger
    version: '2.0'
    url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticloadbalancingv2-2015-12-01.normal.json'
    converter:
      url: 'https://github.com/mermade/aws2openapi'
      version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
x-logo:
  url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
  backgroundColor: '#FFFFFF'
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/elasticloadbalancing/'
host: elasticloadbalancing.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - http
consumes: []
produces: []
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AddTags
      description: '<p>Adds the specified tags to the specified resource. You can tag your Application Load Balancers and your target groups.</p> <p>Each tag consists of a key and an optional value. If a resource already has a tag with the same key, <code>AddTags</code> updates its value.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>. To remove tags from your resources, use <a>RemoveTags</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddTagsOutput'
        '480':
          description: DuplicateTagKeysException
          schema:
            $ref: '#/definitions/DuplicateTagKeysException'
        '481':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
        '482':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '483':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddTagsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateListener':
    post:
      operationId: CreateListener
      description: '<p>Creates a listener for the specified Application Load Balancer.</p> <p>You can create up to 10 listeners per load balancer.</p> <p>To update a listener, use <a>ModifyListener</a>. When you are finished with a listener, you can delete it using <a>DeleteListener</a>. If you are finished with both the listener and the load balancer, you can delete them both using <a>DeleteLoadBalancer</a>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html">Listeners for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateListenerOutput'
        '480':
          description: DuplicateListenerException
          schema:
            $ref: '#/definitions/DuplicateListenerException'
        '481':
          description: TooManyListenersException
          schema:
            $ref: '#/definitions/TooManyListenersException'
        '482':
          description: TooManyCertificatesException
          schema:
            $ref: '#/definitions/TooManyCertificatesException'
        '483':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '484':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '485':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '486':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '487':
          description: IncompatibleProtocolsException
          schema:
            $ref: '#/definitions/IncompatibleProtocolsException'
        '488':
          description: SSLPolicyNotFoundException
          schema:
            $ref: '#/definitions/SSLPolicyNotFoundException'
        '489':
          description: CertificateNotFoundException
          schema:
            $ref: '#/definitions/CertificateNotFoundException'
        '490':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
        '491':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateListenerInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateLoadBalancer':
    post:
      operationId: CreateLoadBalancer
      description: '<p>Creates an Application Load Balancer.</p> <p>When you create a load balancer, you can specify security groups, subnets, IP address type, and tags. Otherwise, you could do so later using <a>SetSecurityGroups</a>, <a>SetSubnets</a>, <a>SetIpAddressType</a>, and <a>AddTags</a>.</p> <p>To create listeners for your load balancer, use <a>CreateListener</a>. To describe your current load balancers, see <a>DescribeLoadBalancers</a>. When you are finished with a load balancer, you can delete it using <a>DeleteLoadBalancer</a>.</p> <p>You can create up to 20 load balancers per region per account. You can request an increase for the number of load balancers for your account. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html">Limits for Your Application Load Balancer</a> in the <i>Application Load Balancers Guide</i>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html">Application Load Balancers</a> in the <i>Application Load Balancers Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLoadBalancerOutput'
        '480':
          description: DuplicateLoadBalancerNameException
          schema:
            $ref: '#/definitions/DuplicateLoadBalancerNameException'
        '481':
          description: TooManyLoadBalancersException
          schema:
            $ref: '#/definitions/TooManyLoadBalancersException'
        '482':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '483':
          description: SubnetNotFoundException
          schema:
            $ref: '#/definitions/SubnetNotFoundException'
        '484':
          description: InvalidSubnetException
          schema:
            $ref: '#/definitions/InvalidSubnetException'
        '485':
          description: InvalidSecurityGroupException
          schema:
            $ref: '#/definitions/InvalidSecurityGroupException'
        '486':
          description: InvalidSchemeException
          schema:
            $ref: '#/definitions/InvalidSchemeException'
        '487':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
        '488':
          description: DuplicateTagKeysException
          schema:
            $ref: '#/definitions/DuplicateTagKeysException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateLoadBalancerInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateRule':
    post:
      operationId: CreateRule
      description: '<p>Creates a rule for the specified listener.</p> <p>Each rule can have one action and one condition. Rules are evaluated in priority order, from the lowest value to the highest value. When the condition for a rule is met, the specified action is taken. If no conditions are met, the default action for the default rule is taken. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#listener-rules">Listener Rules</a> in the <i>Application Load Balancers Guide</i>.</p> <p>To view your current rules, use <a>DescribeRules</a>. To update a rule, use <a>ModifyRule</a>. To set the priorities of your rules, use <a>SetRulePriorities</a>. To delete a rule, use <a>DeleteRule</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRuleOutput'
        '480':
          description: PriorityInUseException
          schema:
            $ref: '#/definitions/PriorityInUseException'
        '481':
          description: TooManyTargetGroupsException
          schema:
            $ref: '#/definitions/TooManyTargetGroupsException'
        '482':
          description: TooManyRulesException
          schema:
            $ref: '#/definitions/TooManyRulesException'
        '483':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '484':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '485':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '486':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '487':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateRuleInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateTargetGroup':
    post:
      operationId: CreateTargetGroup
      description: '<p>Creates a target group.</p> <p>To register targets with the target group, use <a>RegisterTargets</a>. To update the health check settings for the target group, use <a>ModifyTargetGroup</a>. To monitor the health of targets in the target group, use <a>DescribeTargetHealth</a>.</p> <p>To route traffic to the targets in a target group, specify the target group in an action using <a>CreateListener</a> or <a>CreateRule</a>.</p> <p>To delete a target group, use <a>DeleteTargetGroup</a>.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html">Target Groups for Your Application Load Balancers</a> in the <i>Application Load Balancers Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTargetGroupOutput'
        '480':
          description: DuplicateTargetGroupNameException
          schema:
            $ref: '#/definitions/DuplicateTargetGroupNameException'
        '481':
          description: TooManyTargetGroupsException
          schema:
            $ref: '#/definitions/TooManyTargetGroupsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTargetGroupInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteListener':
    post:
      operationId: DeleteListener
      description: '<p>Deletes the specified listener.</p> <p>Alternatively, your listener is deleted when you delete the load balancer it is attached to using <a>DeleteLoadBalancer</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteListenerOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteListenerInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteLoadBalancer':
    post:
      operationId: DeleteLoadBalancer
      description: '<p>Deletes the specified Application Load Balancer and its attached listeners.</p> <p>You can''t delete a load balancer if deletion protection is enabled. If the load balancer does not exist or has already been deleted, the call succeeds.</p> <p>Deleting a load balancer does not affect its registered targets. For example, your EC2 instances continue to run and are still registered to their target groups. If you no longer need these EC2 instances, you can stop or terminate them.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteLoadBalancerOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteLoadBalancerInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteRule':
    post:
      operationId: DeleteRule
      description: Deletes the specified rule.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRuleOutput'
        '480':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '481':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteRuleInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteTargetGroup':
    post:
      operationId: DeleteTargetGroup
      description: <p>Deletes the specified target group.</p> <p>You can delete a target group if it is not referenced by any actions. Deleting a target group also deletes any associated health checks.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTargetGroupOutput'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTargetGroupInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeregisterTargets':
    post:
      operationId: DeregisterTargets
      description: 'Deregisters the specified targets from the specified target group. After the targets are deregistered, they no longer receive traffic from the load balancer.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterTargetsOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '481':
          description: InvalidTargetException
          schema:
            $ref: '#/definitions/InvalidTargetException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterTargetsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeListeners':
    post:
      operationId: DescribeListeners
      description: Describes the specified listeners or the listeners for the specified Application Load Balancer. You must specify either a load balancer or one or more listeners.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeListenersOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '481':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeListenersInput'
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeLoadBalancerAttributes':
    post:
      operationId: DescribeLoadBalancerAttributes
      description: Describes the attributes for the specified Application Load Balancer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLoadBalancerAttributesOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLoadBalancerAttributesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeLoadBalancers':
    post:
      operationId: DescribeLoadBalancers
      description: '<p>Describes the specified Application Load Balancers or all of your Application Load Balancers.</p> <p>To describe the listeners for a load balancer, use <a>DescribeListeners</a>. To describe the attributes for a load balancer, use <a>DescribeLoadBalancerAttributes</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLoadBalancersOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLoadBalancersInput'
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
      x-waiters:
        - delay: 15
          operation: DescribeLoadBalancers
          maxAttempts: 40
          acceptors:
            - matcher: status
              expected: 200
              state: success
            - matcher: error
              expected: LoadBalancerNotFound
              state: retry
        - delay: 15
          operation: DescribeLoadBalancers
          maxAttempts: 40
          acceptors:
            - state: success
              matcher: pathAll
              argument: 'LoadBalancers[].State.Code'
              expected: active
            - state: retry
              matcher: pathAny
              argument: 'LoadBalancers[].State.Code'
              expected: provisioning
            - state: retry
              matcher: error
              expected: LoadBalancerNotFound
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeRules':
    post:
      operationId: DescribeRules
      description: Describes the specified rules or the rules for the specified listener. You must specify either a listener or one or more rules.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRulesOutput'
        '480':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '481':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRulesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeSSLPolicies':
    post:
      operationId: DescribeSSLPolicies
      description: <p>Describes the specified policies or all policies used for SSL negotiation.</p> <p>Note that the only supported policy at this time is ELBSecurityPolicy-2015-05.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSSLPoliciesOutput'
        '480':
          description: SSLPolicyNotFoundException
          schema:
            $ref: '#/definitions/SSLPolicyNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSSLPoliciesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeTags':
    post:
      operationId: DescribeTags
      description: Describes the tags for the specified resources.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTagsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '482':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '483':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTagsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeTargetGroupAttributes':
    post:
      operationId: DescribeTargetGroupAttributes
      description: Describes the attributes for the specified target group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTargetGroupAttributesOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTargetGroupAttributesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeTargetGroups':
    post:
      operationId: DescribeTargetGroups
      description: '<p>Describes the specified target groups or all of your target groups. By default, all target groups are described. Alternatively, you can specify one of the following to filter the results: the ARN of the load balancer, the names of one or more target groups, or the ARNs of one or more target groups.</p> <p>To describe the targets for a target group, use <a>DescribeTargetHealth</a>. To describe the attributes of a target group, use <a>DescribeTargetGroupAttributes</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTargetGroupsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTargetGroupsInput'
        - name: Marker
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeTargetHealth':
    post:
      operationId: DescribeTargetHealth
      description: Describes the health of the specified targets or all of your targets.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTargetHealthOutput'
        '480':
          description: InvalidTargetException
          schema:
            $ref: '#/definitions/InvalidTargetException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '482':
          description: HealthUnavailableException
          schema:
            $ref: '#/definitions/HealthUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTargetHealthInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyListener':
    post:
      operationId: ModifyListener
      description: '<p>Modifies the specified properties of the specified listener.</p> <p>Any properties that you do not specify retain their current values. However, changing the protocol from HTTPS to HTTP removes the security policy and SSL certificate properties. If you change the protocol from HTTP to HTTPS, you must add the security policy.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyListenerOutput'
        '480':
          description: DuplicateListenerException
          schema:
            $ref: '#/definitions/DuplicateListenerException'
        '481':
          description: TooManyListenersException
          schema:
            $ref: '#/definitions/TooManyListenersException'
        '482':
          description: TooManyCertificatesException
          schema:
            $ref: '#/definitions/TooManyCertificatesException'
        '483':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '484':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '485':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '486':
          description: IncompatibleProtocolsException
          schema:
            $ref: '#/definitions/IncompatibleProtocolsException'
        '487':
          description: SSLPolicyNotFoundException
          schema:
            $ref: '#/definitions/SSLPolicyNotFoundException'
        '488':
          description: CertificateNotFoundException
          schema:
            $ref: '#/definitions/CertificateNotFoundException'
        '489':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '490':
          description: UnsupportedProtocolException
          schema:
            $ref: '#/definitions/UnsupportedProtocolException'
        '491':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyListenerInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyLoadBalancerAttributes':
    post:
      operationId: ModifyLoadBalancerAttributes
      description: '<p>Modifies the specified attributes of the specified Application Load Balancer.</p> <p>If any of the specified attributes can''t be modified as requested, the call fails. Any existing attributes that you do not modify retain their current values.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyLoadBalancerAttributesOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyLoadBalancerAttributesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyRule':
    post:
      operationId: ModifyRule
      description: '<p>Modifies the specified rule.</p> <p>Any existing properties that you do not modify retain their current values.</p> <p>To modify the default action, use <a>ModifyListener</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyRuleOutput'
        '480':
          description: TargetGroupAssociationLimitException
          schema:
            $ref: '#/definitions/TargetGroupAssociationLimitException'
        '481':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '482':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
        '483':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyRuleInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyTargetGroup':
    post:
      operationId: ModifyTargetGroup
      description: '<p>Modifies the health checks used when evaluating the health state of the targets in the specified target group.</p> <p>To monitor the health of the targets, use <a>DescribeTargetHealth</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyTargetGroupOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyTargetGroupInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyTargetGroupAttributes':
    post:
      operationId: ModifyTargetGroupAttributes
      description: Modifies the specified attributes of the specified target group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyTargetGroupAttributesOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyTargetGroupAttributesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RegisterTargets':
    post:
      operationId: RegisterTargets
      description: '<p>Registers the specified targets with the specified target group.</p> <p>By default, the load balancer routes requests to registered targets using the protocol and port number for the target group. Alternatively, you can override the port for a target when you register it.</p> <p>The target must be in the virtual private cloud (VPC) that you specified for the target group. If the target is an EC2 instance, it must be in the <code>running</code> state when you register it.</p> <p>To remove a target from a target group, use <a>DeregisterTargets</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterTargetsOutput'
        '480':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '481':
          description: TooManyTargetsException
          schema:
            $ref: '#/definitions/TooManyTargetsException'
        '482':
          description: InvalidTargetException
          schema:
            $ref: '#/definitions/InvalidTargetException'
        '483':
          description: TooManyRegistrationsForTargetIdException
          schema:
            $ref: '#/definitions/TooManyRegistrationsForTargetIdException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterTargetsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RemoveTags':
    post:
      operationId: RemoveTags
      description: '<p>Removes the specified tags from the specified resource.</p> <p>To list the current tags for your resources, use <a>DescribeTags</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveTagsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: TargetGroupNotFoundException
          schema:
            $ref: '#/definitions/TargetGroupNotFoundException'
        '482':
          description: ListenerNotFoundException
          schema:
            $ref: '#/definitions/ListenerNotFoundException'
        '483':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '484':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveTagsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SetIpAddressType':
    post:
      operationId: SetIpAddressType
      description: Sets the type of IP addresses used by the subnets of the specified Application Load Balancer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetIpAddressTypeOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '482':
          description: InvalidSubnetException
          schema:
            $ref: '#/definitions/InvalidSubnetException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetIpAddressTypeInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SetRulePriorities':
    post:
      operationId: SetRulePriorities
      description: <p>Sets the priorities of the specified rules.</p> <p>You can reorder the rules as long as there are no priority conflicts in the new order. Any existing rules that you do not specify retain their current priority.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetRulePrioritiesOutput'
        '480':
          description: RuleNotFoundException
          schema:
            $ref: '#/definitions/RuleNotFoundException'
        '481':
          description: PriorityInUseException
          schema:
            $ref: '#/definitions/PriorityInUseException'
        '482':
          description: OperationNotPermittedException
          schema:
            $ref: '#/definitions/OperationNotPermittedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetRulePrioritiesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SetSecurityGroups':
    post:
      operationId: SetSecurityGroups
      description: Associates the specified security groups with the specified load balancer. The specified security groups override the previously associated security groups.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetSecurityGroupsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '482':
          description: InvalidSecurityGroupException
          schema:
            $ref: '#/definitions/InvalidSecurityGroupException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetSecurityGroupsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SetSubnets':
    post:
      operationId: SetSubnets
      description: Enables the Availability Zone for the specified subnets for the specified load balancer. The specified subnets replace the previously enabled subnets.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetSubnetsOutput'
        '480':
          description: LoadBalancerNotFoundException
          schema:
            $ref: '#/definitions/LoadBalancerNotFoundException'
        '481':
          description: InvalidConfigurationRequestException
          schema:
            $ref: '#/definitions/InvalidConfigurationRequestException'
        '482':
          description: SubnetNotFoundException
          schema:
            $ref: '#/definitions/SubnetNotFoundException'
        '483':
          description: InvalidSubnetException
          schema:
            $ref: '#/definitions/InvalidSubnetException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SetSubnetsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  Action:
    type: object
    required:
      - Type
      - TargetGroupArn
    properties:
      Type:
        $ref: '#/definitions/ActionTypeEnum'
        description: The type of action.
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
    description: Information about an action.
  ActionTypeEnum:
    type: string
    enum:
      - forward
  Actions:
    type: array
    items:
      $ref: '#/definitions/Action'
  AddTagsInput:
    type: object
    required:
      - ResourceArns
      - Tags
    example:
      ResourceArns:
        - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
      Tags:
        - Key: project
          Value: lima
        - Key: department
          Value: digital-media
    properties:
      ResourceArns:
        $ref: '#/definitions/ResourceArns'
        description: The Amazon Resource Name (ARN) of the resource.
      Tags:
        $ref: '#/definitions/TagList'
        description: The tags. Each resource can have a maximum of 10 tags.
  AddTagsOutput:
    type: object
    properties: {}
  AvailabilityZone:
    type: object
    properties:
      ZoneName:
        $ref: '#/definitions/ZoneName'
        description: The name of the Availability Zone.
      SubnetId:
        $ref: '#/definitions/SubnetId'
        description: The ID of the subnet.
    description: Information about an Availability Zone.
  AvailabilityZones:
    type: array
    items:
      $ref: '#/definitions/AvailabilityZone'
  CanonicalHostedZoneId:
    type: string
  Certificate:
    type: object
    properties:
      CertificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The Amazon Resource Name (ARN) of the certificate.
    description: Information about an SSL server certificate deployed on a load balancer.
  CertificateArn:
    type: string
  CertificateList:
    type: array
    items:
      $ref: '#/definitions/Certificate'
  CertificateNotFoundException:
    type: object
    properties: {}
    description: The specified certificate does not exist.
  Cipher:
    type: object
    properties:
      Name:
        $ref: '#/definitions/CipherName'
        description: The name of the cipher.
      Priority:
        $ref: '#/definitions/CipherPriority'
        description: The priority of the cipher.
    description: Information about a cipher used in a policy.
  CipherName:
    type: string
  CipherPriority:
    type: integer
  Ciphers:
    type: array
    items:
      $ref: '#/definitions/Cipher'
  ConditionFieldName:
    type: string
    maxLength: 64
  CreateListenerInput:
    type: object
    required:
      - LoadBalancerArn
      - Protocol
      - Port
      - DefaultActions
    example:
      Certificates:
        - CertificateArn: 'arn:aws:iam::123456789012:server-certificate/my-server-cert'
      DefaultActions:
        - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
          Type: forward
      LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-2015-05
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      Protocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol for connections from clients to the load balancer.
      Port:
        $ref: '#/definitions/Port'
        description: The port on which the load balancer is listening.
      SslPolicy:
        $ref: '#/definitions/SslPolicyName'
        description: The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: The SSL server certificate. You must provide exactly one certificate if the protocol is HTTPS.
      DefaultActions:
        $ref: '#/definitions/Actions'
        description: The default action for the listener.
  CreateListenerOutput:
    type: object
    example:
      Listeners:
        - Certificates:
            - CertificateArn: 'arn:aws:iam::123456789012:server-certificate/my-server-cert'
          DefaultActions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          ListenerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2'
          LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Port: 443
          Protocol: HTTPS
          SslPolicy: ELBSecurityPolicy-2015-05
    properties:
      Listeners:
        $ref: '#/definitions/Listeners'
        description: Information about the listener.
  CreateLoadBalancerInput:
    type: object
    required:
      - Name
      - Subnets
    example:
      Name: my-internal-load-balancer
      Scheme: internal
      SecurityGroups: []
      Subnets:
        - subnet-b7d581c0
        - subnet-8360a9e7
    properties:
      Name:
        $ref: '#/definitions/LoadBalancerName'
        description: '<p>The name of the load balancer.</p> <p>This name must be unique within your AWS account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.</p>'
      Subnets:
        $ref: '#/definitions/Subnets'
        description: The IDs of the subnets to attach to the load balancer. You can specify only one subnet per Availability Zone. You must specify subnets from at least two Availability Zones.
      SecurityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: The IDs of the security groups to assign to the load balancer.
      Scheme:
        $ref: '#/definitions/LoadBalancerSchemeEnum'
        description: '<p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the Internet.</p> <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can only route requests from clients with access to the VPC for the load balancer.</p> <p>The default is an Internet-facing load balancer.</p>'
      Tags:
        $ref: '#/definitions/TagList'
        description: One or more tags to assign to the load balancer.
      IpAddressType:
        $ref: '#/definitions/IpAddressType'
        description: The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>.
  CreateLoadBalancerOutput:
    type: object
    example:
      LoadBalancers:
        - AvailabilityZones:
            - SubnetId: subnet-8360a9e7
              ZoneName: us-west-2a
            - SubnetId: subnet-b7d581c0
              ZoneName: us-west-2b
          CanonicalHostedZoneId: Z2P70J7EXAMPLE
          CreatedTime: '2016-03-25T21:29:48.850Z'
          DNSName: internal-my-internal-load-balancer-1529930873.us-west-2.elb.amazonaws.com
          LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-internal-load-balancer/5b49b8d4303115c2'
          LoadBalancerName: my-internal-load-balancer
          Scheme: internal
          SecurityGroups:
            - sg-5943793c
          State:
            Code: provisioning
          Type: application
          VpcId: vpc-3ac0fb5f
    properties:
      LoadBalancers:
        $ref: '#/definitions/LoadBalancers'
        description: Information about the load balancer.
  CreateRuleInput:
    type: object
    required:
      - ListenerArn
      - Conditions
      - Priority
      - Actions
    example:
      Actions:
        - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
          Type: forward
      Conditions:
        - Field: path-pattern
          Values:
            - /img/*
      ListenerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2'
      Priority: 10
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
      Conditions:
        $ref: '#/definitions/RuleConditionList'
        description: '<p>A condition. Each condition has the field <code>path-pattern</code> and specifies one path pattern. A path pattern is case sensitive, can be up to 128 characters in length, and can contain any of the following characters. Note that you can include up to three wildcard characters in a path pattern.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>_ - . $ / ~ " '' @ : +</p> </li> <li> <p>&amp; (using &amp;amp;)</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul>'
      Priority:
        $ref: '#/definitions/RulePriority'
        description: The priority for the rule. A listener can't have multiple rules with the same priority.
      Actions:
        $ref: '#/definitions/Actions'
        description: An action. Each action has the type <code>forward</code> and specifies a target group.
  CreateRuleOutput:
    type: object
    example:
      Rules:
        - Actions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          Conditions:
            - Field: path-pattern
              Values:
                - /img/*
          IsDefault: false
          Priority: '10'
          RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee'
    properties:
      Rules:
        $ref: '#/definitions/Rules'
        description: Information about the rule.
  CreateTargetGroupInput:
    type: object
    required:
      - Name
      - Protocol
      - Port
      - VpcId
    example:
      Name: my-targets
      Port: 80
      Protocol: HTTP
      VpcId: vpc-3ac0fb5f
    properties:
      Name:
        $ref: '#/definitions/TargetGroupName'
        description: The name of the target group.
      Protocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol to use for routing traffic to the targets.
      Port:
        $ref: '#/definitions/Port'
        description: The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target.
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The identifier of the virtual private cloud (VPC).
      HealthCheckProtocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol the load balancer uses when performing health checks on targets. The default is the HTTP protocol.
      HealthCheckPort:
        $ref: '#/definitions/HealthCheckPort'
        description: 'The port the load balancer uses when performing health checks on targets. The default is <code>traffic-port</code>, which indicates the port on which each target receives traffic from the load balancer.'
      HealthCheckPath:
        $ref: '#/definitions/Path'
        description: The ping path that is the destination on the targets for health checks. The default is /.
      HealthCheckIntervalSeconds:
        $ref: '#/definitions/HealthCheckIntervalSeconds'
        description: 'The approximate amount of time, in seconds, between health checks of an individual target. The default is 30 seconds.'
      HealthCheckTimeoutSeconds:
        $ref: '#/definitions/HealthCheckTimeoutSeconds'
        description: 'The amount of time, in seconds, during which no response from a target means a failed health check. The default is 5 seconds.'
      HealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: The number of consecutive health checks successes required before considering an unhealthy target healthy. The default is 5.
      UnhealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: The number of consecutive health check failures required before considering a target unhealthy. The default is 2.
      Matcher:
        $ref: '#/definitions/Matcher'
        description: The HTTP codes to use when checking for a successful response from a target. The default is 200.
  CreateTargetGroupOutput:
    type: object
    example:
      TargetGroups:
        - HealthCheckIntervalSeconds: 30
          HealthCheckPath: /
          HealthCheckPort: traffic-port
          HealthCheckProtocol: HTTP
          HealthCheckTimeoutSeconds: 5
          HealthyThresholdCount: 5
          Matcher:
            HttpCode: '200'
          Port: 80
          Protocol: HTTP
          TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
          TargetGroupName: my-targets
          UnhealthyThresholdCount: 2
          VpcId: vpc-3ac0fb5f
    properties:
      TargetGroups:
        $ref: '#/definitions/TargetGroups'
        description: Information about the target group.
  CreatedTime:
    type: string
    format: date-time
  DNSName:
    type: string
  DeleteListenerInput:
    type: object
    required:
      - ListenerArn
    example:
      ListenerArn: 'arn:aws:elasticloadbalancing:ua-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2'
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
  DeleteListenerOutput:
    type: object
    properties: {}
  DeleteLoadBalancerInput:
    type: object
    required:
      - LoadBalancerArn
    example:
      LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
  DeleteLoadBalancerOutput:
    type: object
    properties: {}
  DeleteRuleInput:
    type: object
    required:
      - RuleArn
    example:
      RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/1291d13826f405c3'
    properties:
      RuleArn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
  DeleteRuleOutput:
    type: object
    properties: {}
  DeleteTargetGroupInput:
    type: object
    required:
      - TargetGroupArn
    example:
      TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
  DeleteTargetGroupOutput:
    type: object
    properties: {}
  DeregisterTargetsInput:
    type: object
    required:
      - TargetGroupArn
      - Targets
    example:
      TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
      Targets:
        - Id: i-0f76fade
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      Targets:
        $ref: '#/definitions/TargetDescriptions'
        description: 'The targets. If you specified a port override when you registered a target, you must specify both the target ID and the port when you deregister it.'
  DeregisterTargetsOutput:
    type: object
    properties: {}
  DescribeListenersInput:
    type: object
    example:
      ListenerArns:
        - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2'
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      ListenerArns:
        $ref: '#/definitions/ListenerArns'
        description: The Amazon Resource Names (ARN) of the listeners.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
  DescribeListenersOutput:
    type: object
    example:
      Listeners:
        - DefaultActions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          ListenerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2'
          LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Port: 80
          Protocol: HTTP
    properties:
      Listeners:
        $ref: '#/definitions/Listeners'
        description: Information about the listeners.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker to use when requesting the next set of results. If there are no additional results, the string is empty.'
  DescribeLoadBalancerAttributesInput:
    type: object
    required:
      - LoadBalancerArn
    example:
      LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
  DescribeLoadBalancerAttributesOutput:
    type: object
    example:
      Attributes:
        - Key: access_logs.s3.enabled
          Value: 'false'
        - Key: idle_timeout.timeout_seconds
          Value: '60'
        - Key: access_logs.s3.prefix
          Value: ''
        - Key: deletion_protection.enabled
          Value: 'false'
        - Key: access_logs.s3.bucket
          Value: ''
    properties:
      Attributes:
        $ref: '#/definitions/LoadBalancerAttributes'
        description: Information about the load balancer attributes.
  DescribeLoadBalancersInput:
    type: object
    example:
      LoadBalancerArns:
        - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
    properties:
      LoadBalancerArns:
        $ref: '#/definitions/LoadBalancerArns'
        description: The Amazon Resource Names (ARN) of the load balancers.
      Names:
        $ref: '#/definitions/LoadBalancerNames'
        description: The names of the load balancers.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
  DescribeLoadBalancersOutput:
    type: object
    example:
      LoadBalancers:
        - AvailabilityZones:
            - SubnetId: subnet-8360a9e7
              ZoneName: us-west-2a
            - SubnetId: subnet-b7d581c0
              ZoneName: us-west-2b
          CanonicalHostedZoneId: Z2P70J7EXAMPLE
          CreatedTime: '2016-03-25T21:26:12.920Z'
          DNSName: my-load-balancer-424835706.us-west-2.elb.amazonaws.com
          LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          LoadBalancerName: my-load-balancer
          Scheme: internet-facing
          SecurityGroups:
            - sg-5943793c
          State:
            Code: active
          Type: application
          VpcId: vpc-3ac0fb5f
    properties:
      LoadBalancers:
        $ref: '#/definitions/LoadBalancers'
        description: Information about the load balancers.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker to use when requesting the next set of results. If there are no additional results, the string is empty.'
  DescribeRulesInput:
    type: object
    example:
      RuleArns:
        - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee'
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
      RuleArns:
        $ref: '#/definitions/RuleArns'
        description: The Amazon Resource Names (ARN) of the rules.
  DescribeRulesOutput:
    type: object
    example:
      Rules:
        - Actions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          Conditions:
            - Field: path-pattern
              Values:
                - /img/*
          IsDefault: false
          Priority: '10'
          RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee'
    properties:
      Rules:
        $ref: '#/definitions/Rules'
        description: Information about the rules.
  DescribeSSLPoliciesInput:
    type: object
    example:
      Names:
        - ELBSecurityPolicy-2015-05
    properties:
      Names:
        $ref: '#/definitions/SslPolicyNames'
        description: The names of the policies.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
  DescribeSSLPoliciesOutput:
    type: object
    example:
      SslPolicies:
        - Ciphers:
            - Name: ECDHE-ECDSA-AES128-GCM-SHA256
              Priority: 1
            - Name: ECDHE-RSA-AES128-GCM-SHA256
              Priority: 2
            - Name: ECDHE-ECDSA-AES128-SHA256
              Priority: 3
            - Name: ECDHE-RSA-AES128-SHA256
              Priority: 4
            - Name: ECDHE-ECDSA-AES128-SHA
              Priority: 5
            - Name: ECDHE-RSA-AES128-SHA
              Priority: 6
            - Name: DHE-RSA-AES128-SHA
              Priority: 7
            - Name: ECDHE-ECDSA-AES256-GCM-SHA384
              Priority: 8
            - Name: ECDHE-RSA-AES256-GCM-SHA384
              Priority: 9
            - Name: ECDHE-ECDSA-AES256-SHA384
              Priority: 10
            - Name: ECDHE-RSA-AES256-SHA384
              Priority: 11
            - Name: ECDHE-RSA-AES256-SHA
              Priority: 12
            - Name: ECDHE-ECDSA-AES256-SHA
              Priority: 13
            - Name: AES128-GCM-SHA256
              Priority: 14
            - Name: AES128-SHA256
              Priority: 15
            - Name: AES128-SHA
              Priority: 16
            - Name: AES256-GCM-SHA384
              Priority: 17
            - Name: AES256-SHA256
              Priority: 18
            - Name: AES256-SHA
              Priority: 19
          Name: ELBSecurityPolicy-2015-05
          SslProtocols:
            - TLSv1
            - TLSv1.1
            - TLSv1.2
    properties:
      SslPolicies:
        $ref: '#/definitions/SslPolicies'
        description: Information about the policies.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker to use when requesting the next set of results. If there are no additional results, the string is empty.'
  DescribeTagsInput:
    type: object
    required:
      - ResourceArns
    example:
      ResourceArns:
        - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
    properties:
      ResourceArns:
        $ref: '#/definitions/ResourceArns'
        description: The Amazon Resource Names (ARN) of the resources.
  DescribeTagsOutput:
    type: object
    example:
      TagDescriptions:
        - ResourceArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Tags:
            - Key: project
              Value: lima
            - Key: department
              Value: digital-media
    properties:
      TagDescriptions:
        $ref: '#/definitions/TagDescriptions'
        description: Information about the tags.
  DescribeTargetGroupAttributesInput:
    type: object
    required:
      - TargetGroupArn
    example:
      TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
  DescribeTargetGroupAttributesOutput:
    type: object
    example:
      Attributes:
        - Key: stickiness.enabled
          Value: 'false'
        - Key: deregistration_delay.timeout_seconds
          Value: '300'
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '86400'
    properties:
      Attributes:
        $ref: '#/definitions/TargetGroupAttributes'
        description: Information about the target group attributes
  DescribeTargetGroupsInput:
    type: object
    example:
      TargetGroupArns:
        - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      TargetGroupArns:
        $ref: '#/definitions/TargetGroupArns'
        description: The Amazon Resource Names (ARN) of the target groups.
      Names:
        $ref: '#/definitions/TargetGroupNames'
        description: The names of the target groups.
      Marker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results. (You received this marker from a previous call.)
      PageSize:
        $ref: '#/definitions/PageSize'
        description: The maximum number of results to return with this call.
  DescribeTargetGroupsOutput:
    type: object
    example:
      TargetGroups:
        - HealthCheckIntervalSeconds: 30
          HealthCheckPath: /
          HealthCheckPort: traffic-port
          HealthCheckProtocol: HTTP
          HealthCheckTimeoutSeconds: 5
          HealthyThresholdCount: 5
          LoadBalancerArns:
            - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Matcher:
            HttpCode: '200'
          Port: 80
          Protocol: HTTP
          TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
          TargetGroupName: my-targets
          UnhealthyThresholdCount: 2
          VpcId: vpc-3ac0fb5f
    properties:
      TargetGroups:
        $ref: '#/definitions/TargetGroups'
        description: Information about the target groups.
      NextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker to use when requesting the next set of results. If there are no additional results, the string is empty.'
  DescribeTargetHealthInput:
    type: object
    required:
      - TargetGroupArn
    example:
      TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
      Targets:
        - Id: i-0f76fade
          Port: 80
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      Targets:
        $ref: '#/definitions/TargetDescriptions'
        description: The targets.
  DescribeTargetHealthOutput:
    type: object
    example:
      TargetHealthDescriptions:
        - HealthCheckPort: '80'
          Target:
            Id: i-0f76fade
            Port: 80
          TargetHealth:
            State: healthy
    properties:
      TargetHealthDescriptions:
        $ref: '#/definitions/TargetHealthDescriptions'
        description: Information about the health of the targets.
  Description:
    type: string
  DuplicateListenerException:
    type: object
    properties: {}
    description: A listener with the specified port already exists.
  DuplicateLoadBalancerNameException:
    type: object
    properties: {}
    description: A load balancer with the specified name already exists for this account.
  DuplicateTagKeysException:
    type: object
    properties: {}
    description: A tag key was specified more than once.
  DuplicateTargetGroupNameException:
    type: object
    properties: {}
    description: A target group with the specified name already exists.
  HealthCheckIntervalSeconds:
    type: integer
    minimum: 5
    maximum: 300
  HealthCheckPort:
    type: string
  HealthCheckThresholdCount:
    type: integer
    minimum: 2
    maximum: 10
  HealthCheckTimeoutSeconds:
    type: integer
    minimum: 2
    maximum: 60
  HealthUnavailableException:
    type: object
    properties: {}
    description: The health of the specified targets could not be retrieved due to an internal error.
  HttpCode:
    type: string
  IncompatibleProtocolsException:
    type: object
    properties: {}
    description: The specified configuration is not valid with this protocol.
  InvalidConfigurationRequestException:
    type: object
    properties: {}
    description: The requested configuration is not valid.
  InvalidSchemeException:
    type: object
    properties: {}
    description: The requested scheme is not valid.
  InvalidSecurityGroupException:
    type: object
    properties: {}
    description: The specified security group does not exist.
  InvalidSubnetException:
    type: object
    properties: {}
    description: The specified subnet is out of available addresses.
  InvalidTargetException:
    type: object
    properties: {}
    description: The specified target does not exist or is not in the same VPC as the target group.
  IpAddressType:
    type: string
    enum:
      - ipv4
      - dualstack
  IsDefault:
    type: boolean
  ListOfString:
    type: array
    items:
      $ref: '#/definitions/StringValue'
  Listener:
    type: object
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      Port:
        $ref: '#/definitions/Port'
        description: The port on which the load balancer is listening.
      Protocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol for connections from clients to the load balancer.
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: The SSL server certificate. You must provide a certificate if the protocol is HTTPS.
      SslPolicy:
        $ref: '#/definitions/SslPolicyName'
        description: The security policy that defines which ciphers and protocols are supported. The default is the current predefined security policy.
      DefaultActions:
        $ref: '#/definitions/Actions'
        description: The default actions for the listener.
    description: Information about a listener.
  ListenerArn:
    type: string
  ListenerArns:
    type: array
    items:
      $ref: '#/definitions/ListenerArn'
  ListenerNotFoundException:
    type: object
    properties: {}
    description: The specified listener does not exist.
  Listeners:
    type: array
    items:
      $ref: '#/definitions/Listener'
  LoadBalancer:
    type: object
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      DNSName:
        $ref: '#/definitions/DNSName'
        description: The public DNS name of the load balancer.
      CanonicalHostedZoneId:
        $ref: '#/definitions/CanonicalHostedZoneId'
        description: The ID of the Amazon Route 53 hosted zone associated with the load balancer.
      CreatedTime:
        $ref: '#/definitions/CreatedTime'
        description: The date and time the load balancer was created.
      LoadBalancerName:
        $ref: '#/definitions/LoadBalancerName'
        description: The name of the load balancer.
      Scheme:
        $ref: '#/definitions/LoadBalancerSchemeEnum'
        description: '<p>The nodes of an Internet-facing load balancer have public IP addresses. The DNS name of an Internet-facing load balancer is publicly resolvable to the public IP addresses of the nodes. Therefore, Internet-facing load balancers can route requests from clients over the Internet.</p> <p>The nodes of an internal load balancer have only private IP addresses. The DNS name of an internal load balancer is publicly resolvable to the private IP addresses of the nodes. Therefore, internal load balancers can only route requests from clients with access to the VPC for the load balancer.</p>'
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The ID of the VPC for the load balancer.
      State:
        $ref: '#/definitions/LoadBalancerState'
        description: The state of the load balancer.
      Type:
        $ref: '#/definitions/LoadBalancerTypeEnum'
        description: The type of load balancer.
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: The Availability Zones for the load balancer.
      SecurityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: The IDs of the security groups for the load balancer.
      IpAddressType:
        $ref: '#/definitions/IpAddressType'
        description: The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses).
    description: Information about a load balancer.
  LoadBalancerArn:
    type: string
  LoadBalancerArns:
    type: array
    items:
      $ref: '#/definitions/LoadBalancerArn'
  LoadBalancerAttribute:
    type: object
    properties:
      Key:
        $ref: '#/definitions/LoadBalancerAttributeKey'
        description: '<p>The name of the attribute.</p> <ul> <li> <p> <code>access_logs.s3.enabled</code> - Indicates whether access logs stored in Amazon S3 are enabled. The value is <code>true</code> or <code>false</code>.</p> </li> <li> <p> <code>access_logs.s3.bucket</code> - The name of the S3 bucket for the access logs. This attribute is required if access logs in Amazon S3 are enabled. The bucket must exist in the same region as the load balancer and have a bucket policy that grants Elastic Load Balancing permission to write to the bucket.</p> </li> <li> <p> <code>access_logs.s3.prefix</code> - The prefix for the location in the S3 bucket. If you don''t specify a prefix, the access logs are stored in the root of the bucket.</p> </li> <li> <p> <code>deletion_protection.enabled</code> - Indicates whether deletion protection is enabled. The value is <code>true</code> or <code>false</code>.</p> </li> <li> <p> <code>idle_timeout.timeout_seconds</code> - The idle timeout value, in seconds. The valid range is 1-3600. The default is 60 seconds.</p> </li> </ul>'
      Value:
        $ref: '#/definitions/LoadBalancerAttributeValue'
        description: The value of the attribute.
    description: Information about a load balancer attribute.
  LoadBalancerAttributeKey:
    type: string
    pattern: '^[a-zA-Z0-9._]+$'
    maxLength: 256
  LoadBalancerAttributeValue:
    type: string
    maxLength: 1024
  LoadBalancerAttributes:
    type: array
    items:
      $ref: '#/definitions/LoadBalancerAttribute'
    maxItems: 20
  LoadBalancerName:
    type: string
  LoadBalancerNames:
    type: array
    items:
      $ref: '#/definitions/LoadBalancerName'
  LoadBalancerNotFoundException:
    type: object
    properties: {}
    description: The specified load balancer does not exist.
  LoadBalancerSchemeEnum:
    type: string
    enum:
      - internet-facing
      - internal
  LoadBalancerState:
    type: object
    properties:
      Code:
        $ref: '#/definitions/LoadBalancerStateEnum'
        description: 'The state code. The initial state of the load balancer is <code>provisioning</code>. After the load balancer is fully set up and ready to route traffic, its state is <code>active</code>. If the load balancer could not be set up, its state is <code>failed</code>.'
      Reason:
        $ref: '#/definitions/StateReason'
        description: A description of the state.
    description: Information about the state of the load balancer.
  LoadBalancerStateEnum:
    type: string
    enum:
      - active
      - provisioning
      - failed
  LoadBalancerTypeEnum:
    type: string
    enum:
      - application
  LoadBalancers:
    type: array
    items:
      $ref: '#/definitions/LoadBalancer'
  Marker:
    type: string
  Matcher:
    type: object
    required:
      - HttpCode
    properties:
      HttpCode:
        $ref: '#/definitions/HttpCode'
        description: 'The HTTP codes. The default value is 200. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299").'
    description: Information to use when checking for a successful response from a target.
  ModifyListenerInput:
    type: object
    required:
      - ListenerArn
    example:
      Certificates:
        - CertificateArn: 'arn:aws:iam::123456789012:server-certificate/my-new-server-cert'
      ListenerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/0467ef3c8400ae65'
    properties:
      ListenerArn:
        $ref: '#/definitions/ListenerArn'
        description: The Amazon Resource Name (ARN) of the listener.
      Port:
        $ref: '#/definitions/Port'
        description: The port for connections from clients to the load balancer.
      Protocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol for connections from clients to the load balancer.
      SslPolicy:
        $ref: '#/definitions/SslPolicyName'
        description: The security policy that defines which ciphers and protocols are supported.
      Certificates:
        $ref: '#/definitions/CertificateList'
        description: The SSL server certificate.
      DefaultActions:
        $ref: '#/definitions/Actions'
        description: The default actions.
  ModifyListenerOutput:
    type: object
    example:
      Listeners:
        - Certificates:
            - CertificateArn: 'arn:aws:iam::123456789012:server-certificate/my-new-server-cert'
          DefaultActions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          ListenerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/0467ef3c8400ae65'
          LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Port: 443
          Protocol: HTTPS
          SslPolicy: ELBSecurityPolicy-2015-05
    properties:
      Listeners:
        $ref: '#/definitions/Listeners'
        description: Information about the modified listeners.
  ModifyLoadBalancerAttributesInput:
    type: object
    required:
      - LoadBalancerArn
      - Attributes
    example:
      Attributes:
        - Key: access_logs.s3.enabled
          Value: 'true'
        - Key: access_logs.s3.bucket
          Value: my-loadbalancer-logs
        - Key: access_logs.s3.prefix
          Value: myapp
      LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      Attributes:
        $ref: '#/definitions/LoadBalancerAttributes'
        description: The load balancer attributes.
  ModifyLoadBalancerAttributesOutput:
    type: object
    example:
      Attributes:
        - Key: access_logs.s3.enabled
          Value: 'true'
        - Key: access_logs.s3.bucket
          Value: my-load-balancer-logs
        - Key: access_logs.s3.prefix
          Value: myapp
        - Key: idle_timeout.timeout_seconds
          Value: '60'
        - Key: deletion_protection.enabled
          Value: 'false'
    properties:
      Attributes:
        $ref: '#/definitions/LoadBalancerAttributes'
        description: Information about the load balancer attributes.
  ModifyRuleInput:
    type: object
    required:
      - RuleArn
    example:
      Conditions:
        - Field: path-pattern
          Values:
            - /images/*
      RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee'
    properties:
      RuleArn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
      Conditions:
        $ref: '#/definitions/RuleConditionList'
        description: The conditions.
      Actions:
        $ref: '#/definitions/Actions'
        description: The actions.
  ModifyRuleOutput:
    type: object
    example:
      Rules:
        - Actions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          Conditions:
            - Field: path-pattern
              Values:
                - /images/*
          IsDefault: false
          Priority: '10'
          RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee'
    properties:
      Rules:
        $ref: '#/definitions/Rules'
        description: Information about the rule.
  ModifyTargetGroupAttributesInput:
    type: object
    required:
      - TargetGroupArn
      - Attributes
    example:
      Attributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '600'
      TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      Attributes:
        $ref: '#/definitions/TargetGroupAttributes'
        description: The attributes.
  ModifyTargetGroupAttributesOutput:
    type: object
    example:
      Attributes:
        - Key: stickiness.enabled
          Value: 'false'
        - Key: deregistration_delay.timeout_seconds
          Value: '600'
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '86400'
    properties:
      Attributes:
        $ref: '#/definitions/TargetGroupAttributes'
        description: Information about the attributes.
  ModifyTargetGroupInput:
    type: object
    required:
      - TargetGroupArn
    example:
      HealthCheckPort: '443'
      HealthCheckProtocol: HTTPS
      TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-https-targets/2453ed029918f21f'
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      HealthCheckProtocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol to use to connect with the target.
      HealthCheckPort:
        $ref: '#/definitions/HealthCheckPort'
        description: The port to use to connect with the target.
      HealthCheckPath:
        $ref: '#/definitions/Path'
        description: The ping path that is the destination for the health check request.
      HealthCheckIntervalSeconds:
        $ref: '#/definitions/HealthCheckIntervalSeconds'
        description: 'The approximate amount of time, in seconds, between health checks of an individual target.'
      HealthCheckTimeoutSeconds:
        $ref: '#/definitions/HealthCheckTimeoutSeconds'
        description: 'The amount of time, in seconds, during which no response means a failed health check.'
      HealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: The number of consecutive health checks successes required before considering an unhealthy target healthy.
      UnhealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: The number of consecutive health check failures required before considering the target unhealthy.
      Matcher:
        $ref: '#/definitions/Matcher'
        description: The HTTP codes to use when checking for a successful response from a target.
  ModifyTargetGroupOutput:
    type: object
    example:
      TargetGroups:
        - HealthCheckIntervalSeconds: 30
          HealthCheckPort: '443'
          HealthCheckProtocol: HTTPS
          HealthCheckTimeoutSeconds: 5
          HealthyThresholdCount: 5
          LoadBalancerArns:
            - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
          Matcher:
            HttpCode: '200'
          Port: 443
          Protocol: HTTPS
          TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-https-targets/2453ed029918f21f'
          TargetGroupName: my-https-targets
          UnhealthyThresholdCount: 2
          VpcId: vpc-3ac0fb5f
    properties:
      TargetGroups:
        $ref: '#/definitions/TargetGroups'
        description: Information about the target group.
  OperationNotPermittedException:
    type: object
    properties: {}
    description: This operation is not allowed.
  PageSize:
    type: integer
    minimum: 1
    maximum: 400
  Path:
    type: string
    minLength: 1
    maxLength: 1024
  Port:
    type: integer
    minimum: 1
    maximum: 65535
  PriorityInUseException:
    type: object
    properties: {}
    description: The specified priority is in use.
  ProtocolEnum:
    type: string
    enum:
      - HTTP
      - HTTPS
  RegisterTargetsInput:
    type: object
    required:
      - TargetGroupArn
      - Targets
    example:
      TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-new-targets/3bb63f11dfb0faf9'
      Targets:
        - Id: i-80c8dd94
          Port: 80
        - Id: i-80c8dd94
          Port: 766
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      Targets:
        $ref: '#/definitions/TargetDescriptions'
        description: 'The targets. The default port for a target is the port for the target group. You can specify a port override. If a target is already registered, you can register it again using a different port.'
  RegisterTargetsOutput:
    type: object
    properties: {}
  RemoveTagsInput:
    type: object
    required:
      - ResourceArns
      - TagKeys
    example:
      ResourceArns:
        - 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
      TagKeys:
        - project
        - department
    properties:
      ResourceArns:
        $ref: '#/definitions/ResourceArns'
        description: The Amazon Resource Name (ARN) of the resource.
      TagKeys:
        $ref: '#/definitions/TagKeys'
        description: The tag keys for the tags to remove.
  RemoveTagsOutput:
    type: object
    properties: {}
  ResourceArn:
    type: string
  ResourceArns:
    type: array
    items:
      $ref: '#/definitions/ResourceArn'
  ResourceInUseException:
    type: object
    properties: {}
    description: A specified resource is in use.
  Rule:
    type: object
    properties:
      RuleArn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
      Priority:
        $ref: '#/definitions/String'
        description: The priority.
      Conditions:
        $ref: '#/definitions/RuleConditionList'
        description: The conditions.
      Actions:
        $ref: '#/definitions/Actions'
        description: The actions.
      IsDefault:
        $ref: '#/definitions/IsDefault'
        description: Indicates whether this is the default rule.
    description: Information about a rule.
  RuleArn:
    type: string
  RuleArns:
    type: array
    items:
      $ref: '#/definitions/RuleArn'
  RuleCondition:
    type: object
    properties:
      Field:
        $ref: '#/definitions/ConditionFieldName'
        description: The only possible value is <code>path-pattern</code>.
      Values:
        $ref: '#/definitions/ListOfString'
        description: '<p>The path pattern. You can specify a single path pattern.</p> <p>A path pattern is case sensitive, can be up to 128 characters in length, and can contain any of the following characters. Note that you can include up to three wildcard characters in a path pattern.</p> <ul> <li> <p>A-Z, a-z, 0-9</p> </li> <li> <p>_ - . $ / ~ " '' @ : +</p> </li> <li> <p>&amp; (using &amp;amp;)</p> </li> <li> <p>* (matches 0 or more characters)</p> </li> <li> <p>? (matches exactly 1 character)</p> </li> </ul>'
    description: Information about a condition for a rule.
  RuleConditionList:
    type: array
    items:
      $ref: '#/definitions/RuleCondition'
  RuleNotFoundException:
    type: object
    properties: {}
    description: The specified rule does not exist.
  RulePriority:
    type: integer
    minimum: 1
    maximum: 99999
  RulePriorityList:
    type: array
    items:
      $ref: '#/definitions/RulePriorityPair'
  RulePriorityPair:
    type: object
    properties:
      RuleArn:
        $ref: '#/definitions/RuleArn'
        description: The Amazon Resource Name (ARN) of the rule.
      Priority:
        $ref: '#/definitions/RulePriority'
        description: The rule priority.
    description: Information about the priorities for the rules for a listener.
  Rules:
    type: array
    items:
      $ref: '#/definitions/Rule'
  SSLPolicyNotFoundException:
    type: object
    properties: {}
    description: The specified SSL policy does not exist.
  SecurityGroupId:
    type: string
  SecurityGroups:
    type: array
    items:
      $ref: '#/definitions/SecurityGroupId'
  SetIpAddressTypeInput:
    type: object
    required:
      - LoadBalancerArn
      - IpAddressType
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      IpAddressType:
        $ref: '#/definitions/IpAddressType'
        description: The IP address type. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses). Internal load balancers must use <code>ipv4</code>.
  SetIpAddressTypeOutput:
    type: object
    properties:
      IpAddressType:
        $ref: '#/definitions/IpAddressType'
        description: The IP address type.
  SetRulePrioritiesInput:
    type: object
    required:
      - RulePriorities
    example:
      RulePriorities:
        - Priority: 5
          RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/1291d13826f405c3'
    properties:
      RulePriorities:
        $ref: '#/definitions/RulePriorityList'
        description: The rule priorities.
  SetRulePrioritiesOutput:
    type: object
    example:
      Rules:
        - Actions:
            - TargetGroupArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067'
              Type: forward
          Conditions:
            - Field: path-pattern
              Values:
                - /img/*
          IsDefault: false
          Priority: '5'
          RuleArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/1291d13826f405c3'
    properties:
      Rules:
        $ref: '#/definitions/Rules'
        description: Information about the rules.
  SetSecurityGroupsInput:
    type: object
    required:
      - LoadBalancerArn
      - SecurityGroups
    example:
      LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
      SecurityGroups:
        - sg-5943793c
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      SecurityGroups:
        $ref: '#/definitions/SecurityGroups'
        description: The IDs of the security groups.
  SetSecurityGroupsOutput:
    type: object
    example:
      SecurityGroupIds:
        - sg-5943793c
    properties:
      SecurityGroupIds:
        $ref: '#/definitions/SecurityGroups'
        description: The IDs of the security groups associated with the load balancer.
  SetSubnetsInput:
    type: object
    required:
      - LoadBalancerArn
      - Subnets
    example:
      LoadBalancerArn: 'arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188'
      Subnets:
        - subnet-8360a9e7
        - subnet-b7d581c0
    properties:
      LoadBalancerArn:
        $ref: '#/definitions/LoadBalancerArn'
        description: The Amazon Resource Name (ARN) of the load balancer.
      Subnets:
        $ref: '#/definitions/Subnets'
        description: The IDs of the subnets. You must specify at least two subnets. You can add only one subnet per Availability Zone.
  SetSubnetsOutput:
    type: object
    example:
      AvailabilityZones:
        - SubnetId: subnet-8360a9e7
          ZoneName: us-west-2a
        - SubnetId: subnet-b7d581c0
          ZoneName: us-west-2b
    properties:
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: Information about the subnet and Availability Zone.
  SslPolicies:
    type: array
    items:
      $ref: '#/definitions/SslPolicy'
  SslPolicy:
    type: object
    properties:
      SslProtocols:
        $ref: '#/definitions/SslProtocols'
        description: The protocols.
      Ciphers:
        $ref: '#/definitions/Ciphers'
        description: The ciphers.
      Name:
        $ref: '#/definitions/SslPolicyName'
        description: The name of the policy.
    description: Information about a policy used for SSL negotiation.
  SslPolicyName:
    type: string
  SslPolicyNames:
    type: array
    items:
      $ref: '#/definitions/SslPolicyName'
  SslProtocol:
    type: string
  SslProtocols:
    type: array
    items:
      $ref: '#/definitions/SslProtocol'
  StateReason:
    type: string
  String:
    type: string
  StringValue:
    type: string
  SubnetId:
    type: string
  SubnetNotFoundException:
    type: object
    properties: {}
    description: The specified subnet does not exist.
  Subnets:
    type: array
    items:
      $ref: '#/definitions/SubnetId'
  Tag:
    type: object
    required:
      - Key
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The key of the tag.
      Value:
        $ref: '#/definitions/TagValue'
        description: The value of the tag.
    description: Information about a tag.
  TagDescription:
    type: object
    properties:
      ResourceArn:
        $ref: '#/definitions/ResourceArn'
        description: The Amazon Resource Name (ARN) of the resource.
      Tags:
        $ref: '#/definitions/TagList'
        description: Information about the tags.
    description: The tags associated with a resource.
  TagDescriptions:
    type: array
    items:
      $ref: '#/definitions/TagDescription'
  TagKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 128
  TagKeys:
    type: array
    items:
      $ref: '#/definitions/TagKey'
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
    minItems: 1
  TagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 0
    maxLength: 256
  TargetDescription:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/TargetId'
        description: The ID of the target.
      Port:
        $ref: '#/definitions/Port'
        description: The port on which the target is listening.
    description: Information about a target.
  TargetDescriptions:
    type: array
    items:
      $ref: '#/definitions/TargetDescription'
  TargetGroup:
    type: object
    properties:
      TargetGroupArn:
        $ref: '#/definitions/TargetGroupArn'
        description: The Amazon Resource Name (ARN) of the target group.
      TargetGroupName:
        $ref: '#/definitions/TargetGroupName'
        description: The name of the target group.
      Protocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol to use for routing traffic to the targets.
      Port:
        $ref: '#/definitions/Port'
        description: The port on which the targets are listening.
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The ID of the VPC for the targets.
      HealthCheckProtocol:
        $ref: '#/definitions/ProtocolEnum'
        description: The protocol to use to connect with the target.
      HealthCheckPort:
        $ref: '#/definitions/HealthCheckPort'
        description: The port to use to connect with the target.
      HealthCheckIntervalSeconds:
        $ref: '#/definitions/HealthCheckIntervalSeconds'
        description: 'The approximate amount of time, in seconds, between health checks of an individual target.'
      HealthCheckTimeoutSeconds:
        $ref: '#/definitions/HealthCheckTimeoutSeconds'
        description: 'The amount of time, in seconds, during which no response means a failed health check.'
      HealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: The number of consecutive health checks successes required before considering an unhealthy target healthy.
      UnhealthyThresholdCount:
        $ref: '#/definitions/HealthCheckThresholdCount'
        description: The number of consecutive health check failures required before considering the target unhealthy.
      HealthCheckPath:
        $ref: '#/definitions/Path'
        description: The destination for the health check request.
      Matcher:
        $ref: '#/definitions/Matcher'
        description: The HTTP codes to use when checking for a successful response from a target.
      LoadBalancerArns:
        $ref: '#/definitions/LoadBalancerArns'
        description: The Amazon Resource Names (ARN) of the load balancers that route traffic to this target group.
    description: Information about a target group.
  TargetGroupArn:
    type: string
  TargetGroupArns:
    type: array
    items:
      $ref: '#/definitions/TargetGroupArn'
  TargetGroupAssociationLimitException:
    type: object
    properties: {}
    description: You've reached the limit on the number of load balancers per target group.
  TargetGroupAttribute:
    type: object
    properties:
      Key:
        $ref: '#/definitions/TargetGroupAttributeKey'
        description: '<p>The name of the attribute.</p> <ul> <li> <p> <code>deregistration_delay.timeout_seconds</code> - The amount time for Elastic Load Balancing to wait before changing the state of a deregistering target from <code>draining</code> to <code>unused</code>. The range is 0-3600 seconds. The default value is 300 seconds.</p> </li> <li> <p> <code>stickiness.enabled</code> - Indicates whether sticky sessions are enabled. The value is <code>true</code> or <code>false</code>.</p> </li> <li> <p> <code>stickiness.type</code> - The type of sticky sessions. The possible value is <code>lb_cookie</code>.</p> </li> <li> <p> <code>stickiness.lb_cookie.duration_seconds</code> - The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).</p> </li> </ul>'
      Value:
        $ref: '#/definitions/TargetGroupAttributeValue'
        description: The value of the attribute.
    description: Information about a target group attribute.
  TargetGroupAttributeKey:
    type: string
    pattern: '^[a-zA-Z0-9._]+$'
    maxLength: 256
  TargetGroupAttributeValue:
    type: string
  TargetGroupAttributes:
    type: array
    items:
      $ref: '#/definitions/TargetGroupAttribute'
  TargetGroupName:
    type: string
  TargetGroupNames:
    type: array
    items:
      $ref: '#/definitions/TargetGroupName'
  TargetGroupNotFoundException:
    type: object
    properties: {}
    description: The specified target group does not exist.
  TargetGroups:
    type: array
    items:
      $ref: '#/definitions/TargetGroup'
  TargetHealth:
    type: object
    properties:
      State:
        $ref: '#/definitions/TargetHealthStateEnum'
        description: The state of the target.
      Reason:
        $ref: '#/definitions/TargetHealthReasonEnum'
        description: '<p>The reason code. If the target state is <code>healthy</code>, a reason code is not provided.</p> <p>If the target state is <code>initial</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Elb.RegistrationInProgress</code> - The target is in the process of being registered with the load balancer.</p> </li> <li> <p> <code>Elb.InitialHealthChecking</code> - The load balancer is still sending the target the minimum number of health checks required to determine its health status.</p> </li> </ul> <p>If the target state is <code>unhealthy</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.ResponseCodeMismatch</code> - The health checks did not return an expected HTTP code.</p> </li> <li> <p> <code>Target.Timeout</code> - The health check requests timed out.</p> </li> <li> <p> <code>Target.FailedHealthChecks</code> - The health checks failed because the connection to the target timed out, the target response was malformed, or the target failed the health check for an unknown reason.</p> </li> <li> <p> <code>Elb.InternalError</code> - The health checks failed due to an internal error.</p> </li> </ul> <p>If the target state is <code>unused</code>, the reason code can be one of the following values:</p> <ul> <li> <p> <code>Target.NotRegistered</code> - The target is not registered with the target group.</p> </li> <li> <p> <code>Target.NotInUse</code> - The target group is not used by any load balancer or the target is in an Availability Zone that is not enabled for its load balancer.</p> </li> <li> <p> <code>Target.InvalidState</code> - The target is in the stopped or terminated state.</p> </li> </ul> <p>If the target state is <code>draining</code>, the reason code can be the following value:</p> <ul> <li> <p> <code>Target.DeregistrationInProgress</code> - The target is in the process of being deregistered and the deregistration delay period has not expired.</p> </li> </ul>'
      Description:
        $ref: '#/definitions/Description'
        description: 'A description of the target health that provides additional details. If the state is <code>healthy</code>, a description is not provided.'
    description: Information about the current health of a target.
  TargetHealthDescription:
    type: object
    properties:
      Target:
        $ref: '#/definitions/TargetDescription'
        description: The description of the target.
      HealthCheckPort:
        $ref: '#/definitions/HealthCheckPort'
        description: The port to use to connect with the target.
      TargetHealth:
        $ref: '#/definitions/TargetHealth'
        description: The health information for the target.
    description: Information about the health of a target.
  TargetHealthDescriptions:
    type: array
    items:
      $ref: '#/definitions/TargetHealthDescription'
  TargetHealthReasonEnum:
    type: string
    enum:
      - Elb.RegistrationInProgress
      - Elb.InitialHealthChecking
      - Target.ResponseCodeMismatch
      - Target.Timeout
      - Target.FailedHealthChecks
      - Target.NotRegistered
      - Target.NotInUse
      - Target.DeregistrationInProgress
      - Target.InvalidState
      - Elb.InternalError
  TargetHealthStateEnum:
    type: string
    enum:
      - initial
      - healthy
      - unhealthy
      - unused
      - draining
  TargetId:
    type: string
  TooManyCertificatesException:
    type: object
    properties: {}
    description: You've reached the limit on the number of certificates per listener.
  TooManyListenersException:
    type: object
    properties: {}
    description: You've reached the limit on the number of listeners per load balancer.
  TooManyLoadBalancersException:
    type: object
    properties: {}
    description: You've reached the limit on the number of load balancers for your AWS account.
  TooManyRegistrationsForTargetIdException:
    type: object
    properties: {}
    description: You've reached the limit on the number of times a target can be registered with a load balancer.
  TooManyRulesException:
    type: object
    properties: {}
    description: You've reached the limit on the number of rules per load balancer.
  TooManyTagsException:
    type: object
    properties: {}
    description: You've reached the limit on the number of tags per load balancer.
  TooManyTargetGroupsException:
    type: object
    properties: {}
    description: You've reached the limit on the number of target groups for your AWS account.
  TooManyTargetsException:
    type: object
    properties: {}
    description: You've reached the limit on the number of targets.
  UnsupportedProtocolException:
    type: object
    properties: {}
    description: The specified protocol is not supported.
  VpcId:
    type: string
  ZoneName:
    type: string
