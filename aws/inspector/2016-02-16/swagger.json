{
  "swagger": "2.0",
  "info": {
    "version": "2016-02-16",
    "x-release": "v4",
    "title": "Amazon Inspector",
    "description": "<fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href=\"http://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html\"> Amazon Inspector User Guide</a>.</p>",
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/aws2openapi"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    }
  },
  "x-logo": {
    "url": "https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg",
    "backgroundColor": "#FFFFFF"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/inspector/"
  },
  "host": "inspector.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "parameters": {
    "Action": {
      "name": "Action",
      "in": "header",
      "type": "string",
      "required": true
    },
    "Version": {
      "name": "Version",
      "in": "header",
      "type": "string",
      "required": true
    },
    "X-Amz-Content-Sha256": {
      "name": "X-Amz-Content-Sha256",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-Date": {
      "name": "X-Amz-Date",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-Algorithm": {
      "name": "X-Amz-Algorithm",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-Credential": {
      "name": "X-Amz-Credential",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-Security-Token": {
      "name": "X-Amz-Security-Token",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-Signature": {
      "name": "X-Amz-Signature",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-SignedHeaders": {
      "name": "X-Amz-SignedHeaders",
      "in": "header",
      "type": "string",
      "required": false
    }
  },
  "securityDefinitions": {
    "hmac": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Amazon Signature authorization v4",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "paths": {
    "/": {
      "post": {
        "operationId": "AddAttributesToFindings",
        "description": "Assigns attributes (key and value pairs) to the findings that are specified by the ARNs of the findings.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AddAttributesToFindingsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddAttributesToFindingsRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#CreateAssessmentTarget": {
      "post": {
        "operationId": "CreateAssessmentTarget",
        "description": "Creates a new assessment target using the ARN of the resource group that is generated by <a>CreateResourceGroup</a>. You can create up to 50 assessment targets per AWS account. You can run up to 500 concurrent agents per AWS account. For more information, see <a href=\"http://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html\"> Amazon Inspector Assessment Targets</a>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateAssessmentTargetResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAssessmentTargetRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#CreateAssessmentTemplate": {
      "post": {
        "operationId": "CreateAssessmentTemplate",
        "description": "Creates an assessment template for the assessment target that is specified by the ARN of the assessment target.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateAssessmentTemplateResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAssessmentTemplateRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#CreateResourceGroup": {
      "post": {
        "operationId": "CreateResourceGroup",
        "description": "Creates a resource group using the specified set of tags (key and value pairs) that are used to select the EC2 instances to be included in an Amazon Inspector assessment target. The created resource group is then used to create an Amazon Inspector assessment target. For more information, see <a>CreateAssessmentTarget</a>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateResourceGroupResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateResourceGroupRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#DeleteAssessmentRun": {
      "post": {
        "operationId": "DeleteAssessmentRun",
        "description": "Deletes the assessment run that is specified by the ARN of the assessment run.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AssessmentRunInProgressException",
            "schema": {
              "$ref": "#/definitions/AssessmentRunInProgressException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteAssessmentRunRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#DeleteAssessmentTarget": {
      "post": {
        "operationId": "DeleteAssessmentTarget",
        "description": "Deletes the assessment target that is specified by the ARN of the assessment target.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AssessmentRunInProgressException",
            "schema": {
              "$ref": "#/definitions/AssessmentRunInProgressException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteAssessmentTargetRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#DeleteAssessmentTemplate": {
      "post": {
        "operationId": "DeleteAssessmentTemplate",
        "description": "Deletes the assessment template that is specified by the ARN of the assessment template.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AssessmentRunInProgressException",
            "schema": {
              "$ref": "#/definitions/AssessmentRunInProgressException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteAssessmentTemplateRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#DescribeAssessmentRuns": {
      "post": {
        "operationId": "DescribeAssessmentRuns",
        "description": "Describes the assessment runs that are specified by the ARNs of the assessment runs.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeAssessmentRunsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeAssessmentRunsRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#DescribeAssessmentTargets": {
      "post": {
        "operationId": "DescribeAssessmentTargets",
        "description": "Describes the assessment targets that are specified by the ARNs of the assessment targets.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeAssessmentTargetsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeAssessmentTargetsRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#DescribeAssessmentTemplates": {
      "post": {
        "operationId": "DescribeAssessmentTemplates",
        "description": "Describes the assessment templates that are specified by the ARNs of the assessment templates.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeAssessmentTemplatesResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeAssessmentTemplatesRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#DescribeCrossAccountAccessRole": {
      "post": {
        "operationId": "DescribeCrossAccountAccessRole",
        "description": "Describes the IAM role that enables Amazon Inspector to access your AWS account.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeCrossAccountAccessRoleResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#DescribeFindings": {
      "post": {
        "operationId": "DescribeFindings",
        "description": "Describes the findings that are specified by the ARNs of the findings.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeFindingsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeFindingsRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#DescribeResourceGroups": {
      "post": {
        "operationId": "DescribeResourceGroups",
        "description": "Describes the resource groups that are specified by the ARNs of the resource groups.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeResourceGroupsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeResourceGroupsRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#DescribeRulesPackages": {
      "post": {
        "operationId": "DescribeRulesPackages",
        "description": "Describes the rules packages that are specified by the ARNs of the rules packages.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DescribeRulesPackagesResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DescribeRulesPackagesRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#GetTelemetryMetadata": {
      "post": {
        "operationId": "GetTelemetryMetadata",
        "description": "Information about the data that is collected for the specified assessment run.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetTelemetryMetadataResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetTelemetryMetadataRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#ListAssessmentRunAgents": {
      "post": {
        "operationId": "ListAssessmentRunAgents",
        "description": "Lists the agents of the assessment runs that are specified by the ARNs of the assessment runs.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAssessmentRunAgentsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListAssessmentRunAgentsRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#ListAssessmentRuns": {
      "post": {
        "operationId": "ListAssessmentRuns",
        "description": "Lists the assessment runs that correspond to the assessment templates that are specified by the ARNs of the assessment templates.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAssessmentRunsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListAssessmentRunsRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#ListAssessmentTargets": {
      "post": {
        "operationId": "ListAssessmentTargets",
        "description": "Lists the ARNs of the assessment targets within this AWS account. For more information about assessment targets, see <a href=\"http://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html\">Amazon Inspector Assessment Targets</a>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAssessmentTargetsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListAssessmentTargetsRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#ListAssessmentTemplates": {
      "post": {
        "operationId": "ListAssessmentTemplates",
        "description": "Lists the assessment templates that correspond to the assessment targets that are specified by the ARNs of the assessment targets.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListAssessmentTemplatesResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListAssessmentTemplatesRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#ListEventSubscriptions": {
      "post": {
        "operationId": "ListEventSubscriptions",
        "description": "Lists all the event subscriptions for the assessment template that is specified by the ARN of the assessment template. For more information, see <a>SubscribeToEvent</a> and <a>UnsubscribeFromEvent</a>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListEventSubscriptionsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListEventSubscriptionsRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#ListFindings": {
      "post": {
        "operationId": "ListFindings",
        "description": "Lists findings that are generated by the assessment runs that are specified by the ARNs of the assessment runs.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListFindingsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListFindingsRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#ListRulesPackages": {
      "post": {
        "operationId": "ListRulesPackages",
        "description": "Lists all available Amazon Inspector rules packages.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListRulesPackagesResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListRulesPackagesRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#ListTagsForResource": {
      "post": {
        "operationId": "ListTagsForResource",
        "description": "Lists all tags associated with an assessment template.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#PreviewAgents": {
      "post": {
        "operationId": "PreviewAgents",
        "description": "Previews the agents installed on the EC2 instances that are part of the specified assessment target.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PreviewAgentsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          },
          "484": {
            "description": "InvalidCrossAccountRoleException",
            "schema": {
              "$ref": "#/definitions/InvalidCrossAccountRoleException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PreviewAgentsRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#RegisterCrossAccountAccessRole": {
      "post": {
        "operationId": "RegisterCrossAccountAccessRole",
        "description": "Registers the IAM role that Amazon Inspector uses to list your EC2 instances at the start of the assessment run or when you call the <a>PreviewAgents</a> action.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "InvalidCrossAccountRoleException",
            "schema": {
              "$ref": "#/definitions/InvalidCrossAccountRoleException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterCrossAccountAccessRoleRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#RemoveAttributesFromFindings": {
      "post": {
        "operationId": "RemoveAttributesFromFindings",
        "description": "Removes entire attributes (key and value pairs) from the findings that are specified by the ARNs of the findings where an attribute with the specified key exists.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RemoveAttributesFromFindingsResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RemoveAttributesFromFindingsRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#SetTagsForResource": {
      "post": {
        "operationId": "SetTagsForResource",
        "description": "Sets tags (key and value pairs) to the assessment template that is specified by the ARN of the assessment template.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetTagsForResourceRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#StartAssessmentRun": {
      "post": {
        "operationId": "StartAssessmentRun",
        "description": "Starts the assessment run specified by the ARN of the assessment template. For this API to function properly, you must not exceed the limit of running up to 500 concurrent agents per AWS account.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StartAssessmentRunResponse"
            }
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          },
          "485": {
            "description": "InvalidCrossAccountRoleException",
            "schema": {
              "$ref": "#/definitions/InvalidCrossAccountRoleException"
            }
          },
          "486": {
            "description": "AgentsAlreadyRunningAssessmentException",
            "schema": {
              "$ref": "#/definitions/AgentsAlreadyRunningAssessmentException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartAssessmentRunRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#StopAssessmentRun": {
      "post": {
        "operationId": "StopAssessmentRun",
        "description": "Stops the assessment run that is specified by the ARN of the assessment run.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StopAssessmentRunRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#SubscribeToEvent": {
      "post": {
        "operationId": "SubscribeToEvent",
        "description": "Enables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified SNS topic.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "LimitExceededException",
            "schema": {
              "$ref": "#/definitions/LimitExceededException"
            }
          },
          "483": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "484": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscribeToEventRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#UnsubscribeFromEvent": {
      "post": {
        "operationId": "UnsubscribeFromEvent",
        "description": "Disables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified SNS topic.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnsubscribeFromEventRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/#UpdateAssessmentTarget": {
      "post": {
        "operationId": "UpdateAssessmentTarget",
        "description": "Updates the assessment target that is specified by the ARN of the assessment target.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InternalException",
            "schema": {
              "$ref": "#/definitions/InternalException"
            }
          },
          "481": {
            "description": "InvalidInputException",
            "schema": {
              "$ref": "#/definitions/InvalidInputException"
            }
          },
          "482": {
            "description": "AccessDeniedException",
            "schema": {
              "$ref": "#/definitions/AccessDeniedException"
            }
          },
          "483": {
            "description": "NoSuchEntityException",
            "schema": {
              "$ref": "#/definitions/NoSuchEntityException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAssessmentTargetRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    }
  },
  "definitions": {
    "AccessDeniedErrorCode": {
      "type": "string",
      "enum": [
        "ACCESS_DENIED_TO_ASSESSMENT_TARGET",
        "ACCESS_DENIED_TO_ASSESSMENT_TEMPLATE",
        "ACCESS_DENIED_TO_ASSESSMENT_RUN",
        "ACCESS_DENIED_TO_FINDING",
        "ACCESS_DENIED_TO_RESOURCE_GROUP",
        "ACCESS_DENIED_TO_RULES_PACKAGE",
        "ACCESS_DENIED_TO_SNS_TOPIC",
        "ACCESS_DENIED_TO_IAM_ROLE"
      ]
    },
    "AccessDeniedException": {
      "type": "object",
      "required": [
        "message",
        "errorCode",
        "canRetry"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "Details of the exception error."
        },
        "errorCode": {
          "$ref": "#/definitions/AccessDeniedErrorCode",
          "description": "Code that indicates the type of error that is generated."
        },
        "canRetry": {
          "$ref": "#/definitions/Bool",
          "description": "You can immediately retry your request."
        }
      },
      "description": "You do not have required permissions to access the requested resource."
    },
    "AddAttributesToFindingsRequest": {
      "type": "object",
      "required": [
        "findingArns",
        "attributes"
      ],
      "properties": {
        "findingArns": {
          "$ref": "#/definitions/AddRemoveAttributesFindingArnList",
          "description": "The ARNs that specify the findings that you want to assign attributes to."
        },
        "attributes": {
          "$ref": "#/definitions/UserAttributeList",
          "description": "The array of attributes that you want to assign to specified findings."
        }
      }
    },
    "AddAttributesToFindingsResponse": {
      "type": "object",
      "required": [
        "failedItems"
      ],
      "properties": {
        "failedItems": {
          "$ref": "#/definitions/FailedItems",
          "description": "Attribute details that cannot be described. An error code is provided for each failed item."
        }
      }
    },
    "AddRemoveAttributesFindingArnList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Arn"
      },
      "minItems": 1,
      "maxItems": 10
    },
    "AgentAlreadyRunningAssessment": {
      "type": "object",
      "required": [
        "agentId",
        "assessmentRunArn"
      ],
      "properties": {
        "agentId": {
          "$ref": "#/definitions/AgentId",
          "description": "ID of the agent that is running on an EC2 instance that is already participating in another started assessment run."
        },
        "assessmentRunArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment run that has already been started."
        }
      },
      "description": "Used in the exception error that is thrown if you start an assessment run for an assessment target that includes an EC2 instance that is already participating in another started assessment run."
    },
    "AgentAlreadyRunningAssessmentList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AgentAlreadyRunningAssessment"
      },
      "minItems": 1,
      "maxItems": 10
    },
    "AgentFilter": {
      "type": "object",
      "required": [
        "agentHealths",
        "agentHealthCodes"
      ],
      "properties": {
        "agentHealths": {
          "$ref": "#/definitions/AgentHealthList",
          "description": "The current health state of the agent. Values can be set to <b>HEALTHY</b> or <b>UNHEALTHY</b>."
        },
        "agentHealthCodes": {
          "$ref": "#/definitions/AgentHealthCodeList",
          "description": "The detailed health state of the agent. Values can be set to <b>IDLE</b>, <b>RUNNING</b>, <b>SHUTDOWN</b>, <b>UNHEALTHY</b>, <b>THROTTLED</b>, and <b>UNKNOWN</b>. "
        }
      },
      "description": "Contains information about an Amazon Inspector agent. This data type is used as a request parameter in the <a>ListAssessmentRunAgents</a> action."
    },
    "AgentHealth": {
      "type": "string",
      "enum": [
        "HEALTHY",
        "UNHEALTHY"
      ]
    },
    "AgentHealthCode": {
      "type": "string",
      "enum": [
        "IDLE",
        "RUNNING",
        "SHUTDOWN",
        "UNHEALTHY",
        "THROTTLED",
        "UNKNOWN"
      ]
    },
    "AgentHealthCodeList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AgentHealthCode"
      },
      "minItems": 0,
      "maxItems": 10
    },
    "AgentHealthList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AgentHealth"
      },
      "minItems": 0,
      "maxItems": 10
    },
    "AgentId": {
      "type": "string",
      "minLength": 1,
      "maxLength": 128
    },
    "AgentIdList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AgentId"
      },
      "minItems": 0,
      "maxItems": 500
    },
    "AgentPreview": {
      "type": "object",
      "required": [
        "agentId"
      ],
      "properties": {
        "agentId": {
          "$ref": "#/definitions/AgentId",
          "description": "The ID of the EC2 instance where the agent is installed."
        },
        "autoScalingGroup": {
          "$ref": "#/definitions/AutoScalingGroup",
          "description": "The Auto Scaling group for the EC2 instance where the agent is installed."
        }
      },
      "description": "Used as a response element in the <a>PreviewAgents</a> action."
    },
    "AgentPreviewList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AgentPreview"
      },
      "minItems": 0,
      "maxItems": 100
    },
    "AgentsAlreadyRunningAssessmentException": {
      "type": "object",
      "required": [
        "message",
        "agents",
        "agentsTruncated",
        "canRetry"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "Details of the exception error."
        },
        "agents": {
          "$ref": "#/definitions/AgentAlreadyRunningAssessmentList",
          "description": "<p/>"
        },
        "agentsTruncated": {
          "$ref": "#/definitions/Bool",
          "description": "<p/>"
        },
        "canRetry": {
          "$ref": "#/definitions/Bool",
          "description": "You can immediately retry your request."
        }
      },
      "description": "You started an assessment run, but one of the instances is already participating in another assessment run."
    },
    "AmiId": {
      "type": "string",
      "minLength": 0,
      "maxLength": 256
    },
    "Arn": {
      "type": "string",
      "minLength": 1,
      "maxLength": 300
    },
    "AssessmentRulesPackageArnList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Arn"
      },
      "minItems": 1,
      "maxItems": 50
    },
    "AssessmentRun": {
      "type": "object",
      "required": [
        "arn",
        "name",
        "assessmentTemplateArn",
        "state",
        "durationInSeconds",
        "rulesPackageArns",
        "userAttributesForFindings",
        "createdAt",
        "stateChangedAt",
        "dataCollected",
        "stateChanges",
        "notifications"
      ],
      "properties": {
        "arn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment run."
        },
        "name": {
          "$ref": "#/definitions/AssessmentRunName",
          "description": "The auto-generated name for the assessment run."
        },
        "assessmentTemplateArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment template that is associated with the assessment run."
        },
        "state": {
          "$ref": "#/definitions/AssessmentRunState",
          "description": "The state of the assessment run."
        },
        "durationInSeconds": {
          "$ref": "#/definitions/AssessmentRunDuration",
          "description": "The duration of the assessment run."
        },
        "rulesPackageArns": {
          "$ref": "#/definitions/AssessmentRulesPackageArnList",
          "description": "The rules packages selected for the assessment run."
        },
        "userAttributesForFindings": {
          "$ref": "#/definitions/UserAttributeList",
          "description": "The user-defined attributes that are assigned to every generated finding."
        },
        "createdAt": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time when <a>StartAssessmentRun</a> was called."
        },
        "startedAt": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time when <a>StartAssessmentRun</a> was called."
        },
        "completedAt": {
          "$ref": "#/definitions/Timestamp",
          "description": "The assessment run completion time that corresponds to the rules packages evaluation completion time or failure."
        },
        "stateChangedAt": {
          "$ref": "#/definitions/Timestamp",
          "description": "The last time when the assessment run's state changed."
        },
        "dataCollected": {
          "$ref": "#/definitions/Bool",
          "description": "A Boolean value (true or false) that specifies whether the process of collecting data from the agents is completed."
        },
        "stateChanges": {
          "$ref": "#/definitions/AssessmentRunStateChangeList",
          "description": "A list of the assessment run state changes."
        },
        "notifications": {
          "$ref": "#/definitions/AssessmentRunNotificationList",
          "description": "A list of notifications for the event subscriptions. A notification about a particular generated finding is added to this list only once."
        }
      },
      "description": "<p>A snapshot of an Amazon Inspector assessment run that contains the findings of the assessment run .</p> <p>Used as the response element in the <a>DescribeAssessmentRuns</a> action.</p>"
    },
    "AssessmentRunAgent": {
      "type": "object",
      "required": [
        "agentId",
        "assessmentRunArn",
        "agentHealth",
        "agentHealthCode",
        "telemetryMetadata"
      ],
      "properties": {
        "agentId": {
          "$ref": "#/definitions/AgentId",
          "description": "The AWS account of the EC2 instance where the agent is installed."
        },
        "assessmentRunArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment run that is associated with the agent."
        },
        "agentHealth": {
          "$ref": "#/definitions/AgentHealth",
          "description": "The current health state of the agent."
        },
        "agentHealthCode": {
          "$ref": "#/definitions/AgentHealthCode",
          "description": "The detailed health state of the agent."
        },
        "agentHealthDetails": {
          "$ref": "#/definitions/Message",
          "description": "The description for the agent health code."
        },
        "autoScalingGroup": {
          "$ref": "#/definitions/AutoScalingGroup",
          "description": "The Auto Scaling group of the EC2 instance that is specified by the agent ID."
        },
        "telemetryMetadata": {
          "$ref": "#/definitions/TelemetryMetadataList",
          "description": "The Amazon Inspector application data metrics that are collected by the agent."
        }
      },
      "description": "Contains information about an Amazon Inspector agent. This data type is used as a response element in the <a>ListAssessmentRunAgents</a> action."
    },
    "AssessmentRunAgentList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AssessmentRunAgent"
      },
      "minItems": 0,
      "maxItems": 500
    },
    "AssessmentRunDuration": {
      "type": "integer",
      "minimum": 180,
      "maximum": 86400
    },
    "AssessmentRunFilter": {
      "type": "object",
      "properties": {
        "namePattern": {
          "$ref": "#/definitions/NamePattern",
          "description": "For a record to match a filter, an explicit value or a string containing a wildcard that is specified for this data type property must match the value of the <b>assessmentRunName</b> property of the <a>AssessmentRun</a> data type."
        },
        "states": {
          "$ref": "#/definitions/AssessmentRunStateList",
          "description": "For a record to match a filter, one of the values specified for this data type property must be the exact match of the value of the <b>assessmentRunState</b> property of the <a>AssessmentRun</a> data type."
        },
        "durationRange": {
          "$ref": "#/definitions/DurationRange",
          "description": "For a record to match a filter, the value that is specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>durationInSeconds</b> property of the <a>AssessmentRun</a> data type."
        },
        "rulesPackageArns": {
          "$ref": "#/definitions/FilterRulesPackageArnList",
          "description": "For a record to match a filter, the value that is specified for this data type property must be contained in the list of values of the <b>rulesPackages</b> property of the <a>AssessmentRun</a> data type."
        },
        "startTimeRange": {
          "$ref": "#/definitions/TimestampRange",
          "description": "For a record to match a filter, the value that is specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>startTime</b> property of the <a>AssessmentRun</a> data type."
        },
        "completionTimeRange": {
          "$ref": "#/definitions/TimestampRange",
          "description": "For a record to match a filter, the value that is specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>completedAt</b> property of the <a>AssessmentRun</a> data type."
        },
        "stateChangeTimeRange": {
          "$ref": "#/definitions/TimestampRange",
          "description": "For a record to match a filter, the value that is specified for this data type property must match the <b>stateChangedAt</b> property of the <a>AssessmentRun</a> data type."
        }
      },
      "description": "Used as the request parameter in the <a>ListAssessmentRuns</a> action."
    },
    "AssessmentRunInProgressArnList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Arn"
      },
      "minItems": 1,
      "maxItems": 10
    },
    "AssessmentRunInProgressException": {
      "type": "object",
      "required": [
        "message",
        "assessmentRunArns",
        "assessmentRunArnsTruncated",
        "canRetry"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "Details of the exception error."
        },
        "assessmentRunArns": {
          "$ref": "#/definitions/AssessmentRunInProgressArnList",
          "description": "The ARNs of the assessment runs that are currently in progress."
        },
        "assessmentRunArnsTruncated": {
          "$ref": "#/definitions/Bool",
          "description": "Boolean value that indicates whether the ARN list of the assessment runs is truncated."
        },
        "canRetry": {
          "$ref": "#/definitions/Bool",
          "description": "You can immediately retry your request."
        }
      },
      "description": "You cannot perform a specified action if an assessment run is currently in progress."
    },
    "AssessmentRunList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AssessmentRun"
      },
      "minItems": 0,
      "maxItems": 10
    },
    "AssessmentRunName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 140
    },
    "AssessmentRunNotification": {
      "type": "object",
      "required": [
        "date",
        "event",
        "error"
      ],
      "properties": {
        "date": {
          "$ref": "#/definitions/Timestamp",
          "description": "The date of the notification."
        },
        "event": {
          "$ref": "#/definitions/InspectorEvent",
          "description": "The event for which a notification is sent."
        },
        "message": {
          "$ref": "#/definitions/Message"
        },
        "error": {
          "$ref": "#/definitions/Bool",
          "description": "The Boolean value that specifies whether the notification represents an error."
        },
        "snsTopicArn": {
          "$ref": "#/definitions/Arn",
          "description": "The SNS topic to which the SNS notification is sent."
        },
        "snsPublishStatusCode": {
          "$ref": "#/definitions/AssessmentRunNotificationSnsStatusCode",
          "description": "The status code of the SNS notification."
        }
      },
      "description": "Used as one of the elements of the <a>AssessmentRun</a> data type."
    },
    "AssessmentRunNotificationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AssessmentRunNotification"
      },
      "minItems": 0,
      "maxItems": 50
    },
    "AssessmentRunNotificationSnsStatusCode": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "TOPIC_DOES_NOT_EXIST",
        "ACCESS_DENIED",
        "INTERNAL_ERROR"
      ]
    },
    "AssessmentRunState": {
      "type": "string",
      "enum": [
        "CREATED",
        "START_DATA_COLLECTION_PENDING",
        "START_DATA_COLLECTION_IN_PROGRESS",
        "COLLECTING_DATA",
        "STOP_DATA_COLLECTION_PENDING",
        "DATA_COLLECTED",
        "EVALUATING_RULES",
        "FAILED",
        "COMPLETED",
        "COMPLETED_WITH_ERRORS"
      ]
    },
    "AssessmentRunStateChange": {
      "type": "object",
      "required": [
        "stateChangedAt",
        "state"
      ],
      "properties": {
        "stateChangedAt": {
          "$ref": "#/definitions/Timestamp",
          "description": "The last time the assessment run state changed."
        },
        "state": {
          "$ref": "#/definitions/AssessmentRunState",
          "description": "The assessment run state."
        }
      },
      "description": "Used as one of the elements of the <a>AssessmentRun</a> data type."
    },
    "AssessmentRunStateChangeList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AssessmentRunStateChange"
      },
      "minItems": 0,
      "maxItems": 50
    },
    "AssessmentRunStateList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AssessmentRunState"
      },
      "minItems": 0,
      "maxItems": 50
    },
    "AssessmentTarget": {
      "type": "object",
      "required": [
        "arn",
        "name",
        "resourceGroupArn",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "arn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN that specifies the Amazon Inspector assessment target."
        },
        "name": {
          "$ref": "#/definitions/AssessmentTargetName",
          "description": "The name of the Amazon Inspector assessment target."
        },
        "resourceGroupArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN that specifies the resource group that is associated with the assessment target."
        },
        "createdAt": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time at which the assessment target is created."
        },
        "updatedAt": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time at which <a>UpdateAssessmentTarget</a> is called."
        }
      },
      "description": "Contains information about an Amazon Inspector application. This data type is used as the response element in the <a>DescribeAssessmentTargets</a> action."
    },
    "AssessmentTargetFilter": {
      "type": "object",
      "properties": {
        "assessmentTargetNamePattern": {
          "$ref": "#/definitions/NamePattern",
          "description": "For a record to match a filter, an explicit value or a string that contains a wildcard that is specified for this data type property must match the value of the <b>assessmentTargetName</b> property of the <a>AssessmentTarget</a> data type."
        }
      },
      "description": "Used as the request parameter in the <a>ListAssessmentTargets</a> action."
    },
    "AssessmentTargetList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AssessmentTarget"
      },
      "minItems": 0,
      "maxItems": 10
    },
    "AssessmentTargetName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 140
    },
    "AssessmentTemplate": {
      "type": "object",
      "required": [
        "arn",
        "name",
        "assessmentTargetArn",
        "durationInSeconds",
        "rulesPackageArns",
        "userAttributesForFindings",
        "createdAt"
      ],
      "properties": {
        "arn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment template."
        },
        "name": {
          "$ref": "#/definitions/AssessmentTemplateName",
          "description": "The name of the assessment template."
        },
        "assessmentTargetArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment target that corresponds to this assessment template."
        },
        "durationInSeconds": {
          "$ref": "#/definitions/AssessmentRunDuration",
          "description": "The duration in seconds specified for this assessment tempate. The default value is 3600 seconds (one hour). The maximum value is 86400 seconds (one day)."
        },
        "rulesPackageArns": {
          "$ref": "#/definitions/AssessmentTemplateRulesPackageArnList",
          "description": "The rules packages that are specified for this assessment template."
        },
        "userAttributesForFindings": {
          "$ref": "#/definitions/UserAttributeList",
          "description": "The user-defined attributes that are assigned to every generated finding from the assessment run that uses this assessment template."
        },
        "createdAt": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time at which the assessment template is created."
        }
      },
      "description": "Contains information about an Amazon Inspector assessment template. This data type is used as the response element in the <a>DescribeAssessmentTemplates</a> action."
    },
    "AssessmentTemplateFilter": {
      "type": "object",
      "properties": {
        "namePattern": {
          "$ref": "#/definitions/NamePattern",
          "description": "For a record to match a filter, an explicit value or a string that contains a wildcard that is specified for this data type property must match the value of the <b>assessmentTemplateName</b> property of the <a>AssessmentTemplate</a> data type."
        },
        "durationRange": {
          "$ref": "#/definitions/DurationRange",
          "description": "For a record to match a filter, the value specified for this data type property must inclusively match any value between the specified minimum and maximum values of the <b>durationInSeconds</b> property of the <a>AssessmentTemplate</a> data type."
        },
        "rulesPackageArns": {
          "$ref": "#/definitions/FilterRulesPackageArnList",
          "description": "For a record to match a filter, the values that are specified for this data type property must be contained in the list of values of the <b>rulesPackageArns</b> property of the <a>AssessmentTemplate</a> data type."
        }
      },
      "description": "Used as the request parameter in the <a>ListAssessmentTemplates</a> action."
    },
    "AssessmentTemplateList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AssessmentTemplate"
      },
      "minItems": 0,
      "maxItems": 10
    },
    "AssessmentTemplateName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 140
    },
    "AssessmentTemplateRulesPackageArnList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Arn"
      },
      "minItems": 0,
      "maxItems": 50
    },
    "AssetAttributes": {
      "type": "object",
      "required": [
        "schemaVersion"
      ],
      "properties": {
        "schemaVersion": {
          "$ref": "#/definitions/NumericVersion",
          "description": "The schema version of this data type."
        },
        "agentId": {
          "$ref": "#/definitions/AgentId",
          "description": "The ID of the agent that is installed on the EC2 instance where the finding is generated."
        },
        "autoScalingGroup": {
          "$ref": "#/definitions/AutoScalingGroup",
          "description": "The Auto Scaling group of the EC2 instance where the finding is generated."
        },
        "amiId": {
          "$ref": "#/definitions/AmiId",
          "description": "The ID of the Amazon Machine Image (AMI) that is installed on the EC2 instance where the finding is generated."
        },
        "hostname": {
          "$ref": "#/definitions/Hostname",
          "description": "The hostname of the EC2 instance where the finding is generated."
        },
        "ipv4Addresses": {
          "$ref": "#/definitions/Ipv4AddressList",
          "description": "The list of IP v4 addresses of the EC2 instance where the finding is generated."
        }
      },
      "description": "A collection of attributes of the host from which the finding is generated."
    },
    "AssetType": {
      "type": "string",
      "enum": [
        "ec2-instance"
      ]
    },
    "Attribute": {
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "$ref": "#/definitions/AttributeKey",
          "description": "The attribute key."
        },
        "value": {
          "$ref": "#/definitions/AttributeValue",
          "description": "The value assigned to the attribute key."
        }
      },
      "description": "This data type is used as a request parameter in the <a>AddAttributesToFindings</a> and <a>CreateAssessmentTemplate</a> actions."
    },
    "AttributeKey": {
      "type": "string",
      "minLength": 1,
      "maxLength": 128
    },
    "AttributeList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Attribute"
      },
      "minItems": 0,
      "maxItems": 50
    },
    "AttributeValue": {
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    },
    "AutoScalingGroup": {
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    },
    "AutoScalingGroupList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AutoScalingGroup"
      },
      "minItems": 0,
      "maxItems": 20
    },
    "BatchDescribeArnList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Arn"
      },
      "minItems": 1,
      "maxItems": 10
    },
    "Bool": {
      "type": "boolean"
    },
    "CreateAssessmentTargetRequest": {
      "type": "object",
      "required": [
        "assessmentTargetName",
        "resourceGroupArn"
      ],
      "properties": {
        "assessmentTargetName": {
          "$ref": "#/definitions/AssessmentTargetName",
          "description": "The user-defined name that identifies the assessment target that you want to create. The name must be unique within the AWS account."
        },
        "resourceGroupArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN that specifies the resource group that is used to create the assessment target."
        }
      }
    },
    "CreateAssessmentTargetResponse": {
      "type": "object",
      "required": [
        "assessmentTargetArn"
      ],
      "properties": {
        "assessmentTargetArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN that specifies the assessment target that is created."
        }
      }
    },
    "CreateAssessmentTemplateRequest": {
      "type": "object",
      "required": [
        "assessmentTargetArn",
        "assessmentTemplateName",
        "durationInSeconds",
        "rulesPackageArns"
      ],
      "properties": {
        "assessmentTargetArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN that specifies the assessment target for which you want to create the assessment template."
        },
        "assessmentTemplateName": {
          "$ref": "#/definitions/AssessmentTemplateName",
          "description": "The user-defined name that identifies the assessment template that you want to create. You can create several assessment templates for an assessment target. The names of the assessment templates that correspond to a particular assessment target must be unique."
        },
        "durationInSeconds": {
          "$ref": "#/definitions/AssessmentRunDuration",
          "description": "The duration of the assessment run in seconds. The default value is 3600 seconds (one hour)."
        },
        "rulesPackageArns": {
          "$ref": "#/definitions/AssessmentTemplateRulesPackageArnList",
          "description": "The ARNs that specify the rules packages that you want to attach to the assessment template."
        },
        "userAttributesForFindings": {
          "$ref": "#/definitions/UserAttributeList",
          "description": "The user-defined attributes that are assigned to every finding that is generated by the assessment run that uses this assessment template."
        }
      }
    },
    "CreateAssessmentTemplateResponse": {
      "type": "object",
      "required": [
        "assessmentTemplateArn"
      ],
      "properties": {
        "assessmentTemplateArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN that specifies the assessment template that is created."
        }
      }
    },
    "CreateResourceGroupRequest": {
      "type": "object",
      "required": [
        "resourceGroupTags"
      ],
      "properties": {
        "resourceGroupTags": {
          "$ref": "#/definitions/ResourceGroupTags",
          "description": "<p>A collection of keys and an array of possible values, '[{\"key\":\"key1\",\"values\":[\"Value1\",\"Value2\"]},{\"key\":\"Key2\",\"values\":[\"Value3\"]}]'.</p> <p>For example,'[{\"key\":\"Name\",\"values\":[\"TestEC2Instance\"]}]'.</p>"
        }
      }
    },
    "CreateResourceGroupResponse": {
      "type": "object",
      "required": [
        "resourceGroupArn"
      ],
      "properties": {
        "resourceGroupArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN that specifies the resource group that is created."
        }
      }
    },
    "DeleteAssessmentRunRequest": {
      "type": "object",
      "required": [
        "assessmentRunArn"
      ],
      "properties": {
        "assessmentRunArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN that specifies the assessment run that you want to delete."
        }
      }
    },
    "DeleteAssessmentTargetRequest": {
      "type": "object",
      "required": [
        "assessmentTargetArn"
      ],
      "properties": {
        "assessmentTargetArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN that specifies the assessment target that you want to delete."
        }
      }
    },
    "DeleteAssessmentTemplateRequest": {
      "type": "object",
      "required": [
        "assessmentTemplateArn"
      ],
      "properties": {
        "assessmentTemplateArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN that specifies the assessment template that you want to delete."
        }
      }
    },
    "DescribeAssessmentRunsRequest": {
      "type": "object",
      "required": [
        "assessmentRunArns"
      ],
      "properties": {
        "assessmentRunArns": {
          "$ref": "#/definitions/BatchDescribeArnList",
          "description": "The ARN that specifies the assessment run that you want to describe."
        }
      }
    },
    "DescribeAssessmentRunsResponse": {
      "type": "object",
      "required": [
        "assessmentRuns",
        "failedItems"
      ],
      "properties": {
        "assessmentRuns": {
          "$ref": "#/definitions/AssessmentRunList",
          "description": "Information about the assessment run."
        },
        "failedItems": {
          "$ref": "#/definitions/FailedItems",
          "description": "Assessment run details that cannot be described. An error code is provided for each failed item."
        }
      }
    },
    "DescribeAssessmentTargetsRequest": {
      "type": "object",
      "required": [
        "assessmentTargetArns"
      ],
      "properties": {
        "assessmentTargetArns": {
          "$ref": "#/definitions/BatchDescribeArnList",
          "description": "The ARNs that specifies the assessment targets that you want to describe."
        }
      }
    },
    "DescribeAssessmentTargetsResponse": {
      "type": "object",
      "required": [
        "assessmentTargets",
        "failedItems"
      ],
      "properties": {
        "assessmentTargets": {
          "$ref": "#/definitions/AssessmentTargetList",
          "description": "Information about the assessment targets."
        },
        "failedItems": {
          "$ref": "#/definitions/FailedItems",
          "description": "Assessment target details that cannot be described. An error code is provided for each failed item."
        }
      }
    },
    "DescribeAssessmentTemplatesRequest": {
      "type": "object",
      "required": [
        "assessmentTemplateArns"
      ],
      "properties": {
        "assessmentTemplateArns": {
          "$ref": "#/definitions/BatchDescribeArnList",
          "description": "The ARN that specifiesthe assessment templates that you want to describe."
        }
      }
    },
    "DescribeAssessmentTemplatesResponse": {
      "type": "object",
      "required": [
        "assessmentTemplates",
        "failedItems"
      ],
      "properties": {
        "assessmentTemplates": {
          "$ref": "#/definitions/AssessmentTemplateList",
          "description": "Information about the assessment templates."
        },
        "failedItems": {
          "$ref": "#/definitions/FailedItems",
          "description": "Assessment template details that cannot be described. An error code is provided for each failed item."
        }
      }
    },
    "DescribeCrossAccountAccessRoleResponse": {
      "type": "object",
      "required": [
        "roleArn",
        "valid",
        "registeredAt"
      ],
      "properties": {
        "roleArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN that specifies the IAM role that Amazon Inspector uses to access your AWS account."
        },
        "valid": {
          "$ref": "#/definitions/Bool",
          "description": "A Boolean value that specifies whether the IAM role has the necessary policies attached to enable Amazon Inspector to access your AWS account."
        },
        "registeredAt": {
          "$ref": "#/definitions/Timestamp",
          "description": "The date when the cross-account access role was registered."
        }
      }
    },
    "DescribeFindingsRequest": {
      "type": "object",
      "required": [
        "findingArns"
      ],
      "properties": {
        "findingArns": {
          "$ref": "#/definitions/BatchDescribeArnList",
          "description": "The ARN that specifies the finding that you want to describe."
        },
        "locale": {
          "$ref": "#/definitions/Locale",
          "description": "The locale into which you want to translate a finding description, recommendation, and the short description that identifies the finding."
        }
      }
    },
    "DescribeFindingsResponse": {
      "type": "object",
      "required": [
        "findings",
        "failedItems"
      ],
      "properties": {
        "findings": {
          "$ref": "#/definitions/FindingList",
          "description": "Information about the finding."
        },
        "failedItems": {
          "$ref": "#/definitions/FailedItems",
          "description": "Finding details that cannot be described. An error code is provided for each failed item."
        }
      }
    },
    "DescribeResourceGroupsRequest": {
      "type": "object",
      "required": [
        "resourceGroupArns"
      ],
      "properties": {
        "resourceGroupArns": {
          "$ref": "#/definitions/BatchDescribeArnList",
          "description": "The ARN that specifies the resource group that you want to describe."
        }
      }
    },
    "DescribeResourceGroupsResponse": {
      "type": "object",
      "required": [
        "resourceGroups",
        "failedItems"
      ],
      "properties": {
        "resourceGroups": {
          "$ref": "#/definitions/ResourceGroupList",
          "description": "Information about a resource group."
        },
        "failedItems": {
          "$ref": "#/definitions/FailedItems",
          "description": "Resource group details that cannot be described. An error code is provided for each failed item."
        }
      }
    },
    "DescribeRulesPackagesRequest": {
      "type": "object",
      "required": [
        "rulesPackageArns"
      ],
      "properties": {
        "rulesPackageArns": {
          "$ref": "#/definitions/BatchDescribeArnList",
          "description": "The ARN that specifies the rules package that you want to describe."
        },
        "locale": {
          "$ref": "#/definitions/Locale",
          "description": "The locale that you want to translate a rules package description into."
        }
      }
    },
    "DescribeRulesPackagesResponse": {
      "type": "object",
      "required": [
        "rulesPackages",
        "failedItems"
      ],
      "properties": {
        "rulesPackages": {
          "$ref": "#/definitions/RulesPackageList",
          "description": "Information about the rules package."
        },
        "failedItems": {
          "$ref": "#/definitions/FailedItems",
          "description": "Rules package details that cannot be described. An error code is provided for each failed item."
        }
      }
    },
    "DurationRange": {
      "type": "object",
      "properties": {
        "minSeconds": {
          "$ref": "#/definitions/AssessmentRunDuration",
          "description": "The minimum value of the duration range. Must be greater than zero."
        },
        "maxSeconds": {
          "$ref": "#/definitions/AssessmentRunDuration",
          "description": "The maximum value of the duration range. Must be less than or equal to 604800 seconds (1 week)."
        }
      },
      "description": "This data type is used in the <a>AssessmentTemplateFilter</a> data type."
    },
    "ErrorMessage": {
      "type": "string",
      "minLength": 0,
      "maxLength": 1000
    },
    "EventSubscription": {
      "type": "object",
      "required": [
        "event",
        "subscribedAt"
      ],
      "properties": {
        "event": {
          "$ref": "#/definitions/InspectorEvent",
          "description": "The event for which Amazon Simple Notification Service (SNS) notifications are sent."
        },
        "subscribedAt": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time at which <a>SubscribeToEvent</a> is called."
        }
      },
      "description": "This data type is used in the <a>Subscription</a> data type."
    },
    "EventSubscriptionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/EventSubscription"
      },
      "minItems": 1,
      "maxItems": 50
    },
    "FailedItemDetails": {
      "type": "object",
      "required": [
        "failureCode",
        "retryable"
      ],
      "properties": {
        "failureCode": {
          "$ref": "#/definitions/FailedItemErrorCode",
          "description": "The status code of a failed item."
        },
        "retryable": {
          "$ref": "#/definitions/Bool",
          "description": "Indicates whether you can immediately retry a request for this item for a specified resource."
        }
      },
      "description": "Includes details about the failed items."
    },
    "FailedItemErrorCode": {
      "type": "string",
      "enum": [
        "INVALID_ARN",
        "DUPLICATE_ARN",
        "ITEM_DOES_NOT_EXIST",
        "ACCESS_DENIED",
        "LIMIT_EXCEEDED",
        "INTERNAL_ERROR"
      ]
    },
    "FailedItems": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/definitions/Arn"
          },
          "value": {
            "$ref": "#/definitions/FailedItemDetails"
          }
        }
      }
    },
    "FilterRulesPackageArnList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Arn"
      },
      "minItems": 0,
      "maxItems": 50
    },
    "Finding": {
      "type": "object",
      "required": [
        "arn",
        "attributes",
        "userAttributes",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "arn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN that specifies the finding."
        },
        "schemaVersion": {
          "$ref": "#/definitions/NumericVersion",
          "description": "The schema version of this data type."
        },
        "service": {
          "$ref": "#/definitions/ServiceName",
          "description": "The data element is set to \"Inspector\"."
        },
        "serviceAttributes": {
          "$ref": "#/definitions/InspectorServiceAttributes"
        },
        "assetType": {
          "$ref": "#/definitions/AssetType",
          "description": "The type of the host from which the finding is generated."
        },
        "assetAttributes": {
          "$ref": "#/definitions/AssetAttributes",
          "description": "A collection of attributes of the host from which the finding is generated."
        },
        "id": {
          "$ref": "#/definitions/FindingId",
          "description": "The ID of the finding."
        },
        "title": {
          "$ref": "#/definitions/Text",
          "description": "The name of the finding."
        },
        "description": {
          "$ref": "#/definitions/Text",
          "description": "The description of the finding."
        },
        "recommendation": {
          "$ref": "#/definitions/Text",
          "description": "The recommendation for the finding."
        },
        "severity": {
          "$ref": "#/definitions/Severity",
          "description": "The finding severity. Values can be set to High, Medium, Low, and Informational."
        },
        "numericSeverity": {
          "$ref": "#/definitions/NumericSeverity",
          "description": "The numeric value of the finding severity."
        },
        "confidence": {
          "$ref": "#/definitions/IocConfidence",
          "description": "This data element is currently not used."
        },
        "indicatorOfCompromise": {
          "$ref": "#/definitions/Bool",
          "description": "This data element is currently not used."
        },
        "attributes": {
          "$ref": "#/definitions/AttributeList",
          "description": "The system-defined attributes for the finding."
        },
        "userAttributes": {
          "$ref": "#/definitions/UserAttributeList",
          "description": "The user-defined attributes that are assigned to the finding."
        },
        "createdAt": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time when the finding was generated."
        },
        "updatedAt": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time when <a>AddAttributesToFindings</a> is called."
        }
      },
      "description": "Contains information about an Amazon Inspector finding. This data type is used as the response element in the <a>DescribeFindings</a> action."
    },
    "FindingFilter": {
      "type": "object",
      "properties": {
        "agentIds": {
          "$ref": "#/definitions/AgentIdList",
          "description": "For a record to match a filter, one of the values that is specified for this data type property must be the exact match of the value of the <b>agentId</b> property of the <a>Finding</a> data type."
        },
        "autoScalingGroups": {
          "$ref": "#/definitions/AutoScalingGroupList",
          "description": "For a record to match a filter, one of the values that is specified for this data type property must be the exact match of the value of the <b>autoScalingGroup</b> property of the <a>Finding</a> data type."
        },
        "ruleNames": {
          "$ref": "#/definitions/RuleNameList",
          "description": "For a record to match a filter, one of the values that is specified for this data type property must be the exact match of the value of the <b>ruleName</b> property of the <a>Finding</a> data type."
        },
        "severities": {
          "$ref": "#/definitions/SeverityList",
          "description": "For a record to match a filter, one of the values that is specified for this data type property must be the exact match of the value of the <b>severity</b> property of the <a>Finding</a> data type."
        },
        "rulesPackageArns": {
          "$ref": "#/definitions/FilterRulesPackageArnList",
          "description": "For a record to match a filter, one of the values that is specified for this data type property must be the exact match of the value of the <b>rulesPackageArn</b> property of the <a>Finding</a> data type."
        },
        "attributes": {
          "$ref": "#/definitions/AttributeList",
          "description": "For a record to match a filter, the list of values that are specified for this data type property must be contained in the list of values of the <b>attributes</b> property of the <a>Finding</a> data type."
        },
        "userAttributes": {
          "$ref": "#/definitions/AttributeList",
          "description": "For a record to match a filter, the value that is specified for this data type property must be contained in the list of values of the <b>userAttributes</b> property of the <a>Finding</a> data type."
        },
        "creationTimeRange": {
          "$ref": "#/definitions/TimestampRange",
          "description": "The time range during which the finding is generated."
        }
      },
      "description": "This data type is used as a request parameter in the <a>ListFindings</a> action."
    },
    "FindingId": {
      "type": "string",
      "minLength": 0,
      "maxLength": 128
    },
    "FindingList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Finding"
      },
      "minItems": 0,
      "maxItems": 10
    },
    "GetTelemetryMetadataRequest": {
      "type": "object",
      "required": [
        "assessmentRunArn"
      ],
      "properties": {
        "assessmentRunArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN that specifies the assessment run that has the telemetry data that you want to obtain."
        }
      }
    },
    "GetTelemetryMetadataResponse": {
      "type": "object",
      "required": [
        "telemetryMetadata"
      ],
      "properties": {
        "telemetryMetadata": {
          "$ref": "#/definitions/TelemetryMetadataList",
          "description": "Telemetry details."
        }
      }
    },
    "Hostname": {
      "type": "string",
      "minLength": 0,
      "maxLength": 256
    },
    "InspectorEvent": {
      "type": "string",
      "enum": [
        "ASSESSMENT_RUN_STARTED",
        "ASSESSMENT_RUN_COMPLETED",
        "ASSESSMENT_RUN_STATE_CHANGED",
        "FINDING_REPORTED",
        "OTHER"
      ]
    },
    "InspectorServiceAttributes": {
      "type": "object",
      "required": [
        "schemaVersion"
      ],
      "properties": {
        "schemaVersion": {
          "$ref": "#/definitions/NumericVersion",
          "description": "The schema version of this data type."
        },
        "assessmentRunArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment run during which the finding is generated."
        },
        "rulesPackageArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the rules package that is used to generate the finding."
        }
      },
      "description": "This data type is used in the <a>Finding</a> data type."
    },
    "InternalException": {
      "type": "object",
      "required": [
        "message",
        "canRetry"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "Details of the exception error."
        },
        "canRetry": {
          "$ref": "#/definitions/Bool",
          "description": "You can immediately retry your request."
        }
      },
      "description": "Internal server error."
    },
    "InvalidCrossAccountRoleErrorCode": {
      "type": "string",
      "enum": [
        "ROLE_DOES_NOT_EXIST_OR_INVALID_TRUST_RELATIONSHIP",
        "ROLE_DOES_NOT_HAVE_CORRECT_POLICY"
      ]
    },
    "InvalidCrossAccountRoleException": {
      "type": "object",
      "required": [
        "message",
        "errorCode",
        "canRetry"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "Details of the exception error."
        },
        "errorCode": {
          "$ref": "#/definitions/InvalidCrossAccountRoleErrorCode",
          "description": "Code that indicates the type of error that is generated."
        },
        "canRetry": {
          "$ref": "#/definitions/Bool",
          "description": "You can immediately retry your request."
        }
      },
      "description": "Amazon Inspector cannot assume the cross-account role that it needs to list your EC2 instances during the assessment run."
    },
    "InvalidInputErrorCode": {
      "type": "string",
      "enum": [
        "INVALID_ASSESSMENT_TARGET_ARN",
        "INVALID_ASSESSMENT_TEMPLATE_ARN",
        "INVALID_ASSESSMENT_RUN_ARN",
        "INVALID_FINDING_ARN",
        "INVALID_RESOURCE_GROUP_ARN",
        "INVALID_RULES_PACKAGE_ARN",
        "INVALID_RESOURCE_ARN",
        "INVALID_SNS_TOPIC_ARN",
        "INVALID_IAM_ROLE_ARN",
        "INVALID_ASSESSMENT_TARGET_NAME",
        "INVALID_ASSESSMENT_TARGET_NAME_PATTERN",
        "INVALID_ASSESSMENT_TEMPLATE_NAME",
        "INVALID_ASSESSMENT_TEMPLATE_NAME_PATTERN",
        "INVALID_ASSESSMENT_TEMPLATE_DURATION",
        "INVALID_ASSESSMENT_TEMPLATE_DURATION_RANGE",
        "INVALID_ASSESSMENT_RUN_DURATION_RANGE",
        "INVALID_ASSESSMENT_RUN_START_TIME_RANGE",
        "INVALID_ASSESSMENT_RUN_COMPLETION_TIME_RANGE",
        "INVALID_ASSESSMENT_RUN_STATE_CHANGE_TIME_RANGE",
        "INVALID_ASSESSMENT_RUN_STATE",
        "INVALID_TAG",
        "INVALID_TAG_KEY",
        "INVALID_TAG_VALUE",
        "INVALID_RESOURCE_GROUP_TAG_KEY",
        "INVALID_RESOURCE_GROUP_TAG_VALUE",
        "INVALID_ATTRIBUTE",
        "INVALID_USER_ATTRIBUTE",
        "INVALID_USER_ATTRIBUTE_KEY",
        "INVALID_USER_ATTRIBUTE_VALUE",
        "INVALID_PAGINATION_TOKEN",
        "INVALID_MAX_RESULTS",
        "INVALID_AGENT_ID",
        "INVALID_AUTO_SCALING_GROUP",
        "INVALID_RULE_NAME",
        "INVALID_SEVERITY",
        "INVALID_LOCALE",
        "INVALID_EVENT",
        "ASSESSMENT_TARGET_NAME_ALREADY_TAKEN",
        "ASSESSMENT_TEMPLATE_NAME_ALREADY_TAKEN",
        "INVALID_NUMBER_OF_ASSESSMENT_TARGET_ARNS",
        "INVALID_NUMBER_OF_ASSESSMENT_TEMPLATE_ARNS",
        "INVALID_NUMBER_OF_ASSESSMENT_RUN_ARNS",
        "INVALID_NUMBER_OF_FINDING_ARNS",
        "INVALID_NUMBER_OF_RESOURCE_GROUP_ARNS",
        "INVALID_NUMBER_OF_RULES_PACKAGE_ARNS",
        "INVALID_NUMBER_OF_ASSESSMENT_RUN_STATES",
        "INVALID_NUMBER_OF_TAGS",
        "INVALID_NUMBER_OF_RESOURCE_GROUP_TAGS",
        "INVALID_NUMBER_OF_ATTRIBUTES",
        "INVALID_NUMBER_OF_USER_ATTRIBUTES",
        "INVALID_NUMBER_OF_AGENT_IDS",
        "INVALID_NUMBER_OF_AUTO_SCALING_GROUPS",
        "INVALID_NUMBER_OF_RULE_NAMES",
        "INVALID_NUMBER_OF_SEVERITIES"
      ]
    },
    "InvalidInputException": {
      "type": "object",
      "required": [
        "message",
        "errorCode",
        "canRetry"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "Details of the exception error."
        },
        "errorCode": {
          "$ref": "#/definitions/InvalidInputErrorCode",
          "description": "Code that indicates the type of error that is generated."
        },
        "canRetry": {
          "$ref": "#/definitions/Bool",
          "description": "You can immediately retry your request."
        }
      },
      "description": "The request was rejected because an invalid or out-of-range value was supplied for an input parameter."
    },
    "IocConfidence": {
      "type": "integer",
      "minimum": 0,
      "maximum": 10
    },
    "Ipv4Address": {
      "type": "string",
      "minLength": 7,
      "maxLength": 15
    },
    "Ipv4AddressList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Ipv4Address"
      },
      "minItems": 0,
      "maxItems": 50
    },
    "LimitExceededErrorCode": {
      "type": "string",
      "enum": [
        "ASSESSMENT_TARGET_LIMIT_EXCEEDED",
        "ASSESSMENT_TEMPLATE_LIMIT_EXCEEDED",
        "ASSESSMENT_RUN_LIMIT_EXCEEDED",
        "RESOURCE_GROUP_LIMIT_EXCEEDED",
        "EVENT_SUBSCRIPTION_LIMIT_EXCEEDED"
      ]
    },
    "LimitExceededException": {
      "type": "object",
      "required": [
        "message",
        "errorCode",
        "canRetry"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "Details of the exception error."
        },
        "errorCode": {
          "$ref": "#/definitions/LimitExceededErrorCode",
          "description": "Code that indicates the type of error that is generated."
        },
        "canRetry": {
          "$ref": "#/definitions/Bool",
          "description": "You can immediately retry your request."
        }
      },
      "description": "The request was rejected because it attempted to create resources beyond the current AWS account limits. The error code describes the limit exceeded."
    },
    "ListAssessmentRunAgentsRequest": {
      "type": "object",
      "required": [
        "assessmentRunArn"
      ],
      "properties": {
        "assessmentRunArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN that specifies the assessment run whose agents you want to list."
        },
        "filter": {
          "$ref": "#/definitions/AgentFilter",
          "description": "<p>You can use this parameter to specify a subset of data to be included in the action's response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>"
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListAssessmentRunAgents</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data."
        },
        "maxResults": {
          "$ref": "#/definitions/ListMaxResults",
          "description": "You can use this parameter to indicate the maximum number of items that you want in the response. The default value is 10. The maximum value is 500."
        }
      }
    },
    "ListAssessmentRunAgentsResponse": {
      "type": "object",
      "required": [
        "assessmentRunAgents"
      ],
      "properties": {
        "assessmentRunAgents": {
          "$ref": "#/definitions/AssessmentRunAgentList",
          "description": "A list of ARNs that specifies the agents returned by the action."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": " When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null."
        }
      }
    },
    "ListAssessmentRunsRequest": {
      "type": "object",
      "properties": {
        "assessmentTemplateArns": {
          "$ref": "#/definitions/ListParentArnList",
          "description": "The ARNs that specify the assessment templates whose assessment runs you want to list."
        },
        "filter": {
          "$ref": "#/definitions/AssessmentRunFilter",
          "description": "<p>You can use this parameter to specify a subset of data to be included in the action's response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>"
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListAssessmentRuns</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data."
        },
        "maxResults": {
          "$ref": "#/definitions/ListMaxResults",
          "description": "You can use this parameter to indicate the maximum number of items that you want in the response. The default value is 10. The maximum value is 500."
        }
      }
    },
    "ListAssessmentRunsResponse": {
      "type": "object",
      "required": [
        "assessmentRunArns"
      ],
      "properties": {
        "assessmentRunArns": {
          "$ref": "#/definitions/ListReturnedArnList",
          "description": "A list of ARNs that specifies the assessment runs that are returned by the action."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": " When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null."
        }
      }
    },
    "ListAssessmentTargetsRequest": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/AssessmentTargetFilter",
          "description": "<p>You can use this parameter to specify a subset of data to be included in the action's response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>"
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListAssessmentTargets</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data."
        },
        "maxResults": {
          "$ref": "#/definitions/ListMaxResults",
          "description": "You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500."
        }
      }
    },
    "ListAssessmentTargetsResponse": {
      "type": "object",
      "required": [
        "assessmentTargetArns"
      ],
      "properties": {
        "assessmentTargetArns": {
          "$ref": "#/definitions/ListReturnedArnList",
          "description": "A list of ARNs that specifies the assessment targets that are returned by the action."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": " When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null."
        }
      }
    },
    "ListAssessmentTemplatesRequest": {
      "type": "object",
      "properties": {
        "assessmentTargetArns": {
          "$ref": "#/definitions/ListParentArnList",
          "description": "A list of ARNs that specifies the assessment targets whose assessment templates you want to list."
        },
        "filter": {
          "$ref": "#/definitions/AssessmentTemplateFilter",
          "description": "<p>You can use this parameter to specify a subset of data to be included in the action's response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>"
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListAssessmentTemplates</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data."
        },
        "maxResults": {
          "$ref": "#/definitions/ListMaxResults",
          "description": "You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500."
        }
      }
    },
    "ListAssessmentTemplatesResponse": {
      "type": "object",
      "required": [
        "assessmentTemplateArns"
      ],
      "properties": {
        "assessmentTemplateArns": {
          "$ref": "#/definitions/ListReturnedArnList",
          "description": "A list of ARNs that specifies the assessment templates returned by the action."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": " When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null."
        }
      }
    },
    "ListEventSubscriptionsMaxResults": {
      "type": "integer"
    },
    "ListEventSubscriptionsRequest": {
      "type": "object",
      "properties": {
        "resourceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment template for which you want to list the existing event subscriptions."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListEventSubscriptions</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data."
        },
        "maxResults": {
          "$ref": "#/definitions/ListEventSubscriptionsMaxResults",
          "description": "You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500."
        }
      }
    },
    "ListEventSubscriptionsResponse": {
      "type": "object",
      "required": [
        "subscriptions"
      ],
      "properties": {
        "subscriptions": {
          "$ref": "#/definitions/SubscriptionList",
          "description": "Details of the returned event subscriptions."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": " When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null."
        }
      }
    },
    "ListFindingsRequest": {
      "type": "object",
      "properties": {
        "assessmentRunArns": {
          "$ref": "#/definitions/ListParentArnList",
          "description": "The ARNs of the assessment runs that generate the findings that you want to list."
        },
        "filter": {
          "$ref": "#/definitions/FindingFilter",
          "description": "<p>You can use this parameter to specify a subset of data to be included in the action's response.</p> <p>For a record to match a filter, all specified filter attributes must match. When multiple values are specified for a filter attribute, any of the values can match.</p>"
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListFindings</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data."
        },
        "maxResults": {
          "$ref": "#/definitions/ListMaxResults",
          "description": "You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500."
        }
      }
    },
    "ListFindingsResponse": {
      "type": "object",
      "required": [
        "findingArns"
      ],
      "properties": {
        "findingArns": {
          "$ref": "#/definitions/ListReturnedArnList",
          "description": "A list of ARNs that specifies the findings returned by the action."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": " When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null."
        }
      }
    },
    "ListMaxResults": {
      "type": "integer"
    },
    "ListParentArnList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Arn"
      },
      "minItems": 0,
      "maxItems": 50
    },
    "ListReturnedArnList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Arn"
      },
      "minItems": 0,
      "maxItems": 100
    },
    "ListRulesPackagesRequest": {
      "type": "object",
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>ListRulesPackages</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data."
        },
        "maxResults": {
          "$ref": "#/definitions/ListMaxResults",
          "description": "You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500."
        }
      }
    },
    "ListRulesPackagesResponse": {
      "type": "object",
      "required": [
        "rulesPackageArns"
      ],
      "properties": {
        "rulesPackageArns": {
          "$ref": "#/definitions/ListReturnedArnList",
          "description": "The list of ARNs that specifies the rules packages returned by the action."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": " When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null."
        }
      }
    },
    "ListTagsForResourceRequest": {
      "type": "object",
      "required": [
        "resourceArn"
      ],
      "properties": {
        "resourceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN that specifies the assessment template whose tags you want to list."
        }
      }
    },
    "ListTagsForResourceResponse": {
      "type": "object",
      "required": [
        "tags"
      ],
      "properties": {
        "tags": {
          "$ref": "#/definitions/TagList",
          "description": "A collection of key and value pairs."
        }
      }
    },
    "Locale": {
      "type": "string",
      "enum": [
        "EN_US"
      ]
    },
    "Long": {
      "type": "integer"
    },
    "Message": {
      "type": "string",
      "minLength": 0,
      "maxLength": 1000
    },
    "MessageType": {
      "type": "string",
      "minLength": 1,
      "maxLength": 300
    },
    "NamePattern": {
      "type": "string",
      "minLength": 1,
      "maxLength": 140
    },
    "NoSuchEntityErrorCode": {
      "type": "string",
      "enum": [
        "ASSESSMENT_TARGET_DOES_NOT_EXIST",
        "ASSESSMENT_TEMPLATE_DOES_NOT_EXIST",
        "ASSESSMENT_RUN_DOES_NOT_EXIST",
        "FINDING_DOES_NOT_EXIST",
        "RESOURCE_GROUP_DOES_NOT_EXIST",
        "RULES_PACKAGE_DOES_NOT_EXIST",
        "SNS_TOPIC_DOES_NOT_EXIST",
        "IAM_ROLE_DOES_NOT_EXIST"
      ]
    },
    "NoSuchEntityException": {
      "type": "object",
      "required": [
        "message",
        "errorCode",
        "canRetry"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "Details of the exception error."
        },
        "errorCode": {
          "$ref": "#/definitions/NoSuchEntityErrorCode",
          "description": "Code that indicates the type of error that is generated."
        },
        "canRetry": {
          "$ref": "#/definitions/Bool",
          "description": "You can immediately retry your request."
        }
      },
      "description": "The request was rejected because it referenced an entity that does not exist. The error code describes the entity."
    },
    "NumericSeverity": {
      "type": "number",
      "format": "double",
      "minimum": 0,
      "maximum": 10
    },
    "NumericVersion": {
      "type": "integer",
      "minimum": 0
    },
    "PaginationToken": {
      "type": "string",
      "minLength": 1,
      "maxLength": 300
    },
    "PreviewAgentsMaxResults": {
      "type": "integer"
    },
    "PreviewAgentsRequest": {
      "type": "object",
      "required": [
        "previewAgentsArn"
      ],
      "properties": {
        "previewAgentsArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment target whose agents you want to preview."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "You can use this parameter when paginating results. Set the value of this parameter to null on your first call to the <b>PreviewAgents</b> action. Subsequent calls to the action fill <b>nextToken</b> in the request with the value of <b>NextToken</b> from the previous response to continue listing data."
        },
        "maxResults": {
          "$ref": "#/definitions/PreviewAgentsMaxResults",
          "description": "You can use this parameter to indicate the maximum number of items you want in the response. The default value is 10. The maximum value is 500."
        }
      }
    },
    "PreviewAgentsResponse": {
      "type": "object",
      "required": [
        "agentPreviews"
      ],
      "properties": {
        "agentPreviews": {
          "$ref": "#/definitions/AgentPreviewList",
          "description": "The resulting list of agents."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": " When a response is generated, if there is more data to be listed, this parameter is present in the response and contains the value to use for the <b>nextToken</b> parameter in a subsequent pagination request. If there is no more data to be listed, this parameter is set to null."
        }
      }
    },
    "ProviderName": {
      "type": "string",
      "minLength": 0,
      "maxLength": 1000
    },
    "RegisterCrossAccountAccessRoleRequest": {
      "type": "object",
      "required": [
        "roleArn"
      ],
      "properties": {
        "roleArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the IAM role that Amazon Inspector uses to list your EC2 instances during the assessment run or when you call the <a>PreviewAgents</a> action. "
        }
      }
    },
    "RemoveAttributesFromFindingsRequest": {
      "type": "object",
      "required": [
        "findingArns",
        "attributeKeys"
      ],
      "properties": {
        "findingArns": {
          "$ref": "#/definitions/AddRemoveAttributesFindingArnList",
          "description": "The ARNs that specify the findings that you want to remove attributes from."
        },
        "attributeKeys": {
          "$ref": "#/definitions/UserAttributeKeyList",
          "description": "The array of attribute keys that you want to remove from specified findings."
        }
      }
    },
    "RemoveAttributesFromFindingsResponse": {
      "type": "object",
      "required": [
        "failedItems"
      ],
      "properties": {
        "failedItems": {
          "$ref": "#/definitions/FailedItems",
          "description": "Attributes details that cannot be described. An error code is provided for each failed item."
        }
      }
    },
    "ResourceGroup": {
      "type": "object",
      "required": [
        "arn",
        "tags",
        "createdAt"
      ],
      "properties": {
        "arn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the resource group."
        },
        "tags": {
          "$ref": "#/definitions/ResourceGroupTags",
          "description": "The tags (key and value pairs) of the resource group. This data type property is used in the <a>CreateResourceGroup</a> action."
        },
        "createdAt": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time at which resource group is created."
        }
      },
      "description": "Contains information about a resource group. The resource group defines a set of tags that, when queried, identify the AWS resources that make up the assessment target. This data type is used as the response element in the <a>DescribeResourceGroups</a> action."
    },
    "ResourceGroupList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ResourceGroup"
      },
      "minItems": 0,
      "maxItems": 10
    },
    "ResourceGroupTag": {
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "$ref": "#/definitions/TagKey",
          "description": "A tag key."
        },
        "value": {
          "$ref": "#/definitions/TagValue",
          "description": "The value assigned to a tag key."
        }
      },
      "description": "This data type is used as one of the elements of the <a>ResourceGroup</a> data type."
    },
    "ResourceGroupTags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ResourceGroupTag"
      },
      "minItems": 1,
      "maxItems": 10
    },
    "RuleName": {
      "type": "string",
      "maxLength": 1000
    },
    "RuleNameList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RuleName"
      },
      "minItems": 0,
      "maxItems": 50
    },
    "RulesPackage": {
      "type": "object",
      "required": [
        "arn",
        "name",
        "version",
        "provider"
      ],
      "properties": {
        "arn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the rules package."
        },
        "name": {
          "$ref": "#/definitions/RulesPackageName",
          "description": "The name of the rules package."
        },
        "version": {
          "$ref": "#/definitions/Version",
          "description": "The version ID of the rules package."
        },
        "provider": {
          "$ref": "#/definitions/ProviderName",
          "description": "The provider of the rules package."
        },
        "description": {
          "$ref": "#/definitions/Text",
          "description": "The description of the rules package."
        }
      },
      "description": "Contains information about an Amazon Inspector rules package. This data type is used as the response element in the <a>DescribeRulesPackages</a> action."
    },
    "RulesPackageList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RulesPackage"
      },
      "minItems": 0,
      "maxItems": 10
    },
    "RulesPackageName": {
      "type": "string",
      "minLength": 0,
      "maxLength": 1000
    },
    "ServiceName": {
      "type": "string",
      "minLength": 0,
      "maxLength": 128
    },
    "SetTagsForResourceRequest": {
      "type": "object",
      "required": [
        "resourceArn"
      ],
      "properties": {
        "resourceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment template that you want to set tags to."
        },
        "tags": {
          "$ref": "#/definitions/TagList",
          "description": "A collection of key and value pairs that you want to set to the assessment template."
        }
      }
    },
    "Severity": {
      "type": "string",
      "enum": [
        "Low",
        "Medium",
        "High",
        "Informational",
        "Undefined"
      ]
    },
    "SeverityList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Severity"
      },
      "minItems": 0,
      "maxItems": 50
    },
    "StartAssessmentRunRequest": {
      "type": "object",
      "required": [
        "assessmentTemplateArn"
      ],
      "properties": {
        "assessmentTemplateArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment template of the assessment run that you want to start."
        },
        "assessmentRunName": {
          "$ref": "#/definitions/AssessmentRunName",
          "description": "You can specify the name for the assessment run, or you can use the auto-generated name that is based on the assessment template name. The name must be unique for the assessment template."
        }
      }
    },
    "StartAssessmentRunResponse": {
      "type": "object",
      "required": [
        "assessmentRunArn"
      ],
      "properties": {
        "assessmentRunArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment run that has been started."
        }
      }
    },
    "StopAssessmentRunRequest": {
      "type": "object",
      "required": [
        "assessmentRunArn"
      ],
      "properties": {
        "assessmentRunArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment run that you want to stop."
        }
      }
    },
    "SubscribeToEventRequest": {
      "type": "object",
      "required": [
        "resourceArn",
        "event",
        "topicArn"
      ],
      "properties": {
        "resourceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment template that is used during the event for which you want to receive SNS notifications."
        },
        "event": {
          "$ref": "#/definitions/InspectorEvent",
          "description": "The event for which you want to receive SNS notifications."
        },
        "topicArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the SNS topic to which the SNS notifications are sent."
        }
      }
    },
    "Subscription": {
      "type": "object",
      "required": [
        "resourceArn",
        "topicArn",
        "eventSubscriptions"
      ],
      "properties": {
        "resourceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment template that is used during the event for which the SNS notification is sent."
        },
        "topicArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the Amazon Simple Notification Service (SNS) topic to which the SNS notifications are sent."
        },
        "eventSubscriptions": {
          "$ref": "#/definitions/EventSubscriptionList",
          "description": "The list of existing event subscriptions."
        }
      },
      "description": "This data type is used as a response element in the <a>ListEventSubscriptions</a> action."
    },
    "SubscriptionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Subscription"
      },
      "minItems": 0,
      "maxItems": 50
    },
    "Tag": {
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "$ref": "#/definitions/TagKey",
          "description": "A tag key."
        },
        "value": {
          "$ref": "#/definitions/TagValue",
          "description": "A value assigned to a tag key."
        }
      },
      "description": "A key and value pair. This data type is used as a request parameter in the <a>SetTagsForResource</a> action and a response element in the <a>ListTagsForResource</a> action."
    },
    "TagKey": {
      "type": "string",
      "minLength": 1,
      "maxLength": 128
    },
    "TagList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "minItems": 0,
      "maxItems": 10
    },
    "TagValue": {
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    },
    "TelemetryMetadata": {
      "type": "object",
      "required": [
        "messageType",
        "count"
      ],
      "properties": {
        "messageType": {
          "$ref": "#/definitions/MessageType",
          "description": "A specific type of behavioral data that is collected by the agent."
        },
        "count": {
          "$ref": "#/definitions/Long",
          "description": "The count of messages that the agent sends to the Amazon Inspector service."
        },
        "dataSize": {
          "$ref": "#/definitions/Long",
          "description": "The data size of messages that the agent sends to the Amazon Inspector service."
        }
      },
      "description": "The metadata about the Amazon Inspector application data metrics collected by the agent. This data type is used as the response element in the <a>GetTelemetryMetadata</a> action."
    },
    "TelemetryMetadataList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TelemetryMetadata"
      },
      "minItems": 0,
      "maxItems": 5000
    },
    "Text": {
      "type": "string",
      "minLength": 0,
      "maxLength": 20000
    },
    "Timestamp": {
      "type": "string",
      "format": "date-time"
    },
    "TimestampRange": {
      "type": "object",
      "properties": {
        "beginDate": {
          "$ref": "#/definitions/Timestamp",
          "description": "The minimum value of the timestamp range."
        },
        "endDate": {
          "$ref": "#/definitions/Timestamp",
          "description": "The maximum value of the timestamp range."
        }
      },
      "description": "This data type is used in the <a>AssessmentRunFilter</a> data type."
    },
    "UnsubscribeFromEventRequest": {
      "type": "object",
      "required": [
        "resourceArn",
        "event",
        "topicArn"
      ],
      "properties": {
        "resourceArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment template that is used during the event for which you want to stop receiving SNS notifications."
        },
        "event": {
          "$ref": "#/definitions/InspectorEvent",
          "description": "The event for which you want to stop receiving SNS notifications."
        },
        "topicArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the SNS topic to which SNS notifications are sent."
        }
      }
    },
    "UpdateAssessmentTargetRequest": {
      "type": "object",
      "required": [
        "assessmentTargetArn",
        "assessmentTargetName",
        "resourceGroupArn"
      ],
      "properties": {
        "assessmentTargetArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the assessment target that you want to update."
        },
        "assessmentTargetName": {
          "$ref": "#/definitions/AssessmentTargetName",
          "description": "The name of the assessment target that you want to update."
        },
        "resourceGroupArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the resource group that is used to specify the new resource group to associate with the assessment target."
        }
      }
    },
    "UserAttributeKeyList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AttributeKey"
      },
      "minItems": 0,
      "maxItems": 10
    },
    "UserAttributeList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Attribute"
      },
      "minItems": 0,
      "maxItems": 10
    },
    "Version": {
      "type": "string",
      "minLength": 0,
      "maxLength": 1000
    }
  }
}