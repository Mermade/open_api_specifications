swagger: '2.0'
info:
  version: '2016-05-10'
  x-release: v4
  title: Amazon CloudDirectory
  description: '<fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile and IoT applications. This guide describes the Cloud Directory operations that you can call programatically and includes detailed information on data types and errors. For information about AWS Directory Services features, see <a href="https://aws.amazon.com/directoryservice/">AWS Directory Service</a> and the <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html">AWS Directory Service Administration Guide</a>.</p>'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: aws.amazon.com
  x-serviceName: clouddirectory
  x-origin:
    format: swagger
    version: '2.0'
    url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/clouddirectory-2016-05-10.normal.json'
    converter:
      url: 'https://github.com/mermade/aws2openapi'
      version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
x-logo:
  url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
  backgroundColor: '#FFFFFF'
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/clouddirectory/'
host: clouddirectory.amazonaws.com
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /amazonclouddirectory/2017-01-11/object/facets:
    put:
      operationId: AddFacetToObject
      description: Adds a new <a>Facet</a> to an object.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddFacetToObjectResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddFacetToObjectRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/apply:
    put:
      operationId: ApplySchema
      description: Copies input published schema into <a>Directory</a> with same name and version as that of published schema .
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ApplySchemaResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidAttachmentException
          schema:
            $ref: '#/definitions/InvalidAttachmentException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ApplySchemaRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/attach:
    put:
      operationId: AttachObject
      description: '<p>Attaches an existing object to another object. An object can be accessed in two ways:</p> <ol> <li> <p>Using the path</p> </li> <li> <p>Using <code>ObjectIdentifier</code> </p> </li> </ol>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachObjectResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: LinkNameAlreadyInUseException
          schema:
            $ref: '#/definitions/LinkNameAlreadyInUseException'
        '489':
          description: InvalidAttachmentException
          schema:
            $ref: '#/definitions/InvalidAttachmentException'
        '490':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttachObjectRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/policy/attach:
    put:
      operationId: AttachPolicy
      description: Attaches a policy object to a regular object. An object can have a limited number of attached policies.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachPolicyResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '489':
          description: NotPolicyException
          schema:
            $ref: '#/definitions/NotPolicyException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttachPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/index/attach:
    put:
      operationId: AttachToIndex
      description: Attaches the specified object to the specified index.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachToIndexResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: LinkNameAlreadyInUseException
          schema:
            $ref: '#/definitions/LinkNameAlreadyInUseException'
        '489':
          description: IndexedAttributeMissingException
          schema:
            $ref: '#/definitions/IndexedAttributeMissingException'
        '490':
          description: NotIndexException
          schema:
            $ref: '#/definitions/NotIndexException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttachToIndexRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/batchread:
    post:
      operationId: BatchRead
      description: 'Performs all the read operations in a batch. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchReadResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/BatchReadRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/batchwrite:
    put:
      operationId: BatchWrite
      description: Performs all the write operations in a batch. Either all the operations succeed or none. Batch writes supports only object-related operations.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchWriteResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: BatchWriteException
          schema:
            $ref: '#/definitions/BatchWriteException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/BatchWriteRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory/create:
    put:
      operationId: CreateDirectory
      description: Creates a <a>Directory</a> by copying the published schema into the directory. A directory cannot be created without a schema.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDirectoryResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryAlreadyExistsException
          schema:
            $ref: '#/definitions/DirectoryAlreadyExistsException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDirectoryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/facet/create:
    put:
      operationId: CreateFacet
      description: Creates a new <a>Facet</a> in a schema. Facet creation is allowed only in development or applied schemas.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFacetResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: FacetAlreadyExistsException
          schema:
            $ref: '#/definitions/FacetAlreadyExistsException'
        '488':
          description: InvalidRuleException
          schema:
            $ref: '#/definitions/InvalidRuleException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateFacetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/index:
    put:
      operationId: CreateIndex
      description: 'Creates an index object. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_indexing.html">Indexing</a> for more information.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateIndexResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
        '489':
          description: LinkNameAlreadyInUseException
          schema:
            $ref: '#/definitions/LinkNameAlreadyInUseException'
        '490':
          description: UnsupportedIndexTypeException
          schema:
            $ref: '#/definitions/UnsupportedIndexTypeException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateIndexRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object:
    put:
      operationId: CreateObject
      description: 'Creates an object in a <a>Directory</a>. Additionally attaches the object to a parent, if a parent reference and LinkName is specified. An object is simply a collection of <a>Facet</a> attributes. You can also use this API call to create a policy object, if the facet from which you create the object is a policy facet. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateObjectResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '489':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
        '490':
          description: LinkNameAlreadyInUseException
          schema:
            $ref: '#/definitions/LinkNameAlreadyInUseException'
        '491':
          description: UnsupportedIndexTypeException
          schema:
            $ref: '#/definitions/UnsupportedIndexTypeException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateObjectRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/create:
    put:
      operationId: CreateSchema
      description: '<p>Creates a new schema in a development state. A schema can exist in three phases:</p> <ul> <li> <p> <i>Development:</i> This is a mutable phase of the schema. All new schemas are in the development phase. Once the schema is finalized, it can be published.</p> </li> <li> <p> <i>Published:</i> Published schemas are immutable and have a version associated with them.</p> </li> <li> <p> <i>Applied:</i> Applied schemas are mutable in a way that allows you to add new schema facets. You can also add new, nonrequired attributes to existing schema facets. You can apply only published schemas to directories. </p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSchemaResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: SchemaAlreadyExistsException
          schema:
            $ref: '#/definitions/SchemaAlreadyExistsException'
        '487':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateSchemaRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory:
    put:
      operationId: DeleteDirectory
      description: Deletes a directory. Only disabled directories can be deleted. A deleted directory cannot be undone. Exercise extreme caution when deleting directories.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDirectoryResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: DirectoryNotDisabledException
          schema:
            $ref: '#/definitions/DirectoryNotDisabledException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryDeletedException
          schema:
            $ref: '#/definitions/DirectoryDeletedException'
        '487':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDirectoryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/facet/delete:
    put:
      operationId: DeleteFacet
      description: Deletes a given <a>Facet</a>. All attributes and <a>Rule</a>s associated with the facet will be deleted. Only development schema facets are allowed deletion.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteFacetResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: FacetNotFoundException
          schema:
            $ref: '#/definitions/FacetNotFoundException'
        '488':
          description: FacetInUseException
          schema:
            $ref: '#/definitions/FacetInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteFacetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/delete:
    put:
      operationId: DeleteObject
      description: Deletes an object and its associated attributes. Only objects with no children and no parents can be deleted.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteObjectResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: ObjectNotDetachedException
          schema:
            $ref: '#/definitions/ObjectNotDetachedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteObjectRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema:
    put:
      operationId: DeleteSchema
      description: 'Deletes a given schema. Schemas in a development and published state can only be deleted. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSchemaResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: StillContainsLinksException
          schema:
            $ref: '#/definitions/StillContainsLinksException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSchemaRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/index/detach:
    put:
      operationId: DetachFromIndex
      description: Detaches the specified object from the specified index.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DetachFromIndexResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: ObjectAlreadyDetachedException
          schema:
            $ref: '#/definitions/ObjectAlreadyDetachedException'
        '489':
          description: NotIndexException
          schema:
            $ref: '#/definitions/NotIndexException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DetachFromIndexRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/detach:
    put:
      operationId: DetachObject
      description: Detaches a given object from the parent object. The object that is to be detached from the parent is specified by the link name.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DetachObjectResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DetachObjectRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/policy/detach:
    put:
      operationId: DetachPolicy
      description: Detaches a policy from an object.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DetachPolicyResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '489':
          description: NotPolicyException
          schema:
            $ref: '#/definitions/NotPolicyException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DetachPolicyRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory/disable:
    put:
      operationId: DisableDirectory
      description: Disables the specified directory. Disabled directories cannot be read or written to. Only enabled directories can be disabled. Disabled directories may be reenabled.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisableDirectoryResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: DirectoryDeletedException
          schema:
            $ref: '#/definitions/DirectoryDeletedException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisableDirectoryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory/enable:
    put:
      operationId: EnableDirectory
      description: 'Enables the specified directory. Only disabled directories can be enabled. Once enabled, the directory can then be read and written to.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EnableDirectoryResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: DirectoryDeletedException
          schema:
            $ref: '#/definitions/DirectoryDeletedException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/EnableDirectoryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory/get:
    post:
      operationId: GetDirectory
      description: Retrieves metadata about a directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDirectoryResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDirectoryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/facet:
    put:
      operationId: UpdateFacet
      description: '<p>Does the following:</p> <ol> <li> <p>Adds new <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> <li> <p>Updates existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> <li> <p>Deletes existing <code>Attributes</code>, <code>Rules</code>, or <code>ObjectTypes</code>.</p> </li> </ol>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFacetResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: InvalidFacetUpdateException
          schema:
            $ref: '#/definitions/InvalidFacetUpdateException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: FacetNotFoundException
          schema:
            $ref: '#/definitions/FacetNotFoundException'
        '489':
          description: InvalidRuleException
          schema:
            $ref: '#/definitions/InvalidRuleException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFacetRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/information:
    post:
      operationId: GetObjectInformation
      description: Retrieves metadata about an object.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetObjectInformationResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetObjectInformationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/json:
    put:
      operationId: PutSchemaFromJson
      description: 'Allows a schema to be updated using JSON upload. Only available for development schemas. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_schemas.html#jsonformat">JSON Schema Format</a> for more information.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutSchemaFromJsonResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: InvalidSchemaDocException
          schema:
            $ref: '#/definitions/InvalidSchemaDocException'
        '487':
          description: InvalidRuleException
          schema:
            $ref: '#/definitions/InvalidRuleException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutSchemaFromJsonRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/applied:
    post:
      operationId: ListAppliedSchemaArns
      description: Lists schemas applied to a directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAppliedSchemaArnsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAppliedSchemaArnsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/indices:
    post:
      operationId: ListAttachedIndices
      description: Lists indices attached to an object.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAttachedIndicesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAttachedIndicesRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/development:
    post:
      operationId: ListDevelopmentSchemaArns
      description: Retrieves the ARNs of schemas in the development state.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDevelopmentSchemaArnsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDevelopmentSchemaArnsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/directory/list:
    post:
      operationId: ListDirectories
      description: Lists directories created within an account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDirectoriesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDirectoriesRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/facet/attributes:
    post:
      operationId: ListFacetAttributes
      description: Retrieves attributes attached to the facet.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFacetAttributesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: FacetNotFoundException
          schema:
            $ref: '#/definitions/FacetNotFoundException'
        '488':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListFacetAttributesRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/facet/list:
    post:
      operationId: ListFacetNames
      description: Retrieves the names of facets that exist in a schema.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFacetNamesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListFacetNamesRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/index/targets:
    post:
      operationId: ListIndex
      description: Lists objects attached to the specified index.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIndexResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: NotIndexException
          schema:
            $ref: '#/definitions/NotIndexException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListIndexRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/attributes:
    post:
      operationId: ListObjectAttributes
      description: 'Lists all attributes associated with an object. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectAttributesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '489':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListObjectAttributesRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/children:
    post:
      operationId: ListObjectChildren
      description: Returns a paginated list of child objects associated with a given object.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectChildrenResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '489':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '490':
          description: NotNodeException
          schema:
            $ref: '#/definitions/NotNodeException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListObjectChildrenRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/parentpaths:
    post:
      operationId: ListObjectParentPaths
      description: '<p>Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#dirstructure">Directory Structure</a>.</p> <p>Use this API to evaluate all parents for an object. The call returns all objects from the root of the directory up to the requested object. The API returns the number of paths based on user-defined <code>MaxResults</code>, in case there are multiple paths to the parent. The order of the paths and nodes returned is consistent among multiple API calls unless the objects are deleted or moved. Paths not leading to directory root are ignored from the target object.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectParentPathsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListObjectParentPathsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/parent:
    post:
      operationId: ListObjectParents
      description: Lists parent objects associated with a given object in pagination fashion.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectParentsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '489':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '490':
          description: CannotListParentOfRootException
          schema:
            $ref: '#/definitions/CannotListParentOfRootException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListObjectParentsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/policy:
    post:
      operationId: ListObjectPolicies
      description: Returns policies attached to an object in pagination fashion.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListObjectPoliciesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListObjectPoliciesRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/policy/attachment:
    post:
      operationId: ListPolicyAttachments
      description: Returns all of the <code>ObjectIdentifiers</code> to which a given policy is attached.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPolicyAttachmentsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '489':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '490':
          description: NotPolicyException
          schema:
            $ref: '#/definitions/NotPolicyException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPolicyAttachmentsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/published:
    post:
      operationId: ListPublishedSchemaArns
      description: Retrieves published schema ARNs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPublishedSchemaArnsResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPublishedSchemaArnsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/tags:
    post:
      operationId: ListTagsForResource
      description: Returns tags for a resource. Tagging is currently supported only for directories with a limit of 50 tags per directory. All 50 tags are returned for a given directory with this API call.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidTaggingRequestException
          schema:
            $ref: '#/definitions/InvalidTaggingRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/policy/lookup:
    post:
      operationId: LookupPolicy
      description: 'Lists all policies from the root of the <a>Directory</a> to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don''t have the policies attached, it returns the <code>ObjectIdentifier</code> for such objects. If policies are present, it returns <code>ObjectIdentifier</code>, <code>policyId</code>, and <code>policyType</code>. Paths that don''t lead to the root from the target object are ignored.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LookupPolicyResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '488':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '489':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/LookupPolicyRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/publish:
    put:
      operationId: PublishSchema
      description: 'Publishes a development schema with a version. If description and attributes are specified, PublishSchema overrides the development schema description and attributes. If not, the development schema description and attributes are used.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PublishSchemaResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: SchemaAlreadyPublishedException
          schema:
            $ref: '#/definitions/SchemaAlreadyPublishedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PublishSchemaRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/facets/delete:
    put:
      operationId: RemoveFacetFromObject
      description: Removes the specified facet from the specified object.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveFacetFromObjectResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveFacetFromObjectRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/tags/add:
    put:
      operationId: TagResource
      description: API for adding tags to a resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidTaggingRequestException
          schema:
            $ref: '#/definitions/InvalidTaggingRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/tags/remove:
    put:
      operationId: UntagResource
      description: API for removing tags from a resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '487':
          description: InvalidTaggingRequestException
          schema:
            $ref: '#/definitions/InvalidTaggingRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/object/update:
    put:
      operationId: UpdateObjectAttributes
      description: Updates a given object's attributes.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateObjectAttributesResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: DirectoryNotEnabledException
          schema:
            $ref: '#/definitions/DirectoryNotEnabledException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '488':
          description: FacetValidationException
          schema:
            $ref: '#/definitions/FacetValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateObjectAttributesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /amazonclouddirectory/2017-01-11/schema/update:
    put:
      operationId: UpdateSchema
      description: Updates the schema name with a new name. Only development schema names can be updated.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSchemaResponse'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: RetryableConflictException
          schema:
            $ref: '#/definitions/RetryableConflictException'
        '483':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSchemaRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AccessDeniedException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Access denied. Check your permissions.
  AddFacetToObjectRequest:
    type: object
    required:
      - SchemaFacet
      - ObjectReference
    properties:
      SchemaFacet:
        $ref: '#/definitions/SchemaFacet'
        description: Identifiers for the facet that you are adding to the object.
      ObjectAttributeList:
        $ref: '#/definitions/AttributeKeyAndValueList'
        description: Attributes on the facet you are adding to the object.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object you are adding the specified facet to.
  AddFacetToObjectResponse:
    type: object
    properties: {}
  ApplySchemaRequest:
    type: object
    required:
      - PublishedSchemaArn
    properties:
      PublishedSchemaArn:
        $ref: '#/definitions/Arn'
        description: 'Published schema ARN that needs to be copied. For more information, see <a>arns</a>.'
  ApplySchemaResponse:
    type: object
    properties:
      AppliedSchemaArn:
        $ref: '#/definitions/Arn'
        description: 'Applied schema ARN associated with the copied schema in the <a>Directory</a>. You can use this ARN to describe the schema information applied on this directory. For more information, see <a>arns</a>.'
      DirectoryArn:
        $ref: '#/definitions/Arn'
        description: 'ARN associated with the <a>Directory</a>. For more information, see <a>arns</a>.'
  Arn:
    type: string
  Arns:
    type: array
    items:
      $ref: '#/definitions/Arn'
  AttachObjectRequest:
    type: object
    required:
      - ParentReference
      - ChildReference
      - LinkName
    properties:
      ParentReference:
        $ref: '#/definitions/ObjectReference'
        description: Parent object reference.
      ChildReference:
        $ref: '#/definitions/ObjectReference'
        description: Child object reference to be attached to the object.
      LinkName:
        $ref: '#/definitions/LinkName'
        description: Link name with which the child object is attached to the parent.
  AttachObjectResponse:
    type: object
    properties:
      AttachedObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: 'Attached <code>ObjectIdentifier</code>, which is the child <code>ObjectIdentifier</code>.'
  AttachPolicyRequest:
    type: object
    required:
      - PolicyReference
      - ObjectReference
    properties:
      PolicyReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference associated with the policy object.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object to which the policy will be attached.
  AttachPolicyResponse:
    type: object
    properties: {}
  AttachToIndexRequest:
    type: object
    required:
      - IndexReference
      - TargetReference
    properties:
      IndexReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the index that you are attaching the object to.
      TargetReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object that you are attaching to the index.
  AttachToIndexResponse:
    type: object
    properties:
      AttachedObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the object that was attached to the index.
  AttributeKey:
    type: object
    required:
      - SchemaArn
      - FacetName
      - Name
    properties:
      SchemaArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the schema that contains the facet and attribute.
      FacetName:
        $ref: '#/definitions/FacetName'
        description: The name of the facet the attribute exists within.
      Name:
        $ref: '#/definitions/AttributeName'
        description: The name of the attribute.
    description: A unique identifier for an attribute.
  AttributeKeyAndValue:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/AttributeKey'
        description: The key of the attribute.
      Value:
        $ref: '#/definitions/TypedAttributeValue'
        description: The value of the attribute.
    description: The combination of an attribute key and an attribute value.
  AttributeKeyAndValueList:
    type: array
    items:
      $ref: '#/definitions/AttributeKeyAndValue'
  AttributeKeyList:
    type: array
    items:
      $ref: '#/definitions/AttributeKey'
  AttributeName:
    type: string
    pattern: '^[a-zA-Z0-9._-]*$'
    minLength: 1
    maxLength: 64
  BatchAddFacetToObject:
    type: object
    required:
      - SchemaFacet
      - ObjectAttributeList
      - ObjectReference
    properties:
      SchemaFacet:
        $ref: '#/definitions/SchemaFacet'
        description: Represents the facet being added to the object.
      ObjectAttributeList:
        $ref: '#/definitions/AttributeKeyAndValueList'
        description: The attributes to set on the object.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object being mutated.
    description: Represents the output of a batch add facet to object operation.
  BatchAddFacetToObjectResponse:
    type: object
    properties: {}
    description: The result of a batch add facet to object operation.
  BatchAttachObject:
    type: object
    required:
      - ParentReference
      - ChildReference
      - LinkName
    properties:
      ParentReference:
        $ref: '#/definitions/ObjectReference'
        description: Parent object reference.
      ChildReference:
        $ref: '#/definitions/ObjectReference'
        description: Child object reference to be attached to the object.
      LinkName:
        $ref: '#/definitions/LinkName'
        description: The name of the link.
    description: Represents the output of an AttachObject operation.
  BatchAttachObjectResponse:
    type: object
    properties:
      attachedObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the object that has been attached.
    description: Represents the output batch AttachObject response operation.
  BatchCreateObject:
    type: object
    required:
      - SchemaFacet
      - ObjectAttributeList
      - ParentReference
      - LinkName
      - BatchReferenceName
    properties:
      SchemaFacet:
        $ref: '#/definitions/SchemaFacetList'
        description: 'List of FacetArns that will be associated with the object. For more information, see <a>arns</a>.'
      ObjectAttributeList:
        $ref: '#/definitions/AttributeKeyAndValueList'
        description: 'Attribute map, which contains an attribute ARN as the key and attribute value as the map value.'
      ParentReference:
        $ref: '#/definitions/ObjectReference'
        description: 'If specified, the parent reference to which this object will be attached.'
      LinkName:
        $ref: '#/definitions/LinkName'
        description: The name of the link.
      BatchReferenceName:
        $ref: '#/definitions/BatchReferenceName'
        description: 'The batch reference name. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#batches">Batches</a> for more information.'
    description: Represents the output of a CreateObject operation.
  BatchCreateObjectResponse:
    type: object
    properties:
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: ID associated with the object.
    description: Represents the output of a <code>CreateObject</code> response operation.
  BatchDeleteObject:
    type: object
    required:
      - ObjectReference
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object.
    description: Represents the output of a <code>DeleteObject</code> operation.
  BatchDeleteObjectResponse:
    type: object
    properties: {}
    description: Represents the output of a <code>DeleteObject</code> response operation.
  BatchDetachObject:
    type: object
    required:
      - ParentReference
      - LinkName
      - BatchReferenceName
    properties:
      ParentReference:
        $ref: '#/definitions/ObjectReference'
        description: Parent reference from which the object with the specified link name is detached.
      LinkName:
        $ref: '#/definitions/LinkName'
        description: The name of the link.
      BatchReferenceName:
        $ref: '#/definitions/BatchReferenceName'
        description: 'The batch reference name. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#batches">Batches</a> for more information.'
    description: Represents the output of a <code>DetachObject</code> operation.
  BatchDetachObjectResponse:
    type: object
    properties:
      detachedObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the detached object.
    description: Represents the output of a <code>DetachObject</code> response operation.
  BatchListObjectAttributes:
    type: object
    required:
      - ObjectReference
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference of the object whose attributes need to be listed.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: Maximum number of items to be retrieved in a single call. This is an approximate number.
    description: Represents the output of a <code>ListObjectAttributes</code> operation.
  BatchListObjectAttributesResponse:
    type: object
    properties:
      Attributes:
        $ref: '#/definitions/AttributeKeyAndValueList'
        description: Attributes map associated with the object. <code>AttributeArn</code> is the key; attribute value is the value.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    description: Represents the output of a <code>ListObjectAttributes</code> response operation.
  BatchListObjectChildren:
    type: object
    required:
      - ObjectReference
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference of the object for which child objects are being listed.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: Maximum number of items to be retrieved in a single call. This is an approximate number.
    description: Represents the output of a <code>ListObjectChildren</code> operation.
  BatchListObjectChildrenResponse:
    type: object
    properties:
      Children:
        $ref: '#/definitions/LinkNameToObjectIdentifierMap'
        description: 'Children structure, which is a map with key as the <code>LinkName</code> and <code>ObjectIdentifier</code> as the value.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
    description: Represents the output of a <code>ListObjectChildren</code> response operation.
  BatchOperationIndex:
    type: integer
  BatchReadException:
    type: object
    properties:
      Type:
        $ref: '#/definitions/BatchReadExceptionType'
        description: 'Type of exception, such as <code>InvalidArnException</code>.'
      Message:
        $ref: '#/definitions/ExceptionMessage'
        description: Exception message associated with the failure.
    description: 'Batch Read Exception structure, which contains exception type and message.'
  BatchReadExceptionType:
    type: string
    enum:
      - ValidationException
      - InvalidArnException
      - ResourceNotFoundException
      - InvalidNextTokenException
      - AccessDeniedException
      - NotNodeException
  BatchReadOperation:
    type: object
    properties:
      ListObjectAttributes:
        $ref: '#/definitions/BatchListObjectAttributes'
        description: Lists all attributes associated with an object.
      ListObjectChildren:
        $ref: '#/definitions/BatchListObjectChildren'
        description: Returns a paginated list of child objects that are associated with a given object.
    description: Represents the output of a <code>BatchRead</code> operation.
  BatchReadOperationList:
    type: array
    items:
      $ref: '#/definitions/BatchReadOperation'
  BatchReadOperationResponse:
    type: object
    properties:
      SuccessfulResponse:
        $ref: '#/definitions/BatchReadSuccessfulResponse'
        description: Identifies which operation in a batch has succeeded.
      ExceptionResponse:
        $ref: '#/definitions/BatchReadException'
        description: Identifies which operation in a batch has failed.
    description: Represents the output of a <code>BatchRead</code> response operation.
  BatchReadOperationResponseList:
    type: array
    items:
      $ref: '#/definitions/BatchReadOperationResponse'
  BatchReadRequest:
    type: object
    required:
      - Operations
    properties:
      Operations:
        $ref: '#/definitions/BatchReadOperationList'
        description: List of operations that are part of the batch.
  BatchReadResponse:
    type: object
    properties:
      Responses:
        $ref: '#/definitions/BatchReadOperationResponseList'
        description: List of all the responses for each batch read.
  BatchReadSuccessfulResponse:
    type: object
    properties:
      ListObjectAttributes:
        $ref: '#/definitions/BatchListObjectAttributesResponse'
        description: Lists all attributes associated with an object.
      ListObjectChildren:
        $ref: '#/definitions/BatchListObjectChildrenResponse'
        description: Returns a paginated list of child objects associated with a given object.
    description: Represents the output of a <code>BatchRead</code> success response operation.
  BatchReferenceName:
    type: string
  BatchRemoveFacetFromObject:
    type: object
    required:
      - SchemaFacet
      - ObjectReference
    properties:
      SchemaFacet:
        $ref: '#/definitions/SchemaFacet'
        description: The facet to remove from the object.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object whose facet will be removed.
    description: Batch operation to remove a facet from an object.
  BatchRemoveFacetFromObjectResponse:
    type: object
    properties: {}
    description: Empty result representing success.
  BatchUpdateObjectAttributes:
    type: object
    required:
      - ObjectReference
      - AttributeUpdates
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object.
      AttributeUpdates:
        $ref: '#/definitions/ObjectAttributeUpdateList'
        description: Attributes update structure.
    description: 'Represents the output of a <code>BatchUpdate</code> operation. '
  BatchUpdateObjectAttributesResponse:
    type: object
    properties:
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: ID associated with the object.
    description: Represents the output of a <code>BatchUpdate</code> response operation.
  BatchWriteException:
    type: object
    properties:
      Index:
        $ref: '#/definitions/BatchOperationIndex'
      Type:
        $ref: '#/definitions/BatchWriteExceptionType'
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: A <code>BatchWrite</code> exception has occurred.
  BatchWriteExceptionType:
    type: string
    enum:
      - InternalServiceException
      - ValidationException
      - InvalidArnException
      - LinkNameAlreadyInUseException
      - StillContainsLinksException
      - FacetValidationException
      - ObjectNotDetachedException
      - ResourceNotFoundException
      - AccessDeniedException
  BatchWriteOperation:
    type: object
    properties:
      CreateObject:
        $ref: '#/definitions/BatchCreateObject'
        description: Creates an object.
      AttachObject:
        $ref: '#/definitions/BatchAttachObject'
        description: Attaches an object to a <a>Directory</a>.
      DetachObject:
        $ref: '#/definitions/BatchDetachObject'
        description: Detaches an object from a <a>Directory</a>.
      UpdateObjectAttributes:
        $ref: '#/definitions/BatchUpdateObjectAttributes'
        description: Update a given object's attributes.
      DeleteObject:
        $ref: '#/definitions/BatchDeleteObject'
        description: Deletes an object in a <a>Directory</a>.
      AddFacetToObject:
        $ref: '#/definitions/BatchAddFacetToObject'
        description: Batch operation adding a facet to an object.
      RemoveFacetFromObject:
        $ref: '#/definitions/BatchRemoveFacetFromObject'
        description: Batch operation removing a facet from an object.
    description: 'Represents the output of a <code>BatchWrite</code> operation. '
  BatchWriteOperationList:
    type: array
    items:
      $ref: '#/definitions/BatchWriteOperation'
  BatchWriteOperationResponse:
    type: object
    properties:
      CreateObject:
        $ref: '#/definitions/BatchCreateObjectResponse'
        description: Creates an object in a <a>Directory</a>.
      AttachObject:
        $ref: '#/definitions/BatchAttachObjectResponse'
        description: Attaches an object to a <a>Directory</a>.
      DetachObject:
        $ref: '#/definitions/BatchDetachObjectResponse'
        description: Detaches an object from a <a>Directory</a>.
      UpdateObjectAttributes:
        $ref: '#/definitions/BatchUpdateObjectAttributesResponse'
        description: Updates a given object’s attributes.
      DeleteObject:
        $ref: '#/definitions/BatchDeleteObjectResponse'
        description: Deletes an object in a <a>Directory</a>.
      AddFacetToObject:
        $ref: '#/definitions/BatchAddFacetToObjectResponse'
        description: Result of an add facet to object batch operation.
      RemoveFacetFromObject:
        $ref: '#/definitions/BatchRemoveFacetFromObjectResponse'
        description: Result of a batch remove facet from object operation.
    description: Represents the output of a <code>BatchWrite</code> response operation.
  BatchWriteOperationResponseList:
    type: array
    items:
      $ref: '#/definitions/BatchWriteOperationResponse'
  BatchWriteRequest:
    type: object
    required:
      - Operations
    properties:
      Operations:
        $ref: '#/definitions/BatchWriteOperationList'
        description: List of operations that are part of the batch.
  BatchWriteResponse:
    type: object
    properties:
      Responses:
        $ref: '#/definitions/BatchWriteOperationResponseList'
        description: List of all the responses for each batch write.
  BinaryAttributeValue:
    type: string
  Bool:
    type: boolean
  BooleanAttributeValue:
    type: boolean
  CannotListParentOfRootException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Cannot list the parents of a <a>Directory</a> root.
  ConsistencyLevel:
    type: string
    enum:
      - SERIALIZABLE
      - EVENTUAL
  CreateDirectoryRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/DirectoryName'
        description: 'Name of the <a>Directory</a>. Should be unique per account, per region.'
  CreateDirectoryResponse:
    type: object
    required:
      - DirectoryArn
      - Name
      - ObjectIdentifier
      - AppliedSchemaArn
    properties:
      DirectoryArn:
        $ref: '#/definitions/DirectoryArn'
        description: 'ARN associated with the <a>Directory</a>. For more information, see <a>arns</a>.'
      Name:
        $ref: '#/definitions/DirectoryName'
        description: Name of the <a>Directory</a>.
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The root object node of the created directory.
      AppliedSchemaArn:
        $ref: '#/definitions/Arn'
        description: 'ARN of the published schema in the <a>Directory</a>. Once a published schema is copied into the directory, it has its own ARN which is referred to applied schema ARN. For more information, see <a>arns</a>.'
  CreateFacetRequest:
    type: object
    required:
      - Name
      - ObjectType
    properties:
      Name:
        $ref: '#/definitions/FacetName'
        description: 'Name of the <a>Facet</a>, which is unique for a given schema.'
      Attributes:
        $ref: '#/definitions/FacetAttributeList'
        description: Attributes associated with the <a>Facet</a>.e
      ObjectType:
        $ref: '#/definitions/ObjectType'
        description: '<p>Specifies whether a given object created from this facet is of type Node, Leaf Node, Policy or Index.</p> <ul> <li> <p>Node: Can have multiple children but one parent.</p> </li> </ul> <ul> <li> <p>Leaf Node: Cannot have children but can have multiple parents.</p> </li> </ul> <ul> <li> <p>Policy: Allows you to store a policy document and policy type. For more information, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_key_concepts.html#policies">Policies</a>.</p> </li> </ul> <ul> <li> <p>Index: Can be created with the Index API.</p> </li> </ul>'
  CreateFacetResponse:
    type: object
    properties: {}
  CreateIndexRequest:
    type: object
    required:
      - OrderedIndexedAttributeList
      - IsUnique
    properties:
      OrderedIndexedAttributeList:
        $ref: '#/definitions/AttributeKeyList'
        description: Specifies the Attributes that should be indexed on. Currently only a single attribute is supported.
      IsUnique:
        $ref: '#/definitions/Bool'
        description: Indicates whether objects with the same indexed attribute value can be added to the index.
      ParentReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the parent object that contains the index object.
      LinkName:
        $ref: '#/definitions/LinkName'
        description: The name of the link between the parent object and the index object.
  CreateIndexResponse:
    type: object
    properties:
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the index created by this operation.
  CreateObjectRequest:
    type: object
    required:
      - SchemaFacets
    properties:
      SchemaFacets:
        $ref: '#/definitions/SchemaFacetList'
        description: 'List of facet ARNs to be associated with the object. For more information, see <a>arns</a>.'
      ObjectAttributeList:
        $ref: '#/definitions/AttributeKeyAndValueList'
        description: Attribute map whose attribute ARN contains the key and attribute value as the map value.
      ParentReference:
        $ref: '#/definitions/ObjectReference'
        description: 'If specified, the parent reference to which this object will be attached.'
      LinkName:
        $ref: '#/definitions/LinkName'
        description: The name of link that is used to attach this object to a parent.
  CreateObjectResponse:
    type: object
    properties:
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: Identifier associated with the object.
  CreateSchemaRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/SchemaName'
        description: Name associated with the schema. This is unique to each account and in each region.
  CreateSchemaResponse:
    type: object
    properties:
      SchemaArn:
        $ref: '#/definitions/Arn'
        description: 'ARN associated with the schema. For more information, see <a>arns</a>.'
  Date:
    type: string
    format: date-time
  DatetimeAttributeValue:
    type: string
    format: date-time
  DeleteDirectoryRequest:
    type: object
    properties: {}
  DeleteDirectoryResponse:
    type: object
    required:
      - DirectoryArn
    properties:
      DirectoryArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the deleted directory.
  DeleteFacetRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/FacetName'
        description: The name of the facet to delete.
  DeleteFacetResponse:
    type: object
    properties: {}
  DeleteObjectRequest:
    type: object
    required:
      - ObjectReference
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object.
  DeleteObjectResponse:
    type: object
    properties: {}
  DeleteSchemaRequest:
    type: object
    properties: {}
  DeleteSchemaResponse:
    type: object
    properties:
      SchemaArn:
        $ref: '#/definitions/Arn'
        description: 'Input ARN that is returned as part of the response. For more information, see <a>arns</a>.'
  DetachFromIndexRequest:
    type: object
    required:
      - IndexReference
      - TargetReference
    properties:
      IndexReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the index object.
      TargetReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object being detached from the index.
  DetachFromIndexResponse:
    type: object
    properties:
      DetachedObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the object that was detached from the index.
  DetachObjectRequest:
    type: object
    required:
      - ParentReference
      - LinkName
    properties:
      ParentReference:
        $ref: '#/definitions/ObjectReference'
        description: Parent reference from which the object with the specified link name is detached.
      LinkName:
        $ref: '#/definitions/LinkName'
        description: Link name associated with the object that needs to be detached.
  DetachObjectResponse:
    type: object
    properties:
      DetachedObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> that was detached from the object.
  DetachPolicyRequest:
    type: object
    required:
      - PolicyReference
      - ObjectReference
    properties:
      PolicyReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the policy object.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object whose policy object will be detached.
  DetachPolicyResponse:
    type: object
    properties: {}
  Directory:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DirectoryName'
        description: The name of the directory.
      DirectoryArn:
        $ref: '#/definitions/DirectoryArn'
        description: 'ARN associated with the directory. For more information, see <a>arns</a>.'
      State:
        $ref: '#/definitions/DirectoryState'
        description: 'The state of the directory. Can be either <code>Enabled</code>, <code>Disabled</code>, or <code>Deleted</code>.'
      CreationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time when the directory was created.
    description: Directory structure that includes the directory name and directory ARN.
  DirectoryAlreadyExistsException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Indicates that a <a>Directory</a> could not be created due to a naming conflict. Choose a different name and try again.
  DirectoryArn:
    type: string
  DirectoryDeletedException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: 'A directory that has been deleted has been attempted to be accessed. Note: The requested resource will eventually cease to exist.'
  DirectoryList:
    type: array
    items:
      $ref: '#/definitions/Directory'
  DirectoryName:
    type: string
    pattern: '^[a-zA-Z0-9._-]*$'
    minLength: 1
    maxLength: 64
  DirectoryNotDisabledException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: An operation can only operate on a disabled directory.
  DirectoryNotEnabledException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: An operation can only operate on a directory that is not enabled.
  DirectoryState:
    type: string
    enum:
      - ENABLED
      - DISABLED
      - DELETED
  DisableDirectoryRequest:
    type: object
    properties: {}
  DisableDirectoryResponse:
    type: object
    required:
      - DirectoryArn
    properties:
      DirectoryArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the directory that has been disabled.
  EnableDirectoryRequest:
    type: object
    properties: {}
  EnableDirectoryResponse:
    type: object
    required:
      - DirectoryArn
    properties:
      DirectoryArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the enabled directory.
  ExceptionMessage:
    type: string
  Facet:
    type: object
    properties:
      Name:
        $ref: '#/definitions/FacetName'
        description: The name of the <a>Facet</a>.
      ObjectType:
        $ref: '#/definitions/ObjectType'
        description: Object type associated with the facet. See <a>CreateFacetRequest$ObjectType</a> for more details.
    description: 'A structure that contains <code>Name</code>, <code>ARN</code>, <code>Attributes</code>, <a>Rule</a>s, and <code>ObjectTypes</code>.'
  FacetAlreadyExistsException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: A facet with the same name already exists.
  FacetAttribute:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/AttributeName'
        description: The name of the facet attribute.
      AttributeDefinition:
        $ref: '#/definitions/FacetAttributeDefinition'
        description: 'A facet attribute consists of either a definition or a reference. This structure contains the attribute definition. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
      AttributeReference:
        $ref: '#/definitions/FacetAttributeReference'
        description: 'Attribute reference associated with the attribute. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
      RequiredBehavior:
        $ref: '#/definitions/RequiredAttributeBehavior'
        description: The required behavior of the <code>FacetAttribute</code>.
    description: Attribute associated with the <a>Facet</a>.
  FacetAttributeDefinition:
    type: object
    required:
      - Type
    properties:
      Type:
        $ref: '#/definitions/FacetAttributeType'
        description: The type of the attribute.
      DefaultValue:
        $ref: '#/definitions/TypedAttributeValue'
        description: The default value of the attribute (if configured).
      IsImmutable:
        $ref: '#/definitions/Bool'
        description: Whether the attribute is mutable or not.
      Rules:
        $ref: '#/definitions/RuleMap'
        description: Validation rules attached to the attribute definition.
    description: 'A facet attribute definition. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
  FacetAttributeList:
    type: array
    items:
      $ref: '#/definitions/FacetAttribute'
  FacetAttributeReference:
    type: object
    required:
      - TargetFacetName
      - TargetAttributeName
    properties:
      TargetFacetName:
        $ref: '#/definitions/FacetName'
        description: 'Target facet name associated with the facet reference. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
      TargetAttributeName:
        $ref: '#/definitions/AttributeName'
        description: 'Target attribute name associated with the facet reference. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences">Attribute References</a> for more information.'
    description: Facet attribute reference that specifies the attribute definition which contains attribute facet name and attribute name.
  FacetAttributeType:
    type: string
    enum:
      - STRING
      - BINARY
      - BOOLEAN
      - NUMBER
      - DATETIME
  FacetAttributeUpdate:
    type: object
    properties:
      Attribute:
        $ref: '#/definitions/FacetAttribute'
        description: The attribute to update.
      Action:
        $ref: '#/definitions/UpdateActionType'
        description: The action to perform when updating the attribute.
    description: A structure that contains information used to update an attribute.
  FacetAttributeUpdateList:
    type: array
    items:
      $ref: '#/definitions/FacetAttributeUpdate'
  FacetInUseException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Occurs when deleting a facet that contains an attribute which is a target to an attribute reference in a different facet.
  FacetName:
    type: string
    pattern: '^[a-zA-Z0-9._-]*$'
    minLength: 1
    maxLength: 64
  FacetNameList:
    type: array
    items:
      $ref: '#/definitions/FacetName'
  FacetNotFoundException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: The specified <a>Facet</a> could not be found.
  FacetValidationException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: The <a>Facet</a> you provided was not well formed or could not be validated with the schema.
  GetDirectoryRequest:
    type: object
    properties: {}
  GetDirectoryResponse:
    type: object
    required:
      - Directory
    properties:
      Directory:
        $ref: '#/definitions/Directory'
        description: Metadata about the directory.
  GetFacetRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/FacetName'
        description: The name of the facet to retrieve.
  GetFacetResponse:
    type: object
    properties:
      Facet:
        $ref: '#/definitions/Facet'
        description: ' <a>Facet</a> structure associated with the facet.'
  GetObjectInformationRequest:
    type: object
    required:
      - ObjectReference
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object.
  GetObjectInformationResponse:
    type: object
    properties:
      SchemaFacets:
        $ref: '#/definitions/SchemaFacetList'
        description: The facets attached to the specified object.
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the specified object.
  GetSchemaAsJsonRequest:
    type: object
    properties: {}
  GetSchemaAsJsonResponse:
    type: object
    properties:
      Name:
        $ref: '#/definitions/SchemaName'
        description: The name of the retrieved schema.
      Document:
        $ref: '#/definitions/SchemaJsonDocument'
        description: The JSON representation of the schema document.
  IndexAttachment:
    type: object
    properties:
      IndexedAttributes:
        $ref: '#/definitions/AttributeKeyAndValueList'
        description: The indexed attribute values.
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> of the object attached to the index.
    description: Represents an index and an attached object.
  IndexAttachmentList:
    type: array
    items:
      $ref: '#/definitions/IndexAttachment'
  IndexedAttributeMissingException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: An object has been attempted to be attached to an object that does not have the appropriate attribute value.
  InternalServiceException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: 'Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the <a href="http://status.aws.amazon.com/">AWS Service Health Dashboard</a> site to see if there are any operational issues with the service.'
  InvalidArnException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Indicates that the provided ARN value is not valid.
  InvalidAttachmentException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Indicates that an attempt to attach an object with the same link name or to apply a schema with same name has occurred. Rename the link or the schema and then try again.
  InvalidFacetUpdateException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: An attempt to modify a <a>Facet</a> resulted in an invalid schema exception.
  InvalidNextTokenException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Indicates that the <code>NextToken</code> value is not valid.
  InvalidRuleException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Occurs when any of the rule parameter keys or values are invalid.
  InvalidSchemaDocException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Indicates that the provided <code>SchemaDoc</code> value is not valid.
  InvalidTaggingRequestException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Can occur for multiple reasons such as when you tag a resource that doesn’t exist or if you specify a higher number of tags for a resource than the allowed limit. Allowed limit is 50 tags per resource.
  LimitExceededException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: 'Indicates limits are exceeded. See <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/limits.html">Limits</a> for more information.'
  LinkName:
    type: string
    maxLength: 64
  LinkNameAlreadyInUseException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Indicates that a link could not be created due to a naming conflict. Choose a different name and then try again.
  LinkNameToObjectIdentifierMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/LinkName'
        value:
          $ref: '#/definitions/ObjectIdentifier'
  ListAppliedSchemaArnsRequest:
    type: object
    required:
      - DirectoryArn
    properties:
      DirectoryArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the directory you are listing.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
  ListAppliedSchemaArnsResponse:
    type: object
    properties:
      SchemaArns:
        $ref: '#/definitions/Arns'
        description: The ARNs of schemas that are applied to the directory.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  ListAttachedIndicesRequest:
    type: object
    required:
      - TargetReference
    properties:
      TargetReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object to that has indices attached.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
  ListAttachedIndicesResponse:
    type: object
    properties:
      IndexAttachments:
        $ref: '#/definitions/IndexAttachmentList'
        description: The indices attached to the specified object.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  ListDevelopmentSchemaArnsRequest:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
  ListDevelopmentSchemaArnsResponse:
    type: object
    properties:
      SchemaArns:
        $ref: '#/definitions/Arns'
        description: The ARNs of retrieved development schemas.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  ListDirectoriesRequest:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
      state:
        $ref: '#/definitions/DirectoryState'
        description: 'The state of the directories in the list. Can be either Enabled, Disabled, or Deleted.'
  ListDirectoriesResponse:
    type: object
    required:
      - Directories
    properties:
      Directories:
        $ref: '#/definitions/DirectoryList'
        description: Lists all directories associated with your account in pagination fashion.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  ListFacetAttributesRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/FacetName'
        description: The name of the facet whose attributes will be retrieved.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
  ListFacetAttributesResponse:
    type: object
    properties:
      Attributes:
        $ref: '#/definitions/FacetAttributeList'
        description: The attributes attached to the facet.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  ListFacetNamesRequest:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve
  ListFacetNamesResponse:
    type: object
    properties:
      FacetNames:
        $ref: '#/definitions/FacetNameList'
        description: The names of facets that exist within the schema.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  ListIndexRequest:
    type: object
    required:
      - IndexReference
    properties:
      RangesOnIndexedValues:
        $ref: '#/definitions/ObjectAttributeRangeList'
        description: Specifies the ranges of indexed values that you want to query.
      IndexReference:
        $ref: '#/definitions/ObjectReference'
        description: The reference to the index to list.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve from the index.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  ListIndexResponse:
    type: object
    properties:
      IndexAttachments:
        $ref: '#/definitions/IndexAttachmentList'
        description: The objects and indexed values attached to the index.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  ListObjectAttributesRequest:
    type: object
    required:
      - ObjectReference
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object whose attributes will be listed.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: Maximum number of items to be retrieved in a single call. This is an approximate number.
  ListObjectAttributesResponse:
    type: object
    properties:
      Attributes:
        $ref: '#/definitions/AttributeKeyAndValueList'
        description: 'Attributes map associated with the object. AttributeArn is the key, and attribute value is the value.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  ListObjectChildrenRequest:
    type: object
    required:
      - ObjectReference
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object for which child objects are being listed.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: Maximum number of items to be retrieved in a single call. This is an approximate number.
  ListObjectChildrenResponse:
    type: object
    properties:
      Children:
        $ref: '#/definitions/LinkNameToObjectIdentifierMap'
        description: 'Children structure, which is a map with key as the LinkName and <code>ObjectIdentifier</code> as the value.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  ListObjectParentPathsRequest:
    type: object
    required:
      - ObjectReference
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object whose parent paths are listed.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: Maximum number of items to be retrieved in a single call. This is an approximate number.
  ListObjectParentPathsResponse:
    type: object
    properties:
      PathToObjectIdentifiersList:
        $ref: '#/definitions/PathToObjectIdentifiersList'
        description: Returns the path to the <code>ObjectIdentifiers</code> associated with the directory.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  ListObjectParentsRequest:
    type: object
    required:
      - ObjectReference
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object for which parent objects are being listed.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: Maximum number of items to be retrieved in a single call. This is an approximate number.
  ListObjectParentsResponse:
    type: object
    properties:
      Parents:
        $ref: '#/definitions/ObjectIdentifierToLinkNameMap'
        description: 'Parent structure, which is a map with key as the <code>ObjectIdentifier</code> and LinkName as the value.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  ListObjectPoliciesRequest:
    type: object
    required:
      - ObjectReference
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object for which policies will be listed.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: Maximum number of items to be retrieved in a single call. This is an approximate number.
  ListObjectPoliciesResponse:
    type: object
    properties:
      AttachedPolicyIds:
        $ref: '#/definitions/ObjectIdentifierList'
        description: 'List of policy <code>ObjectIdentifiers</code>, that are attached to the object.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  ListPolicyAttachmentsRequest:
    type: object
    required:
      - PolicyReference
    properties:
      PolicyReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the policy object.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: Maximum number of items to be retrieved in a single call. This is an approximate number.
  ListPolicyAttachmentsResponse:
    type: object
    properties:
      ObjectIdentifiers:
        $ref: '#/definitions/ObjectIdentifierList'
        description: List of <code>ObjectIdentifiers</code> to which the policy is attached.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  ListPublishedSchemaArnsRequest:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: The maximum number of results to retrieve.
  ListPublishedSchemaArnsResponse:
    type: object
    properties:
      SchemaArns:
        $ref: '#/definitions/Arns'
        description: The ARNs of published schemas.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  ListTagsForResourceRequest:
    type: object
    required:
      - ResourceArn
    properties:
      ResourceArn:
        $ref: '#/definitions/Arn'
        description: ARN of the resource. Tagging is only supported for directories.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token. This is for future use. Currently pagination is not supported for tagging.
      MaxResults:
        $ref: '#/definitions/TagsNumberResults'
        description: The MaxResults parameter sets the maximum number of results returned in a single page. This is for future use and is not supported currently.
  ListTagsForResourceResponse:
    type: object
    properties:
      Tags:
        $ref: '#/definitions/TagList'
        description: List of tag key value pairs associated with the response.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. This value is null when there are no more results to return.
  LookupPolicyRequest:
    type: object
    required:
      - ObjectReference
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object whose policies will be looked up.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to request the next page of results.
      MaxResults:
        $ref: '#/definitions/NumberResults'
        description: Maximum number of items to be retrieved in a single call. This is an approximate number.
  LookupPolicyResponse:
    type: object
    properties:
      PolicyToPathList:
        $ref: '#/definitions/PolicyToPathList'
        description: 'Provides list of path to policies. Policies contain <code>PolicyId</code>, <code>ObjectIdentifier</code>, and <code>PolicyType</code>.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The pagination token.
  NextToken:
    type: string
  NotIndexException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Indicates the requested operation can only operate on index objects.
  NotNodeException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: 'Occurs when any invalid operations are performed on an object which is not a node, such as calling <code>ListObjectChildren</code> for a leaf node object.'
  NotPolicyException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Indicates the requested operation can only operate on policy objects.
  NumberAttributeValue:
    type: string
  NumberResults:
    type: integer
    minimum: 1
  ObjectAlreadyDetachedException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Indicates the object is not attached to the index.
  ObjectAttributeAction:
    type: object
    properties:
      ObjectAttributeActionType:
        $ref: '#/definitions/UpdateActionType'
        description: Type can be either Update or Delete.
      ObjectAttributeUpdateValue:
        $ref: '#/definitions/TypedAttributeValue'
        description: The value that you want to update to.
    description: The action to take on the object attribute.
  ObjectAttributeRange:
    type: object
    properties:
      AttributeKey:
        $ref: '#/definitions/AttributeKey'
        description: The key of the attribute the attribute range covers.
      Range:
        $ref: '#/definitions/TypedAttributeValueRange'
        description: The range of attribute values being selected.
    description: A range of attributes.
  ObjectAttributeRangeList:
    type: array
    items:
      $ref: '#/definitions/ObjectAttributeRange'
  ObjectAttributeUpdate:
    type: object
    properties:
      ObjectAttributeKey:
        $ref: '#/definitions/AttributeKey'
        description: The key of the attribute being updated.
      ObjectAttributeAction:
        $ref: '#/definitions/ObjectAttributeAction'
        description: The action to perform as part of the attribute update.
    description: Structure that contains attribute update information.
  ObjectAttributeUpdateList:
    type: array
    items:
      $ref: '#/definitions/ObjectAttributeUpdate'
  ObjectIdentifier:
    type: string
  ObjectIdentifierList:
    type: array
    items:
      $ref: '#/definitions/ObjectIdentifier'
  ObjectIdentifierToLinkNameMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ObjectIdentifier'
        value:
          $ref: '#/definitions/LinkName'
  ObjectNotDetachedException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Indicates the requested operation cannot be completed because the object has not been detached from the tree.
  ObjectReference:
    type: object
    properties:
      Selector:
        $ref: '#/definitions/SelectorObjectReference'
        description: '<p>Allows you to specify an object. You can identify an object in one of the following ways:</p> <ul> <li> <p> <i>$ObjectIdentifier</i> - Identifies the object by <code>ObjectIdentifier</code> </p> </li> <li> <p> <i>/some/path</i> - Identifies the object based on path</p> </li> <li> <p> <i>#SomeBatchReference</i> - Identifies the object in a batch call</p> </li> </ul>'
    description: Reference that identifies an object.
  ObjectType:
    type: string
    enum:
      - NODE
      - LEAF_NODE
      - POLICY
      - INDEX
  PathString:
    type: string
  PathToObjectIdentifiers:
    type: object
    properties:
      Path:
        $ref: '#/definitions/PathString'
        description: The path used to identify the object starting from directory root.
      ObjectIdentifiers:
        $ref: '#/definitions/ObjectIdentifierList'
        description: Lists <code>ObjectIdentifiers</code> starting from directory root to the object in the request.
    description: Returns the path to the <code>ObjectIdentifiers</code> associated with the directory.
  PathToObjectIdentifiersList:
    type: array
    items:
      $ref: '#/definitions/PathToObjectIdentifiers'
  PolicyAttachment:
    type: object
    properties:
      PolicyId:
        $ref: '#/definitions/ObjectIdentifier'
        description: The ID of <code>PolicyAttachment</code>.
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: The <code>ObjectIdentifier</code> associated with <code>PolicyAttachment</code>.
      PolicyType:
        $ref: '#/definitions/PolicyType'
        description: The type of policy that can be associated with <code>PolicyAttachment</code>.
    description: 'Contains the <code>PolicyType</code>, <code>PolicyId</code>, and the <code>ObjectIdentifier</code> to which it is attached.'
  PolicyAttachmentList:
    type: array
    items:
      $ref: '#/definitions/PolicyAttachment'
  PolicyToPath:
    type: object
    properties:
      Path:
        $ref: '#/definitions/PathString'
        description: The path that is referenced from the root.
      Policies:
        $ref: '#/definitions/PolicyAttachmentList'
        description: List of policy objects.
    description: Used when a regular object exists in a <a>Directory</a> and you want to find all of the policies associated with that object and the parent to that object.
  PolicyToPathList:
    type: array
    items:
      $ref: '#/definitions/PolicyToPath'
  PolicyType:
    type: string
  PublishSchemaRequest:
    type: object
    required:
      - Version
    properties:
      Version:
        $ref: '#/definitions/Version'
        description: Version under which the schema will be published.
      Name:
        $ref: '#/definitions/SchemaName'
        description: 'New name under which the schema will be published. If this is not provided, the development schema is considered.'
  PublishSchemaResponse:
    type: object
    properties:
      PublishedSchemaArn:
        $ref: '#/definitions/Arn'
        description: 'ARN associated with the published schema. For more information, see <a>arns</a>.'
  PutSchemaFromJsonRequest:
    type: object
    required:
      - Document
    properties:
      Document:
        $ref: '#/definitions/SchemaJsonDocument'
        description: The replacement JSON schema.
  PutSchemaFromJsonResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The ARN of the schema to update.
  RangeMode:
    type: string
    enum:
      - FIRST
      - LAST
      - LAST_BEFORE_MISSING_VALUES
      - INCLUSIVE
      - EXCLUSIVE
  RemoveFacetFromObjectRequest:
    type: object
    required:
      - SchemaFacet
      - ObjectReference
    properties:
      SchemaFacet:
        $ref: '#/definitions/SchemaFacet'
        description: The facet to remove.
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: A reference to the object to remove the facet from.
  RemoveFacetFromObjectResponse:
    type: object
    properties: {}
  RequiredAttributeBehavior:
    type: string
    enum:
      - REQUIRED_ALWAYS
      - NOT_REQUIRED
  ResourceNotFoundException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: The specified resource could not be found.
  RetryableConflictException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: 'Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.'
  Rule:
    type: object
    properties:
      Type:
        $ref: '#/definitions/RuleType'
        description: The type of attribute validation rule.
      Parameters:
        $ref: '#/definitions/RuleParameterMap'
        description: Min and max parameters associated with the rule.
    description: Contains an ARN and parameters associated with the rule.
  RuleKey:
    type: string
    pattern: '^[a-zA-Z0-9._-]*$'
    minLength: 1
    maxLength: 64
  RuleMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/RuleKey'
        value:
          $ref: '#/definitions/Rule'
  RuleParameterKey:
    type: string
  RuleParameterMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/RuleParameterKey'
        value:
          $ref: '#/definitions/RuleParameterValue'
  RuleParameterValue:
    type: string
  RuleType:
    type: string
    enum:
      - BINARY_LENGTH
      - NUMBER_COMPARISON
      - STRING_FROM_SET
      - STRING_LENGTH
  SchemaAlreadyExistsException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Indicates that a schema could not be created due to a naming conflict. Please select a different name and then try again.
  SchemaAlreadyPublishedException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Indicates a schema is already published.
  SchemaFacet:
    type: object
    properties:
      SchemaArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the schema that contains the facet.
      FacetName:
        $ref: '#/definitions/FacetName'
        description: The name of the facet.
    description: A facet.
  SchemaFacetList:
    type: array
    items:
      $ref: '#/definitions/SchemaFacet'
  SchemaJsonDocument:
    type: string
  SchemaName:
    type: string
    pattern: '^[a-zA-Z0-9._-]*$'
    minLength: 1
    maxLength: 32
  SelectorObjectReference:
    type: string
  StillContainsLinksException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: The object could not be deleted because links still exist. Remove the links and then try the operation again.
  StringAttributeValue:
    type: string
  Tag:
    type: object
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: Key associated with the tag.
      Value:
        $ref: '#/definitions/TagValue'
        description: Value associated with the tag.
    description: Tag structure which contains tag key and value.
  TagKey:
    type: string
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
  TagResourceRequest:
    type: object
    required:
      - ResourceArn
      - Tags
    properties:
      ResourceArn:
        $ref: '#/definitions/Arn'
        description: ARN of the resource. Tagging is only supported for directories.
      Tags:
        $ref: '#/definitions/TagList'
        description: List of tag key value pairs.
  TagResourceResponse:
    type: object
    properties: {}
  TagValue:
    type: string
  TagsNumberResults:
    type: integer
    minimum: 50
  TypedAttributeValue:
    type: object
    properties:
      StringValue:
        $ref: '#/definitions/StringAttributeValue'
        description: A string data value.
      BinaryValue:
        $ref: '#/definitions/BinaryAttributeValue'
        description: A binary data value.
      BooleanValue:
        $ref: '#/definitions/BooleanAttributeValue'
        description: A Boolean data value.
      NumberValue:
        $ref: '#/definitions/NumberAttributeValue'
        description: A number data value.
      DatetimeValue:
        $ref: '#/definitions/DatetimeAttributeValue'
        description: A date and time value.
    description: 'Represents the data for a typed attribute. You can set one, and only one, of the elements. Each attribute in an item is a name-value pair. Attributes have a single value.'
  TypedAttributeValueRange:
    type: object
    required:
      - StartMode
      - EndMode
    properties:
      StartMode:
        $ref: '#/definitions/RangeMode'
        description: Inclusive or exclusive range start.
      StartValue:
        $ref: '#/definitions/TypedAttributeValue'
        description: The value to start the range at.
      EndMode:
        $ref: '#/definitions/RangeMode'
        description: Inclusive or exclusive range end.
      EndValue:
        $ref: '#/definitions/TypedAttributeValue'
        description: The attribute value to terminate the range at.
    description: A range of attribute values.
  UnsupportedIndexTypeException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Indicates the requested index type is not supported.
  UntagResourceRequest:
    type: object
    required:
      - ResourceArn
      - TagKeys
    properties:
      ResourceArn:
        $ref: '#/definitions/Arn'
        description: ARN of the resource. Tagging is only supported for directories.
      TagKeys:
        $ref: '#/definitions/TagKeyList'
        description: Keys of the tag that needs to be removed from the resource.
  UntagResourceResponse:
    type: object
    properties: {}
  UpdateActionType:
    type: string
    enum:
      - CREATE_OR_UPDATE
      - DELETE
  UpdateFacetRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/FacetName'
        description: ' '
      AttributeUpdates:
        $ref: '#/definitions/FacetAttributeUpdateList'
        description: 'List of attributes that need to be updated in a given schema <a>Facet</a>. Each attribute is followed by AttributeAction, which specifies the type of update operation to perform. '
      ObjectType:
        $ref: '#/definitions/ObjectType'
        description: Object type associated with the facet. See <a>CreateFacetRequest$ObjectType</a> for more details.
  UpdateFacetResponse:
    type: object
    properties: {}
  UpdateObjectAttributesRequest:
    type: object
    required:
      - ObjectReference
      - AttributeUpdates
    properties:
      ObjectReference:
        $ref: '#/definitions/ObjectReference'
        description: Reference that identifies the object.
      AttributeUpdates:
        $ref: '#/definitions/ObjectAttributeUpdateList'
        description: Attributes update structure.
  UpdateObjectAttributesResponse:
    type: object
    properties:
      ObjectIdentifier:
        $ref: '#/definitions/ObjectIdentifier'
        description: ' <code>ObjectIdentifier</code> of the updated object.'
  UpdateSchemaRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/SchemaName'
        description: Name of the schema.
  UpdateSchemaResponse:
    type: object
    properties:
      SchemaArn:
        $ref: '#/definitions/Arn'
        description: 'ARN associated with the updated schema. For more information, see <a>arns</a>.'
  ValidationException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/ExceptionMessage'
    description: Indicates your request is malformed in some manner. See the exception message.
  Version:
    type: string
    pattern: '^[a-zA-Z0-9._-]*$'
    minLength: 1
    maxLength: 10
