{
  "swagger": "2.0",
  "info": {
    "version": "2015-05-28",
    "x-release": "v4",
    "title": "AWS IoT Data Plane",
    "description": "<fullname>AWS IoT</fullname> <p>AWS IoT-Data enables secure, bi-directional communication between Internet-connected things (such as sensors, actuators, embedded devices, or smart appliances) and the AWS cloud. It implements a broker for applications and things to publish messages over HTTP (Publish) and retrieve, update, and delete thing shadows. A thing shadow is a persistent representation of your things and their state in the AWS cloud.</p>",
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/aws2openapi"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    }
  },
  "x-logo": {
    "url": "https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg",
    "backgroundColor": "#FFFFFF"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/iot/"
  },
  "host": "data.iot.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "parameters": {
    "Action": {
      "name": "Action",
      "in": "header",
      "type": "string",
      "required": true
    },
    "Version": {
      "name": "Version",
      "in": "header",
      "type": "string",
      "required": true
    },
    "X-Amz-Content-Sha256": {
      "name": "X-Amz-Content-Sha256",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-Date": {
      "name": "X-Amz-Date",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-Algorithm": {
      "name": "X-Amz-Algorithm",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-Credential": {
      "name": "X-Amz-Credential",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-Security-Token": {
      "name": "X-Amz-Security-Token",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-Signature": {
      "name": "X-Amz-Signature",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-SignedHeaders": {
      "name": "X-Amz-SignedHeaders",
      "in": "header",
      "type": "string",
      "required": false
    }
  },
  "securityDefinitions": {
    "hmac": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Amazon Signature authorization v4",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "paths": {
    "/things/{thingName}/shadow": {
      "post": {
        "operationId": "UpdateThingShadow",
        "description": "<p>Updates the thing shadow for the specified thing.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/API_UpdateThingShadow.html\">UpdateThingShadow</a> in the <i>AWS IoT Developer Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateThingShadowResponse"
            }
          },
          "480": {
            "description": "ConflictException",
            "schema": {
              "$ref": "#/definitions/ConflictException"
            }
          },
          "481": {
            "description": "RequestEntityTooLargeException",
            "schema": {
              "$ref": "#/definitions/RequestEntityTooLargeException"
            }
          },
          "482": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "483": {
            "description": "ThrottlingException",
            "schema": {
              "$ref": "#/definitions/ThrottlingException"
            }
          },
          "484": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "485": {
            "description": "ServiceUnavailableException",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailableException"
            }
          },
          "486": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "487": {
            "description": "MethodNotAllowedException",
            "schema": {
              "$ref": "#/definitions/MethodNotAllowedException"
            }
          },
          "488": {
            "description": "UnsupportedDocumentEncodingException",
            "schema": {
              "$ref": "#/definitions/UnsupportedDocumentEncodingException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateThingShadowRequest"
            }
          },
          {
            "name": "thingName",
            "in": "path",
            "type": "string",
            "required": true
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/topics/{topic}": {
      "post": {
        "operationId": "Publish",
        "description": "<p>Publishes state information.</p> <p>For more information, see <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/protocols.html#http\">HTTP Protocol</a> in the <i>AWS IoT Developer Guide</i>.</p>",
        "responses": {
          "200": {
            "description": "Success"
          },
          "480": {
            "description": "InternalFailureException",
            "schema": {
              "$ref": "#/definitions/InternalFailureException"
            }
          },
          "481": {
            "description": "InvalidRequestException",
            "schema": {
              "$ref": "#/definitions/InvalidRequestException"
            }
          },
          "482": {
            "description": "UnauthorizedException",
            "schema": {
              "$ref": "#/definitions/UnauthorizedException"
            }
          },
          "483": {
            "description": "MethodNotAllowedException",
            "schema": {
              "$ref": "#/definitions/MethodNotAllowedException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublishRequest"
            }
          },
          {
            "name": "topic",
            "in": "path",
            "type": "string",
            "required": true
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    }
  },
  "definitions": {
    "ConflictException": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "The message for the exception."
        }
      },
      "description": "The specified version does not match the version of the document."
    },
    "DeleteThingShadowRequest": {
      "type": "object",
      "properties": {},
      "description": "The input for the DeleteThingShadow operation."
    },
    "DeleteThingShadowResponse": {
      "type": "object",
      "required": [
        "payload"
      ],
      "properties": {},
      "description": "The output from the DeleteThingShadow operation."
    },
    "ErrorMessage": {
      "type": "string"
    },
    "GetThingShadowRequest": {
      "type": "object",
      "properties": {},
      "description": "The input for the GetThingShadow operation."
    },
    "GetThingShadowResponse": {
      "type": "object",
      "properties": {},
      "description": "The output from the GetThingShadow operation."
    },
    "InternalFailureException": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/errorMessage",
          "description": "The message for the exception."
        }
      },
      "description": "An unexpected error has occurred."
    },
    "InvalidRequestException": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/errorMessage",
          "description": "The message for the exception."
        }
      },
      "description": "The request is not valid."
    },
    "JsonDocument": {
      "type": "string"
    },
    "MethodNotAllowedException": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "The message for the exception."
        }
      },
      "description": "The specified combination of HTTP verb and URI is not supported."
    },
    "Payload": {
      "type": "string"
    },
    "PublishRequest": {
      "type": "object",
      "properties": {},
      "description": "The input for the Publish operation."
    },
    "Qos": {
      "type": "integer",
      "minimum": 0,
      "maximum": 1
    },
    "RequestEntityTooLargeException": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "The message for the exception."
        }
      },
      "description": "The payload exceeds the maximum size allowed."
    },
    "ResourceNotFoundException": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/errorMessage",
          "description": "The message for the exception."
        }
      },
      "description": "The specified resource does not exist."
    },
    "ServiceUnavailableException": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/errorMessage",
          "description": "The message for the exception."
        }
      },
      "description": "The service is temporarily unavailable."
    },
    "ThingName": {
      "type": "string",
      "pattern": "[a-zA-Z0-9_-]+",
      "minLength": 1,
      "maxLength": 128
    },
    "ThrottlingException": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/errorMessage",
          "description": "The message for the exception."
        }
      },
      "description": "The rate exceeds the limit."
    },
    "Topic": {
      "type": "string"
    },
    "UnauthorizedException": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/errorMessage",
          "description": "The message for the exception."
        }
      },
      "description": "You are not authorized to perform this operation."
    },
    "UnsupportedDocumentEncodingException": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/errorMessage",
          "description": "The message for the exception."
        }
      },
      "description": "The document encoding is not supported."
    },
    "UpdateThingShadowRequest": {
      "type": "object",
      "required": [
        "payload"
      ],
      "properties": {},
      "description": "The input for the UpdateThingShadow operation."
    },
    "UpdateThingShadowResponse": {
      "type": "object",
      "properties": {},
      "description": "The output from the UpdateThingShadow operation."
    },
    "errorMessage": {
      "type": "string"
    }
  }
}