{
  "swagger": "2.0",
  "info": {
    "version": "2016-09-07",
    "x-release": "v4",
    "title": "Amazon CloudFront",
    "description": "<fullname>Amazon CloudFront</fullname> <p>Amazon CloudFront is a global content delivery network (CDN) service that accelerates delivery of your websites, APIs, video content or other web assets. It integrates with other Amazon Web Services products to give developers and businesses an easy way to accelerate content to end users with no minimum usage commitments.</p>",
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/aws2openapi"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    }
  },
  "x-logo": {
    "url": "https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg",
    "backgroundColor": "#FFFFFF"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/cloudfront/"
  },
  "host": "cloudfront.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "text/xml"
  ],
  "produces": [
    "text/xml"
  ],
  "parameters": {
    "Action": {
      "name": "Action",
      "in": "header",
      "type": "string",
      "required": true
    },
    "Version": {
      "name": "Version",
      "in": "header",
      "type": "string",
      "required": true
    },
    "X-Amz-Content-Sha256": {
      "name": "X-Amz-Content-Sha256",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-Date": {
      "name": "X-Amz-Date",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-Algorithm": {
      "name": "X-Amz-Algorithm",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-Credential": {
      "name": "X-Amz-Credential",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-Security-Token": {
      "name": "X-Amz-Security-Token",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-Signature": {
      "name": "X-Amz-Signature",
      "in": "header",
      "type": "string",
      "required": false
    },
    "X-Amz-SignedHeaders": {
      "name": "X-Amz-SignedHeaders",
      "in": "header",
      "type": "string",
      "required": false
    }
  },
  "securityDefinitions": {
    "hmac": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Amazon Signature authorization v4",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "paths": {
    "/2016-09-07/origin-access-identity/cloudfront": {
      "get": {
        "operationId": "ListCloudFrontOriginAccessIdentities",
        "description": "List origin access identities.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListCloudFrontOriginAccessIdentitiesResult"
            }
          },
          "480": {
            "description": "InvalidArgument",
            "schema": {
              "$ref": "#/definitions/InvalidArgument"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListCloudFrontOriginAccessIdentitiesRequest"
            }
          },
          {
            "name": "MaxItems",
            "type": "string",
            "in": "query",
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "Marker",
            "type": "string",
            "in": "query",
            "description": "Pagination token",
            "required": false
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/distribution": {
      "get": {
        "operationId": "ListDistributions",
        "description": "List distributions.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDistributionsResult"
            }
          },
          "480": {
            "description": "InvalidArgument",
            "schema": {
              "$ref": "#/definitions/InvalidArgument"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListDistributionsRequest"
            }
          },
          {
            "name": "MaxItems",
            "type": "string",
            "in": "query",
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "Marker",
            "type": "string",
            "in": "query",
            "description": "Pagination token",
            "required": false
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/distribution?WithTags": {
      "post": {
        "operationId": "CreateDistributionWithTags",
        "description": "Create a new distribution with tags.",
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateDistributionWithTagsResult"
            }
          },
          "480": {
            "description": "CNAMEAlreadyExists",
            "schema": {
              "$ref": "#/definitions/CNAMEAlreadyExists"
            }
          },
          "481": {
            "description": "DistributionAlreadyExists",
            "schema": {
              "$ref": "#/definitions/DistributionAlreadyExists"
            }
          },
          "482": {
            "description": "InvalidOrigin",
            "schema": {
              "$ref": "#/definitions/InvalidOrigin"
            }
          },
          "483": {
            "description": "InvalidOriginAccessIdentity",
            "schema": {
              "$ref": "#/definitions/InvalidOriginAccessIdentity"
            }
          },
          "484": {
            "description": "AccessDenied",
            "schema": {
              "$ref": "#/definitions/AccessDenied"
            }
          },
          "485": {
            "description": "TooManyTrustedSigners",
            "schema": {
              "$ref": "#/definitions/TooManyTrustedSigners"
            }
          },
          "486": {
            "description": "TrustedSignerDoesNotExist",
            "schema": {
              "$ref": "#/definitions/TrustedSignerDoesNotExist"
            }
          },
          "487": {
            "description": "InvalidViewerCertificate",
            "schema": {
              "$ref": "#/definitions/InvalidViewerCertificate"
            }
          },
          "488": {
            "description": "InvalidMinimumProtocolVersion",
            "schema": {
              "$ref": "#/definitions/InvalidMinimumProtocolVersion"
            }
          },
          "489": {
            "description": "MissingBody",
            "schema": {
              "$ref": "#/definitions/MissingBody"
            }
          },
          "490": {
            "description": "TooManyDistributionCNAMEs",
            "schema": {
              "$ref": "#/definitions/TooManyDistributionCNAMEs"
            }
          },
          "491": {
            "description": "TooManyDistributions",
            "schema": {
              "$ref": "#/definitions/TooManyDistributions"
            }
          },
          "492": {
            "description": "InvalidDefaultRootObject",
            "schema": {
              "$ref": "#/definitions/InvalidDefaultRootObject"
            }
          },
          "493": {
            "description": "InvalidRelativePath",
            "schema": {
              "$ref": "#/definitions/InvalidRelativePath"
            }
          },
          "494": {
            "description": "InvalidErrorCode",
            "schema": {
              "$ref": "#/definitions/InvalidErrorCode"
            }
          },
          "495": {
            "description": "InvalidResponseCode",
            "schema": {
              "$ref": "#/definitions/InvalidResponseCode"
            }
          },
          "496": {
            "description": "InvalidArgument",
            "schema": {
              "$ref": "#/definitions/InvalidArgument"
            }
          },
          "497": {
            "description": "InvalidRequiredProtocol",
            "schema": {
              "$ref": "#/definitions/InvalidRequiredProtocol"
            }
          },
          "498": {
            "description": "NoSuchOrigin",
            "schema": {
              "$ref": "#/definitions/NoSuchOrigin"
            }
          },
          "499": {
            "description": "TooManyOrigins",
            "schema": {
              "$ref": "#/definitions/TooManyOrigins"
            }
          },
          "500": {
            "description": "TooManyCacheBehaviors",
            "schema": {
              "$ref": "#/definitions/TooManyCacheBehaviors"
            }
          },
          "501": {
            "description": "TooManyCookieNamesInWhiteList",
            "schema": {
              "$ref": "#/definitions/TooManyCookieNamesInWhiteList"
            }
          },
          "502": {
            "description": "InvalidForwardCookies",
            "schema": {
              "$ref": "#/definitions/InvalidForwardCookies"
            }
          },
          "503": {
            "description": "TooManyHeadersInForwardedValues",
            "schema": {
              "$ref": "#/definitions/TooManyHeadersInForwardedValues"
            }
          },
          "504": {
            "description": "InvalidHeadersForS3Origin",
            "schema": {
              "$ref": "#/definitions/InvalidHeadersForS3Origin"
            }
          },
          "505": {
            "description": "InconsistentQuantities",
            "schema": {
              "$ref": "#/definitions/InconsistentQuantities"
            }
          },
          "506": {
            "description": "TooManyCertificates",
            "schema": {
              "$ref": "#/definitions/TooManyCertificates"
            }
          },
          "507": {
            "description": "InvalidLocationCode",
            "schema": {
              "$ref": "#/definitions/InvalidLocationCode"
            }
          },
          "508": {
            "description": "InvalidGeoRestrictionParameter",
            "schema": {
              "$ref": "#/definitions/InvalidGeoRestrictionParameter"
            }
          },
          "509": {
            "description": "InvalidProtocolSettings",
            "schema": {
              "$ref": "#/definitions/InvalidProtocolSettings"
            }
          },
          "510": {
            "description": "InvalidTTLOrder",
            "schema": {
              "$ref": "#/definitions/InvalidTTLOrder"
            }
          },
          "511": {
            "description": "InvalidWebACLId",
            "schema": {
              "$ref": "#/definitions/InvalidWebACLId"
            }
          },
          "512": {
            "description": "TooManyOriginCustomHeaders",
            "schema": {
              "$ref": "#/definitions/TooManyOriginCustomHeaders"
            }
          },
          "513": {
            "description": "InvalidTagging",
            "schema": {
              "$ref": "#/definitions/InvalidTagging"
            }
          },
          "514": {
            "description": "TooManyQueryStringParameters",
            "schema": {
              "$ref": "#/definitions/TooManyQueryStringParameters"
            }
          },
          "515": {
            "description": "InvalidQueryStringParameters",
            "schema": {
              "$ref": "#/definitions/InvalidQueryStringParameters"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDistributionWithTagsRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/distribution/{DistributionId}/invalidation": {
      "get": {
        "operationId": "ListInvalidations",
        "description": "List invalidation batches.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListInvalidationsResult"
            }
          },
          "480": {
            "description": "InvalidArgument",
            "schema": {
              "$ref": "#/definitions/InvalidArgument"
            }
          },
          "481": {
            "description": "NoSuchDistribution",
            "schema": {
              "$ref": "#/definitions/NoSuchDistribution"
            }
          },
          "482": {
            "description": "AccessDenied",
            "schema": {
              "$ref": "#/definitions/AccessDenied"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListInvalidationsRequest"
            }
          },
          {
            "name": "MaxItems",
            "type": "string",
            "in": "query",
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "Marker",
            "type": "string",
            "in": "query",
            "description": "Pagination token",
            "required": false
          },
          {
            "name": "DistributionId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/streaming-distribution": {
      "get": {
        "operationId": "ListStreamingDistributions",
        "description": "List streaming distributions.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListStreamingDistributionsResult"
            }
          },
          "480": {
            "description": "InvalidArgument",
            "schema": {
              "$ref": "#/definitions/InvalidArgument"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListStreamingDistributionsRequest"
            }
          },
          {
            "name": "MaxItems",
            "type": "string",
            "in": "query",
            "description": "Pagination limit",
            "required": false
          },
          {
            "name": "Marker",
            "type": "string",
            "in": "query",
            "description": "Pagination token",
            "required": false
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/streaming-distribution?WithTags": {
      "post": {
        "operationId": "CreateStreamingDistributionWithTags",
        "description": "Create a new streaming distribution with tags.",
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateStreamingDistributionWithTagsResult"
            }
          },
          "480": {
            "description": "CNAMEAlreadyExists",
            "schema": {
              "$ref": "#/definitions/CNAMEAlreadyExists"
            }
          },
          "481": {
            "description": "StreamingDistributionAlreadyExists",
            "schema": {
              "$ref": "#/definitions/StreamingDistributionAlreadyExists"
            }
          },
          "482": {
            "description": "InvalidOrigin",
            "schema": {
              "$ref": "#/definitions/InvalidOrigin"
            }
          },
          "483": {
            "description": "InvalidOriginAccessIdentity",
            "schema": {
              "$ref": "#/definitions/InvalidOriginAccessIdentity"
            }
          },
          "484": {
            "description": "AccessDenied",
            "schema": {
              "$ref": "#/definitions/AccessDenied"
            }
          },
          "485": {
            "description": "TooManyTrustedSigners",
            "schema": {
              "$ref": "#/definitions/TooManyTrustedSigners"
            }
          },
          "486": {
            "description": "TrustedSignerDoesNotExist",
            "schema": {
              "$ref": "#/definitions/TrustedSignerDoesNotExist"
            }
          },
          "487": {
            "description": "MissingBody",
            "schema": {
              "$ref": "#/definitions/MissingBody"
            }
          },
          "488": {
            "description": "TooManyStreamingDistributionCNAMEs",
            "schema": {
              "$ref": "#/definitions/TooManyStreamingDistributionCNAMEs"
            }
          },
          "489": {
            "description": "TooManyStreamingDistributions",
            "schema": {
              "$ref": "#/definitions/TooManyStreamingDistributions"
            }
          },
          "490": {
            "description": "InvalidArgument",
            "schema": {
              "$ref": "#/definitions/InvalidArgument"
            }
          },
          "491": {
            "description": "InconsistentQuantities",
            "schema": {
              "$ref": "#/definitions/InconsistentQuantities"
            }
          },
          "492": {
            "description": "InvalidTagging",
            "schema": {
              "$ref": "#/definitions/InvalidTagging"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateStreamingDistributionWithTagsRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/origin-access-identity/cloudfront/{Id}": {
      "get": {
        "operationId": "GetCloudFrontOriginAccessIdentity",
        "description": "Get the information about an origin access identity.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetCloudFrontOriginAccessIdentityResult"
            }
          },
          "480": {
            "description": "NoSuchCloudFrontOriginAccessIdentity",
            "schema": {
              "$ref": "#/definitions/NoSuchCloudFrontOriginAccessIdentity"
            }
          },
          "481": {
            "description": "AccessDenied",
            "schema": {
              "$ref": "#/definitions/AccessDenied"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCloudFrontOriginAccessIdentityRequest"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/distribution/{Id}": {
      "get": {
        "operationId": "GetDistribution",
        "description": "Get the information about a distribution.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetDistributionResult"
            }
          },
          "480": {
            "description": "NoSuchDistribution",
            "schema": {
              "$ref": "#/definitions/NoSuchDistribution"
            }
          },
          "481": {
            "description": "AccessDenied",
            "schema": {
              "$ref": "#/definitions/AccessDenied"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDistributionRequest"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "x-waiters": [
          {
            "delay": 60,
            "operation": "GetDistribution",
            "maxAttempts": 25,
            "description": "Wait until a distribution is deployed.",
            "acceptors": [
              {
                "expected": "Deployed",
                "matcher": "path",
                "state": "success",
                "argument": "Distribution.Status"
              }
            ]
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/streaming-distribution/{Id}": {
      "get": {
        "operationId": "GetStreamingDistribution",
        "description": "Get the information about a streaming distribution.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetStreamingDistributionResult"
            }
          },
          "480": {
            "description": "NoSuchStreamingDistribution",
            "schema": {
              "$ref": "#/definitions/NoSuchStreamingDistribution"
            }
          },
          "481": {
            "description": "AccessDenied",
            "schema": {
              "$ref": "#/definitions/AccessDenied"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetStreamingDistributionRequest"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "x-waiters": [
          {
            "delay": 60,
            "operation": "GetStreamingDistribution",
            "maxAttempts": 25,
            "description": "Wait until a streaming distribution is deployed.",
            "acceptors": [
              {
                "expected": "Deployed",
                "matcher": "path",
                "state": "success",
                "argument": "StreamingDistribution.Status"
              }
            ]
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/origin-access-identity/cloudfront/{Id}/config": {
      "put": {
        "operationId": "UpdateCloudFrontOriginAccessIdentity",
        "description": "Update an origin access identity.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateCloudFrontOriginAccessIdentityResult"
            }
          },
          "480": {
            "description": "AccessDenied",
            "schema": {
              "$ref": "#/definitions/AccessDenied"
            }
          },
          "481": {
            "description": "IllegalUpdate",
            "schema": {
              "$ref": "#/definitions/IllegalUpdate"
            }
          },
          "482": {
            "description": "InvalidIfMatchVersion",
            "schema": {
              "$ref": "#/definitions/InvalidIfMatchVersion"
            }
          },
          "483": {
            "description": "MissingBody",
            "schema": {
              "$ref": "#/definitions/MissingBody"
            }
          },
          "484": {
            "description": "NoSuchCloudFrontOriginAccessIdentity",
            "schema": {
              "$ref": "#/definitions/NoSuchCloudFrontOriginAccessIdentity"
            }
          },
          "485": {
            "description": "PreconditionFailed",
            "schema": {
              "$ref": "#/definitions/PreconditionFailed"
            }
          },
          "486": {
            "description": "InvalidArgument",
            "schema": {
              "$ref": "#/definitions/InvalidArgument"
            }
          },
          "487": {
            "description": "InconsistentQuantities",
            "schema": {
              "$ref": "#/definitions/InconsistentQuantities"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCloudFrontOriginAccessIdentityRequest"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/distribution/{Id}/config": {
      "put": {
        "operationId": "UpdateDistribution",
        "description": "Update a distribution.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateDistributionResult"
            }
          },
          "480": {
            "description": "AccessDenied",
            "schema": {
              "$ref": "#/definitions/AccessDenied"
            }
          },
          "481": {
            "description": "CNAMEAlreadyExists",
            "schema": {
              "$ref": "#/definitions/CNAMEAlreadyExists"
            }
          },
          "482": {
            "description": "IllegalUpdate",
            "schema": {
              "$ref": "#/definitions/IllegalUpdate"
            }
          },
          "483": {
            "description": "InvalidIfMatchVersion",
            "schema": {
              "$ref": "#/definitions/InvalidIfMatchVersion"
            }
          },
          "484": {
            "description": "MissingBody",
            "schema": {
              "$ref": "#/definitions/MissingBody"
            }
          },
          "485": {
            "description": "NoSuchDistribution",
            "schema": {
              "$ref": "#/definitions/NoSuchDistribution"
            }
          },
          "486": {
            "description": "PreconditionFailed",
            "schema": {
              "$ref": "#/definitions/PreconditionFailed"
            }
          },
          "487": {
            "description": "TooManyDistributionCNAMEs",
            "schema": {
              "$ref": "#/definitions/TooManyDistributionCNAMEs"
            }
          },
          "488": {
            "description": "InvalidDefaultRootObject",
            "schema": {
              "$ref": "#/definitions/InvalidDefaultRootObject"
            }
          },
          "489": {
            "description": "InvalidRelativePath",
            "schema": {
              "$ref": "#/definitions/InvalidRelativePath"
            }
          },
          "490": {
            "description": "InvalidErrorCode",
            "schema": {
              "$ref": "#/definitions/InvalidErrorCode"
            }
          },
          "491": {
            "description": "InvalidResponseCode",
            "schema": {
              "$ref": "#/definitions/InvalidResponseCode"
            }
          },
          "492": {
            "description": "InvalidArgument",
            "schema": {
              "$ref": "#/definitions/InvalidArgument"
            }
          },
          "493": {
            "description": "InvalidOriginAccessIdentity",
            "schema": {
              "$ref": "#/definitions/InvalidOriginAccessIdentity"
            }
          },
          "494": {
            "description": "TooManyTrustedSigners",
            "schema": {
              "$ref": "#/definitions/TooManyTrustedSigners"
            }
          },
          "495": {
            "description": "TrustedSignerDoesNotExist",
            "schema": {
              "$ref": "#/definitions/TrustedSignerDoesNotExist"
            }
          },
          "496": {
            "description": "InvalidViewerCertificate",
            "schema": {
              "$ref": "#/definitions/InvalidViewerCertificate"
            }
          },
          "497": {
            "description": "InvalidMinimumProtocolVersion",
            "schema": {
              "$ref": "#/definitions/InvalidMinimumProtocolVersion"
            }
          },
          "498": {
            "description": "InvalidRequiredProtocol",
            "schema": {
              "$ref": "#/definitions/InvalidRequiredProtocol"
            }
          },
          "499": {
            "description": "NoSuchOrigin",
            "schema": {
              "$ref": "#/definitions/NoSuchOrigin"
            }
          },
          "500": {
            "description": "TooManyOrigins",
            "schema": {
              "$ref": "#/definitions/TooManyOrigins"
            }
          },
          "501": {
            "description": "TooManyCacheBehaviors",
            "schema": {
              "$ref": "#/definitions/TooManyCacheBehaviors"
            }
          },
          "502": {
            "description": "TooManyCookieNamesInWhiteList",
            "schema": {
              "$ref": "#/definitions/TooManyCookieNamesInWhiteList"
            }
          },
          "503": {
            "description": "InvalidForwardCookies",
            "schema": {
              "$ref": "#/definitions/InvalidForwardCookies"
            }
          },
          "504": {
            "description": "TooManyHeadersInForwardedValues",
            "schema": {
              "$ref": "#/definitions/TooManyHeadersInForwardedValues"
            }
          },
          "505": {
            "description": "InvalidHeadersForS3Origin",
            "schema": {
              "$ref": "#/definitions/InvalidHeadersForS3Origin"
            }
          },
          "506": {
            "description": "InconsistentQuantities",
            "schema": {
              "$ref": "#/definitions/InconsistentQuantities"
            }
          },
          "507": {
            "description": "TooManyCertificates",
            "schema": {
              "$ref": "#/definitions/TooManyCertificates"
            }
          },
          "508": {
            "description": "InvalidLocationCode",
            "schema": {
              "$ref": "#/definitions/InvalidLocationCode"
            }
          },
          "509": {
            "description": "InvalidGeoRestrictionParameter",
            "schema": {
              "$ref": "#/definitions/InvalidGeoRestrictionParameter"
            }
          },
          "510": {
            "description": "InvalidTTLOrder",
            "schema": {
              "$ref": "#/definitions/InvalidTTLOrder"
            }
          },
          "511": {
            "description": "InvalidWebACLId",
            "schema": {
              "$ref": "#/definitions/InvalidWebACLId"
            }
          },
          "512": {
            "description": "TooManyOriginCustomHeaders",
            "schema": {
              "$ref": "#/definitions/TooManyOriginCustomHeaders"
            }
          },
          "513": {
            "description": "TooManyQueryStringParameters",
            "schema": {
              "$ref": "#/definitions/TooManyQueryStringParameters"
            }
          },
          "514": {
            "description": "InvalidQueryStringParameters",
            "schema": {
              "$ref": "#/definitions/InvalidQueryStringParameters"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDistributionRequest"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/distribution/{DistributionId}/invalidation/{Id}": {
      "get": {
        "operationId": "GetInvalidation",
        "description": "Get the information about an invalidation.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetInvalidationResult"
            }
          },
          "480": {
            "description": "NoSuchInvalidation",
            "schema": {
              "$ref": "#/definitions/NoSuchInvalidation"
            }
          },
          "481": {
            "description": "NoSuchDistribution",
            "schema": {
              "$ref": "#/definitions/NoSuchDistribution"
            }
          },
          "482": {
            "description": "AccessDenied",
            "schema": {
              "$ref": "#/definitions/AccessDenied"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetInvalidationRequest"
            }
          },
          {
            "name": "DistributionId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "x-waiters": [
          {
            "delay": 20,
            "operation": "GetInvalidation",
            "maxAttempts": 30,
            "description": "Wait until an invalidation has completed.",
            "acceptors": [
              {
                "expected": "Completed",
                "matcher": "path",
                "state": "success",
                "argument": "Invalidation.Status"
              }
            ]
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/streaming-distribution/{Id}/config": {
      "put": {
        "operationId": "UpdateStreamingDistribution",
        "description": "Update a streaming distribution.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateStreamingDistributionResult"
            }
          },
          "480": {
            "description": "AccessDenied",
            "schema": {
              "$ref": "#/definitions/AccessDenied"
            }
          },
          "481": {
            "description": "CNAMEAlreadyExists",
            "schema": {
              "$ref": "#/definitions/CNAMEAlreadyExists"
            }
          },
          "482": {
            "description": "IllegalUpdate",
            "schema": {
              "$ref": "#/definitions/IllegalUpdate"
            }
          },
          "483": {
            "description": "InvalidIfMatchVersion",
            "schema": {
              "$ref": "#/definitions/InvalidIfMatchVersion"
            }
          },
          "484": {
            "description": "MissingBody",
            "schema": {
              "$ref": "#/definitions/MissingBody"
            }
          },
          "485": {
            "description": "NoSuchStreamingDistribution",
            "schema": {
              "$ref": "#/definitions/NoSuchStreamingDistribution"
            }
          },
          "486": {
            "description": "PreconditionFailed",
            "schema": {
              "$ref": "#/definitions/PreconditionFailed"
            }
          },
          "487": {
            "description": "TooManyStreamingDistributionCNAMEs",
            "schema": {
              "$ref": "#/definitions/TooManyStreamingDistributionCNAMEs"
            }
          },
          "488": {
            "description": "InvalidArgument",
            "schema": {
              "$ref": "#/definitions/InvalidArgument"
            }
          },
          "489": {
            "description": "InvalidOriginAccessIdentity",
            "schema": {
              "$ref": "#/definitions/InvalidOriginAccessIdentity"
            }
          },
          "490": {
            "description": "TooManyTrustedSigners",
            "schema": {
              "$ref": "#/definitions/TooManyTrustedSigners"
            }
          },
          "491": {
            "description": "TrustedSignerDoesNotExist",
            "schema": {
              "$ref": "#/definitions/TrustedSignerDoesNotExist"
            }
          },
          "492": {
            "description": "InconsistentQuantities",
            "schema": {
              "$ref": "#/definitions/InconsistentQuantities"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateStreamingDistributionRequest"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/distributionsByWebACLId/{WebACLId}": {
      "get": {
        "operationId": "ListDistributionsByWebACLId",
        "description": "List the distributions that are associated with a specified AWS WAF web ACL.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListDistributionsByWebACLIdResult"
            }
          },
          "480": {
            "description": "InvalidArgument",
            "schema": {
              "$ref": "#/definitions/InvalidArgument"
            }
          },
          "481": {
            "description": "InvalidWebACLId",
            "schema": {
              "$ref": "#/definitions/InvalidWebACLId"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListDistributionsByWebACLIdRequest"
            }
          },
          {
            "name": "WebACLId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/tagging": {
      "get": {
        "operationId": "ListTagsForResource",
        "description": "List tags for a CloudFront resource.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceResult"
            }
          },
          "480": {
            "description": "AccessDenied",
            "schema": {
              "$ref": "#/definitions/AccessDenied"
            }
          },
          "481": {
            "description": "InvalidArgument",
            "schema": {
              "$ref": "#/definitions/InvalidArgument"
            }
          },
          "482": {
            "description": "InvalidTagging",
            "schema": {
              "$ref": "#/definitions/InvalidTagging"
            }
          },
          "483": {
            "description": "NoSuchResource",
            "schema": {
              "$ref": "#/definitions/NoSuchResource"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListTagsForResourceRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/tagging?Operation=Tag": {
      "post": {
        "operationId": "TagResource",
        "description": "Add tags to a CloudFront resource.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "AccessDenied",
            "schema": {
              "$ref": "#/definitions/AccessDenied"
            }
          },
          "481": {
            "description": "InvalidArgument",
            "schema": {
              "$ref": "#/definitions/InvalidArgument"
            }
          },
          "482": {
            "description": "InvalidTagging",
            "schema": {
              "$ref": "#/definitions/InvalidTagging"
            }
          },
          "483": {
            "description": "NoSuchResource",
            "schema": {
              "$ref": "#/definitions/NoSuchResource"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagResourceRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    },
    "/2016-09-07/tagging?Operation=Untag": {
      "post": {
        "operationId": "UntagResource",
        "description": "Remove tags from a CloudFront resource.",
        "responses": {
          "204": {
            "description": "Success"
          },
          "480": {
            "description": "AccessDenied",
            "schema": {
              "$ref": "#/definitions/AccessDenied"
            }
          },
          "481": {
            "description": "InvalidArgument",
            "schema": {
              "$ref": "#/definitions/InvalidArgument"
            }
          },
          "482": {
            "description": "InvalidTagging",
            "schema": {
              "$ref": "#/definitions/InvalidTagging"
            }
          },
          "483": {
            "description": "NoSuchResource",
            "schema": {
              "$ref": "#/definitions/NoSuchResource"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UntagResourceRequest"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/Action"
        },
        {
          "$ref": "#/parameters/Version"
        },
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        },
        {
          "$ref": "#/parameters/X-Amz-Algorithm"
        },
        {
          "$ref": "#/parameters/X-Amz-Credential"
        },
        {
          "$ref": "#/parameters/X-Amz-Security-Token"
        },
        {
          "$ref": "#/parameters/X-Amz-Signature"
        },
        {
          "$ref": "#/parameters/X-Amz-SignedHeaders"
        }
      ]
    }
  },
  "definitions": {
    "AccessDenied": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "Access denied."
    },
    "ActiveTrustedSigners": {
      "type": "object",
      "required": [
        "Enabled",
        "Quantity"
      ],
      "properties": {
        "Enabled": {
          "$ref": "#/definitions/boolean",
          "description": "Each active trusted signer."
        },
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of unique trusted signers included in all cache behaviors. For example, if three cache behaviors all list the same three AWS accounts, the value of Quantity for ActiveTrustedSigners will be 3."
        },
        "Items": {
          "$ref": "#/definitions/SignerList",
          "description": "A complex type that contains one Signer complex type for each unique trusted signer that is specified in the TrustedSigners complex type, including trusted signers in the default cache behavior and in all of the other cache behaviors."
        }
      },
      "description": "A complex type that lists the AWS accounts, if any, that you included in the TrustedSigners complex type for the default cache behavior or for any of the other cache behaviors for this distribution. These are accounts that you want to allow to create signed URLs for private content."
    },
    "AliasList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/string"
      }
    },
    "Aliases": {
      "type": "object",
      "required": [
        "Quantity"
      ],
      "properties": {
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of CNAMEs, if any, for this distribution."
        },
        "Items": {
          "$ref": "#/definitions/AliasList",
          "description": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items."
        }
      },
      "description": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution."
    },
    "AllowedMethods": {
      "type": "object",
      "required": [
        "Quantity",
        "Items"
      ],
      "properties": {
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests), 3 (for GET, HEAD and OPTIONS requests) and 7 (for GET, HEAD, OPTIONS, PUT, PATCH, POST, and DELETE requests)."
        },
        "Items": {
          "$ref": "#/definitions/MethodsList",
          "description": "A complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin."
        },
        "CachedMethods": {
          "$ref": "#/definitions/CachedMethods"
        }
      },
      "description": "A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices: - CloudFront forwards only GET and HEAD requests. - CloudFront forwards only GET, HEAD and OPTIONS requests. - CloudFront forwards GET, HEAD, OPTIONS, PUT, PATCH, POST, and DELETE requests. If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you may not want users to have permission to delete objects from your origin."
    },
    "AwsAccountNumberList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/string"
      }
    },
    "BatchTooLarge": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "CNAMEAlreadyExists": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "CacheBehavior": {
      "type": "object",
      "required": [
        "PathPattern",
        "TargetOriginId",
        "ForwardedValues",
        "TrustedSigners",
        "ViewerProtocolPolicy",
        "MinTTL"
      ],
      "properties": {
        "PathPattern": {
          "$ref": "#/definitions/string",
          "description": "The pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to. When CloudFront receives an end-user request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution. The path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior."
        },
        "TargetOriginId": {
          "$ref": "#/definitions/string",
          "description": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior."
        },
        "ForwardedValues": {
          "$ref": "#/definitions/ForwardedValues",
          "description": "A complex type that specifies how CloudFront handles query strings, cookies and headers."
        },
        "TrustedSigners": {
          "$ref": "#/definitions/TrustedSigners",
          "description": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution."
        },
        "ViewerProtocolPolicy": {
          "$ref": "#/definitions/ViewerProtocolPolicy",
          "description": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https. If you want CloudFront to respond to an HTTP request with an HTTP status code of 301 (Moved Permanently) and the HTTPS URL, specify redirect-to-https. The viewer then resubmits the request using the HTTPS URL."
        },
        "MinTTL": {
          "$ref": "#/definitions/long",
          "description": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years)."
        },
        "AllowedMethods": {
          "$ref": "#/definitions/AllowedMethods"
        },
        "SmoothStreaming": {
          "$ref": "#/definitions/boolean",
          "description": "Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true; if not, specify false."
        },
        "DefaultTTL": {
          "$ref": "#/definitions/long",
          "description": "If you don't configure your origin to add a Cache-Control max-age directive or an Expires header, DefaultTTL is the default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age, Cache-Control s-maxage, and Expires to objects. You can specify a value from 0 to 3,153,600,000 seconds (100 years)."
        },
        "MaxTTL": {
          "$ref": "#/definitions/long",
          "description": "The maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age, Cache-Control s-maxage, and Expires to objects. You can specify a value from 0 to 3,153,600,000 seconds (100 years)."
        },
        "Compress": {
          "$ref": "#/definitions/boolean",
          "description": "Whether you want CloudFront to automatically compress content for web requests that include Accept-Encoding: gzip in the request header. If so, specify true; if not, specify false. CloudFront compresses files larger than 1000 bytes and less than 1 megabyte for both Amazon S3 and custom origins. When a CloudFront edge location is unusually busy, some files might not be compressed. The value of the Content-Type header must be on the list of file types that CloudFront will compress. For the current list, see <a href=\"http://docs.aws.amazon.com/console/cloudfront/compressed-content\">Serving Compressed Content</a> in the Amazon CloudFront Developer Guide. If you configure CloudFront to compress content, CloudFront removes the ETag response header from the objects that it compresses. The ETag header indicates that the version in a CloudFront edge cache is identical to the version on the origin server, but after compression the two versions are no longer identical. As a result, for compressed objects, CloudFront can't use the ETag header to determine whether an expired object in the CloudFront edge cache is still the latest version."
        }
      },
      "description": "A complex type that describes how CloudFront processes requests. You can create up to 10 cache behaviors.You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to distribute objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin will never be used. If you don't want to specify any cache behaviors, include only an empty CacheBehaviors element. Don't include an empty CacheBehavior element, or CloudFront returns a MalformedXML error. To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty CacheBehaviors element. To add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution."
    },
    "CacheBehaviorList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CacheBehavior"
      }
    },
    "CacheBehaviors": {
      "type": "object",
      "required": [
        "Quantity"
      ],
      "properties": {
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of cache behaviors for this distribution."
        },
        "Items": {
          "$ref": "#/definitions/CacheBehaviorList",
          "description": "Optional: A complex type that contains cache behaviors for this distribution. If Quantity is 0, you can omit Items."
        }
      },
      "description": "A complex type that contains zero or more CacheBehavior elements."
    },
    "CachedMethods": {
      "type": "object",
      "required": [
        "Quantity",
        "Items"
      ],
      "properties": {
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of HTTP methods for which you want CloudFront to cache responses. Valid values are 2 (for caching responses to GET and HEAD requests) and 3 (for caching responses to GET, HEAD, and OPTIONS requests)."
        },
        "Items": {
          "$ref": "#/definitions/MethodsList",
          "description": "A complex type that contains the HTTP methods that you want CloudFront to cache responses to."
        }
      },
      "description": "A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices: - CloudFront caches responses to GET and HEAD requests. - CloudFront caches responses to GET, HEAD, and OPTIONS requests. If you pick the second choice for your S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers and Origin headers for the responses to be cached correctly."
    },
    "CertificateSource": {
      "type": "string",
      "enum": [
        "cloudfront",
        "iam",
        "acm"
      ]
    },
    "CloudFrontOriginAccessIdentity": {
      "type": "object",
      "required": [
        "Id",
        "S3CanonicalUserId"
      ],
      "properties": {
        "Id": {
          "$ref": "#/definitions/string",
          "description": "The ID for the origin access identity. For example: E74FTE3AJFJ256A."
        },
        "S3CanonicalUserId": {
          "$ref": "#/definitions/string",
          "description": "The Amazon S3 canonical user ID for the origin access identity, which you use when giving the origin access identity read permission to an object in Amazon S3."
        },
        "CloudFrontOriginAccessIdentityConfig": {
          "$ref": "#/definitions/CloudFrontOriginAccessIdentityConfig",
          "description": "The current configuration information for the identity."
        }
      },
      "description": "CloudFront origin access identity."
    },
    "CloudFrontOriginAccessIdentityAlreadyExists": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "If the CallerReference is a value you already sent in a previous request to create an identity but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error."
    },
    "CloudFrontOriginAccessIdentityConfig": {
      "type": "object",
      "required": [
        "CallerReference",
        "Comment"
      ],
      "properties": {
        "CallerReference": {
          "$ref": "#/definitions/string",
          "description": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created. If the CallerReference is a value you already sent in a previous request to create an identity, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create an identity but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error."
        },
        "Comment": {
          "$ref": "#/definitions/string",
          "description": "Any comments you want to include about the origin access identity."
        }
      },
      "description": "Origin access identity configuration."
    },
    "CloudFrontOriginAccessIdentityInUse": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "CloudFrontOriginAccessIdentityList": {
      "type": "object",
      "required": [
        "Marker",
        "MaxItems",
        "IsTruncated",
        "Quantity"
      ],
      "properties": {
        "Marker": {
          "$ref": "#/definitions/string",
          "description": "The value you provided for the Marker request parameter."
        },
        "NextMarker": {
          "$ref": "#/definitions/string",
          "description": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your origin access identities where they left off."
        },
        "MaxItems": {
          "$ref": "#/definitions/integer",
          "description": "The value you provided for the MaxItems request parameter."
        },
        "IsTruncated": {
          "$ref": "#/definitions/boolean",
          "description": "A flag that indicates whether more origin access identities remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more items in the list."
        },
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of CloudFront origin access identities that were created by the current AWS account."
        },
        "Items": {
          "$ref": "#/definitions/CloudFrontOriginAccessIdentitySummaryList",
          "description": "A complex type that contains one CloudFrontOriginAccessIdentitySummary element for each origin access identity that was created by the current AWS account."
        }
      },
      "description": "The CloudFrontOriginAccessIdentityList type."
    },
    "CloudFrontOriginAccessIdentitySummary": {
      "type": "object",
      "required": [
        "Id",
        "S3CanonicalUserId",
        "Comment"
      ],
      "properties": {
        "Id": {
          "$ref": "#/definitions/string",
          "description": "The ID for the origin access identity. For example: E74FTE3AJFJ256A."
        },
        "S3CanonicalUserId": {
          "$ref": "#/definitions/string",
          "description": "The Amazon S3 canonical user ID for the origin access identity, which you use when giving the origin access identity read permission to an object in Amazon S3."
        },
        "Comment": {
          "$ref": "#/definitions/string",
          "description": "The comment for this origin access identity, as originally specified when created."
        }
      },
      "description": "Summary of the information about a CloudFront origin access identity."
    },
    "CloudFrontOriginAccessIdentitySummaryList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CloudFrontOriginAccessIdentitySummary"
      }
    },
    "CookieNameList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/string"
      }
    },
    "CookieNames": {
      "type": "object",
      "required": [
        "Quantity"
      ],
      "properties": {
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of whitelisted cookies for this cache behavior."
        },
        "Items": {
          "$ref": "#/definitions/CookieNameList",
          "description": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items."
        }
      },
      "description": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior."
    },
    "CookiePreference": {
      "type": "object",
      "required": [
        "Forward"
      ],
      "properties": {
        "Forward": {
          "$ref": "#/definitions/ItemSelection",
          "description": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses."
        },
        "WhitelistedNames": {
          "$ref": "#/definitions/CookieNames",
          "description": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior."
        }
      },
      "description": "A complex type that specifies the cookie preferences associated with this cache behavior."
    },
    "CreateCloudFrontOriginAccessIdentityRequest": {
      "type": "object",
      "required": [
        "CloudFrontOriginAccessIdentityConfig"
      ],
      "properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "$ref": "#/definitions/CloudFrontOriginAccessIdentityConfig",
          "description": "The origin access identity's configuration information."
        }
      },
      "description": "The request to create a new origin access identity.",
      "xml": {
        "namespace": "http://cloudfront.amazonaws.com/doc/2016-09-07/"
      }
    },
    "CreateCloudFrontOriginAccessIdentityResult": {
      "type": "object",
      "properties": {
        "CloudFrontOriginAccessIdentity": {
          "$ref": "#/definitions/CloudFrontOriginAccessIdentity",
          "description": "The origin access identity's information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "CreateDistributionRequest": {
      "type": "object",
      "required": [
        "DistributionConfig"
      ],
      "properties": {
        "DistributionConfig": {
          "$ref": "#/definitions/DistributionConfig",
          "description": "The distribution's configuration information."
        }
      },
      "description": "The request to create a new distribution.",
      "xml": {
        "namespace": "http://cloudfront.amazonaws.com/doc/2016-09-07/"
      }
    },
    "CreateDistributionResult": {
      "type": "object",
      "properties": {
        "Distribution": {
          "$ref": "#/definitions/Distribution",
          "description": "The distribution's information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "CreateDistributionWithTagsRequest": {
      "type": "object",
      "required": [
        "DistributionConfigWithTags"
      ],
      "properties": {
        "DistributionConfigWithTags": {
          "$ref": "#/definitions/DistributionConfigWithTags",
          "description": "The distribution's configuration information."
        }
      },
      "description": "The request to create a new distribution with tags",
      "xml": {
        "namespace": "http://cloudfront.amazonaws.com/doc/2016-09-07/"
      }
    },
    "CreateDistributionWithTagsResult": {
      "type": "object",
      "properties": {
        "Distribution": {
          "$ref": "#/definitions/Distribution",
          "description": "The distribution's information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "CreateInvalidationRequest": {
      "type": "object",
      "required": [
        "InvalidationBatch"
      ],
      "properties": {
        "InvalidationBatch": {
          "$ref": "#/definitions/InvalidationBatch",
          "description": "The batch information for the invalidation."
        }
      },
      "description": "The request to create an invalidation.",
      "xml": {
        "namespace": "http://cloudfront.amazonaws.com/doc/2016-09-07/"
      }
    },
    "CreateInvalidationResult": {
      "type": "object",
      "properties": {
        "Invalidation": {
          "$ref": "#/definitions/Invalidation",
          "description": "The invalidation's information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "CreateStreamingDistributionRequest": {
      "type": "object",
      "required": [
        "StreamingDistributionConfig"
      ],
      "properties": {
        "StreamingDistributionConfig": {
          "$ref": "#/definitions/StreamingDistributionConfig",
          "description": "The streaming distribution's configuration information."
        }
      },
      "description": "The request to create a new streaming distribution.",
      "xml": {
        "namespace": "http://cloudfront.amazonaws.com/doc/2016-09-07/"
      }
    },
    "CreateStreamingDistributionResult": {
      "type": "object",
      "properties": {
        "StreamingDistribution": {
          "$ref": "#/definitions/StreamingDistribution",
          "description": "The streaming distribution's information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "CreateStreamingDistributionWithTagsRequest": {
      "type": "object",
      "required": [
        "StreamingDistributionConfigWithTags"
      ],
      "properties": {
        "StreamingDistributionConfigWithTags": {
          "$ref": "#/definitions/StreamingDistributionConfigWithTags",
          "description": "The streaming distribution's configuration information."
        }
      },
      "description": "The request to create a new streaming distribution with tags.",
      "xml": {
        "namespace": "http://cloudfront.amazonaws.com/doc/2016-09-07/"
      }
    },
    "CreateStreamingDistributionWithTagsResult": {
      "type": "object",
      "properties": {
        "StreamingDistribution": {
          "$ref": "#/definitions/StreamingDistribution",
          "description": "The streaming distribution's information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "CustomErrorResponse": {
      "type": "object",
      "required": [
        "ErrorCode"
      ],
      "properties": {
        "ErrorCode": {
          "$ref": "#/definitions/integer",
          "description": "The 4xx or 5xx HTTP status code that you want to customize. For a list of HTTP status codes that you can customize, see CloudFront documentation."
        },
        "ResponsePagePath": {
          "$ref": "#/definitions/string",
          "description": "The path of the custom error page (for example, /custom_404.html). The path is relative to the distribution and must begin with a slash (/). If the path includes any non-ASCII characters or unsafe characters as defined in RFC 1783 (http://www.ietf.org/rfc/rfc1738.txt), URL encode those characters. Do not URL encode any other characters in the path, or CloudFront will not return the custom error page to the viewer."
        },
        "ResponseCode": {
          "$ref": "#/definitions/string",
          "description": "The HTTP status code that you want CloudFront to return with the custom error page to the viewer. For a list of HTTP status codes that you can replace, see CloudFront Documentation."
        },
        "ErrorCachingMinTTL": {
          "$ref": "#/definitions/long",
          "description": "The minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. You can specify a value from 0 to 31,536,000."
        }
      },
      "description": "A complex type that describes how you'd prefer CloudFront to respond to requests that result in either a 4xx or 5xx response. You can control whether a custom error page should be displayed, what the desired response code should be for this error page and how long should the error response be cached by CloudFront. If you don't want to specify any custom error responses, include only an empty CustomErrorResponses element. To delete all custom error responses in an existing distribution, update the distribution configuration and include only an empty CustomErrorResponses element. To add, change, or remove one or more custom error responses, update the distribution configuration and specify all of the custom error responses that you want to include in the updated distribution."
    },
    "CustomErrorResponseList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CustomErrorResponse"
      }
    },
    "CustomErrorResponses": {
      "type": "object",
      "required": [
        "Quantity"
      ],
      "properties": {
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of custom error responses for this distribution."
        },
        "Items": {
          "$ref": "#/definitions/CustomErrorResponseList",
          "description": "Optional: A complex type that contains custom error responses for this distribution. If Quantity is 0, you can omit Items."
        }
      },
      "description": "A complex type that contains zero or more CustomErrorResponse elements."
    },
    "CustomHeaders": {
      "type": "object",
      "required": [
        "Quantity"
      ],
      "properties": {
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of custom headers for this origin."
        },
        "Items": {
          "$ref": "#/definitions/OriginCustomHeadersList",
          "description": "A complex type that contains the custom headers for this Origin."
        }
      },
      "description": "A complex type that contains the list of Custom Headers for each origin."
    },
    "CustomOriginConfig": {
      "type": "object",
      "required": [
        "HTTPPort",
        "HTTPSPort",
        "OriginProtocolPolicy"
      ],
      "properties": {
        "HTTPPort": {
          "$ref": "#/definitions/integer",
          "description": "The HTTP port the custom origin listens on."
        },
        "HTTPSPort": {
          "$ref": "#/definitions/integer",
          "description": "The HTTPS port the custom origin listens on."
        },
        "OriginProtocolPolicy": {
          "$ref": "#/definitions/OriginProtocolPolicy",
          "description": "The origin protocol policy to apply to your origin."
        },
        "OriginSslProtocols": {
          "$ref": "#/definitions/OriginSslProtocols",
          "description": "The SSL/TLS protocols that you want CloudFront to use when communicating with your origin over HTTPS."
        }
      },
      "description": "A customer origin."
    },
    "DefaultCacheBehavior": {
      "type": "object",
      "required": [
        "TargetOriginId",
        "ForwardedValues",
        "TrustedSigners",
        "ViewerProtocolPolicy",
        "MinTTL"
      ],
      "properties": {
        "TargetOriginId": {
          "$ref": "#/definitions/string",
          "description": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior."
        },
        "ForwardedValues": {
          "$ref": "#/definitions/ForwardedValues",
          "description": "A complex type that specifies how CloudFront handles query strings, cookies and headers."
        },
        "TrustedSigners": {
          "$ref": "#/definitions/TrustedSigners",
          "description": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution."
        },
        "ViewerProtocolPolicy": {
          "$ref": "#/definitions/ViewerProtocolPolicy",
          "description": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https. If you want CloudFront to respond to an HTTP request with an HTTP status code of 301 (Moved Permanently) and the HTTPS URL, specify redirect-to-https. The viewer then resubmits the request using the HTTPS URL."
        },
        "MinTTL": {
          "$ref": "#/definitions/long",
          "description": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years)."
        },
        "AllowedMethods": {
          "$ref": "#/definitions/AllowedMethods"
        },
        "SmoothStreaming": {
          "$ref": "#/definitions/boolean",
          "description": "Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true; if not, specify false."
        },
        "DefaultTTL": {
          "$ref": "#/definitions/long",
          "description": "If you don't configure your origin to add a Cache-Control max-age directive or an Expires header, DefaultTTL is the default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as Cache-Control max-age, Cache-Control s-maxage, and Expires to objects. You can specify a value from 0 to 3,153,600,000 seconds (100 years)."
        },
        "MaxTTL": {
          "$ref": "#/definitions/long",
          "description": "The maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as Cache-Control max-age, Cache-Control s-maxage, and Expires to objects. You can specify a value from 0 to 3,153,600,000 seconds (100 years)."
        },
        "Compress": {
          "$ref": "#/definitions/boolean",
          "description": "Whether you want CloudFront to automatically compress content for web requests that include Accept-Encoding: gzip in the request header. If so, specify true; if not, specify false. CloudFront compresses files larger than 1000 bytes and less than 1 megabyte for both Amazon S3 and custom origins. When a CloudFront edge location is unusually busy, some files might not be compressed. The value of the Content-Type header must be on the list of file types that CloudFront will compress. For the current list, see <a href=\"http://docs.aws.amazon.com/console/cloudfront/compressed-content\">Serving Compressed Content</a> in the Amazon CloudFront Developer Guide. If you configure CloudFront to compress content, CloudFront removes the ETag response header from the objects that it compresses. The ETag header indicates that the version in a CloudFront edge cache is identical to the version on the origin server, but after compression the two versions are no longer identical. As a result, for compressed objects, CloudFront can't use the ETag header to determine whether an expired object in the CloudFront edge cache is still the latest version."
        }
      },
      "description": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior."
    },
    "DeleteCloudFrontOriginAccessIdentityRequest": {
      "type": "object",
      "properties": {},
      "description": "The request to delete a origin access identity."
    },
    "DeleteDistributionRequest": {
      "type": "object",
      "properties": {},
      "description": "The request to delete a distribution."
    },
    "DeleteStreamingDistributionRequest": {
      "type": "object",
      "properties": {},
      "description": "The request to delete a streaming distribution."
    },
    "Distribution": {
      "type": "object",
      "required": [
        "Id",
        "ARN",
        "Status",
        "LastModifiedTime",
        "InProgressInvalidationBatches",
        "DomainName",
        "ActiveTrustedSigners",
        "DistributionConfig"
      ],
      "properties": {
        "Id": {
          "$ref": "#/definitions/string",
          "description": "The identifier for the distribution. For example: EDFDVBD632BHDS5."
        },
        "ARN": {
          "$ref": "#/definitions/string",
          "description": "The ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5, where 123456789012 is your AWS account Id."
        },
        "Status": {
          "$ref": "#/definitions/string",
          "description": "This response element indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system."
        },
        "LastModifiedTime": {
          "$ref": "#/definitions/timestamp",
          "description": "The date and time the distribution was last modified."
        },
        "InProgressInvalidationBatches": {
          "$ref": "#/definitions/integer",
          "description": "The number of invalidation batches currently in progress."
        },
        "DomainName": {
          "$ref": "#/definitions/string",
          "description": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net."
        },
        "ActiveTrustedSigners": {
          "$ref": "#/definitions/ActiveTrustedSigners",
          "description": "CloudFront automatically adds this element to the response only if you've set up the distribution to serve private content with signed URLs. The element lists the key pair IDs that CloudFront is aware of for each trusted signer. The Signer child element lists the AWS account number of the trusted signer (or an empty Self element if the signer is you). The Signer element also includes the IDs of any active key pairs associated with the trusted signer's AWS account. If no KeyPairId element appears for a Signer, that signer can't create working signed URLs."
        },
        "DistributionConfig": {
          "$ref": "#/definitions/DistributionConfig",
          "description": "The current configuration information for the distribution."
        }
      },
      "description": "A distribution."
    },
    "DistributionAlreadyExists": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "The caller reference you attempted to create the distribution with is associated with another distribution."
    },
    "DistributionConfig": {
      "type": "object",
      "required": [
        "CallerReference",
        "Origins",
        "DefaultCacheBehavior",
        "Comment",
        "Enabled"
      ],
      "properties": {
        "CallerReference": {
          "$ref": "#/definitions/string",
          "description": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the DistributionConfig object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create a distribution, and the content of the DistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of the DistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error."
        },
        "Aliases": {
          "$ref": "#/definitions/Aliases",
          "description": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution."
        },
        "DefaultRootObject": {
          "$ref": "#/definitions/string",
          "description": "The object that you want CloudFront to return (for example, index.html) when an end user requests the root URL for your distribution (http://www.example.com) instead of an object in your distribution (http://www.example.com/index.html). Specifying a default root object avoids exposing the contents of your distribution. If you don't want to specify a default root object when you create a distribution, include an empty DefaultRootObject element. To delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element. To replace the default root object, update the distribution configuration and specify the new object."
        },
        "Origins": {
          "$ref": "#/definitions/Origins",
          "description": "A complex type that contains information about origins for this distribution."
        },
        "DefaultCacheBehavior": {
          "$ref": "#/definitions/DefaultCacheBehavior",
          "description": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior."
        },
        "CacheBehaviors": {
          "$ref": "#/definitions/CacheBehaviors",
          "description": "A complex type that contains zero or more CacheBehavior elements."
        },
        "CustomErrorResponses": {
          "$ref": "#/definitions/CustomErrorResponses",
          "description": "A complex type that contains zero or more CustomErrorResponse elements."
        },
        "Comment": {
          "$ref": "#/definitions/string",
          "description": "Any comments you want to include about the distribution."
        },
        "Logging": {
          "$ref": "#/definitions/LoggingConfig",
          "description": "A complex type that controls whether access logs are written for the distribution."
        },
        "PriceClass": {
          "$ref": "#/definitions/PriceClass",
          "description": "A complex type that contains information about price class for this distribution."
        },
        "Enabled": {
          "$ref": "#/definitions/boolean",
          "description": "Whether the distribution is enabled to accept end user requests for content."
        },
        "ViewerCertificate": {
          "$ref": "#/definitions/ViewerCertificate"
        },
        "Restrictions": {
          "$ref": "#/definitions/Restrictions"
        },
        "WebACLId": {
          "$ref": "#/definitions/string",
          "description": "(Optional) If you're using AWS WAF to filter CloudFront requests, the Id of the AWS WAF web ACL that is associated with the distribution."
        },
        "HttpVersion": {
          "$ref": "#/definitions/HttpVersion",
          "description": "(Optional) Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2. Viewers that don't support HTTP/2 will automatically use an earlier version."
        }
      },
      "description": "A distribution Configuration."
    },
    "DistributionConfigWithTags": {
      "type": "object",
      "required": [
        "DistributionConfig",
        "Tags"
      ],
      "properties": {
        "DistributionConfig": {
          "$ref": "#/definitions/DistributionConfig",
          "description": "A distribution Configuration."
        },
        "Tags": {
          "$ref": "#/definitions/Tags",
          "description": "A complex type that contains zero or more Tag elements."
        }
      },
      "description": "A distribution Configuration and a list of tags to be associated with the distribution."
    },
    "DistributionList": {
      "type": "object",
      "required": [
        "Marker",
        "MaxItems",
        "IsTruncated",
        "Quantity"
      ],
      "properties": {
        "Marker": {
          "$ref": "#/definitions/string",
          "description": "The value you provided for the Marker request parameter."
        },
        "NextMarker": {
          "$ref": "#/definitions/string",
          "description": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your distributions where they left off."
        },
        "MaxItems": {
          "$ref": "#/definitions/integer",
          "description": "The value you provided for the MaxItems request parameter."
        },
        "IsTruncated": {
          "$ref": "#/definitions/boolean",
          "description": "A flag that indicates whether more distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more distributions in the list."
        },
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of distributions that were created by the current AWS account."
        },
        "Items": {
          "$ref": "#/definitions/DistributionSummaryList",
          "description": "A complex type that contains one DistributionSummary element for each distribution that was created by the current AWS account."
        }
      },
      "description": "A distribution list."
    },
    "DistributionNotDisabled": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "DistributionSummary": {
      "type": "object",
      "required": [
        "Id",
        "ARN",
        "Status",
        "LastModifiedTime",
        "DomainName",
        "Aliases",
        "Origins",
        "DefaultCacheBehavior",
        "CacheBehaviors",
        "CustomErrorResponses",
        "Comment",
        "PriceClass",
        "Enabled",
        "ViewerCertificate",
        "Restrictions",
        "WebACLId",
        "HttpVersion"
      ],
      "properties": {
        "Id": {
          "$ref": "#/definitions/string",
          "description": "The identifier for the distribution. For example: EDFDVBD632BHDS5."
        },
        "ARN": {
          "$ref": "#/definitions/string",
          "description": "The ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5, where 123456789012 is your AWS account Id."
        },
        "Status": {
          "$ref": "#/definitions/string",
          "description": "This response element indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system."
        },
        "LastModifiedTime": {
          "$ref": "#/definitions/timestamp",
          "description": "The date and time the distribution was last modified."
        },
        "DomainName": {
          "$ref": "#/definitions/string",
          "description": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net."
        },
        "Aliases": {
          "$ref": "#/definitions/Aliases",
          "description": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution."
        },
        "Origins": {
          "$ref": "#/definitions/Origins",
          "description": "A complex type that contains information about origins for this distribution."
        },
        "DefaultCacheBehavior": {
          "$ref": "#/definitions/DefaultCacheBehavior",
          "description": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior."
        },
        "CacheBehaviors": {
          "$ref": "#/definitions/CacheBehaviors",
          "description": "A complex type that contains zero or more CacheBehavior elements."
        },
        "CustomErrorResponses": {
          "$ref": "#/definitions/CustomErrorResponses",
          "description": "A complex type that contains zero or more CustomErrorResponses elements."
        },
        "Comment": {
          "$ref": "#/definitions/string",
          "description": "The comment originally specified when this distribution was created."
        },
        "PriceClass": {
          "$ref": "#/definitions/PriceClass"
        },
        "Enabled": {
          "$ref": "#/definitions/boolean",
          "description": "Whether the distribution is enabled to accept end user requests for content."
        },
        "ViewerCertificate": {
          "$ref": "#/definitions/ViewerCertificate"
        },
        "Restrictions": {
          "$ref": "#/definitions/Restrictions"
        },
        "WebACLId": {
          "$ref": "#/definitions/string",
          "description": "The Web ACL Id (if any) associated with the distribution."
        },
        "HttpVersion": {
          "$ref": "#/definitions/HttpVersion",
          "description": "Specify the maximum HTTP version that you want viewers to use to communicate with CloudFront. The default value for new web distributions is http2. Viewers that don't support HTTP/2 will automatically use an earlier version."
        }
      },
      "description": "A summary of the information for an Amazon CloudFront distribution."
    },
    "DistributionSummaryList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DistributionSummary"
      }
    },
    "ForwardedValues": {
      "type": "object",
      "required": [
        "QueryString",
        "Cookies"
      ],
      "properties": {
        "QueryString": {
          "$ref": "#/definitions/boolean",
          "description": "<p>Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of QueryString and on the values that you specify for QueryStringCacheKeys, if any:</p> <ul> <li>If you specify true for QueryString and you don't specify any values for QueryStringCacheKeys, CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.</li> <li>If you specify true for QueryString and you specify one or more values for QueryStringCacheKeys, CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.</li> <li>If you specify false for QueryString, CloudFront doesn't forward any query string parameters to the origin, and doesn't cache based on query string parameters.</li> </ul>"
        },
        "Cookies": {
          "$ref": "#/definitions/CookiePreference",
          "description": "A complex type that specifies how CloudFront handles cookies."
        },
        "Headers": {
          "$ref": "#/definitions/Headers",
          "description": "A complex type that specifies the Headers, if any, that you want CloudFront to vary upon for this cache behavior."
        },
        "QueryStringCacheKeys": {
          "$ref": "#/definitions/QueryStringCacheKeys",
          "description": "A complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior."
        }
      },
      "description": "A complex type that specifies how CloudFront handles query strings, cookies and headers."
    },
    "GeoRestriction": {
      "type": "object",
      "required": [
        "RestrictionType",
        "Quantity"
      ],
      "properties": {
        "RestrictionType": {
          "$ref": "#/definitions/GeoRestrictionType",
          "description": "The method that you want to use to restrict distribution of your content by country: - none: No geo restriction is enabled, meaning access to content is not restricted by client geo location. - blacklist: The Location elements specify the countries in which you do not want CloudFront to distribute your content. - whitelist: The Location elements specify the countries in which you want CloudFront to distribute your content."
        },
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "When geo restriction is enabled, this is the number of countries in your whitelist or blacklist. Otherwise, when it is not enabled, Quantity is 0, and you can omit Items."
        },
        "Items": {
          "$ref": "#/definitions/LocationList",
          "description": "A complex type that contains a Location element for each country in which you want CloudFront either to distribute your content (whitelist) or not distribute your content (blacklist). The Location element is a two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist. Include one Location element for each country. CloudFront and MaxMind both use ISO 3166 country codes. For the current list of countries and the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization for Standardization website. You can also refer to the country list in the CloudFront console, which includes both country names and codes."
        }
      },
      "description": "A complex type that controls the countries in which your content is distributed. For more information about geo restriction, go to Customizing Error Responses in the Amazon CloudFront Developer Guide. CloudFront determines the location of your users using MaxMind GeoIP databases. For information about the accuracy of these databases, see How accurate are your GeoIP databases? on the MaxMind website."
    },
    "GeoRestrictionType": {
      "type": "string",
      "enum": [
        "blacklist",
        "whitelist",
        "none"
      ]
    },
    "GetCloudFrontOriginAccessIdentityConfigRequest": {
      "type": "object",
      "properties": {},
      "description": "The request to get an origin access identity's configuration."
    },
    "GetCloudFrontOriginAccessIdentityConfigResult": {
      "type": "object",
      "properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "$ref": "#/definitions/CloudFrontOriginAccessIdentityConfig",
          "description": "The origin access identity's configuration information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "GetCloudFrontOriginAccessIdentityRequest": {
      "type": "object",
      "properties": {},
      "description": "The request to get an origin access identity's information."
    },
    "GetCloudFrontOriginAccessIdentityResult": {
      "type": "object",
      "properties": {
        "CloudFrontOriginAccessIdentity": {
          "$ref": "#/definitions/CloudFrontOriginAccessIdentity",
          "description": "The origin access identity's information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "GetDistributionConfigRequest": {
      "type": "object",
      "properties": {},
      "description": "The request to get a distribution configuration."
    },
    "GetDistributionConfigResult": {
      "type": "object",
      "properties": {
        "DistributionConfig": {
          "$ref": "#/definitions/DistributionConfig",
          "description": "The distribution's configuration information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "GetDistributionRequest": {
      "type": "object",
      "properties": {},
      "description": "The request to get a distribution's information."
    },
    "GetDistributionResult": {
      "type": "object",
      "properties": {
        "Distribution": {
          "$ref": "#/definitions/Distribution",
          "description": "The distribution's information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "GetInvalidationRequest": {
      "type": "object",
      "properties": {},
      "description": "The request to get an invalidation's information."
    },
    "GetInvalidationResult": {
      "type": "object",
      "properties": {
        "Invalidation": {
          "$ref": "#/definitions/Invalidation",
          "description": "The invalidation's information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "GetStreamingDistributionConfigRequest": {
      "type": "object",
      "properties": {},
      "description": "To request to get a streaming distribution configuration."
    },
    "GetStreamingDistributionConfigResult": {
      "type": "object",
      "properties": {
        "StreamingDistributionConfig": {
          "$ref": "#/definitions/StreamingDistributionConfig",
          "description": "The streaming distribution's configuration information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "GetStreamingDistributionRequest": {
      "type": "object",
      "properties": {},
      "description": "The request to get a streaming distribution's information."
    },
    "GetStreamingDistributionResult": {
      "type": "object",
      "properties": {
        "StreamingDistribution": {
          "$ref": "#/definitions/StreamingDistribution",
          "description": "The streaming distribution's information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "HeaderList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/string"
      }
    },
    "Headers": {
      "type": "object",
      "required": [
        "Quantity"
      ],
      "properties": {
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of different headers that you want CloudFront to forward to the origin and to vary on for this cache behavior. The maximum number of headers that you can specify by name is 10. If you want CloudFront to forward all headers to the origin and vary on all of them, specify 1 for Quantity and * for Name. If you don't want CloudFront to forward any additional headers to the origin or to vary on any headers, specify 0 for Quantity and omit Items."
        },
        "Items": {
          "$ref": "#/definitions/HeaderList",
          "description": "Optional: A complex type that contains a Name element for each header that you want CloudFront to forward to the origin and to vary on for this cache behavior. If Quantity is 0, omit Items."
        }
      },
      "description": "A complex type that specifies the headers that you want CloudFront to forward to the origin for this cache behavior. For the headers that you specify, CloudFront also caches separate versions of a given object based on the header values in viewer requests; this is known as varying on headers. For example, suppose viewer requests for logo.jpg contain a custom Product header that has a value of either Acme or Apex, and you configure CloudFront to vary on the Product header. CloudFront forwards the Product header to the origin and caches the response from the origin once for each header value."
    },
    "HttpVersion": {
      "type": "string",
      "enum": [
        "http1.1",
        "http2"
      ]
    },
    "IllegalUpdate": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "Origin and CallerReference cannot be updated."
    },
    "InconsistentQuantities": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "The value of Quantity and the size of Items do not match."
    },
    "InvalidArgument": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "The argument is invalid."
    },
    "InvalidDefaultRootObject": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "The default root object file name is too big or contains an invalid character."
    },
    "InvalidErrorCode": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "InvalidForwardCookies": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "Your request contains forward cookies option which doesn't match with the expectation for the whitelisted list of cookie names. Either list of cookie names has been specified when not allowed or list of cookie names is missing when expected."
    },
    "InvalidGeoRestrictionParameter": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "InvalidHeadersForS3Origin": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "InvalidIfMatchVersion": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "The If-Match version is missing or not valid for the distribution."
    },
    "InvalidLocationCode": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "InvalidMinimumProtocolVersion": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "InvalidOrigin": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "The Amazon S3 origin server specified does not refer to a valid Amazon S3 bucket."
    },
    "InvalidOriginAccessIdentity": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "The origin access identity is not valid or doesn't exist."
    },
    "InvalidProtocolSettings": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "You cannot specify SSLv3 as the minimum protocol version if you only want to support only clients that Support Server Name Indication (SNI)."
    },
    "InvalidQueryStringParameters": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "InvalidRelativePath": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "The relative path is too big, is not URL-encoded, or does not begin with a slash (/)."
    },
    "InvalidRequiredProtocol": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "This operation requires the HTTPS protocol. Ensure that you specify the HTTPS protocol in your request, or omit the RequiredProtocols element from your distribution configuration."
    },
    "InvalidResponseCode": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "InvalidTTLOrder": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "InvalidTagging": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "The specified tagging for a CloudFront resource is invalid. For more information, see the error text."
    },
    "InvalidViewerCertificate": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "InvalidWebACLId": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "Invalidation": {
      "type": "object",
      "required": [
        "Id",
        "Status",
        "CreateTime",
        "InvalidationBatch"
      ],
      "properties": {
        "Id": {
          "$ref": "#/definitions/string",
          "description": "The identifier for the invalidation request. For example: IDFDVBD632BHDS5."
        },
        "Status": {
          "$ref": "#/definitions/string",
          "description": "The status of the invalidation request. When the invalidation batch is finished, the status is Completed."
        },
        "CreateTime": {
          "$ref": "#/definitions/timestamp",
          "description": "The date and time the invalidation request was first made."
        },
        "InvalidationBatch": {
          "$ref": "#/definitions/InvalidationBatch",
          "description": "The current invalidation information for the batch request."
        }
      },
      "description": "An invalidation."
    },
    "InvalidationBatch": {
      "type": "object",
      "required": [
        "Paths",
        "CallerReference"
      ],
      "properties": {
        "Paths": {
          "$ref": "#/definitions/Paths",
          "description": "The path of the object to invalidate. The path is relative to the distribution and must begin with a slash (/). You must enclose each invalidation object with the Path element tags. If the path includes non-ASCII characters or unsafe characters as defined in RFC 1783 (http://www.ietf.org/rfc/rfc1738.txt), URL encode those characters. Do not URL encode any other characters in the path, or CloudFront will not invalidate the old version of the updated object."
        },
        "CallerReference": {
          "$ref": "#/definitions/string",
          "description": "A unique name that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the Path object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create an invalidation batch, and the content of each Path element is identical to the original request, the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of any Path is different from the original request, CloudFront returns an InvalidationBatchAlreadyExists error."
        }
      },
      "description": "An invalidation batch."
    },
    "InvalidationList": {
      "type": "object",
      "required": [
        "Marker",
        "MaxItems",
        "IsTruncated",
        "Quantity"
      ],
      "properties": {
        "Marker": {
          "$ref": "#/definitions/string",
          "description": "The value you provided for the Marker request parameter."
        },
        "NextMarker": {
          "$ref": "#/definitions/string",
          "description": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your invalidation batches where they left off."
        },
        "MaxItems": {
          "$ref": "#/definitions/integer",
          "description": "The value you provided for the MaxItems request parameter."
        },
        "IsTruncated": {
          "$ref": "#/definitions/boolean",
          "description": "A flag that indicates whether more invalidation batch requests remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more invalidation batches in the list."
        },
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of invalidation batches that were created by the current AWS account."
        },
        "Items": {
          "$ref": "#/definitions/InvalidationSummaryList",
          "description": "A complex type that contains one InvalidationSummary element for each invalidation batch that was created by the current AWS account."
        }
      },
      "description": "An invalidation list."
    },
    "InvalidationSummary": {
      "type": "object",
      "required": [
        "Id",
        "CreateTime",
        "Status"
      ],
      "properties": {
        "Id": {
          "$ref": "#/definitions/string",
          "description": "The unique ID for an invalidation request."
        },
        "CreateTime": {
          "$ref": "#/definitions/timestamp"
        },
        "Status": {
          "$ref": "#/definitions/string",
          "description": "The status of an invalidation request."
        }
      },
      "description": "Summary of an invalidation request."
    },
    "InvalidationSummaryList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InvalidationSummary"
      }
    },
    "ItemSelection": {
      "type": "string",
      "enum": [
        "none",
        "whitelist",
        "all"
      ]
    },
    "KeyPairIdList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/string"
      }
    },
    "KeyPairIds": {
      "type": "object",
      "required": [
        "Quantity"
      ],
      "properties": {
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of active CloudFront key pairs for AwsAccountNumber."
        },
        "Items": {
          "$ref": "#/definitions/KeyPairIdList",
          "description": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber."
        }
      },
      "description": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber."
    },
    "ListCloudFrontOriginAccessIdentitiesRequest": {
      "type": "object",
      "properties": {},
      "description": "The request to list origin access identities."
    },
    "ListCloudFrontOriginAccessIdentitiesResult": {
      "type": "object",
      "properties": {
        "CloudFrontOriginAccessIdentityList": {
          "$ref": "#/definitions/CloudFrontOriginAccessIdentityList",
          "description": "The CloudFrontOriginAccessIdentityList type."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "ListDistributionsByWebACLIdRequest": {
      "type": "object",
      "properties": {},
      "description": "The request to list distributions that are associated with a specified AWS WAF web ACL."
    },
    "ListDistributionsByWebACLIdResult": {
      "type": "object",
      "properties": {
        "DistributionList": {
          "$ref": "#/definitions/DistributionList",
          "description": "The DistributionList type."
        }
      },
      "description": "The response to a request to list the distributions that are associated with a specified AWS WAF web ACL."
    },
    "ListDistributionsRequest": {
      "type": "object",
      "properties": {},
      "description": "The request to list your distributions."
    },
    "ListDistributionsResult": {
      "type": "object",
      "properties": {
        "DistributionList": {
          "$ref": "#/definitions/DistributionList",
          "description": "The DistributionList type."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "ListInvalidationsRequest": {
      "type": "object",
      "properties": {},
      "description": "The request to list invalidations."
    },
    "ListInvalidationsResult": {
      "type": "object",
      "properties": {
        "InvalidationList": {
          "$ref": "#/definitions/InvalidationList",
          "description": "Information about invalidation batches."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "ListStreamingDistributionsRequest": {
      "type": "object",
      "properties": {},
      "description": "The request to list your streaming distributions."
    },
    "ListStreamingDistributionsResult": {
      "type": "object",
      "properties": {
        "StreamingDistributionList": {
          "$ref": "#/definitions/StreamingDistributionList",
          "description": "The StreamingDistributionList type."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "ListTagsForResourceRequest": {
      "type": "object",
      "properties": {},
      "description": "The request to list tags for a CloudFront resource."
    },
    "ListTagsForResourceResult": {
      "type": "object",
      "required": [
        "Tags"
      ],
      "properties": {
        "Tags": {
          "$ref": "#/definitions/Tags",
          "description": "A complex type that contains zero or more Tag elements."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "LocationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/string"
      }
    },
    "LoggingConfig": {
      "type": "object",
      "required": [
        "Enabled",
        "IncludeCookies",
        "Bucket",
        "Prefix"
      ],
      "properties": {
        "Enabled": {
          "$ref": "#/definitions/boolean",
          "description": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket, prefix and IncludeCookies, the values are automatically deleted."
        },
        "IncludeCookies": {
          "$ref": "#/definitions/boolean",
          "description": "Specifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you do not want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies."
        },
        "Bucket": {
          "$ref": "#/definitions/string",
          "description": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com."
        },
        "Prefix": {
          "$ref": "#/definitions/string",
          "description": "An optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element."
        }
      },
      "description": "A complex type that controls whether access logs are written for the distribution."
    },
    "Method": {
      "type": "string",
      "enum": [
        "GET",
        "HEAD",
        "POST",
        "PUT",
        "PATCH",
        "OPTIONS",
        "DELETE"
      ]
    },
    "MethodsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Method"
      }
    },
    "MinimumProtocolVersion": {
      "type": "string",
      "enum": [
        "SSLv3",
        "TLSv1"
      ]
    },
    "MissingBody": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "This operation requires a body. Ensure that the body is present and the Content-Type header is set."
    },
    "NoSuchCloudFrontOriginAccessIdentity": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "The specified origin access identity does not exist."
    },
    "NoSuchDistribution": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "The specified distribution does not exist."
    },
    "NoSuchInvalidation": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "The specified invalidation does not exist."
    },
    "NoSuchOrigin": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "No origin exists with the specified Origin Id."
    },
    "NoSuchResource": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "The specified CloudFront resource does not exist."
    },
    "NoSuchStreamingDistribution": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "The specified streaming distribution does not exist."
    },
    "Origin": {
      "type": "object",
      "required": [
        "Id",
        "DomainName"
      ],
      "properties": {
        "Id": {
          "$ref": "#/definitions/string",
          "description": "A unique identifier for the origin. The value of Id must be unique within the distribution. You use the value of Id when you create a cache behavior. The Id identifies the origin that CloudFront routes a request to when the request matches the path pattern for that cache behavior."
        },
        "DomainName": {
          "$ref": "#/definitions/string",
          "description": "Amazon S3 origins: The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects for this origin, for example, myawsbucket.s3.amazonaws.com. Custom origins: The DNS domain name for the HTTP server from which you want CloudFront to get objects for this origin, for example, www.example.com."
        },
        "OriginPath": {
          "$ref": "#/definitions/string",
          "description": "An optional element that causes CloudFront to request your content from a directory in your Amazon S3 bucket or your custom origin. When you include the OriginPath element, specify the directory name, beginning with a /. CloudFront appends the directory name to the value of DomainName."
        },
        "CustomHeaders": {
          "$ref": "#/definitions/CustomHeaders",
          "description": "A complex type that contains information about the custom headers associated with this Origin."
        },
        "S3OriginConfig": {
          "$ref": "#/definitions/S3OriginConfig",
          "description": "A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin, use the CustomOriginConfig element instead."
        },
        "CustomOriginConfig": {
          "$ref": "#/definitions/CustomOriginConfig",
          "description": "A complex type that contains information about a custom origin. If the origin is an Amazon S3 bucket, use the S3OriginConfig element instead."
        }
      },
      "description": "A complex type that describes the Amazon S3 bucket or the HTTP server (for example, a web server) from which CloudFront gets your files.You must create at least one origin."
    },
    "OriginCustomHeader": {
      "type": "object",
      "required": [
        "HeaderName",
        "HeaderValue"
      ],
      "properties": {
        "HeaderName": {
          "$ref": "#/definitions/string",
          "description": "The header's name."
        },
        "HeaderValue": {
          "$ref": "#/definitions/string",
          "description": "The header's value."
        }
      },
      "description": "A complex type that contains information related to a Header"
    },
    "OriginCustomHeadersList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/OriginCustomHeader"
      }
    },
    "OriginList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Origin"
      },
      "minItems": 1
    },
    "OriginProtocolPolicy": {
      "type": "string",
      "enum": [
        "http-only",
        "match-viewer",
        "https-only"
      ]
    },
    "OriginSslProtocols": {
      "type": "object",
      "required": [
        "Quantity",
        "Items"
      ],
      "properties": {
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of SSL/TLS protocols that you want to allow CloudFront to use when establishing an HTTPS connection with this origin."
        },
        "Items": {
          "$ref": "#/definitions/SslProtocolsList",
          "description": "A complex type that contains one SslProtocol element for each SSL/TLS protocol that you want to allow CloudFront to use when establishing an HTTPS connection with this origin."
        }
      },
      "description": "A complex type that contains the list of SSL/TLS protocols that you want CloudFront to use when communicating with your origin over HTTPS."
    },
    "Origins": {
      "type": "object",
      "required": [
        "Quantity"
      ],
      "properties": {
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of origins for this distribution."
        },
        "Items": {
          "$ref": "#/definitions/OriginList",
          "description": "A complex type that contains origins for this distribution."
        }
      },
      "description": "A complex type that contains information about origins for this distribution."
    },
    "PathList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/string"
      }
    },
    "Paths": {
      "type": "object",
      "required": [
        "Quantity"
      ],
      "properties": {
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of objects that you want to invalidate."
        },
        "Items": {
          "$ref": "#/definitions/PathList",
          "description": "A complex type that contains a list of the objects that you want to invalidate."
        }
      },
      "description": "A complex type that contains information about the objects that you want to invalidate."
    },
    "PreconditionFailed": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "The precondition given in one or more of the request-header fields evaluated to false."
    },
    "PriceClass": {
      "type": "string",
      "enum": [
        "PriceClass_100",
        "PriceClass_200",
        "PriceClass_All"
      ]
    },
    "QueryStringCacheKeys": {
      "type": "object",
      "required": [
        "Quantity"
      ],
      "properties": {
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of whitelisted query string parameters for this cache behavior."
        },
        "Items": {
          "$ref": "#/definitions/QueryStringCacheKeysList",
          "description": "Optional: A list that contains the query string parameters that you want CloudFront to use as a basis for caching for this cache behavior. If Quantity is 0, you can omit Items."
        }
      }
    },
    "QueryStringCacheKeysList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/string"
      }
    },
    "ResourceARN": {
      "type": "string",
      "pattern": "arn:aws:cloudfront::[0-9]+:.*"
    },
    "Restrictions": {
      "type": "object",
      "required": [
        "GeoRestriction"
      ],
      "properties": {
        "GeoRestriction": {
          "$ref": "#/definitions/GeoRestriction"
        }
      },
      "description": "A complex type that identifies ways in which you want to restrict distribution of your content."
    },
    "S3Origin": {
      "type": "object",
      "required": [
        "DomainName",
        "OriginAccessIdentity"
      ],
      "properties": {
        "DomainName": {
          "$ref": "#/definitions/string",
          "description": "The DNS name of the S3 origin."
        },
        "OriginAccessIdentity": {
          "$ref": "#/definitions/string",
          "description": "Your S3 origin's origin access identity."
        }
      },
      "description": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution."
    },
    "S3OriginConfig": {
      "type": "object",
      "required": [
        "OriginAccessIdentity"
      ],
      "properties": {
        "OriginAccessIdentity": {
          "$ref": "#/definitions/string",
          "description": "The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that end users can only access objects in an Amazon S3 bucket through CloudFront. If you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element. To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element. To replace the origin access identity, update the distribution configuration and specify the new origin access identity. Use the format origin-access-identity/cloudfront/Id where Id is the value that CloudFront returned in the Id element when you created the origin access identity."
        }
      },
      "description": "A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin, use the CustomOriginConfig element instead."
    },
    "SSLSupportMethod": {
      "type": "string",
      "enum": [
        "sni-only",
        "vip"
      ]
    },
    "Signer": {
      "type": "object",
      "properties": {
        "AwsAccountNumber": {
          "$ref": "#/definitions/string",
          "description": "Specifies an AWS account that can create signed URLs. Values: self, which indicates that the AWS account that was used to create the distribution can created signed URLs, or an AWS account number. Omit the dashes in the account number."
        },
        "KeyPairIds": {
          "$ref": "#/definitions/KeyPairIds",
          "description": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber."
        }
      },
      "description": "A complex type that lists the AWS accounts that were included in the TrustedSigners complex type, as well as their active CloudFront key pair IDs, if any."
    },
    "SignerList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Signer"
      }
    },
    "SslProtocol": {
      "type": "string",
      "enum": [
        "SSLv3",
        "TLSv1",
        "TLSv1.1",
        "TLSv1.2"
      ]
    },
    "SslProtocolsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SslProtocol"
      }
    },
    "StreamingDistribution": {
      "type": "object",
      "required": [
        "Id",
        "ARN",
        "Status",
        "DomainName",
        "ActiveTrustedSigners",
        "StreamingDistributionConfig"
      ],
      "properties": {
        "Id": {
          "$ref": "#/definitions/string",
          "description": "The identifier for the streaming distribution. For example: EGTXBD79H29TRA8."
        },
        "ARN": {
          "$ref": "#/definitions/string",
          "description": "The ARN (Amazon Resource Name) for the streaming distribution. For example: arn:aws:cloudfront::123456789012:streaming-distribution/EDFDVBD632BHDS5, where 123456789012 is your AWS account Id."
        },
        "Status": {
          "$ref": "#/definitions/string",
          "description": "The current status of the streaming distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system."
        },
        "LastModifiedTime": {
          "$ref": "#/definitions/timestamp",
          "description": "The date and time the distribution was last modified."
        },
        "DomainName": {
          "$ref": "#/definitions/string",
          "description": "The domain name corresponding to the streaming distribution. For example: s5c39gqb8ow64r.cloudfront.net."
        },
        "ActiveTrustedSigners": {
          "$ref": "#/definitions/ActiveTrustedSigners",
          "description": "CloudFront automatically adds this element to the response only if you've set up the distribution to serve private content with signed URLs. The element lists the key pair IDs that CloudFront is aware of for each trusted signer. The Signer child element lists the AWS account number of the trusted signer (or an empty Self element if the signer is you). The Signer element also includes the IDs of any active key pairs associated with the trusted signer's AWS account. If no KeyPairId element appears for a Signer, that signer can't create working signed URLs."
        },
        "StreamingDistributionConfig": {
          "$ref": "#/definitions/StreamingDistributionConfig",
          "description": "The current configuration information for the streaming distribution."
        }
      },
      "description": "A streaming distribution."
    },
    "StreamingDistributionAlreadyExists": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "StreamingDistributionConfig": {
      "type": "object",
      "required": [
        "CallerReference",
        "S3Origin",
        "Comment",
        "TrustedSigners",
        "Enabled"
      ],
      "properties": {
        "CallerReference": {
          "$ref": "#/definitions/string",
          "description": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the StreamingDistributionConfig object), a new streaming distribution is created. If the CallerReference is a value you already sent in a previous request to create a streaming distribution, and the content of the StreamingDistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a streaming distribution but the content of the StreamingDistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error."
        },
        "S3Origin": {
          "$ref": "#/definitions/S3Origin",
          "description": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution."
        },
        "Aliases": {
          "$ref": "#/definitions/Aliases",
          "description": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution."
        },
        "Comment": {
          "$ref": "#/definitions/string",
          "description": "Any comments you want to include about the streaming distribution."
        },
        "Logging": {
          "$ref": "#/definitions/StreamingLoggingConfig",
          "description": "A complex type that controls whether access logs are written for the streaming distribution."
        },
        "TrustedSigners": {
          "$ref": "#/definitions/TrustedSigners",
          "description": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution."
        },
        "PriceClass": {
          "$ref": "#/definitions/PriceClass",
          "description": "A complex type that contains information about price class for this streaming distribution."
        },
        "Enabled": {
          "$ref": "#/definitions/boolean",
          "description": "Whether the streaming distribution is enabled to accept end user requests for content."
        }
      },
      "description": "The configuration for the streaming distribution."
    },
    "StreamingDistributionConfigWithTags": {
      "type": "object",
      "required": [
        "StreamingDistributionConfig",
        "Tags"
      ],
      "properties": {
        "StreamingDistributionConfig": {
          "$ref": "#/definitions/StreamingDistributionConfig",
          "description": "A streaming distribution Configuration."
        },
        "Tags": {
          "$ref": "#/definitions/Tags",
          "description": "A complex type that contains zero or more Tag elements."
        }
      },
      "description": "A streaming distribution Configuration and a list of tags to be associated with the streaming distribution."
    },
    "StreamingDistributionList": {
      "type": "object",
      "required": [
        "Marker",
        "MaxItems",
        "IsTruncated",
        "Quantity"
      ],
      "properties": {
        "Marker": {
          "$ref": "#/definitions/string",
          "description": "The value you provided for the Marker request parameter."
        },
        "NextMarker": {
          "$ref": "#/definitions/string",
          "description": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your streaming distributions where they left off."
        },
        "MaxItems": {
          "$ref": "#/definitions/integer",
          "description": "The value you provided for the MaxItems request parameter."
        },
        "IsTruncated": {
          "$ref": "#/definitions/boolean",
          "description": "A flag that indicates whether more streaming distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more distributions in the list."
        },
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of streaming distributions that were created by the current AWS account."
        },
        "Items": {
          "$ref": "#/definitions/StreamingDistributionSummaryList",
          "description": "A complex type that contains one StreamingDistributionSummary element for each distribution that was created by the current AWS account."
        }
      },
      "description": "A streaming distribution list."
    },
    "StreamingDistributionNotDisabled": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "StreamingDistributionSummary": {
      "type": "object",
      "required": [
        "Id",
        "ARN",
        "Status",
        "LastModifiedTime",
        "DomainName",
        "S3Origin",
        "Aliases",
        "TrustedSigners",
        "Comment",
        "PriceClass",
        "Enabled"
      ],
      "properties": {
        "Id": {
          "$ref": "#/definitions/string",
          "description": "The identifier for the distribution. For example: EDFDVBD632BHDS5."
        },
        "ARN": {
          "$ref": "#/definitions/string",
          "description": "The ARN (Amazon Resource Name) for the streaming distribution. For example: arn:aws:cloudfront::123456789012:streaming-distribution/EDFDVBD632BHDS5, where 123456789012 is your AWS account Id."
        },
        "Status": {
          "$ref": "#/definitions/string",
          "description": "Indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system."
        },
        "LastModifiedTime": {
          "$ref": "#/definitions/timestamp",
          "description": "The date and time the distribution was last modified."
        },
        "DomainName": {
          "$ref": "#/definitions/string",
          "description": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net."
        },
        "S3Origin": {
          "$ref": "#/definitions/S3Origin",
          "description": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution."
        },
        "Aliases": {
          "$ref": "#/definitions/Aliases",
          "description": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution."
        },
        "TrustedSigners": {
          "$ref": "#/definitions/TrustedSigners",
          "description": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution."
        },
        "Comment": {
          "$ref": "#/definitions/string",
          "description": "The comment originally specified when this distribution was created."
        },
        "PriceClass": {
          "$ref": "#/definitions/PriceClass"
        },
        "Enabled": {
          "$ref": "#/definitions/boolean",
          "description": "Whether the distribution is enabled to accept end user requests for content."
        }
      },
      "description": "A summary of the information for an Amazon CloudFront streaming distribution."
    },
    "StreamingDistributionSummaryList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/StreamingDistributionSummary"
      }
    },
    "StreamingLoggingConfig": {
      "type": "object",
      "required": [
        "Enabled",
        "Bucket",
        "Prefix"
      ],
      "properties": {
        "Enabled": {
          "$ref": "#/definitions/boolean",
          "description": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix, the values are automatically deleted."
        },
        "Bucket": {
          "$ref": "#/definitions/string",
          "description": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com."
        },
        "Prefix": {
          "$ref": "#/definitions/string",
          "description": "An optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element."
        }
      },
      "description": "A complex type that controls whether access logs are written for this streaming distribution."
    },
    "Tag": {
      "type": "object",
      "required": [
        "Key"
      ],
      "properties": {
        "Key": {
          "$ref": "#/definitions/TagKey",
          "description": "A string that contains Tag key. The string length should be between 1 and 128 characters. Valid characters include a-z, A-Z, 0-9, space, and the special characters _ - . : / = + @."
        },
        "Value": {
          "$ref": "#/definitions/TagValue",
          "description": "A string that contains an optional Tag value. The string length should be between 0 and 256 characters. Valid characters include a-z, A-Z, 0-9, space, and the special characters _ - . : / = + @."
        }
      },
      "description": "A complex type that contains Tag key and Tag value."
    },
    "TagKey": {
      "type": "string",
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "description": "A string that contains Tag key. The string length should be between 1 and 128 characters. Valid characters include a-z, A-Z, 0-9, space, and the special characters _ - . : / = + @.",
      "minLength": 1,
      "maxLength": 128
    },
    "TagKeyList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TagKey"
      }
    },
    "TagKeys": {
      "type": "object",
      "properties": {
        "Items": {
          "$ref": "#/definitions/TagKeyList",
          "description": "A complex type that contains Tag key elements"
        }
      },
      "description": "A complex type that contains zero or more Tag elements."
    },
    "TagList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      }
    },
    "TagResourceRequest": {
      "type": "object",
      "required": [
        "Tags"
      ],
      "properties": {
        "Tags": {
          "$ref": "#/definitions/Tags",
          "description": "A complex type that contains zero or more Tag elements."
        }
      },
      "description": "The request to add tags to a CloudFront resource.",
      "xml": {
        "namespace": "http://cloudfront.amazonaws.com/doc/2016-09-07/"
      }
    },
    "TagValue": {
      "type": "string",
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "minLength": 0,
      "maxLength": 256
    },
    "Tags": {
      "type": "object",
      "properties": {
        "Items": {
          "$ref": "#/definitions/TagList",
          "description": "A complex type that contains Tag elements"
        }
      },
      "description": "A complex type that contains zero or more Tag elements."
    },
    "TooManyCacheBehaviors": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "You cannot create anymore cache behaviors for the distribution."
    },
    "TooManyCertificates": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "You cannot create anymore custom ssl certificates."
    },
    "TooManyCloudFrontOriginAccessIdentities": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "Processing your request would cause you to exceed the maximum number of origin access identities allowed."
    },
    "TooManyCookieNamesInWhiteList": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "Your request contains more cookie names in the whitelist than are allowed per cache behavior."
    },
    "TooManyDistributionCNAMEs": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "Your request contains more CNAMEs than are allowed per distribution."
    },
    "TooManyDistributions": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "Processing your request would cause you to exceed the maximum number of distributions allowed."
    },
    "TooManyHeadersInForwardedValues": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "TooManyInvalidationsInProgress": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "You have exceeded the maximum number of allowable InProgress invalidation batch requests, or invalidation objects."
    },
    "TooManyOriginCustomHeaders": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "TooManyOrigins": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "You cannot create anymore origins for the distribution."
    },
    "TooManyQueryStringParameters": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "TooManyStreamingDistributionCNAMEs": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      }
    },
    "TooManyStreamingDistributions": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "Processing your request would cause you to exceed the maximum number of streaming distributions allowed."
    },
    "TooManyTrustedSigners": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "Your request contains more trusted signers than are allowed per distribution."
    },
    "TrustedSignerDoesNotExist": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/string"
        }
      },
      "description": "One or more of your trusted signers do not exist."
    },
    "TrustedSigners": {
      "type": "object",
      "required": [
        "Enabled",
        "Quantity"
      ],
      "properties": {
        "Enabled": {
          "$ref": "#/definitions/boolean",
          "description": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId."
        },
        "Quantity": {
          "$ref": "#/definitions/integer",
          "description": "The number of trusted signers for this cache behavior."
        },
        "Items": {
          "$ref": "#/definitions/AwsAccountNumberList",
          "description": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items."
        }
      },
      "description": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution."
    },
    "UntagResourceRequest": {
      "type": "object",
      "required": [
        "TagKeys"
      ],
      "properties": {
        "TagKeys": {
          "$ref": "#/definitions/TagKeys",
          "description": "A complex type that contains zero or more Tag key elements."
        }
      },
      "description": "The request to remove tags from a CloudFront resource.",
      "xml": {
        "namespace": "http://cloudfront.amazonaws.com/doc/2016-09-07/"
      }
    },
    "UpdateCloudFrontOriginAccessIdentityRequest": {
      "type": "object",
      "required": [
        "CloudFrontOriginAccessIdentityConfig"
      ],
      "properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "$ref": "#/definitions/CloudFrontOriginAccessIdentityConfig",
          "description": "The identity's configuration information."
        }
      },
      "description": "The request to update an origin access identity.",
      "xml": {
        "namespace": "http://cloudfront.amazonaws.com/doc/2016-09-07/"
      }
    },
    "UpdateCloudFrontOriginAccessIdentityResult": {
      "type": "object",
      "properties": {
        "CloudFrontOriginAccessIdentity": {
          "$ref": "#/definitions/CloudFrontOriginAccessIdentity",
          "description": "The origin access identity's information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "UpdateDistributionRequest": {
      "type": "object",
      "required": [
        "DistributionConfig"
      ],
      "properties": {
        "DistributionConfig": {
          "$ref": "#/definitions/DistributionConfig",
          "description": "The distribution's configuration information."
        }
      },
      "description": "The request to update a distribution.",
      "xml": {
        "namespace": "http://cloudfront.amazonaws.com/doc/2016-09-07/"
      }
    },
    "UpdateDistributionResult": {
      "type": "object",
      "properties": {
        "Distribution": {
          "$ref": "#/definitions/Distribution",
          "description": "The distribution's information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "UpdateStreamingDistributionRequest": {
      "type": "object",
      "required": [
        "StreamingDistributionConfig"
      ],
      "properties": {
        "StreamingDistributionConfig": {
          "$ref": "#/definitions/StreamingDistributionConfig",
          "description": "The streaming distribution's configuration information."
        }
      },
      "description": "The request to update a streaming distribution.",
      "xml": {
        "namespace": "http://cloudfront.amazonaws.com/doc/2016-09-07/"
      }
    },
    "UpdateStreamingDistributionResult": {
      "type": "object",
      "properties": {
        "StreamingDistribution": {
          "$ref": "#/definitions/StreamingDistribution",
          "description": "The streaming distribution's information."
        }
      },
      "description": "The returned result of the corresponding request."
    },
    "ViewerCertificate": {
      "type": "object",
      "properties": {
        "CloudFrontDefaultCertificate": {
          "$ref": "#/definitions/boolean",
          "description": "If you want viewers to use HTTPS to request your objects and you're using the CloudFront domain name of your distribution in your object URLs (for example, https://d111111abcdef8.cloudfront.net/logo.jpg), set to true. Omit this value if you are setting an ACMCertificateArn or IAMCertificateId."
        },
        "IAMCertificateId": {
          "$ref": "#/definitions/string",
          "description": "If you want viewers to use HTTPS to request your objects and you're using an alternate domain name in your object URLs (for example, https://example.com/logo.jpg), specify the IAM certificate identifier of the custom viewer certificate for this distribution. Specify either this value, ACMCertificateArn, or CloudFrontDefaultCertificate."
        },
        "ACMCertificateArn": {
          "$ref": "#/definitions/string",
          "description": "If you want viewers to use HTTPS to request your objects and you're using an alternate domain name in your object URLs (for example, https://example.com/logo.jpg), specify the ACM certificate ARN of the custom viewer certificate for this distribution. Specify either this value, IAMCertificateId, or CloudFrontDefaultCertificate."
        },
        "SSLSupportMethod": {
          "$ref": "#/definitions/SSLSupportMethod",
          "description": "If you specify a value for IAMCertificateId, you must also specify how you want CloudFront to serve HTTPS requests. Valid values are vip and sni-only. If you specify vip, CloudFront uses dedicated IP addresses for your content and can respond to HTTPS requests from any viewer. However, you must request permission to use this feature, and you incur additional monthly charges. If you specify sni-only, CloudFront can only respond to HTTPS requests from viewers that support Server Name Indication (SNI). All modern browsers support SNI, but some browsers still in use don't support SNI. Do not specify a value for SSLSupportMethod if you specified true for CloudFrontDefaultCertificate."
        },
        "MinimumProtocolVersion": {
          "$ref": "#/definitions/MinimumProtocolVersion",
          "description": "Specify the minimum version of the SSL protocol that you want CloudFront to use, SSLv3 or TLSv1, for HTTPS connections. CloudFront will serve your objects only to browsers or devices that support at least the SSL version that you specify. The TLSv1 protocol is more secure, so we recommend that you specify SSLv3 only if your users are using browsers or devices that don't support TLSv1. If you're using a custom certificate (if you specify a value for IAMCertificateId) and if you're using dedicated IP (if you specify vip for SSLSupportMethod), you can choose SSLv3 or TLSv1 as the MinimumProtocolVersion. If you're using a custom certificate (if you specify a value for IAMCertificateId) and if you're using SNI (if you specify sni-only for SSLSupportMethod), you must specify TLSv1 for MinimumProtocolVersion."
        },
        "Certificate": {
          "$ref": "#/definitions/string",
          "description": "Note: this field is deprecated. Please use one of [ACMCertificateArn, IAMCertificateId, CloudFrontDefaultCertificate]."
        },
        "CertificateSource": {
          "$ref": "#/definitions/CertificateSource",
          "description": "Note: this field is deprecated. Please use one of [ACMCertificateArn, IAMCertificateId, CloudFrontDefaultCertificate]."
        }
      },
      "description": "A complex type that contains information about viewer certificates for this distribution."
    },
    "ViewerProtocolPolicy": {
      "type": "string",
      "enum": [
        "allow-all",
        "https-only",
        "redirect-to-https"
      ]
    },
    "boolean": {
      "type": "boolean"
    },
    "integer": {
      "type": "integer"
    },
    "long": {
      "type": "integer"
    },
    "string": {
      "type": "string"
    },
    "timestamp": {
      "type": "string",
      "format": "date-time"
    }
  }
}