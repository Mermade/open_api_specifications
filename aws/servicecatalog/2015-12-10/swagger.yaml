swagger: '2.0'
info:
  version: '2015-12-10'
  x-release: v4
  title: AWS Service Catalog
  description: >-
    <fullname>AWS Service Catalog</fullname> <p> <b>Overview</b> </p> <p> <a
    href="https://aws.amazon.com/servicecatalog/">AWS Service Catalog</a> allows
    organizations to create and manage catalogs of IT services that are approved
    for use on AWS. This documentation provides reference material for the AWS
    Service Catalog end user API. To get the most out of this documentation, you
    need to be familiar with the terminology discussed in <a
    href="http://docs.aws.amazon.com/servicecatalog/latest/userguide/what-is_concepts.html">AWS
    Service Catalog Concepts</a>.</p> <p> <i>Additional Resources</i> </p> <ul>
    <li> <p> <a
    href="http://docs.aws.amazon.com/servicecatalog/latest/adminguide/introduction.html">AWS
    Service Catalog Administrator Guide</a> </p> </li> <li> <p> <a
    href="http://docs.aws.amazon.com/servicecatalog/latest/userguide/introduction.html">AWS
    Service Catalog User Guide</a> </p> </li> </ul>
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
x-logo:
  url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
  backgroundColor: '#FFFFFF'
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/servicecatalog/'
host: servicecatalog.amazonaws.com
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AcceptPortfolioShare
      description: Accepts an offer to share a portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AcceptPortfolioShareOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AcceptPortfolioShareInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AssociatePrincipalWithPortfolio':
    post:
      operationId: AssociatePrincipalWithPortfolio
      description: Associates the specified principal ARN with the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociatePrincipalWithPortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociatePrincipalWithPortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#AssociateProductWithPortfolio':
    post:
      operationId: AssociateProductWithPortfolio
      description: Associates a product with a portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateProductWithPortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociateProductWithPortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateConstraint':
    post:
      operationId: CreateConstraint
      description: Creates a new constraint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateConstraintInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreatePortfolio':
    post:
      operationId: CreatePortfolio
      description: Creates a new portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreatePortfolioShare':
    post:
      operationId: CreatePortfolioShare
      description: Creates a new portfolio share.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePortfolioShareInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateProduct':
    post:
      operationId: CreateProduct
      description: Creates a new product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateProvisioningArtifact':
    post:
      operationId: CreateProvisioningArtifact
      description: >-
        Create a new provisioning artifact for the specified product. This
        operation will not work with a product that has been shared with you.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteConstraint':
    post:
      operationId: DeleteConstraint
      description: Deletes the specified constraint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteConstraintInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeletePortfolio':
    post:
      operationId: DeletePortfolio
      description: >-
        Deletes the specified portfolio. This operation will not work with a
        portfolio that has been shared with you or if it has products, users,
        constraints, or shared accounts associated with it.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeletePortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeletePortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeletePortfolioShare':
    post:
      operationId: DeletePortfolioShare
      description: Deletes the specified portfolio share.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeletePortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeletePortfolioShareInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteProduct':
    post:
      operationId: DeleteProduct
      description: >-
        Deletes the specified product. This operation will not work with a
        product that has been shared with you or is associated with a
        portfolio. 
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteProvisioningArtifact':
    post:
      operationId: DeleteProvisioningArtifact
      description: >-
        Deletes the specified provisioning artifact. This operation will not
        work on a provisioning artifact associated with a product that has been
        shared with you, or on the last provisioning artifact associated with a
        product (a product must have at least one provisioning artifact).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeConstraint':
    post:
      operationId: DescribeConstraint
      description: Retrieves detailed information for a specified constraint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConstraintInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribePortfolio':
    post:
      operationId: DescribePortfolio
      description: >-
        Retrieves detailed information and any tags associated with the
        specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribePortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProduct':
    post:
      operationId: DescribeProduct
      description: >-
        <p>Retrieves information about a specified product.</p> <p>This
        operation is functionally identical to <a>DescribeProductView</a> except
        that it takes as input <code>ProductId</code> instead of
        <code>ProductViewId</code>.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProductAsAdmin':
    post:
      operationId: DescribeProductAsAdmin
      description: >-
        Retrieves information about a specified product, run with administrator
        access.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProductAsAdminOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProductAsAdminInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProductView':
    post:
      operationId: DescribeProductView
      description: >-
        <p>Retrieves information about a specified product.</p> <p>This
        operation is functionally identical to <a>DescribeProduct</a> except
        that it takes as input <code>ProductViewId</code> instead of
        <code>ProductId</code>.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProductViewOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProductViewInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProvisioningArtifact':
    post:
      operationId: DescribeProvisioningArtifact
      description: >-
        Retrieves detailed information about the specified provisioning
        artifact.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeProvisioningParameters':
    post:
      operationId: DescribeProvisioningParameters
      description: >-
        Provides information about parameters required to provision a specified
        product in a specified manner. Use this operation to obtain the list of
        <code>ProvisioningArtifactParameters</code> parameters available to call
        the <a>ProvisionProduct</a> operation for the specified product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProvisioningParametersOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeProvisioningParametersInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeRecord':
    post:
      operationId: DescribeRecord
      description: >-
        Retrieves a paginated list of the full details of a specific request.
        Use this operation after calling a request operation
        (<a>ProvisionProduct</a>, <a>TerminateProvisionedProduct</a>, or
        <a>UpdateProvisionedProduct</a>). 
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRecordOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRecordInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DisassociatePrincipalFromPortfolio':
    post:
      operationId: DisassociatePrincipalFromPortfolio
      description: >-
        Disassociates a previously associated principal ARN from a specified
        portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociatePrincipalFromPortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociatePrincipalFromPortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DisassociateProductFromPortfolio':
    post:
      operationId: DisassociateProductFromPortfolio
      description: 'Disassociates the specified product from the specified portfolio. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateProductFromPortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateProductFromPortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAcceptedPortfolioShares':
    post:
      operationId: ListAcceptedPortfolioShares
      description: >-
        Lists details of all portfolios for which sharing was accepted by this
        account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAcceptedPortfolioSharesOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAcceptedPortfolioSharesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListConstraintsForPortfolio':
    post:
      operationId: ListConstraintsForPortfolio
      description: >-
        Retrieves detailed constraint information for the specified portfolio
        and product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListConstraintsForPortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListConstraintsForPortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListLaunchPaths':
    post:
      operationId: ListLaunchPaths
      description: >-
        Returns a paginated list of all paths to a specified product. A path is
        how the user has access to a specified product, and is necessary when
        provisioning a product. A path also determines the constraints put on
        the product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLaunchPathsOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListLaunchPathsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPortfolioAccess':
    post:
      operationId: ListPortfolioAccess
      description: >-
        Lists the account IDs that have been authorized sharing of the specified
        portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPortfolioAccessOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPortfolioAccessInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPortfolios':
    post:
      operationId: ListPortfolios
      description: Lists all portfolios in the catalog.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPortfoliosOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPortfoliosInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPortfoliosForProduct':
    post:
      operationId: ListPortfoliosForProduct
      description: Lists all portfolios that the specified product is associated with.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPortfoliosForProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPortfoliosForProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListPrincipalsForPortfolio':
    post:
      operationId: ListPrincipalsForPortfolio
      description: Lists all principal ARNs associated with the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPrincipalsForPortfolioOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListPrincipalsForPortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListProvisioningArtifacts':
    post:
      operationId: ListProvisioningArtifacts
      description: Lists all provisioning artifacts associated with the specified product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProvisioningArtifactsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListProvisioningArtifactsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListRecordHistory':
    post:
      operationId: ListRecordHistory
      description: >-
        Returns a paginated list of all performed requests, in the form of
        RecordDetails objects that are filtered as specified.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecordHistoryOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListRecordHistoryInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ProvisionProduct':
    post:
      operationId: ProvisionProduct
      description: >-
        <p>Requests a <i>Provision</i> of a specified product. A
        <i>ProvisionedProduct</i> is a resourced instance for a product. For
        example, provisioning a CloudFormation-template-backed product results
        in launching a CloudFormation stack and all the underlying resources
        that come with it. </p> <p>You can check the status of this request
        using the <a>DescribeRecord</a> operation.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProvisionProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: DuplicateResourceException
          schema:
            $ref: '#/definitions/DuplicateResourceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ProvisionProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RejectPortfolioShare':
    post:
      operationId: RejectPortfolioShare
      description: Rejects an offer to share a portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RejectPortfolioShareOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RejectPortfolioShareInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ScanProvisionedProducts':
    post:
      operationId: ScanProvisionedProducts
      description: >-
        Returns a paginated list of all the ProvisionedProduct objects that are
        currently available (not terminated). 
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ScanProvisionedProductsOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ScanProvisionedProductsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SearchProducts':
    post:
      operationId: SearchProducts
      description: >-
        <p>Returns a paginated list all of the <code>Products</code> objects to
        which the caller has access. </p> <p>The output of this operation can be
        used as input for other operations, such as
        <a>DescribeProductView</a>.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchProductsOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SearchProductsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SearchProductsAsAdmin':
    post:
      operationId: SearchProductsAsAdmin
      description: >-
        Retrieves summary and status information about all products created
        within the caller's account. If a portfolio ID is provided, this
        operation retrieves information for only those products that are
        associated with the specified portfolio.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchProductsAsAdminOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SearchProductsAsAdminInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#TerminateProvisionedProduct':
    post:
      operationId: TerminateProvisionedProduct
      description: >-
        <p>Requests termination of an existing ProvisionedProduct object. If
        there are <code>Tags</code> associated with the object, they are
        terminated when the ProvisionedProduct object is terminated. </p>
        <p>This operation does not delete any records associated with the
        ProvisionedProduct object.</p> <p>You can check the status of this
        request using the <a>DescribeRecord</a> operation.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TerminateProvisionedProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TerminateProvisionedProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateConstraint':
    post:
      operationId: UpdateConstraint
      description: Updates an existing constraint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateConstraintOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateConstraintInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdatePortfolio':
    post:
      operationId: UpdatePortfolio
      description: >-
        Updates the specified portfolio's details. This operation will not work
        with a product that has been shared with you.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdatePortfolioOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePortfolioInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateProduct':
    post:
      operationId: UpdateProduct
      description: Updates an existing product.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProductOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateProvisionedProduct':
    post:
      operationId: UpdateProvisionedProduct
      description: >-
        <p>Requests updates to the configuration of an existing
        ProvisionedProduct object. If there are tags associated with the object,
        they cannot be updated or added with this operation. Depending on the
        specific updates requested, this operation may update with no
        interruption, with some interruption, or replace the ProvisionedProduct
        object entirely. </p> <p>You can check the status of this request using
        the <a>DescribeRecord</a> operation.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProvisionedProductOutput'
        '480':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateProvisionedProductInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateProvisioningArtifact':
    post:
      operationId: UpdateProvisioningArtifact
      description: >-
        Updates an existing provisioning artifact's information. This operation
        will not work on a provisioning artifact associated with a product that
        has been shared with you.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProvisioningArtifactOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParametersException
          schema:
            $ref: '#/definitions/InvalidParametersException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateProvisioningArtifactInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AcceptLanguage:
    type: string
  AcceptPortfolioShareInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
  AcceptPortfolioShareOutput:
    type: object
    properties: {}
  AccessLevelFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/AccessLevelFilterKey'
        description: >-
          <p>Specifies the access level.</p> <p> <code>Account</code> allows
          results at the account level. </p> <p> <code>Role</code> allows
          results based on the federated role of the specified user.</p> <p>
          <code>User</code> allows results limited to the specified user. </p>
      Value:
        $ref: '#/definitions/AccessLevelFilterValue'
        description: >-
          Specifies the user to which the access level applies. A value of
          <code>Self</code> is currently supported.
    description: The access level to limit results.
  AccessLevelFilterKey:
    type: string
    enum:
      - Account
      - Role
      - User
  AccessLevelFilterValue:
    type: string
  AccountId:
    type: string
    pattern: '^[0-9]{12}$'
  AccountIds:
    type: array
    items:
      $ref: '#/definitions/AccountId'
  AddTags:
    type: array
    items:
      $ref: '#/definitions/Tag'
    maxItems: 20
  AllowedValue:
    type: string
  AllowedValues:
    type: array
    items:
      $ref: '#/definitions/AllowedValue'
  ApproximateCount:
    type: integer
  AssociatePrincipalWithPortfolioInput:
    type: object
    required:
      - PortfolioId
      - PrincipalARN
      - PrincipalType
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      PrincipalARN:
        $ref: '#/definitions/PrincipalARN'
        description: 'The ARN representing the principal (IAM user, role, or group).'
      PrincipalType:
        $ref: '#/definitions/PrincipalType'
        description: 'The principal type. Must be <code>IAM</code> '
  AssociatePrincipalWithPortfolioOutput:
    type: object
    properties: {}
  AssociateProductWithPortfolioInput:
    type: object
    required:
      - ProductId
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      SourcePortfolioId:
        $ref: '#/definitions/Id'
        description: The identifier of the source portfolio to use with this association.
  AssociateProductWithPortfolioOutput:
    type: object
    properties: {}
  AttributeValue:
    type: string
  ConstraintDescription:
    type: string
    maxLength: 2000
  ConstraintDetail:
    type: object
    properties:
      ConstraintId:
        $ref: '#/definitions/Id'
        description: The identifier of the constraint.
      Type:
        $ref: '#/definitions/ConstraintType'
        description: The type of the constraint.
      Description:
        $ref: '#/definitions/ConstraintDescription'
        description: The text description of the constraint.
      Owner:
        $ref: '#/definitions/AccountId'
        description: The owner of the constraint.
    description: Detailed constraint information.
  ConstraintDetails:
    type: array
    items:
      $ref: '#/definitions/ConstraintDetail'
  ConstraintParameters:
    type: string
  ConstraintSummaries:
    type: array
    items:
      $ref: '#/definitions/ConstraintSummary'
  ConstraintSummary:
    type: object
    properties:
      Type:
        $ref: '#/definitions/ConstraintType'
        description: 'The type of the constraint. '
      Description:
        $ref: '#/definitions/ConstraintDescription'
        description: The text description of the constraint.
    description: >-
      An administrator-specified constraint to apply when provisioning a
      product.
  ConstraintType:
    type: string
    minLength: 1
    maxLength: 1024
  CreateConstraintInput:
    type: object
    required:
      - PortfolioId
      - ProductId
      - Parameters
      - Type
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      Parameters:
        $ref: '#/definitions/ConstraintParameters'
        description: The constraint parameters.
      Type:
        $ref: '#/definitions/ConstraintType'
        description: The type of the constraint.
      Description:
        $ref: '#/definitions/ConstraintDescription'
        description: The text description of the constraint.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: >-
          A token to disambiguate duplicate requests. You can create multiple
          resources using the same input in multiple requests, provided that you
          also specify a different idempotency token for each request.
  CreateConstraintOutput:
    type: object
    properties:
      ConstraintDetail:
        $ref: '#/definitions/ConstraintDetail'
        description: The resulting detailed constraint information.
      ConstraintParameters:
        $ref: '#/definitions/ConstraintParameters'
        description: The resulting constraint parameters.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
  CreatePortfolioInput:
    type: object
    required:
      - DisplayName
      - ProviderName
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      DisplayName:
        $ref: '#/definitions/PortfolioDisplayName'
        description: The name to use for display purposes.
      Description:
        $ref: '#/definitions/PortfolioDescription'
        description: The text description of the portfolio.
      ProviderName:
        $ref: '#/definitions/ProviderName'
        description: The name of the portfolio provider.
      Tags:
        $ref: '#/definitions/AddTags'
        description: Tags to associate with the new portfolio.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: >-
          A token to disambiguate duplicate requests. You can create multiple
          resources using the same input in multiple requests, provided that you
          also specify a different idempotency token for each request.
  CreatePortfolioOutput:
    type: object
    properties:
      PortfolioDetail:
        $ref: '#/definitions/PortfolioDetail'
        description: The resulting detailed portfolio information.
      Tags:
        $ref: '#/definitions/Tags'
        description: Tags successfully associated with the new portfolio.
  CreatePortfolioShareInput:
    type: object
    required:
      - PortfolioId
      - AccountId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The account ID with which to share the portfolio.
  CreatePortfolioShareOutput:
    type: object
    properties: {}
  CreateProductInput:
    type: object
    required:
      - Name
      - Owner
      - ProductType
      - ProvisioningArtifactParameters
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      Name:
        $ref: '#/definitions/ProductViewName'
        description: The name of the product.
      Owner:
        $ref: '#/definitions/ProductViewOwner'
        description: The owner of the product.
      Description:
        $ref: '#/definitions/ProductViewShortDescription'
        description: The text description of the product.
      Distributor:
        $ref: '#/definitions/ProductViewOwner'
        description: The distributor of the product.
      SupportDescription:
        $ref: '#/definitions/SupportDescription'
        description: Support information about the product.
      SupportEmail:
        $ref: '#/definitions/SupportEmail'
        description: Contact email for product support.
      SupportUrl:
        $ref: '#/definitions/SupportUrl'
        description: Contact URL for product support.
      ProductType:
        $ref: '#/definitions/ProductType'
        description: The type of the product to create.
      Tags:
        $ref: '#/definitions/AddTags'
        description: Tags to associate with the new product.
      ProvisioningArtifactParameters:
        $ref: '#/definitions/ProvisioningArtifactProperties'
        description: Parameters for the provisioning artifact.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: >-
          A token to disambiguate duplicate requests. You can create multiple
          resources using the same input in multiple requests, provided that you
          also specify a different idempotency token for each request.
  CreateProductOutput:
    type: object
    properties:
      ProductViewDetail:
        $ref: '#/definitions/ProductViewDetail'
        description: The resulting detailed product view information.
      ProvisioningArtifactDetail:
        $ref: '#/definitions/ProvisioningArtifactDetail'
        description: The resulting detailed provisioning artifact information.
      Tags:
        $ref: '#/definitions/Tags'
        description: Tags successfully associated with the new product.
  CreateProvisioningArtifactInput:
    type: object
    required:
      - ProductId
      - Parameters
      - IdempotencyToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      Parameters:
        $ref: '#/definitions/ProvisioningArtifactProperties'
        description: The parameters to use when creating the new provisioning artifact.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: >-
          A token to disambiguate duplicate requests. You can create multiple
          resources using the same input in multiple requests, provided that you
          also specify a different idempotency token for each request.
  CreateProvisioningArtifactOutput:
    type: object
    properties:
      ProvisioningArtifactDetail:
        $ref: '#/definitions/ProvisioningArtifactDetail'
        description: The resulting detailed provisioning artifact information.
      Info:
        $ref: '#/definitions/ProvisioningArtifactInfo'
        description: Additional information about the provisioning artifact create request.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
  CreatedTime:
    type: string
    format: date-time
  CreationTime:
    type: string
    format: date-time
  DefaultValue:
    type: string
  DeleteConstraintInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the constraint to delete.
  DeleteConstraintOutput:
    type: object
    properties: {}
  DeletePortfolioInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the portfolio for the delete request.
  DeletePortfolioOutput:
    type: object
    properties: {}
  DeletePortfolioShareInput:
    type: object
    required:
      - PortfolioId
      - AccountId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      AccountId:
        $ref: '#/definitions/AccountId'
        description: The account ID associated with the share to delete.
  DeletePortfolioShareOutput:
    type: object
    properties: {}
  DeleteProductInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the product for the delete request.
  DeleteProductOutput:
    type: object
    properties: {}
  DeleteProvisioningArtifactInput:
    type: object
    required:
      - ProductId
      - ProvisioningArtifactId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact for the delete request.
  DeleteProvisioningArtifactOutput:
    type: object
    properties: {}
  DescribeConstraintInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the constraint.
  DescribeConstraintOutput:
    type: object
    properties:
      ConstraintDetail:
        $ref: '#/definitions/ConstraintDetail'
        description: Detailed constraint information.
      ConstraintParameters:
        $ref: '#/definitions/ConstraintParameters'
        description: The current parameters associated with the specified constraint.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
  DescribePortfolioInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the portfolio for which to retrieve information.
  DescribePortfolioOutput:
    type: object
    properties:
      PortfolioDetail:
        $ref: '#/definitions/PortfolioDetail'
        description: Detailed portfolio information.
      Tags:
        $ref: '#/definitions/Tags'
        description: Tags associated with the portfolio.
  DescribeProductAsAdminInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the product for which to retrieve information.
  DescribeProductAsAdminOutput:
    type: object
    properties:
      ProductViewDetail:
        $ref: '#/definitions/ProductViewDetail'
        description: Detailed product view information.
      Tags:
        $ref: '#/definitions/Tags'
        description: Tags associated with the product.
  DescribeProductInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      Id:
        $ref: '#/definitions/Id'
        description: The <code>ProductId</code> of the product to describe.
  DescribeProductOutput:
    type: object
    properties:
      ProductViewSummary:
        $ref: '#/definitions/ProductViewSummary'
        description: The summary metadata about the specified product.
      ProvisioningArtifacts:
        $ref: '#/definitions/ProvisioningArtifacts'
        description: >-
          A list of provisioning artifact objects for the specified product. The
          <code>ProvisioningArtifacts</code> parameter represent the ways the
          specified product can be provisioned.
  DescribeProductViewInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      Id:
        $ref: '#/definitions/Id'
        description: The <code>ProductViewId</code> of the product to describe.
  DescribeProductViewOutput:
    type: object
    properties:
      ProductViewSummary:
        $ref: '#/definitions/ProductViewSummary'
        description: The summary metadata about the specified product.
      ProvisioningArtifacts:
        $ref: '#/definitions/ProvisioningArtifacts'
        description: >-
          A list of provisioning artifact objects for the specified product. The
          <code>ProvisioningArtifacts</code> represent the ways in which the
          specified product can be provisioned.
  DescribeProvisioningArtifactInput:
    type: object
    required:
      - ProvisioningArtifactId
      - ProductId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
  DescribeProvisioningArtifactOutput:
    type: object
    properties:
      ProvisioningArtifactDetail:
        $ref: '#/definitions/ProvisioningArtifactDetail'
        description: Detailed provisioning artifact information.
      Info:
        $ref: '#/definitions/ProvisioningArtifactInfo'
        description: Additional information about the provisioning artifact.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
  DescribeProvisioningParametersInput:
    type: object
    required:
      - ProductId
      - ProvisioningArtifactId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The provisioning artifact identifier for this product.
      PathId:
        $ref: '#/definitions/Id'
        description: >-
          The identifier of the path for this product's provisioning. This value
          is optional if the product has a default path, and is required if
          there is more than one path for the specified product.
  DescribeProvisioningParametersOutput:
    type: object
    properties:
      ProvisioningArtifactParameters:
        $ref: '#/definitions/ProvisioningArtifactParameters'
        description: >-
          The list of parameters used to successfully provision the product.
          Each parameter includes a list of allowable values and additional
          metadata about each parameter.
      ConstraintSummaries:
        $ref: '#/definitions/ConstraintSummaries'
        description: >-
          The list of constraint summaries that apply to provisioning this
          product.
      UsageInstructions:
        $ref: '#/definitions/UsageInstructions'
        description: >-
          Any additional metadata specifically related to the provisioning of
          the product. For example, see the <code>Version</code> field of the
          CloudFormation template.
  DescribeRecordInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      Id:
        $ref: '#/definitions/Id'
        description: >-
          The record identifier of the ProvisionedProduct object for which to
          retrieve output information. This is the
          <code>RecordDetail.RecordId</code> obtained from the request
          operation's response.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token of the first page retrieved. If null, this retrieves
          the first page of size <code>PageSize</code>.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: >-
          The maximum number of items to return in the results. If more results
          exist than fit in the specified <code>PageSize</code>, the value of
          <code>NextPageToken</code> in the response is non-null.
  DescribeRecordOutput:
    type: object
    properties:
      RecordDetail:
        $ref: '#/definitions/RecordDetail'
        description: 'Detailed record information for the specified product. '
      RecordOutputs:
        $ref: '#/definitions/RecordOutputs'
        description: >-
          A list of outputs for the specified Product object created as the
          result of a request. For example, a CloudFormation-backed product that
          creates an S3 bucket would have an output for the S3 bucket URL.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token to use to retrieve the next page of results for this
          operation. If there are no more pages, this value is null.
  Description:
    type: string
  DisassociatePrincipalFromPortfolioInput:
    type: object
    required:
      - PortfolioId
      - PrincipalARN
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      PrincipalARN:
        $ref: '#/definitions/PrincipalARN'
        description: 'The ARN representing the principal (IAM user, role, or group).'
  DisassociatePrincipalFromPortfolioOutput:
    type: object
    properties: {}
  DisassociateProductFromPortfolioInput:
    type: object
    required:
      - ProductId
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
  DisassociateProductFromPortfolioOutput:
    type: object
    properties: {}
  DuplicateResourceException:
    type: object
    properties: {}
    description: The specified resource is a duplicate.
  ErrorCode:
    type: string
  ErrorDescription:
    type: string
  HasDefaultPath:
    type: boolean
  Id:
    type: string
    minLength: 1
    maxLength: 100
  IdempotencyToken:
    type: string
    pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
    minLength: 1
    maxLength: 128
  IgnoreErrors:
    type: boolean
  InstructionType:
    type: string
  InstructionValue:
    type: string
  InvalidParametersException:
    type: object
    properties: {}
    description: One or more parameters provided to the operation are invalid.
  LastRequestId:
    type: string
  LaunchPathSummaries:
    type: array
    items:
      $ref: '#/definitions/LaunchPathSummary'
  LaunchPathSummary:
    type: object
    properties:
      Id:
        $ref: '#/definitions/Id'
        description: The unique identifier of the product path.
      ConstraintSummaries:
        $ref: '#/definitions/ConstraintSummaries'
        description: List of constraints on the portfolio-product relationship.
      Tags:
        $ref: '#/definitions/Tags'
        description: List of tags used by this launch path.
      Name:
        $ref: '#/definitions/PortfolioName'
        description: >-
          Corresponds to the name of the portfolio to which the user was
          assigned.
    description: >-
      Summary information about a path for a user to have access to a specified
      product.
  LimitExceededException:
    type: object
    properties: {}
    description: >-
      The current limits of the service would have been exceeded by this
      operation. Reduce the resource use or increase the service limits and
      retry the operation.
  ListAcceptedPortfolioSharesInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      PageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token of the first page retrieved. If null, this retrieves
          the first page of size <code>PageSize</code>.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: >-
          The maximum number of items to return in the results. If more results
          exist than fit in the specified <code>PageSize</code>, the value of
          <code>NextPageToken</code> in the response is non-null.
  ListAcceptedPortfolioSharesOutput:
    type: object
    properties:
      PortfolioDetails:
        $ref: '#/definitions/PortfolioDetails'
        description: List of detailed portfolio information objects.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token to use to retrieve the next page of results for this
          operation. If there are no more pages, this value is null.
  ListConstraintsForPortfolioInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: >-
          The maximum number of items to return in the results. If more results
          exist than fit in the specified <code>PageSize</code>, the value of
          <code>NextPageToken</code> in the response is non-null.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token of the first page retrieved. If null, this retrieves
          the first page of size <code>PageSize</code>.
  ListConstraintsForPortfolioOutput:
    type: object
    properties:
      ConstraintDetails:
        $ref: '#/definitions/ConstraintDetails'
        description: List of detailed constraint information objects.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token to use to retrieve the next page of results for this
          operation. If there are no more pages, this value is null.
  ListLaunchPathsInput:
    type: object
    required:
      - ProductId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      ProductId:
        $ref: '#/definitions/Id'
        description: >-
          The product identifier.. Identifies the product for which to retrieve
          <code>LaunchPathSummaries</code> information.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: >-
          The maximum number of items to return in the results. If more results
          exist than fit in the specified <code>PageSize</code>, the value of
          <code>NextPageToken</code> in the response is non-null.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token of the first page retrieved. If null, this retrieves
          the first page of size <code>PageSize</code>.
  ListLaunchPathsOutput:
    type: object
    properties:
      LaunchPathSummaries:
        $ref: '#/definitions/LaunchPathSummaries'
        description: >-
          List of launch path information summaries for the specified
          <code>PageToken</code>.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token to use to retrieve the next page of results for this
          operation. If there are no more pages, this value is null.
  ListPortfolioAccessInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
  ListPortfolioAccessOutput:
    type: object
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIds'
        description: List of account IDs associated with access to the portfolio.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token to use to retrieve the next page of results for this
          operation. If there are no more pages, this value is null.
  ListPortfoliosForProductInput:
    type: object
    required:
      - ProductId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token of the first page retrieved. If null, this retrieves
          the first page of size <code>PageSize</code>.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: >-
          The maximum number of items to return in the results. If more results
          exist than fit in the specified <code>PageSize</code>, the value of
          <code>NextPageToken</code> in the response is non-null.
  ListPortfoliosForProductOutput:
    type: object
    properties:
      PortfolioDetails:
        $ref: '#/definitions/PortfolioDetails'
        description: List of detailed portfolio information objects.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token to use to retrieve the next page of results for this
          operation. If there are no more pages, this value is null.
  ListPortfoliosInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      PageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token of the first page retrieved. If null, this retrieves
          the first page of size <code>PageSize</code>.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: >-
          The maximum number of items to return in the results. If more results
          exist than fit in the specified <code>PageSize</code>, the value of
          <code>NextPageToken</code> in the response is non-null.
  ListPortfoliosOutput:
    type: object
    properties:
      PortfolioDetails:
        $ref: '#/definitions/PortfolioDetails'
        description: List of detailed portfolio information objects.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token to use to retrieve the next page of results for this
          operation. If there are no more pages, this value is null.
  ListPrincipalsForPortfolioInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: >-
          The maximum number of items to return in the results. If more results
          exist than fit in the specified <code>PageSize</code>, the value of
          <code>NextPageToken</code> in the response is non-null.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token of the first page retrieved. If null, this retrieves
          the first page of size <code>PageSize</code>.
  ListPrincipalsForPortfolioOutput:
    type: object
    properties:
      Principals:
        $ref: '#/definitions/Principals'
        description: The IAM principals (users or roles) associated with the portfolio.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token to use to retrieve the next page of results for this
          operation. If there are no more pages, this value is null.
  ListProvisioningArtifactsInput:
    type: object
    required:
      - ProductId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
  ListProvisioningArtifactsOutput:
    type: object
    properties:
      ProvisioningArtifactDetails:
        $ref: '#/definitions/ProvisioningArtifactDetails'
        description: List of detailed provisioning artifact information objects.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token to use to retrieve the next page of results for this
          operation. If there are no more pages, this value is null.
  ListRecordHistoryInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      AccessLevelFilter:
        $ref: '#/definitions/AccessLevelFilter'
        description: >-
          The access level for obtaining results. If left unspecified,
          <code>User</code> level access is used.
      SearchFilter:
        $ref: '#/definitions/ListRecordHistorySearchFilter'
        description: 'The filter to limit search results. '
      PageSize:
        $ref: '#/definitions/PageSize'
        description: >-
          The maximum number of items to return in the results. If more results
          exist than fit in the specified <code>PageSize</code>, the value of
          <code>NextPageToken</code> in the response is non-null.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token of the first page retrieved. If null, this retrieves
          the first page of size <code>PageSize</code>.
  ListRecordHistoryOutput:
    type: object
    properties:
      RecordDetails:
        $ref: '#/definitions/RecordDetails'
        description: >-
          A list of record detail objects, listed in reverse chronological
          order.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token to use to retrieve the next page of results for this
          operation. If there are no more pages, this value is null.
  ListRecordHistorySearchFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/SearchFilterKey'
        description: The filter key.
      Value:
        $ref: '#/definitions/SearchFilterValue'
        description: The filter value for <code>Key</code>.
    description: The search filter to limit results when listing request history records.
  NoEcho:
    type: boolean
  NotificationArn:
    type: string
    pattern: >-
      arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
    minLength: 1
    maxLength: 1224
  NotificationArns:
    type: array
    items:
      $ref: '#/definitions/NotificationArn'
    maxItems: 5
  OutputKey:
    type: string
  OutputValue:
    type: string
  PageSize:
    type: integer
    minimum: 0
    maximum: 20
  PageToken:
    type: string
    pattern: '[\u0009\u000a\u000d\u0020-\uD7FF\uE000-\uFFFD]*'
  ParameterConstraints:
    type: object
    properties:
      AllowedValues:
        $ref: '#/definitions/AllowedValues'
        description: The values that the administrator has allowed for the parameter.
    description: The constraints that the administrator has put on the parameter.
  ParameterKey:
    type: string
    minLength: 1
    maxLength: 1000
  ParameterType:
    type: string
  ParameterValue:
    type: string
    maxLength: 1000
  PortfolioDescription:
    type: string
    maxLength: 2000
  PortfolioDetail:
    type: object
    properties:
      Id:
        $ref: '#/definitions/Id'
        description: The identifier for the portfolio.
      ARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN assigned to the portfolio.
      DisplayName:
        $ref: '#/definitions/PortfolioDisplayName'
        description: The name to use for display purposes.
      Description:
        $ref: '#/definitions/PortfolioDescription'
        description: The text description of the portfolio.
      CreatedTime:
        $ref: '#/definitions/CreationTime'
        description: The UTC timestamp of the creation time.
      ProviderName:
        $ref: '#/definitions/ProviderName'
        description: The name of the portfolio provider.
    description: Detailed portfolio information.
  PortfolioDetails:
    type: array
    items:
      $ref: '#/definitions/PortfolioDetail'
  PortfolioDisplayName:
    type: string
    minLength: 1
    maxLength: 100
  PortfolioName:
    type: string
  Principal:
    type: object
    properties:
      PrincipalARN:
        $ref: '#/definitions/PrincipalARN'
        description: 'The ARN representing the principal (IAM user, role, or group).'
      PrincipalType:
        $ref: '#/definitions/PrincipalType'
        description: 'The principal type. Must be <code>IAM</code> '
    description: A principal's ARN and type.
  PrincipalARN:
    type: string
    minLength: 1
    maxLength: 1000
  PrincipalType:
    type: string
    enum:
      - IAM
  Principals:
    type: array
    items:
      $ref: '#/definitions/Principal'
  ProductSource:
    type: string
    enum:
      - ACCOUNT
  ProductType:
    type: string
    enum:
      - CLOUD_FORMATION_TEMPLATE
  ProductViewAggregationType:
    type: string
  ProductViewAggregationValue:
    type: object
    properties:
      Value:
        $ref: '#/definitions/AttributeValue'
        description: The value of the product view aggregation.
      ApproximateCount:
        $ref: '#/definitions/ApproximateCount'
        description: An approximate count of the products that match the value.
    description: >-
      A single product view aggregation value/count pair, containing metadata
      about each product to which the calling user has access.
  ProductViewAggregationValues:
    type: array
    items:
      $ref: '#/definitions/ProductViewAggregationValue'
  ProductViewAggregations:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ProductViewAggregationType'
        value:
          $ref: '#/definitions/ProductViewAggregationValues'
  ProductViewDetail:
    type: object
    properties:
      ProductViewSummary:
        $ref: '#/definitions/ProductViewSummary'
        description: The summary metadata about the specified product view.
      Status:
        $ref: '#/definitions/Status'
        description: Current status of the product.
      ProductARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN associated with the product.
      CreatedTime:
        $ref: '#/definitions/CreatedTime'
        description: The UTC timestamp of the creation time.
    description: Detailed product view information.
  ProductViewDetails:
    type: array
    items:
      $ref: '#/definitions/ProductViewDetail'
  ProductViewDistributor:
    type: string
  ProductViewFilterBy:
    type: string
    enum:
      - FullTextSearch
      - Owner
      - ProductType
  ProductViewFilterValue:
    type: string
  ProductViewFilterValues:
    type: array
    items:
      $ref: '#/definitions/ProductViewFilterValue'
  ProductViewFilters:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ProductViewFilterBy'
        value:
          $ref: '#/definitions/ProductViewFilterValues'
  ProductViewName:
    type: string
  ProductViewOwner:
    type: string
  ProductViewShortDescription:
    type: string
  ProductViewSortBy:
    type: string
    enum:
      - Title
      - VersionCount
      - CreationDate
  ProductViewSummaries:
    type: array
    items:
      $ref: '#/definitions/ProductViewSummary'
  ProductViewSummary:
    type: object
    properties:
      Id:
        $ref: '#/definitions/Id'
        description: The product view identifier.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      Name:
        $ref: '#/definitions/ProductViewName'
        description: The name of the product.
      Owner:
        $ref: '#/definitions/ProductViewOwner'
        description: >-
          The owner of the product. Contact the product administrator for the
          significance of this value.
      ShortDescription:
        $ref: '#/definitions/ProductViewShortDescription'
        description: Short description of the product.
      Type:
        $ref: '#/definitions/ProductType'
        description: >-
          The product type. Contact the product administrator for the
          significance of this value.
      Distributor:
        $ref: '#/definitions/ProductViewDistributor'
        description: >-
          The distributor of the product. Contact the product administrator for
          the significance of this value.
      HasDefaultPath:
        $ref: '#/definitions/HasDefaultPath'
        description: >-
          A value of <code>false</code> indicates that the product does not have
          a default path, while a value of <code>true</code> indicates that it
          does. If it's false, call <a>ListLaunchPaths</a> to disambiguate
          between paths. If true, <a>ListLaunchPaths</a> is not required, and
          the output of the <a>ProductViewSummary</a> operation can be used
          directly with <a>DescribeProvisioningParameters</a>.
      SupportEmail:
        $ref: '#/definitions/SupportEmail'
        description: The email contact information to obtain support for this Product.
      SupportDescription:
        $ref: '#/definitions/SupportDescription'
        description: The description of the support for this Product.
      SupportUrl:
        $ref: '#/definitions/SupportUrl'
        description: The URL information to obtain support for this Product.
    description: The summary metadata about the specified product.
  ProviderName:
    type: string
    minLength: 1
    maxLength: 20
  ProvisionProductInput:
    type: object
    required:
      - ProductId
      - ProvisioningArtifactId
      - ProvisionedProductName
      - ProvisionToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The provisioning artifact identifier for this product.
      PathId:
        $ref: '#/definitions/Id'
        description: >-
          The identifier of the path for this product's provisioning. This value
          is optional if the product has a default path, and is required if
          there is more than one path for the specified product.
      ProvisionedProductName:
        $ref: '#/definitions/ProvisionedProductName'
        description: >-
          A user-friendly name to identify the ProvisionedProduct object. This
          value must be unique for the AWS account and cannot be updated after
          the product is provisioned.
      ProvisioningParameters:
        $ref: '#/definitions/ProvisioningParameters'
        description: >-
          Parameters specified by the administrator that are required for
          provisioning the product.
      Tags:
        $ref: '#/definitions/Tags'
        description: A list of tags to use as provisioning options.
      NotificationArns:
        $ref: '#/definitions/NotificationArns'
        description: >-
          Passed to CloudFormation. The SNS topic ARNs to which to publish
          stack-related events.
      ProvisionToken:
        $ref: '#/definitions/IdempotencyToken'
        description: >-
          An idempotency token that uniquely identifies the provisioning
          request. 
  ProvisionProductOutput:
    type: object
    properties:
      RecordDetail:
        $ref: '#/definitions/RecordDetail'
        description: >-
          The detailed result of the <a>ProvisionProduct</a> request, containing
          the inputs made to that request, the current state of the request, a
          pointer to the ProvisionedProduct object of the request, and a list of
          any errors that the request encountered. 
  ProvisionedProductDetail:
    type: object
    properties:
      Name:
        $ref: '#/definitions/ProvisionedProductNameOrArn'
        description: The user-friendly name of the ProvisionedProduct object.
      Arn:
        $ref: '#/definitions/ProvisionedProductNameOrArn'
        description: The ARN associated with the ProvisionedProduct object.
      Type:
        $ref: '#/definitions/ProvisionedProductType'
        description: The type of the ProvisionedProduct object.
      Id:
        $ref: '#/definitions/ProvisionedProductId'
        description: The identifier of the ProvisionedProduct object.
      Status:
        $ref: '#/definitions/RecordStatus'
        description: The current status of the ProvisionedProduct.
      StatusMessage:
        $ref: '#/definitions/ProvisionedProductStatusMessage'
        description: The current status message of the ProvisionedProduct.
      CreatedTime:
        $ref: '#/definitions/CreatedTime'
        description: The UTC timestamp of the creation time.
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: >-
          A token to disambiguate duplicate requests. You can create multiple
          resources using the same input in multiple requests, provided that you
          also specify a different idempotency token for each request.
      LastRecordId:
        $ref: '#/definitions/LastRequestId'
        description: >-
          The record identifier of the last request performed on this
          ProvisionedProduct object.
    description: Detailed information about a ProvisionedProduct object.
  ProvisionedProductDetails:
    type: array
    items:
      $ref: '#/definitions/ProvisionedProductDetail'
  ProvisionedProductId:
    type: string
  ProvisionedProductName:
    type: string
  ProvisionedProductNameOrArn:
    type: string
    pattern: >-
      [a-zA-Z0-9][a-zA-Z0-9_-]{0,127}|arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
    minLength: 1
    maxLength: 1224
  ProvisionedProductStatusMessage:
    type: string
  ProvisionedProductType:
    type: string
  ProvisioningArtifact:
    type: object
    properties:
      Id:
        $ref: '#/definitions/Id'
        description: The identifier for the artifact.
      Name:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The name of the artifact.
      Description:
        $ref: '#/definitions/ProvisioningArtifactDescription'
        description: The text description of the artifact.
      CreatedTime:
        $ref: '#/definitions/ProvisioningArtifactCreatedTime'
        description: The UTC timestamp of the creation time.
    description: >-
      Contains information indicating the ways in which a product can be
      provisioned.
  ProvisioningArtifactCreatedTime:
    type: string
    format: date-time
  ProvisioningArtifactDescription:
    type: string
  ProvisioningArtifactDetail:
    type: object
    properties:
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact.
      Name:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The name assigned to the provisioning artifact.
      Description:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The text description of the provisioning artifact.
      Type:
        $ref: '#/definitions/ProvisioningArtifactType'
        description: The type of the provisioning artifact.
      CreatedTime:
        $ref: '#/definitions/CreationTime'
        description: The UTC timestamp of the creation time.
    description: Detailed provisioning artifact information.
  ProvisioningArtifactDetails:
    type: array
    items:
      $ref: '#/definitions/ProvisioningArtifactDetail'
  ProvisioningArtifactInfo:
    type: array
    minItems: 1
    maxItems: 1
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ProvisioningArtifactInfoKey'
        value:
          $ref: '#/definitions/ProvisioningArtifactInfoValue'
  ProvisioningArtifactInfoKey:
    type: string
  ProvisioningArtifactInfoValue:
    type: string
  ProvisioningArtifactName:
    type: string
  ProvisioningArtifactParameter:
    type: object
    properties:
      ParameterKey:
        $ref: '#/definitions/ParameterKey'
        description: 'The parameter key. '
      DefaultValue:
        $ref: '#/definitions/DefaultValue'
        description: The default value for this parameter.
      ParameterType:
        $ref: '#/definitions/ParameterType'
        description: The parameter type.
      IsNoEcho:
        $ref: '#/definitions/NoEcho'
        description: >-
          If this value is true, the value for this parameter is obfuscated from
          view when the parameter is retrieved. This parameter is used to hide
          sensitive information.
      Description:
        $ref: '#/definitions/Description'
        description: The text description of the parameter.
      ParameterConstraints:
        $ref: '#/definitions/ParameterConstraints'
        description: >-
          The list of constraints that the administrator has put on the
          parameter.
    description: >-
      A parameter used to successfully provision the product. This value
      includes a list of allowable values and additional metadata. 
  ProvisioningArtifactParameters:
    type: array
    items:
      $ref: '#/definitions/ProvisioningArtifactParameter'
  ProvisioningArtifactProperties:
    type: object
    required:
      - Info
    properties:
      Name:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The name assigned to the provisioning artifact properties.
      Description:
        $ref: '#/definitions/ProvisioningArtifactDescription'
        description: The text description of the provisioning artifact properties.
      Info:
        $ref: '#/definitions/ProvisioningArtifactInfo'
        description: Additional information about the provisioning artifact properties.
      Type:
        $ref: '#/definitions/ProvisioningArtifactType'
        description: The type of the provisioning artifact properties.
    description: Provisioning artifact properties.
  ProvisioningArtifactType:
    type: string
    enum:
      - CLOUD_FORMATION_TEMPLATE
  ProvisioningArtifacts:
    type: array
    items:
      $ref: '#/definitions/ProvisioningArtifact'
  ProvisioningParameter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/ParameterKey'
        description: >-
          The <code>ProvisioningArtifactParameter.ParameterKey</code> parameter
          from <a>DescribeProvisioningParameters</a>.
      Value:
        $ref: '#/definitions/ParameterValue'
        description: >-
          The value to use for provisioning. Any constraints on this value can
          be found in <code>ProvisioningArtifactParameter</code> for
          <code>Key</code>.
    description: The arameter key/value pairs used to provision a product.
  ProvisioningParameters:
    type: array
    items:
      $ref: '#/definitions/ProvisioningParameter'
  RecordDetail:
    type: object
    properties:
      RecordId:
        $ref: '#/definitions/Id'
        description: The identifier of the ProvisionedProduct object record.
      ProvisionedProductName:
        $ref: '#/definitions/ProvisionedProductName'
        description: The user-friendly name of the ProvisionedProduct object.
      Status:
        $ref: '#/definitions/RecordStatus'
        description: The status of the ProvisionedProduct object.
      CreatedTime:
        $ref: '#/definitions/CreatedTime'
        description: The UTC timestamp of the creation time.
      UpdatedTime:
        $ref: '#/definitions/UpdatedTime'
        description: >-
          The time when the record for the ProvisionedProduct object was last
          updated.
      ProvisionedProductType:
        $ref: '#/definitions/ProvisionedProductType'
        description: The type of the ProvisionedProduct object.
      RecordType:
        $ref: '#/definitions/RecordType'
        description: The record type for this record.
      ProvisionedProductId:
        $ref: '#/definitions/Id'
        description: The identifier of the ProvisionedProduct object.
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The provisioning artifact identifier for this product.
      PathId:
        $ref: '#/definitions/Id'
        description: The identifier of the path for this product's provisioning.
      RecordErrors:
        $ref: '#/definitions/RecordErrors'
        description: A list of errors that occurred while processing the request.
      RecordTags:
        $ref: '#/definitions/RecordTags'
        description: List of tags associated with this record.
    description: The full details of a specific ProvisionedProduct object.
  RecordDetails:
    type: array
    items:
      $ref: '#/definitions/RecordDetail'
  RecordError:
    type: object
    properties:
      Code:
        $ref: '#/definitions/ErrorCode'
        description: The numeric value of the error.
      Description:
        $ref: '#/definitions/ErrorDescription'
        description: The text description of the error.
    description: The error code and description resulting from an operation.
  RecordErrors:
    type: array
    items:
      $ref: '#/definitions/RecordError'
  RecordOutput:
    type: object
    properties:
      OutputKey:
        $ref: '#/definitions/OutputKey'
        description: The output key.
      OutputValue:
        $ref: '#/definitions/OutputValue'
        description: The output value.
      Description:
        $ref: '#/definitions/Description'
        description: The text description of the output.
    description: >-
      An output for the specified Product object created as the result of a
      request. For example, a CloudFormation-backed product that creates an S3
      bucket would have an output for the S3 bucket URL.
  RecordOutputs:
    type: array
    items:
      $ref: '#/definitions/RecordOutput'
  RecordStatus:
    type: string
    enum:
      - IN_PROGRESS
      - SUCCEEDED
      - ERROR
  RecordTag:
    type: object
    properties:
      Key:
        $ref: '#/definitions/RecordTagKey'
        description: The key for this tag.
      Value:
        $ref: '#/definitions/RecordTagValue'
        description: The value for this tag.
    description: 'A tag associated with the record, stored as a key-value pair.'
  RecordTagKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
    minLength: 1
    maxLength: 128
  RecordTagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$'
    minLength: 1
    maxLength: 256
  RecordTags:
    type: array
    items:
      $ref: '#/definitions/RecordTag'
    maxItems: 50
  RecordType:
    type: string
  RejectPortfolioShareInput:
    type: object
    required:
      - PortfolioId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
  RejectPortfolioShareOutput:
    type: object
    properties: {}
  ResourceARN:
    type: string
    minLength: 1
    maxLength: 150
  ResourceInUseException:
    type: object
    properties: {}
    description: >-
      The operation was requested against a resource that is currently in use.
      Free the resource from use and retry the operation.
  ResourceNotFoundException:
    type: object
    properties: {}
    description: The specified resource was not found.
  ScanProvisionedProductsInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      AccessLevelFilter:
        $ref: '#/definitions/AccessLevelFilter'
        description: >-
          The access level for obtaining results. If left unspecified,
          <code>User</code> level access is used.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: >-
          The maximum number of items to return in the results. If more results
          exist than fit in the specified <code>PageSize</code>, the value of
          <code>NextPageToken</code> in the response is non-null.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token of the first page retrieved. If null, this retrieves
          the first page of size <code>PageSize</code>.
  ScanProvisionedProductsOutput:
    type: object
    properties:
      ProvisionedProducts:
        $ref: '#/definitions/ProvisionedProductDetails'
        description: A list of ProvisionedProduct detail objects.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token to use to retrieve the next page of results for this
          operation. If there are no more pages, this value is null.
  SearchFilterKey:
    type: string
  SearchFilterValue:
    type: string
  SearchProductsAsAdminInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      PortfolioId:
        $ref: '#/definitions/Id'
        description: The portfolio identifier.
      Filters:
        $ref: '#/definitions/ProductViewFilters'
        description: >-
          The list of filters with which to limit search results. If no search
          filters are specified, the output is all the products to which the
          administrator has access.
      SortBy:
        $ref: '#/definitions/ProductViewSortBy'
        description: >-
          The sort field specifier. If no value is specified, results are not
          sorted.
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: >-
          The sort order specifier. If no value is specified, results are not
          sorted.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token of the first page retrieved. If null, this retrieves
          the first page of size <code>PageSize</code>.
      PageSize:
        $ref: '#/definitions/PageSize'
        description: >-
          The maximum number of items to return in the results. If more results
          exist than fit in the specified <code>PageSize</code>, the value of
          <code>NextPageToken</code> in the response is non-null.
      ProductSource:
        $ref: '#/definitions/ProductSource'
        description: Access level of the source of the product.
  SearchProductsAsAdminOutput:
    type: object
    properties:
      ProductViewDetails:
        $ref: '#/definitions/ProductViewDetails'
        description: List of detailed product view information objects.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token to use to retrieve the next page of results for this
          operation. If there are no more pages, this value is null.
  SearchProductsInput:
    type: object
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      Filters:
        $ref: '#/definitions/ProductViewFilters'
        description: >-
          The list of filters with which to limit search results. If no search
          filters are specified, the output is all the products to which the
          calling user has access. 
      PageSize:
        $ref: '#/definitions/PageSize'
        description: >-
          The maximum number of items to return in the results. If more results
          exist than fit in the specified <code>PageSize</code>, the value of
          <code>NextPageToken</code> in the response is non-null.
      SortBy:
        $ref: '#/definitions/ProductViewSortBy'
        description: >-
          The sort field specifier. If no value is specified, results are not
          sorted.
      SortOrder:
        $ref: '#/definitions/SortOrder'
        description: >-
          The sort order specifier. If no value is specified, results are not
          sorted.
      PageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token of the first page retrieved. If null, this retrieves
          the first page of size <code>PageSize</code>.
  SearchProductsOutput:
    type: object
    properties:
      ProductViewSummaries:
        $ref: '#/definitions/ProductViewSummaries'
        description: A list of the product view summary objects.
      ProductViewAggregations:
        $ref: '#/definitions/ProductViewAggregations'
        description: A list of the product view aggregation value objects.
      NextPageToken:
        $ref: '#/definitions/PageToken'
        description: >-
          The page token to use to retrieve the next page of results for this
          operation. If there are no more pages, this value is null.
  SortOrder:
    type: string
    enum:
      - ASCENDING
      - DESCENDING
  Status:
    type: string
    enum:
      - AVAILABLE
      - CREATING
      - FAILED
  SupportDescription:
    type: string
  SupportEmail:
    type: string
  SupportUrl:
    type: string
  Tag:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: >-
          The <code>ProvisioningArtifactParameter.TagKey</code> parameter from
          <a>DescribeProvisioningParameters</a>.
      Value:
        $ref: '#/definitions/TagValue'
        description: The esired value for this key.
    description: >-
      Key/value pairs to associate with this provisioning. These tags are
      entirely discretionary and are propagated to the resources created in the
      provisioning.
  TagKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 128
  TagKeys:
    type: array
    items:
      $ref: '#/definitions/TagKey'
  TagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 256
  Tags:
    type: array
    items:
      $ref: '#/definitions/Tag'
    maxItems: 50
  TerminateProvisionedProductInput:
    type: object
    required:
      - TerminateToken
    properties:
      ProvisionedProductName:
        $ref: '#/definitions/ProvisionedProductNameOrArn'
        description: >-
          The name of the ProvisionedProduct object to terminate. You must
          specify either <code>ProvisionedProductName</code> or
          <code>ProvisionedProductId</code>, but not both.
      ProvisionedProductId:
        $ref: '#/definitions/Id'
        description: >-
          The identifier of the ProvisionedProduct object to terminate. You must
          specify either <code>ProvisionedProductName</code> or
          <code>ProvisionedProductId</code>, but not both.
      TerminateToken:
        $ref: '#/definitions/IdempotencyToken'
        description: >-
          An idempotency token that uniquely identifies the termination request.
          This token is only valid during the termination process. After the
          ProvisionedProduct object is terminated, further requests to terminate
          the same ProvisionedProduct object always return
          <b>ResourceNotFound</b> regardless of the value of
          <code>TerminateToken</code>.
      IgnoreErrors:
        $ref: '#/definitions/IgnoreErrors'
        description: >-
          If set to true, AWS Service Catalog stops managing the specified
          ProvisionedProduct object even if it cannot delete the underlying
          resources.
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
  TerminateProvisionedProductOutput:
    type: object
    properties:
      RecordDetail:
        $ref: '#/definitions/RecordDetail'
        description: >-
          The detailed result of the <a>TerminateProvisionedProduct</a> request,
          containing the inputs made to that request, the current state of the
          request, a pointer to the ProvisionedProduct object that the request
          is modifying, and a list of any errors that the request encountered.
  UpdateConstraintInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the constraint to update.
      Description:
        $ref: '#/definitions/ConstraintDescription'
        description: The updated text description of the constraint.
  UpdateConstraintOutput:
    type: object
    properties:
      ConstraintDetail:
        $ref: '#/definitions/ConstraintDetail'
        description: The resulting detailed constraint information.
      ConstraintParameters:
        $ref: '#/definitions/ConstraintParameters'
        description: The resulting updated constraint parameters.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
  UpdatePortfolioInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the portfolio for the update request.
      DisplayName:
        $ref: '#/definitions/PortfolioDisplayName'
        description: The name to use for display purposes.
      Description:
        $ref: '#/definitions/PortfolioDescription'
        description: The updated text description of the portfolio.
      ProviderName:
        $ref: '#/definitions/ProviderName'
        description: The updated name of the portfolio provider.
      AddTags:
        $ref: '#/definitions/AddTags'
        description: >-
          Tags to add to the existing list of tags associated with the
          portfolio.
      RemoveTags:
        $ref: '#/definitions/TagKeys'
        description: >-
          Tags to remove from the existing list of tags associated with the
          portfolio.
  UpdatePortfolioOutput:
    type: object
    properties:
      PortfolioDetail:
        $ref: '#/definitions/PortfolioDetail'
        description: The resulting detailed portfolio information.
      Tags:
        $ref: '#/definitions/Tags'
        description: Tags associated with the portfolio.
  UpdateProductInput:
    type: object
    required:
      - Id
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      Id:
        $ref: '#/definitions/Id'
        description: The identifier of the product for the update request.
      Name:
        $ref: '#/definitions/ProductViewName'
        description: The updated product name.
      Owner:
        $ref: '#/definitions/ProductViewOwner'
        description: The updated owner of the product.
      Description:
        $ref: '#/definitions/ProductViewShortDescription'
        description: The updated text description of the product.
      Distributor:
        $ref: '#/definitions/ProductViewOwner'
        description: The updated distributor of the product.
      SupportDescription:
        $ref: '#/definitions/SupportDescription'
        description: The updated support description for the product.
      SupportEmail:
        $ref: '#/definitions/SupportEmail'
        description: The updated support email for the product.
      SupportUrl:
        $ref: '#/definitions/SupportUrl'
        description: The updated support URL for the product.
      AddTags:
        $ref: '#/definitions/AddTags'
        description: Tags to add to the existing list of tags associated with the product.
      RemoveTags:
        $ref: '#/definitions/TagKeys'
        description: >-
          Tags to remove from the existing list of tags associated with the
          product.
  UpdateProductOutput:
    type: object
    properties:
      ProductViewDetail:
        $ref: '#/definitions/ProductViewDetail'
        description: The resulting detailed product view information.
      Tags:
        $ref: '#/definitions/Tags'
        description: Tags associated with the product.
  UpdateProvisionedProductInput:
    type: object
    required:
      - UpdateToken
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      ProvisionedProductName:
        $ref: '#/definitions/ProvisionedProductNameOrArn'
        description: >-
          The updated name of the ProvisionedProduct object . You must specify
          either <code>ProvisionedProductName</code> or
          <code>ProvisionedProductId</code>, but not both.
      ProvisionedProductId:
        $ref: '#/definitions/Id'
        description: >-
          The identifier of the ProvisionedProduct object to update. You must
          specify either <code>ProvisionedProductName</code> or
          <code>ProvisionedProductId</code>, but not both.
      ProductId:
        $ref: '#/definitions/Id'
        description: The identifier of the ProvisionedProduct object.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The provisioning artifact identifier for this product.
      PathId:
        $ref: '#/definitions/Id'
        description: >-
          The identifier of the path to use in the updated ProvisionedProduct
          object. This value is optional if the product has a default path, and
          is required if there is more than one path for the specified product.
      ProvisioningParameters:
        $ref: '#/definitions/UpdateProvisioningParameters'
        description: >-
          A list of <code>ProvisioningParameter</code> objects used to update
          the ProvisionedProduct object.
      UpdateToken:
        $ref: '#/definitions/IdempotencyToken'
        description: >-
          The idempotency token that uniquely identifies the provisioning update
          request.
  UpdateProvisionedProductOutput:
    type: object
    properties:
      RecordDetail:
        $ref: '#/definitions/RecordDetail'
        description: >-
          The detailed result of the <a>UpdateProvisionedProduct</a> request,
          containing the inputs made to that request, the current state of the
          request, a pointer to the ProvisionedProduct object that the request
          is modifying, and a list of any errors that the request encountered.
  UpdateProvisioningArtifactInput:
    type: object
    required:
      - ProductId
      - ProvisioningArtifactId
    properties:
      AcceptLanguage:
        $ref: '#/definitions/AcceptLanguage'
        description: >-
          <p>The language code to use for this operation. Supported language
          codes are as follows:</p> <p>"en" (English)</p> <p>"jp" (Japanese)</p>
          <p>"zh" (Chinese)</p> <p>If no code is specified, "en" is used as the
          default.</p>
      ProductId:
        $ref: '#/definitions/Id'
        description: The product identifier.
      ProvisioningArtifactId:
        $ref: '#/definitions/Id'
        description: The identifier of the provisioning artifact for the update request.
      Name:
        $ref: '#/definitions/ProvisioningArtifactName'
        description: The updated name of the provisioning artifact.
      Description:
        $ref: '#/definitions/ProvisioningArtifactDescription'
        description: The updated text description of the provisioning artifact.
  UpdateProvisioningArtifactOutput:
    type: object
    properties:
      ProvisioningArtifactDetail:
        $ref: '#/definitions/ProvisioningArtifactDetail'
        description: The resulting detailed provisioning artifact information.
      Info:
        $ref: '#/definitions/ProvisioningArtifactInfo'
        description: Additional information about the provisioning artifact update request.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the current request.
  UpdateProvisioningParameter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/ParameterKey'
        description: >-
          The <code>ProvisioningArtifactParameter.ParameterKey</code> parameter
          from <a>DescribeProvisioningParameters</a>.
      Value:
        $ref: '#/definitions/ParameterValue'
        description: >-
          The value to use for updating the product provisioning. Any
          constraints on this value can be found in the
          <code>ProvisioningArtifactParameter</code> parameter for
          <code>Key</code>.
      UsePreviousValue:
        $ref: '#/definitions/UsePreviousValue'
        description: >-
          If true, uses the currently set value for <code>Key</code>, ignoring
          <code>UpdateProvisioningParameter.Value</code>.
    description: >-
      The parameter key/value pair used to update a ProvisionedProduct object.
      If <code>UsePreviousValue</code> is set to true, <code>Value</code> is
      ignored and the value for <code>Key</code> is kept as previously set
      (current value).
  UpdateProvisioningParameters:
    type: array
    items:
      $ref: '#/definitions/UpdateProvisioningParameter'
  UpdatedTime:
    type: string
    format: date-time
  UsageInstruction:
    type: object
    properties:
      Type:
        $ref: '#/definitions/InstructionType'
        description: The usage instruction type for the value.
      Value:
        $ref: '#/definitions/InstructionValue'
        description: The usage instruction value for this type.
    description: Additional information provided by the administrator.
  UsageInstructions:
    type: array
    items:
      $ref: '#/definitions/UsageInstruction'
  UsePreviousValue:
    type: boolean
