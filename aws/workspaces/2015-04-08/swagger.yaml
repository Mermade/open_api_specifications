swagger: '2.0'
info:
  version: '2015-04-08'
  x-release: v4
  title: Amazon WorkSpaces
  description: <fullname>Amazon WorkSpaces Service</fullname> <p>This reference provides detailed information about the Amazon WorkSpaces operations.</p>
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: aws.amazon.com
  x-serviceName: workspaces
  x-origin:
    format: swagger
    version: '2.0'
    url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workspaces-2015-04-08.normal.json'
    converter:
      url: 'https://github.com/mermade/aws2openapi'
      version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
x-logo:
  url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
  backgroundColor: '#FFFFFF'
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/workspaces/'
host: workspaces.amazonaws.com
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: CreateTags
      description: Creates tags for a WorkSpace.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTagsResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValuesException
          schema:
            $ref: '#/definitions/InvalidParameterValuesException'
        '482':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTagsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateWorkspaces':
    post:
      operationId: CreateWorkspaces
      description: <p>Creates one or more WorkSpaces.</p> <note> <p>This operation is asynchronous and returns before the WorkSpaces are created.</p> </note>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateWorkspacesResult'
        '480':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '481':
          description: InvalidParameterValuesException
          schema:
            $ref: '#/definitions/InvalidParameterValuesException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateWorkspacesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteTags':
    post:
      operationId: DeleteTags
      description: Deletes tags from a WorkSpace.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTagsResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValuesException
          schema:
            $ref: '#/definitions/InvalidParameterValuesException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTagsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeTags':
    post:
      operationId: DescribeTags
      description: Describes tags for a WorkSpace.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTagsResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTagsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeWorkspaceBundles':
    post:
      operationId: DescribeWorkspaceBundles
      description: '<p>Obtains information about the WorkSpace bundles that are available to your account in the specified region.</p> <p>You can filter the results with either the <code>BundleIds</code> parameter, or the <code>Owner</code> parameter, but not both.</p> <p>This operation supports pagination with the use of the <code>NextToken</code> request and response parameters. If more results are available, the <code>NextToken</code> response member contains a token that you pass in the next call to this operation to retrieve the next set of items.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeWorkspaceBundlesResult'
        '480':
          description: InvalidParameterValuesException
          schema:
            $ref: '#/definitions/InvalidParameterValuesException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeWorkspaceBundlesRequest'
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeWorkspaceDirectories':
    post:
      operationId: DescribeWorkspaceDirectories
      description: '<p>Retrieves information about the AWS Directory Service directories in the region that are registered with Amazon WorkSpaces and are available to your account.</p> <p>This operation supports pagination with the use of the <code>NextToken</code> request and response parameters. If more results are available, the <code>NextToken</code> response member contains a token that you pass in the next call to this operation to retrieve the next set of items.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeWorkspaceDirectoriesResult'
        '480':
          description: InvalidParameterValuesException
          schema:
            $ref: '#/definitions/InvalidParameterValuesException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeWorkspaceDirectoriesRequest'
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeWorkspaces':
    post:
      operationId: DescribeWorkspaces
      description: '<p>Obtains information about the specified WorkSpaces.</p> <p>Only one of the filter parameters, such as <code>BundleId</code>, <code>DirectoryId</code>, or <code>WorkspaceIds</code>, can be specified at a time.</p> <p>This operation supports pagination with the use of the <code>NextToken</code> request and response parameters. If more results are available, the <code>NextToken</code> response member contains a token that you pass in the next call to this operation to retrieve the next set of items.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeWorkspacesResult'
        '480':
          description: InvalidParameterValuesException
          schema:
            $ref: '#/definitions/InvalidParameterValuesException'
        '481':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeWorkspacesRequest'
        - name: Limit
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeWorkspacesConnectionStatus':
    post:
      operationId: DescribeWorkspacesConnectionStatus
      description: Describes the connection status of a specified WorkSpace.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeWorkspacesConnectionStatusResult'
        '480':
          description: InvalidParameterValuesException
          schema:
            $ref: '#/definitions/InvalidParameterValuesException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeWorkspacesConnectionStatusRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyWorkspaceProperties':
    post:
      operationId: ModifyWorkspaceProperties
      description: 'Modifies the WorkSpace properties, including the RunningMode and AutoStop time.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyWorkspacePropertiesResult'
        '480':
          description: InvalidParameterValuesException
          schema:
            $ref: '#/definitions/InvalidParameterValuesException'
        '481':
          description: InvalidResourceStateException
          schema:
            $ref: '#/definitions/InvalidResourceStateException'
        '482':
          description: OperationInProgressException
          schema:
            $ref: '#/definitions/OperationInProgressException'
        '483':
          description: UnsupportedWorkspaceConfigurationException
          schema:
            $ref: '#/definitions/UnsupportedWorkspaceConfigurationException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyWorkspacePropertiesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RebootWorkspaces':
    post:
      operationId: RebootWorkspaces
      description: '<p>Reboots the specified WorkSpaces.</p> <p>To be able to reboot a WorkSpace, the WorkSpace must have a <b>State</b> of <code>AVAILABLE</code>, <code>IMPAIRED</code>, or <code>INOPERABLE</code>.</p> <note> <p>This operation is asynchronous and returns before the WorkSpaces have rebooted.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RebootWorkspacesResult'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RebootWorkspacesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RebuildWorkspaces':
    post:
      operationId: RebuildWorkspaces
      description: '<p>Rebuilds the specified WorkSpaces.</p> <p>Rebuilding a WorkSpace is a potentially destructive action that can result in the loss of data. Rebuilding a WorkSpace causes the following to occur:</p> <ul> <li> <p>The system is restored to the image of the bundle that the WorkSpace is created from. Any applications that have been installed, or system settings that have been made since the WorkSpace was created will be lost.</p> </li> <li> <p>The data drive (D drive) is re-created from the last automatic snapshot taken of the data drive. The current contents of the data drive are overwritten. Automatic snapshots of the data drive are taken every 12 hours, so the snapshot can be as much as 12 hours old.</p> </li> </ul> <p>To be able to rebuild a WorkSpace, the WorkSpace must have a <b>State</b> of <code>AVAILABLE</code> or <code>ERROR</code>.</p> <note> <p>This operation is asynchronous and returns before the WorkSpaces have been completely rebuilt.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RebuildWorkspacesResult'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RebuildWorkspacesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartWorkspaces':
    post:
      operationId: StartWorkspaces
      description: Starts the specified WorkSpaces. The API only works with WorkSpaces that have RunningMode configured as AutoStop and the State set to “STOPPED.”
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartWorkspacesResult'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartWorkspacesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopWorkspaces':
    post:
      operationId: StopWorkspaces
      description: ' Stops the specified WorkSpaces. The API only works with WorkSpaces that have RunningMode configured as AutoStop and the State set to AVAILABLE, IMPAIRED, UNHEALTHY, or ERROR.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopWorkspacesResult'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopWorkspacesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#TerminateWorkspaces':
    post:
      operationId: TerminateWorkspaces
      description: '<p>Terminates the specified WorkSpaces.</p> <p>Terminating a WorkSpace is a permanent action and cannot be undone. The user''s data is not maintained and will be destroyed. If you need to archive any user data, contact Amazon Web Services before terminating the WorkSpace.</p> <p>You can terminate a WorkSpace that is in any state except <code>SUSPENDED</code>.</p> <note> <p>This operation is asynchronous and returns before the WorkSpaces have been completely terminated.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TerminateWorkspacesResult'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TerminateWorkspacesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  ARN:
    type: string
    pattern: '^arn:aws:[A-Za-z0-9][A-za-z0-9_/.-]{0,62}:[A-za-z0-9_/.-]{0,63}:[A-za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-za-z0-9_/.-]{0,127}$'
  AccessDeniedException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
  Alias:
    type: string
  BooleanObject:
    type: boolean
  BundleId:
    type: string
    pattern: '^wsb-[0-9a-z]{8,63}$'
  BundleIdList:
    type: array
    items:
      $ref: '#/definitions/BundleId'
    minItems: 1
    maxItems: 25
  BundleList:
    type: array
    items:
      $ref: '#/definitions/WorkspaceBundle'
  BundleOwner:
    type: string
  Compute:
    type: string
    enum:
      - VALUE
      - STANDARD
      - PERFORMANCE
  ComputeType:
    type: object
    properties:
      Name:
        $ref: '#/definitions/Compute'
        description: The name of the compute type for the bundle.
    description: Contains information about the compute type of a WorkSpace bundle.
  ComputerName:
    type: string
  ConnectionState:
    type: string
    enum:
      - CONNECTED
      - DISCONNECTED
      - UNKNOWN
  CreateTagsRequest:
    type: object
    required:
      - ResourceId
      - Tags
    properties:
      ResourceId:
        $ref: '#/definitions/NonEmptyString'
        description: The resource ID of the request.
      Tags:
        $ref: '#/definitions/TagList'
        description: The tags of the request.
    description: The request of the <a>CreateTags</a> operation.
  CreateTagsResult:
    type: object
    properties: {}
    description: The result of the <a>CreateTags</a> operation.
  CreateWorkspacesRequest:
    type: object
    required:
      - Workspaces
    properties:
      Workspaces:
        $ref: '#/definitions/WorkspaceRequestList'
        description: An array of structures that specify the WorkSpaces to create.
    description: Contains the inputs for the <a>CreateWorkspaces</a> operation.
  CreateWorkspacesResult:
    type: object
    properties:
      FailedRequests:
        $ref: '#/definitions/FailedCreateWorkspaceRequests'
        description: An array of structures that represent the WorkSpaces that could not be created.
      PendingRequests:
        $ref: '#/definitions/WorkspaceList'
        description: '<p>An array of structures that represent the WorkSpaces that were created.</p> <p>Because this operation is asynchronous, the identifier in <code>WorkspaceId</code> is not immediately available. If you immediately call <a>DescribeWorkspaces</a> with this identifier, no information will be returned.</p>'
    description: Contains the result of the <a>CreateWorkspaces</a> operation.
  DefaultOu:
    type: string
  DefaultWorkspaceCreationProperties:
    type: object
    properties:
      EnableWorkDocs:
        $ref: '#/definitions/BooleanObject'
        description: Specifies if the directory is enabled for Amazon WorkDocs.
      EnableInternetAccess:
        $ref: '#/definitions/BooleanObject'
        description: A public IP address will be attached to all WorkSpaces that are created or rebuilt.
      DefaultOu:
        $ref: '#/definitions/DefaultOu'
        description: The organizational unit (OU) in the directory that the WorkSpace machine accounts are placed in.
      CustomSecurityGroupId:
        $ref: '#/definitions/SecurityGroupId'
        description: The identifier of any custom security groups that are applied to the WorkSpaces when they are created.
      UserEnabledAsLocalAdministrator:
        $ref: '#/definitions/BooleanObject'
        description: The WorkSpace user is an administrator on the WorkSpace.
    description: Contains default WorkSpace creation information.
  DeleteTagsRequest:
    type: object
    required:
      - ResourceId
      - TagKeys
    properties:
      ResourceId:
        $ref: '#/definitions/NonEmptyString'
        description: The resource ID of the request.
      TagKeys:
        $ref: '#/definitions/TagKeyList'
        description: The tag keys of the request.
    description: The request of the <a>DeleteTags</a> operation.
  DeleteTagsResult:
    type: object
    properties: {}
    description: The result of the <a>DeleteTags</a> operation.
  DescribeTagsRequest:
    type: object
    required:
      - ResourceId
    properties:
      ResourceId:
        $ref: '#/definitions/NonEmptyString'
        description: The resource ID of the request.
    description: The request of the <a>DescribeTags</a> operation.
  DescribeTagsResult:
    type: object
    properties:
      TagList:
        $ref: '#/definitions/TagList'
        description: The list of tags.
    description: The result of the <a>DescribeTags</a> operation.
  DescribeWorkspaceBundlesRequest:
    type: object
    properties:
      BundleIds:
        $ref: '#/definitions/BundleIdList'
        description: An array of strings that contains the identifiers of the bundles to retrieve. This parameter cannot be combined with any other filter parameter.
      Owner:
        $ref: '#/definitions/BundleOwner'
        description: '<p>The owner of the bundles to retrieve. This parameter cannot be combined with any other filter parameter.</p> <p>This contains one of the following values:</p> <ul> <li> <p>null- Retrieves the bundles that belong to the account making the call.</p> </li> <li> <p> <code>AMAZON</code>- Retrieves the bundles that are provided by AWS.</p> </li> </ul>'
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: The <code>NextToken</code> value from a previous call to this operation. Pass null if this is the first call.
    description: Contains the inputs for the <a>DescribeWorkspaceBundles</a> operation.
  DescribeWorkspaceBundlesResult:
    type: object
    properties:
      Bundles:
        $ref: '#/definitions/BundleList'
        description: An array of structures that contain information about the bundles.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent call to this operation to retrieve the next set of items. This token is valid for one day and must be used within that time frame.'
    description: Contains the results of the <a>DescribeWorkspaceBundles</a> operation.
  DescribeWorkspaceDirectoriesRequest:
    type: object
    properties:
      DirectoryIds:
        $ref: '#/definitions/DirectoryIdList'
        description: 'An array of strings that contains the directory identifiers to retrieve information for. If this member is null, all directories are retrieved.'
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: The <code>NextToken</code> value from a previous call to this operation. Pass null if this is the first call.
    description: Contains the inputs for the <a>DescribeWorkspaceDirectories</a> operation.
  DescribeWorkspaceDirectoriesResult:
    type: object
    properties:
      Directories:
        $ref: '#/definitions/DirectoryList'
        description: An array of structures that contain information about the directories.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent call to this operation to retrieve the next set of items. This token is valid for one day and must be used within that time frame.'
    description: Contains the results of the <a>DescribeWorkspaceDirectories</a> operation.
  DescribeWorkspacesConnectionStatusRequest:
    type: object
    properties:
      WorkspaceIds:
        $ref: '#/definitions/WorkspaceIdList'
        description: An array of strings that contain the identifiers of the WorkSpaces.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: The next token of the request.
  DescribeWorkspacesConnectionStatusResult:
    type: object
    properties:
      WorkspacesConnectionStatus:
        $ref: '#/definitions/WorkspaceConnectionStatusList'
        description: The connection status of the WorkSpace.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: The next token of the result.
  DescribeWorkspacesRequest:
    type: object
    properties:
      WorkspaceIds:
        $ref: '#/definitions/WorkspaceIdList'
        description: '<p>An array of strings that contain the identifiers of the WorkSpaces for which to retrieve information. This parameter cannot be combined with any other filter parameter.</p> <p>Because the <a>CreateWorkspaces</a> operation is asynchronous, the identifier it returns is not immediately available. If you immediately call <a>DescribeWorkspaces</a> with this identifier, no information is returned.</p>'
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: 'Specifies the directory identifier to which to limit the WorkSpaces. Optionally, you can specify a specific directory user with the <code>UserName</code> parameter. This parameter cannot be combined with any other filter parameter.'
      UserName:
        $ref: '#/definitions/UserName'
        description: Used with the <code>DirectoryId</code> parameter to specify the directory user for whom to obtain the WorkSpace.
      BundleId:
        $ref: '#/definitions/BundleId'
        description: The identifier of a bundle to obtain the WorkSpaces for. All WorkSpaces that are created from this bundle will be retrieved. This parameter cannot be combined with any other filter parameter.
      Limit:
        $ref: '#/definitions/Limit'
        description: The maximum number of items to return.
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: The <code>NextToken</code> value from a previous call to this operation. Pass null if this is the first call.
    description: Contains the inputs for the <a>DescribeWorkspaces</a> operation.
  DescribeWorkspacesResult:
    type: object
    properties:
      Workspaces:
        $ref: '#/definitions/WorkspaceList'
        description: '<p>An array of structures that contain the information about the WorkSpaces.</p> <p>Because the <a>CreateWorkspaces</a> operation is asynchronous, some of this information may be incomplete for a newly-created WorkSpace.</p>'
      NextToken:
        $ref: '#/definitions/PaginationToken'
        description: 'If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent call to this operation to retrieve the next set of items. This token is valid for one day and must be used within that time frame.'
    description: Contains the results for the <a>DescribeWorkspaces</a> operation.
  Description:
    type: string
  DirectoryId:
    type: string
    pattern: '^d-[0-9a-f]{8,63}$'
  DirectoryIdList:
    type: array
    items:
      $ref: '#/definitions/DirectoryId'
    minItems: 1
    maxItems: 25
  DirectoryList:
    type: array
    items:
      $ref: '#/definitions/WorkspaceDirectory'
  DirectoryName:
    type: string
  DnsIpAddresses:
    type: array
    items:
      $ref: '#/definitions/IpAddress'
  ErrorType:
    type: string
  ExceptionMessage:
    type: string
  FailedCreateWorkspaceRequest:
    type: object
    properties:
      WorkspaceRequest:
        $ref: '#/definitions/WorkspaceRequest'
        description: A <a>FailedCreateWorkspaceRequest$WorkspaceRequest</a> object that contains the information about the WorkSpace that could not be created.
      ErrorCode:
        $ref: '#/definitions/ErrorType'
        description: The error code.
      ErrorMessage:
        $ref: '#/definitions/Description'
        description: The textual error message.
    description: Contains information about a WorkSpace that could not be created.
  FailedCreateWorkspaceRequests:
    type: array
    items:
      $ref: '#/definitions/FailedCreateWorkspaceRequest'
  FailedRebootWorkspaceRequests:
    type: array
    items:
      $ref: '#/definitions/FailedWorkspaceChangeRequest'
  FailedRebuildWorkspaceRequests:
    type: array
    items:
      $ref: '#/definitions/FailedWorkspaceChangeRequest'
  FailedStartWorkspaceRequests:
    type: array
    items:
      $ref: '#/definitions/FailedWorkspaceChangeRequest'
  FailedStopWorkspaceRequests:
    type: array
    items:
      $ref: '#/definitions/FailedWorkspaceChangeRequest'
  FailedTerminateWorkspaceRequests:
    type: array
    items:
      $ref: '#/definitions/FailedWorkspaceChangeRequest'
  FailedWorkspaceChangeRequest:
    type: object
    properties:
      WorkspaceId:
        $ref: '#/definitions/WorkspaceId'
        description: The identifier of the WorkSpace.
      ErrorCode:
        $ref: '#/definitions/ErrorType'
        description: The error code.
      ErrorMessage:
        $ref: '#/definitions/Description'
        description: The textual error message.
    description: 'Contains information about a WorkSpace that could not be rebooted (<a>RebootWorkspaces</a>), rebuilt (<a>RebuildWorkspaces</a>), terminated (<a>TerminateWorkspaces</a>), started (<a>StartWorkspaces</a>), or stopped (<a>StopWorkspaces</a>).'
  InvalidParameterValuesException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: The exception error message.
    description: One or more parameter values are not valid.
  InvalidResourceStateException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
    description: The specified WorkSpace has an invalid state for this operation.
  IpAddress:
    type: string
  Limit:
    type: integer
    minimum: 1
    maximum: 25
  ModifyWorkspacePropertiesRequest:
    type: object
    required:
      - WorkspaceId
      - WorkspaceProperties
    properties:
      WorkspaceId:
        $ref: '#/definitions/WorkspaceId'
        description: The ID of the WorkSpace.
      WorkspaceProperties:
        $ref: '#/definitions/WorkspaceProperties'
        description: The WorkSpace properties of the request.
  ModifyWorkspacePropertiesResult:
    type: object
    properties: {}
  NonEmptyString:
    type: string
    minLength: 1
  OperationInProgressException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
    description: The properties of this WorkSpace are currently being modified. Try again in a moment.
  PaginationToken:
    type: string
    minLength: 1
    maxLength: 63
  RebootRequest:
    type: object
    required:
      - WorkspaceId
    properties:
      WorkspaceId:
        $ref: '#/definitions/WorkspaceId'
        description: The identifier of the WorkSpace to reboot.
    description: Contains information used with the <a>RebootWorkspaces</a> operation to reboot a WorkSpace.
  RebootWorkspaceRequests:
    type: array
    items:
      $ref: '#/definitions/RebootRequest'
    minItems: 1
    maxItems: 25
  RebootWorkspacesRequest:
    type: object
    required:
      - RebootWorkspaceRequests
    properties:
      RebootWorkspaceRequests:
        $ref: '#/definitions/RebootWorkspaceRequests'
        description: An array of structures that specify the WorkSpaces to reboot.
    description: Contains the inputs for the <a>RebootWorkspaces</a> operation.
  RebootWorkspacesResult:
    type: object
    properties:
      FailedRequests:
        $ref: '#/definitions/FailedRebootWorkspaceRequests'
        description: An array of structures representing any WorkSpaces that could not be rebooted.
    description: Contains the results of the <a>RebootWorkspaces</a> operation.
  RebuildRequest:
    type: object
    required:
      - WorkspaceId
    properties:
      WorkspaceId:
        $ref: '#/definitions/WorkspaceId'
        description: The identifier of the WorkSpace to rebuild.
    description: Contains information used with the <a>RebuildWorkspaces</a> operation to rebuild a WorkSpace.
  RebuildWorkspaceRequests:
    type: array
    items:
      $ref: '#/definitions/RebuildRequest'
    minItems: 1
    maxItems: 1
  RebuildWorkspacesRequest:
    type: object
    required:
      - RebuildWorkspaceRequests
    properties:
      RebuildWorkspaceRequests:
        $ref: '#/definitions/RebuildWorkspaceRequests'
        description: An array of structures that specify the WorkSpaces to rebuild.
    description: Contains the inputs for the <a>RebuildWorkspaces</a> operation.
  RebuildWorkspacesResult:
    type: object
    properties:
      FailedRequests:
        $ref: '#/definitions/FailedRebuildWorkspaceRequests'
        description: An array of structures representing any WorkSpaces that could not be rebuilt.
    description: Contains the results of the <a>RebuildWorkspaces</a> operation.
  RegistrationCode:
    type: string
    minLength: 1
    maxLength: 20
  ResourceLimitExceededException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: The exception error message.
    description: Your resource limits have been exceeded.
  ResourceNotFoundException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: The resource could not be found.
      ResourceId:
        $ref: '#/definitions/NonEmptyString'
        description: The resource could not be found.
    description: The resource could not be found.
  ResourceUnavailableException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
        description: The exception error message.
      ResourceId:
        $ref: '#/definitions/NonEmptyString'
        description: The identifier of the resource that is not available.
    description: The specified resource is not available.
  RunningMode:
    type: string
    enum:
      - AUTO_STOP
      - ALWAYS_ON
  RunningModeAutoStopTimeoutInMinutes:
    type: integer
  SecurityGroupId:
    type: string
    pattern: '^(sg-[0-9a-f]{8})$'
  StartRequest:
    type: object
    properties:
      WorkspaceId:
        $ref: '#/definitions/WorkspaceId'
        description: The ID of the WorkSpace.
    description: Describes the start request.
  StartWorkspaceRequests:
    type: array
    items:
      $ref: '#/definitions/StartRequest'
    minItems: 1
    maxItems: 25
  StartWorkspacesRequest:
    type: object
    required:
      - StartWorkspaceRequests
    properties:
      StartWorkspaceRequests:
        $ref: '#/definitions/StartWorkspaceRequests'
        description: The requests.
  StartWorkspacesResult:
    type: object
    properties:
      FailedRequests:
        $ref: '#/definitions/FailedStartWorkspaceRequests'
        description: The failed requests.
  StopRequest:
    type: object
    properties:
      WorkspaceId:
        $ref: '#/definitions/WorkspaceId'
        description: The ID of the WorkSpace.
    description: Describes the stop request.
  StopWorkspaceRequests:
    type: array
    items:
      $ref: '#/definitions/StopRequest'
    minItems: 1
    maxItems: 25
  StopWorkspacesRequest:
    type: object
    required:
      - StopWorkspaceRequests
    properties:
      StopWorkspaceRequests:
        $ref: '#/definitions/StopWorkspaceRequests'
        description: The requests.
  StopWorkspacesResult:
    type: object
    properties:
      FailedRequests:
        $ref: '#/definitions/FailedStopWorkspaceRequests'
        description: The failed requests.
  SubnetId:
    type: string
    pattern: '^(subnet-[0-9a-f]{8})$'
  SubnetIds:
    type: array
    items:
      $ref: '#/definitions/SubnetId'
  Tag:
    type: object
    required:
      - Key
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The key of the tag.
      Value:
        $ref: '#/definitions/TagValue'
        description: The value of the tag.
    description: Describes the tag of the WorkSpace.
  TagKey:
    type: string
    minLength: 1
    maxLength: 127
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/NonEmptyString'
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
  TagValue:
    type: string
    maxLength: 255
  TerminateRequest:
    type: object
    required:
      - WorkspaceId
    properties:
      WorkspaceId:
        $ref: '#/definitions/WorkspaceId'
        description: The identifier of the WorkSpace to terminate.
    description: Contains information used with the <a>TerminateWorkspaces</a> operation to terminate a WorkSpace.
  TerminateWorkspaceRequests:
    type: array
    items:
      $ref: '#/definitions/TerminateRequest'
    minItems: 1
    maxItems: 25
  TerminateWorkspacesRequest:
    type: object
    required:
      - TerminateWorkspaceRequests
    properties:
      TerminateWorkspaceRequests:
        $ref: '#/definitions/TerminateWorkspaceRequests'
        description: An array of structures that specify the WorkSpaces to terminate.
    description: Contains the inputs for the <a>TerminateWorkspaces</a> operation.
  TerminateWorkspacesResult:
    type: object
    properties:
      FailedRequests:
        $ref: '#/definitions/FailedTerminateWorkspaceRequests'
        description: An array of structures representing any WorkSpaces that could not be terminated.
    description: Contains the results of the <a>TerminateWorkspaces</a> operation.
  Timestamp:
    type: string
    format: date-time
  UnsupportedWorkspaceConfigurationException:
    type: object
    properties:
      message:
        $ref: '#/definitions/ExceptionMessage'
    description: 'The WorkSpace does not have the supported configuration for this operation. For more information, see the <a href="http://docs.aws.amazon.com/workspaces/latest/adminguide">Amazon WorkSpaces Administration Guide</a>. '
  UserName:
    type: string
    minLength: 1
    maxLength: 63
  UserStorage:
    type: object
    properties:
      Capacity:
        $ref: '#/definitions/NonEmptyString'
        description: The amount of user storage for the bundle.
    description: Contains information about the user storage for a WorkSpace bundle.
  VolumeEncryptionKey:
    type: string
  Workspace:
    type: object
    properties:
      WorkspaceId:
        $ref: '#/definitions/WorkspaceId'
        description: The identifier of the WorkSpace.
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the AWS Directory Service directory that the WorkSpace belongs to.
      UserName:
        $ref: '#/definitions/UserName'
        description: The user that the WorkSpace is assigned to.
      IpAddress:
        $ref: '#/definitions/IpAddress'
        description: The IP address of the WorkSpace.
      State:
        $ref: '#/definitions/WorkspaceState'
        description: The operational state of the WorkSpace.
      BundleId:
        $ref: '#/definitions/BundleId'
        description: The identifier of the bundle that the WorkSpace was created from.
      SubnetId:
        $ref: '#/definitions/SubnetId'
        description: The identifier of the subnet that the WorkSpace is in.
      ErrorMessage:
        $ref: '#/definitions/Description'
        description: 'If the WorkSpace could not be created, this contains a textual error message that describes the failure.'
      ErrorCode:
        $ref: '#/definitions/WorkspaceErrorCode'
        description: 'If the WorkSpace could not be created, this contains the error code.'
      ComputerName:
        $ref: '#/definitions/ComputerName'
        description: The name of the WorkSpace as seen by the operating system.
      VolumeEncryptionKey:
        $ref: '#/definitions/VolumeEncryptionKey'
        description: The KMS key used to encrypt data stored on your WorkSpace.
      UserVolumeEncryptionEnabled:
        $ref: '#/definitions/BooleanObject'
        description: 'Specifies whether the data stored on the user volume, or D: drive, is encrypted.'
      RootVolumeEncryptionEnabled:
        $ref: '#/definitions/BooleanObject'
        description: 'Specifies whether the data stored on the root volume, or C: drive, is encrypted.'
      WorkspaceProperties:
        $ref: '#/definitions/WorkspaceProperties'
    description: Contains information about a WorkSpace.
  WorkspaceBundle:
    type: object
    properties:
      BundleId:
        $ref: '#/definitions/BundleId'
        description: The bundle identifier.
      Name:
        $ref: '#/definitions/NonEmptyString'
        description: The name of the bundle.
      Owner:
        $ref: '#/definitions/BundleOwner'
        description: 'The owner of the bundle. This contains the owner''s account identifier, or <code>AMAZON</code> if the bundle is provided by AWS.'
      Description:
        $ref: '#/definitions/Description'
        description: The bundle description.
      UserStorage:
        $ref: '#/definitions/UserStorage'
        description: A <a>UserStorage</a> object that specifies the amount of user storage that the bundle contains.
      ComputeType:
        $ref: '#/definitions/ComputeType'
        description: A <a>ComputeType</a> object that specifies the compute type for the bundle.
    description: Contains information about a WorkSpace bundle.
  WorkspaceConnectionStatus:
    type: object
    properties:
      WorkspaceId:
        $ref: '#/definitions/WorkspaceId'
        description: The ID of the WorkSpace.
      ConnectionState:
        $ref: '#/definitions/ConnectionState'
        description: The connection state of the WorkSpace. Returns UNKOWN if the WorkSpace is in a Stopped state.
      ConnectionStateCheckTimestamp:
        $ref: '#/definitions/Timestamp'
        description: The timestamp of the connection state check.
      LastKnownUserConnectionTimestamp:
        $ref: '#/definitions/Timestamp'
        description: The timestamp of the last known user connection.
    description: Describes the connection status of a WorkSpace.
  WorkspaceConnectionStatusList:
    type: array
    items:
      $ref: '#/definitions/WorkspaceConnectionStatus'
  WorkspaceDirectory:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The directory identifier.
      Alias:
        $ref: '#/definitions/Alias'
        description: The directory alias.
      DirectoryName:
        $ref: '#/definitions/DirectoryName'
        description: The name of the directory.
      RegistrationCode:
        $ref: '#/definitions/RegistrationCode'
        description: The registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory.
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: An array of strings that contains the identifiers of the subnets used with the directory.
      DnsIpAddresses:
        $ref: '#/definitions/DnsIpAddresses'
        description: An array of strings that contains the IP addresses of the DNS servers for the directory.
      CustomerUserName:
        $ref: '#/definitions/UserName'
        description: The user name for the service account.
      IamRoleId:
        $ref: '#/definitions/ARN'
        description: 'The identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf.'
      DirectoryType:
        $ref: '#/definitions/WorkspaceDirectoryType'
        description: The directory type.
      WorkspaceSecurityGroupId:
        $ref: '#/definitions/SecurityGroupId'
        description: The identifier of the security group that is assigned to new WorkSpaces.
      State:
        $ref: '#/definitions/WorkspaceDirectoryState'
        description: The state of the directory's registration with Amazon WorkSpaces
      WorkspaceCreationProperties:
        $ref: '#/definitions/DefaultWorkspaceCreationProperties'
        description: A structure that specifies the default creation properties for all WorkSpaces in the directory.
    description: Contains information about an AWS Directory Service directory for use with Amazon WorkSpaces.
  WorkspaceDirectoryState:
    type: string
    enum:
      - REGISTERING
      - REGISTERED
      - DEREGISTERING
      - DEREGISTERED
      - ERROR
  WorkspaceDirectoryType:
    type: string
    enum:
      - SIMPLE_AD
      - AD_CONNECTOR
  WorkspaceErrorCode:
    type: string
  WorkspaceId:
    type: string
    pattern: '^ws-[0-9a-z]{8,63}$'
  WorkspaceIdList:
    type: array
    items:
      $ref: '#/definitions/WorkspaceId'
    minItems: 1
    maxItems: 25
  WorkspaceList:
    type: array
    items:
      $ref: '#/definitions/Workspace'
  WorkspaceProperties:
    type: object
    properties:
      RunningMode:
        $ref: '#/definitions/RunningMode'
        description: The running mode of the WorkSpace. AlwaysOn WorkSpaces are billed monthly. AutoStop WorkSpaces are billed by the hour and stopped when no longer being used in order to save on costs.
      RunningModeAutoStopTimeoutInMinutes:
        $ref: '#/definitions/RunningModeAutoStopTimeoutInMinutes'
        description: The time after a user logs off when WorkSpaces are automatically stopped. Configured in 60 minute intervals.
    description: Describes the properties of a WorkSpace.
  WorkspaceRequest:
    type: object
    required:
      - DirectoryId
      - UserName
      - BundleId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the AWS Directory Service directory to create the WorkSpace in. You can use the <a>DescribeWorkspaceDirectories</a> operation to obtain a list of the directories that are available.
      UserName:
        $ref: '#/definitions/UserName'
        description: The username that the WorkSpace is assigned to. This username must exist in the AWS Directory Service directory specified by the <code>DirectoryId</code> member.
      BundleId:
        $ref: '#/definitions/BundleId'
        description: The identifier of the bundle to create the WorkSpace from. You can use the <a>DescribeWorkspaceBundles</a> operation to obtain a list of the bundles that are available.
      VolumeEncryptionKey:
        $ref: '#/definitions/VolumeEncryptionKey'
        description: The KMS key used to encrypt data stored on your WorkSpace.
      UserVolumeEncryptionEnabled:
        $ref: '#/definitions/BooleanObject'
        description: 'Specifies whether the data stored on the user volume, or D: drive, is encrypted.'
      RootVolumeEncryptionEnabled:
        $ref: '#/definitions/BooleanObject'
        description: 'Specifies whether the data stored on the root volume, or C: drive, is encrypted.'
      WorkspaceProperties:
        $ref: '#/definitions/WorkspaceProperties'
      Tags:
        $ref: '#/definitions/TagList'
        description: The tags of the WorkSpace request.
    description: Contains information about a WorkSpace creation request.
  WorkspaceRequestList:
    type: array
    items:
      $ref: '#/definitions/WorkspaceRequest'
    minItems: 1
    maxItems: 25
  WorkspaceState:
    type: string
    enum:
      - PENDING
      - AVAILABLE
      - IMPAIRED
      - UNHEALTHY
      - REBOOTING
      - STARTING
      - REBUILDING
      - MAINTENANCE
      - TERMINATING
      - TERMINATED
      - SUSPENDED
      - STOPPING
      - STOPPED
      - ERROR
