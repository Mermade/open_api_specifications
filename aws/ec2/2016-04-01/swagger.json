{
  "swagger": "2.0",
  "info": {
    "version": "2016-04-01",
    "x-release": "v4",
    "title": "Amazon Elastic Compute Cloud",
    "description": "<fullname>Amazon Elastic Compute Cloud</fullname> <p>Amazon Elastic Compute Cloud (Amazon EC2) provides resizable computing capacity in the Amazon Web Services (AWS) cloud. Using Amazon EC2 eliminates your need to invest in hardware up front, so you can develop and deploy applications faster.</p>",
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/aws2openapi"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    }
  },
  "x-logo": {
    "url": "https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg",
    "backgroundColor": "#FFFFFF"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/ec2/"
  },
  "host": "ec2.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [],
  "produces": [],
  "securityDefinitions": {
    "hmac": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "paths": {
    "/": {
      "post": {
        "operationId": "UnmonitorInstances",
        "description": "Disables monitoring for a running instance. For more information about monitoring instances, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html\">Monitoring Your Instances and Volumes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UnmonitorInstancesResult"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnmonitorInstancesRequest"
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "AcceptVpcPeeringConnectionRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcPeeringConnectionId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC peering connection."
        }
      },
      "description": "Contains the parameters for AcceptVpcPeeringConnection."
    },
    "AcceptVpcPeeringConnectionResult": {
      "type": "object",
      "properties": {
        "VpcPeeringConnection": {
          "$ref": "#/definitions/VpcPeeringConnection",
          "description": "Information about the VPC peering connection."
        }
      },
      "description": "Contains the output of AcceptVpcPeeringConnection."
    },
    "AccountAttribute": {
      "type": "object",
      "properties": {
        "AttributeName": {
          "$ref": "#/definitions/String",
          "description": "The name of the account attribute."
        },
        "AttributeValues": {
          "$ref": "#/definitions/AccountAttributeValueList",
          "description": "One or more values for the account attribute."
        }
      },
      "description": "Describes an account attribute."
    },
    "AccountAttributeList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AccountAttribute"
      }
    },
    "AccountAttributeName": {
      "type": "string",
      "enum": [
        "supported-platforms",
        "default-vpc"
      ]
    },
    "AccountAttributeNameStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AccountAttributeName"
      }
    },
    "AccountAttributeValue": {
      "type": "object",
      "properties": {
        "AttributeValue": {
          "$ref": "#/definitions/String",
          "description": "The value of the attribute."
        }
      },
      "description": "Describes a value of an account attribute."
    },
    "AccountAttributeValueList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AccountAttributeValue"
      }
    },
    "ActiveInstance": {
      "type": "object",
      "properties": {
        "InstanceType": {
          "$ref": "#/definitions/String",
          "description": "The instance type."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "SpotInstanceRequestId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Spot instance request."
        }
      },
      "description": "Describes a running instance in a Spot fleet."
    },
    "ActiveInstanceSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ActiveInstance"
      }
    },
    "ActivityStatus": {
      "type": "string",
      "enum": [
        "error",
        "pending_fulfillment",
        "pending_termination",
        "fulfilled"
      ]
    },
    "Address": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance that the address is associated with (if any)."
        },
        "PublicIp": {
          "$ref": "#/definitions/String",
          "description": "The Elastic IP address."
        },
        "AllocationId": {
          "$ref": "#/definitions/String",
          "description": "The ID representing the allocation of the address for use with EC2-VPC."
        },
        "AssociationId": {
          "$ref": "#/definitions/String",
          "description": "The ID representing the association of the address with an instance in a VPC."
        },
        "Domain": {
          "$ref": "#/definitions/DomainType",
          "description": "Indicates whether this Elastic IP address is for use with instances in EC2-Classic (<code>standard</code>) or instances in a VPC (<code>vpc</code>)."
        },
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface."
        },
        "NetworkInterfaceOwnerId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the AWS account that owns the network interface."
        },
        "PrivateIpAddress": {
          "$ref": "#/definitions/String",
          "description": "The private IP address associated with the Elastic IP address."
        }
      },
      "description": "Describes an Elastic IP address."
    },
    "AddressList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Address"
      }
    },
    "Affinity": {
      "type": "string",
      "enum": [
        "default",
        "host"
      ]
    },
    "AllocateAddressRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "Domain": {
          "$ref": "#/definitions/DomainType",
          "description": "<p>Set to <code>vpc</code> to allocate the address for use with instances in a VPC.</p> <p>Default: The address is for use with instances in EC2-Classic.</p>"
        }
      },
      "description": "Contains the parameters for AllocateAddress."
    },
    "AllocateAddressResult": {
      "type": "object",
      "properties": {
        "PublicIp": {
          "$ref": "#/definitions/String",
          "description": "The Elastic IP address."
        },
        "Domain": {
          "$ref": "#/definitions/DomainType",
          "description": "Indicates whether this Elastic IP address is for use with instances in EC2-Classic (<code>standard</code>) or instances in a VPC (<code>vpc</code>)."
        },
        "AllocationId": {
          "$ref": "#/definitions/String",
          "description": "[EC2-VPC] The ID that AWS assigns to represent the allocation of the Elastic IP address for use with instances in a VPC."
        }
      },
      "description": "Contains the output of AllocateAddress."
    },
    "AllocateHostsRequest": {
      "type": "object",
      "required": [
        "InstanceType",
        "Quantity",
        "AvailabilityZone"
      ],
      "properties": {
        "AutoPlacement": {
          "$ref": "#/definitions/AutoPlacement",
          "description": "<p>This is enabled by default. This property allows instances to be automatically placed onto available Dedicated Hosts, when you are launching instances without specifying a host ID.</p> <p>Default: Enabled</p>"
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. "
        },
        "InstanceType": {
          "$ref": "#/definitions/String",
          "description": "Specify the instance type that you want your Dedicated Hosts to be configured for. When you specify the instance type, that is the only instance type that you can launch onto that host."
        },
        "Quantity": {
          "$ref": "#/definitions/Integer",
          "description": "The number of Dedicated Hosts you want to allocate to your account with these parameters."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone for the Dedicated Hosts."
        }
      },
      "description": "Contains the parameters for AllocateHosts."
    },
    "AllocateHostsResult": {
      "type": "object",
      "properties": {
        "HostIds": {
          "$ref": "#/definitions/ResponseHostIdList",
          "description": "The ID of the allocated Dedicated Host. This is used when you want to launch an instance onto a specific host."
        }
      },
      "description": "Contains the output of AllocateHosts."
    },
    "AllocationIdList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "AllocationState": {
      "type": "string",
      "enum": [
        "available",
        "under-assessment",
        "permanent-failure",
        "released",
        "released-permanent-failure"
      ]
    },
    "AllocationStrategy": {
      "type": "string",
      "enum": [
        "lowestPrice",
        "diversified"
      ]
    },
    "ArchitectureValues": {
      "type": "string",
      "enum": [
        "i386",
        "x86_64"
      ]
    },
    "AssignPrivateIpAddressesRequest": {
      "type": "object",
      "required": [
        "NetworkInterfaceId"
      ],
      "properties": {
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface."
        },
        "PrivateIpAddresses": {
          "$ref": "#/definitions/PrivateIpAddressStringList",
          "description": "<p>One or more IP addresses to be assigned as a secondary private IP address to the network interface. You can't specify this parameter when also specifying a number of secondary IP addresses.</p> <p>If you don't specify an IP address, Amazon EC2 automatically selects an IP address within the subnet range.</p>"
        },
        "SecondaryPrivateIpAddressCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of secondary IP addresses to assign to the network interface. You can't specify this parameter when also specifying private IP addresses."
        },
        "AllowReassignment": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface."
        }
      },
      "description": "Contains the parameters for AssignPrivateIpAddresses."
    },
    "AssociateAddressRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance. This is required for EC2-Classic. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. The operation fails if you specify an instance ID unless exactly one network interface is attached."
        },
        "PublicIp": {
          "$ref": "#/definitions/String",
          "description": "The Elastic IP address. This is required for EC2-Classic."
        },
        "AllocationId": {
          "$ref": "#/definitions/String",
          "description": "[EC2-VPC] The allocation ID. This is required for EC2-VPC."
        },
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "[EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID."
        },
        "PrivateIpAddress": {
          "$ref": "#/definitions/String",
          "description": "[EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address."
        },
        "AllowReassociation": {
          "$ref": "#/definitions/Boolean",
          "description": "[EC2-VPC] For a VPC in an EC2-Classic account, specify true to allow an Elastic IP address that is already associated with an instance or network interface to be reassociated with the specified instance or network interface. Otherwise, the operation fails. In a VPC in an EC2-VPC-only account, reassociation is automatic, therefore you can specify false to ensure the operation fails if the Elastic IP address is already associated with another resource."
        }
      },
      "description": "Contains the parameters for AssociateAddress."
    },
    "AssociateAddressResult": {
      "type": "object",
      "properties": {
        "AssociationId": {
          "$ref": "#/definitions/String",
          "description": "[EC2-VPC] The ID that represents the association of the Elastic IP address with an instance."
        }
      },
      "description": "Contains the output of AssociateAddress."
    },
    "AssociateDhcpOptionsRequest": {
      "type": "object",
      "required": [
        "DhcpOptionsId",
        "VpcId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "DhcpOptionsId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the DHCP options set, or <code>default</code> to associate no DHCP options with the VPC."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        }
      },
      "description": "Contains the parameters for AssociateDhcpOptions."
    },
    "AssociateRouteTableRequest": {
      "type": "object",
      "required": [
        "SubnetId",
        "RouteTableId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet."
        },
        "RouteTableId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the route table."
        }
      },
      "description": "Contains the parameters for AssociateRouteTable."
    },
    "AssociateRouteTableResult": {
      "type": "object",
      "properties": {
        "AssociationId": {
          "$ref": "#/definitions/String",
          "description": "The route table association ID (needed to disassociate the route table)."
        }
      },
      "description": "Contains the output of AssociateRouteTable."
    },
    "AttachClassicLinkVpcRequest": {
      "type": "object",
      "required": [
        "InstanceId",
        "VpcId",
        "Groups"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of an EC2-Classic instance to link to the ClassicLink-enabled VPC."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of a ClassicLink-enabled VPC."
        },
        "Groups": {
          "$ref": "#/definitions/GroupIdStringList",
          "description": "The ID of one or more of the VPC's security groups. You cannot specify security groups from a different VPC."
        }
      },
      "description": "Contains the parameters for AttachClassicLinkVpc."
    },
    "AttachClassicLinkVpcResult": {
      "type": "object",
      "properties": {
        "Return": {
          "$ref": "#/definitions/Boolean",
          "description": "Returns <code>true</code> if the request succeeds; otherwise, it returns an error."
        }
      },
      "description": "Contains the output of AttachClassicLinkVpc."
    },
    "AttachInternetGatewayRequest": {
      "type": "object",
      "required": [
        "InternetGatewayId",
        "VpcId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InternetGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Internet gateway."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        }
      },
      "description": "Contains the parameters for AttachInternetGateway."
    },
    "AttachNetworkInterfaceRequest": {
      "type": "object",
      "required": [
        "NetworkInterfaceId",
        "InstanceId",
        "DeviceIndex"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "DeviceIndex": {
          "$ref": "#/definitions/Integer",
          "description": "The index of the device for the network interface attachment."
        }
      },
      "description": "Contains the parameters for AttachNetworkInterface."
    },
    "AttachNetworkInterfaceResult": {
      "type": "object",
      "properties": {
        "AttachmentId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface attachment."
        }
      },
      "description": "Contains the output of AttachNetworkInterface."
    },
    "AttachVolumeRequest": {
      "type": "object",
      "required": [
        "VolumeId",
        "InstanceId",
        "Device"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VolumeId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the EBS volume. The volume and instance must be within the same Availability Zone."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "Device": {
          "$ref": "#/definitions/String",
          "description": "The device name to expose to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>)."
        }
      },
      "description": "Contains the parameters for AttachVolume."
    },
    "AttachVpnGatewayRequest": {
      "type": "object",
      "required": [
        "VpnGatewayId",
        "VpcId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpnGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the virtual private gateway."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        }
      },
      "description": "Contains the parameters for AttachVpnGateway."
    },
    "AttachVpnGatewayResult": {
      "type": "object",
      "properties": {
        "VpcAttachment": {
          "$ref": "#/definitions/VpcAttachment",
          "description": "Information about the attachment."
        }
      },
      "description": "Contains the output of AttachVpnGateway."
    },
    "AttachmentStatus": {
      "type": "string",
      "enum": [
        "attaching",
        "attached",
        "detaching",
        "detached"
      ]
    },
    "AttributeBooleanValue": {
      "type": "object",
      "properties": {
        "Value": {
          "$ref": "#/definitions/Boolean",
          "description": "The attribute value. The valid values are <code>true</code> or <code>false</code>."
        }
      },
      "description": "Describes a value for a resource attribute that is a Boolean value."
    },
    "AttributeValue": {
      "type": "object",
      "properties": {
        "Value": {
          "$ref": "#/definitions/String",
          "description": "The attribute value. Note that the value is case-sensitive."
        }
      },
      "description": "Describes a value for a resource attribute that is a String."
    },
    "AuthorizeSecurityGroupEgressRequest": {
      "type": "object",
      "required": [
        "GroupId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "GroupId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the security group."
        },
        "SourceSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of a destination security group. To authorize outbound access to a destination security group, we recommend that you use a set of IP permissions instead."
        },
        "SourceSecurityGroupOwnerId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account number for a destination security group. To authorize outbound access to a destination security group, we recommend that you use a set of IP permissions instead."
        },
        "IpProtocol": {
          "$ref": "#/definitions/String",
          "description": "The IP protocol name or number. We recommend that you specify the protocol in a set of IP permissions instead."
        },
        "FromPort": {
          "$ref": "#/definitions/Integer",
          "description": "The start of port range for the TCP and UDP protocols, or an ICMP type number. We recommend that you specify the port range in a set of IP permissions instead."
        },
        "ToPort": {
          "$ref": "#/definitions/Integer",
          "description": "The end of port range for the TCP and UDP protocols, or an ICMP type number. We recommend that you specify the port range in a set of IP permissions instead."
        },
        "CidrIp": {
          "$ref": "#/definitions/String",
          "description": "The CIDR IP address range. We recommend that you specify the CIDR range in a set of IP permissions instead."
        },
        "IpPermissions": {
          "$ref": "#/definitions/IpPermissionList",
          "description": "A set of IP permissions. You can't specify a destination security group and a CIDR IP address range."
        }
      },
      "description": "Contains the parameters for AuthorizeSecurityGroupEgress."
    },
    "AuthorizeSecurityGroupIngressRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "GroupName": {
          "$ref": "#/definitions/String",
          "description": "[EC2-Classic, default VPC] The name of the security group."
        },
        "GroupId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the security group. Required for a nondefault VPC."
        },
        "SourceSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "[EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead. For EC2-VPC, the source security group must be in the same VPC."
        },
        "SourceSecurityGroupOwnerId": {
          "$ref": "#/definitions/String",
          "description": "[EC2-Classic] The AWS account number for the source security group, if the source security group is in a different account. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead."
        },
        "IpProtocol": {
          "$ref": "#/definitions/String",
          "description": "The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>) or number (see <a href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\">Protocol Numbers</a>). (VPC only) Use <code>-1</code> to specify all traffic. If you specify <code>-1</code>, traffic on all ports is allowed, regardless of any ports you specify."
        },
        "FromPort": {
          "$ref": "#/definitions/Integer",
          "description": "The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use <code>-1</code> to specify all ICMP types."
        },
        "ToPort": {
          "$ref": "#/definitions/Integer",
          "description": "The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use <code>-1</code> to specify all ICMP codes for the ICMP type."
        },
        "CidrIp": {
          "$ref": "#/definitions/String",
          "description": "The CIDR IP address range. You can't specify this parameter when specifying a source security group."
        },
        "IpPermissions": {
          "$ref": "#/definitions/IpPermissionList",
          "description": "A set of IP permissions. Can be used to specify multiple rules in a single command."
        }
      },
      "description": "Contains the parameters for AuthorizeSecurityGroupIngress."
    },
    "AutoPlacement": {
      "type": "string",
      "enum": [
        "on",
        "off"
      ]
    },
    "AvailabilityZone": {
      "type": "object",
      "properties": {
        "ZoneName": {
          "$ref": "#/definitions/String",
          "description": "The name of the Availability Zone."
        },
        "State": {
          "$ref": "#/definitions/AvailabilityZoneState",
          "description": "The state of the Availability Zone."
        },
        "RegionName": {
          "$ref": "#/definitions/String",
          "description": "The name of the region."
        },
        "Messages": {
          "$ref": "#/definitions/AvailabilityZoneMessageList",
          "description": "Any messages about the Availability Zone."
        }
      },
      "description": "Describes an Availability Zone."
    },
    "AvailabilityZoneList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AvailabilityZone"
      }
    },
    "AvailabilityZoneMessage": {
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/String",
          "description": "The message about the Availability Zone."
        }
      },
      "description": "Describes a message about an Availability Zone."
    },
    "AvailabilityZoneMessageList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AvailabilityZoneMessage"
      }
    },
    "AvailabilityZoneState": {
      "type": "string",
      "enum": [
        "available",
        "information",
        "impaired",
        "unavailable"
      ]
    },
    "AvailableCapacity": {
      "type": "object",
      "properties": {
        "AvailableInstanceCapacity": {
          "$ref": "#/definitions/AvailableInstanceCapacityList",
          "description": "The total number of instances that the Dedicated Host supports."
        },
        "AvailableVCpus": {
          "$ref": "#/definitions/Integer",
          "description": "The number of vCPUs available on the Dedicated Host."
        }
      },
      "description": "The capacity information for instances launched onto the Dedicated Host."
    },
    "AvailableInstanceCapacityList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceCapacity"
      }
    },
    "BatchState": {
      "type": "string",
      "enum": [
        "submitted",
        "active",
        "cancelled",
        "failed",
        "cancelled_running",
        "cancelled_terminating",
        "modifying"
      ]
    },
    "Blob": {
      "type": "string"
    },
    "BlobAttributeValue": {
      "type": "object",
      "properties": {
        "Value": {
          "$ref": "#/definitions/Blob"
        }
      }
    },
    "BlockDeviceMapping": {
      "type": "object",
      "properties": {
        "VirtualName": {
          "$ref": "#/definitions/String",
          "description": "<p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>.The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.</p> <p>Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.</p>"
        },
        "DeviceName": {
          "$ref": "#/definitions/String",
          "description": "The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>)."
        },
        "Ebs": {
          "$ref": "#/definitions/EbsBlockDevice",
          "description": "Parameters used to automatically set up EBS volumes when the instance is launched."
        },
        "NoDevice": {
          "$ref": "#/definitions/String",
          "description": "Suppresses the specified device included in the block device mapping of the AMI."
        }
      },
      "description": "Describes a block device mapping."
    },
    "BlockDeviceMappingList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/BlockDeviceMapping"
      }
    },
    "BlockDeviceMappingRequestList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/BlockDeviceMapping"
      }
    },
    "Boolean": {
      "type": "boolean"
    },
    "BundleIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "BundleInstanceRequest": {
      "type": "object",
      "required": [
        "InstanceId",
        "Storage"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "<p>The ID of the instance to bundle.</p> <p>Type: String</p> <p>Default: None</p> <p>Required: Yes</p>"
        },
        "Storage": {
          "$ref": "#/definitions/Storage",
          "description": "The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error."
        }
      },
      "description": "Contains the parameters for BundleInstance."
    },
    "BundleInstanceResult": {
      "type": "object",
      "properties": {
        "BundleTask": {
          "$ref": "#/definitions/BundleTask",
          "description": "Information about the bundle task."
        }
      },
      "description": "Contains the output of BundleInstance."
    },
    "BundleTask": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance associated with this bundle task."
        },
        "BundleId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the bundle task."
        },
        "State": {
          "$ref": "#/definitions/BundleTaskState",
          "description": "The state of the task."
        },
        "StartTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The time this task started."
        },
        "UpdateTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The time of the most recent update for the task."
        },
        "Storage": {
          "$ref": "#/definitions/Storage",
          "description": "The Amazon S3 storage locations."
        },
        "Progress": {
          "$ref": "#/definitions/String",
          "description": "The level of task completion, as a percent (for example, 20%)."
        },
        "BundleTaskError": {
          "$ref": "#/definitions/BundleTaskError",
          "description": "If the task fails, a description of the error."
        }
      },
      "description": "Describes a bundle task."
    },
    "BundleTaskError": {
      "type": "object",
      "properties": {
        "Code": {
          "$ref": "#/definitions/String",
          "description": "The error code."
        },
        "Message": {
          "$ref": "#/definitions/String",
          "description": "The error message."
        }
      },
      "description": "Describes an error for <a>BundleInstance</a>."
    },
    "BundleTaskList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/BundleTask"
      }
    },
    "BundleTaskState": {
      "type": "string",
      "enum": [
        "pending",
        "waiting-for-shutdown",
        "bundling",
        "storing",
        "cancelling",
        "complete",
        "failed"
      ]
    },
    "CancelBatchErrorCode": {
      "type": "string",
      "enum": [
        "fleetRequestIdDoesNotExist",
        "fleetRequestIdMalformed",
        "fleetRequestNotInCancellableState",
        "unexpectedError"
      ]
    },
    "CancelBundleTaskRequest": {
      "type": "object",
      "required": [
        "BundleId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "BundleId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the bundle task."
        }
      },
      "description": "Contains the parameters for CancelBundleTask."
    },
    "CancelBundleTaskResult": {
      "type": "object",
      "properties": {
        "BundleTask": {
          "$ref": "#/definitions/BundleTask",
          "description": "Information about the bundle task."
        }
      },
      "description": "Contains the output of CancelBundleTask."
    },
    "CancelConversionRequest": {
      "type": "object",
      "required": [
        "ConversionTaskId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ConversionTaskId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the conversion task."
        },
        "ReasonMessage": {
          "$ref": "#/definitions/String",
          "description": "The reason for canceling the conversion task."
        }
      },
      "description": "Contains the parameters for CancelConversionTask."
    },
    "CancelExportTaskRequest": {
      "type": "object",
      "required": [
        "ExportTaskId"
      ],
      "properties": {
        "ExportTaskId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the export task. This is the ID returned by <code>CreateInstanceExportTask</code>."
        }
      },
      "description": "Contains the parameters for CancelExportTask."
    },
    "CancelImportTaskRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ImportTaskId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the import image or import snapshot task to be canceled."
        },
        "CancelReason": {
          "$ref": "#/definitions/String",
          "description": "The reason for canceling the task."
        }
      },
      "description": "Contains the parameters for CancelImportTask."
    },
    "CancelImportTaskResult": {
      "type": "object",
      "properties": {
        "ImportTaskId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the task being canceled."
        },
        "State": {
          "$ref": "#/definitions/String",
          "description": "The current state of the task being canceled."
        },
        "PreviousState": {
          "$ref": "#/definitions/String",
          "description": "The current state of the task being canceled."
        }
      },
      "description": "Contains the output for CancelImportTask."
    },
    "CancelReservedInstancesListingRequest": {
      "type": "object",
      "required": [
        "ReservedInstancesListingId"
      ],
      "properties": {
        "ReservedInstancesListingId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Reserved Instance listing."
        }
      },
      "description": "Contains the parameters for CancelReservedInstancesListing."
    },
    "CancelReservedInstancesListingResult": {
      "type": "object",
      "properties": {
        "ReservedInstancesListings": {
          "$ref": "#/definitions/ReservedInstancesListingList",
          "description": "The Reserved Instance listing."
        }
      },
      "description": "Contains the output of CancelReservedInstancesListing."
    },
    "CancelSpotFleetRequestsError": {
      "type": "object",
      "required": [
        "Code",
        "Message"
      ],
      "properties": {
        "Code": {
          "$ref": "#/definitions/CancelBatchErrorCode",
          "description": "The error code."
        },
        "Message": {
          "$ref": "#/definitions/String",
          "description": "The description for the error code."
        }
      },
      "description": "Describes a Spot fleet error."
    },
    "CancelSpotFleetRequestsErrorItem": {
      "type": "object",
      "required": [
        "SpotFleetRequestId",
        "Error"
      ],
      "properties": {
        "SpotFleetRequestId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Spot fleet request."
        },
        "Error": {
          "$ref": "#/definitions/CancelSpotFleetRequestsError",
          "description": "The error."
        }
      },
      "description": "Describes a Spot fleet request that was not successfully canceled."
    },
    "CancelSpotFleetRequestsErrorSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CancelSpotFleetRequestsErrorItem"
      }
    },
    "CancelSpotFleetRequestsRequest": {
      "type": "object",
      "required": [
        "SpotFleetRequestIds",
        "TerminateInstances"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SpotFleetRequestIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "The IDs of the Spot fleet requests."
        },
        "TerminateInstances": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether to terminate instances for a Spot fleet request if it is canceled successfully."
        }
      },
      "description": "Contains the parameters for CancelSpotFleetRequests."
    },
    "CancelSpotFleetRequestsResponse": {
      "type": "object",
      "properties": {
        "UnsuccessfulFleetRequests": {
          "$ref": "#/definitions/CancelSpotFleetRequestsErrorSet",
          "description": "Information about the Spot fleet requests that are not successfully canceled."
        },
        "SuccessfulFleetRequests": {
          "$ref": "#/definitions/CancelSpotFleetRequestsSuccessSet",
          "description": "Information about the Spot fleet requests that are successfully canceled."
        }
      },
      "description": "Contains the output of CancelSpotFleetRequests."
    },
    "CancelSpotFleetRequestsSuccessItem": {
      "type": "object",
      "required": [
        "SpotFleetRequestId",
        "CurrentSpotFleetRequestState",
        "PreviousSpotFleetRequestState"
      ],
      "properties": {
        "SpotFleetRequestId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Spot fleet request."
        },
        "CurrentSpotFleetRequestState": {
          "$ref": "#/definitions/BatchState",
          "description": "The current state of the Spot fleet request."
        },
        "PreviousSpotFleetRequestState": {
          "$ref": "#/definitions/BatchState",
          "description": "The previous state of the Spot fleet request."
        }
      },
      "description": "Describes a Spot fleet request that was successfully canceled."
    },
    "CancelSpotFleetRequestsSuccessSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CancelSpotFleetRequestsSuccessItem"
      }
    },
    "CancelSpotInstanceRequestState": {
      "type": "string",
      "enum": [
        "active",
        "open",
        "closed",
        "cancelled",
        "completed"
      ]
    },
    "CancelSpotInstanceRequestsRequest": {
      "type": "object",
      "required": [
        "SpotInstanceRequestIds"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SpotInstanceRequestIds": {
          "$ref": "#/definitions/SpotInstanceRequestIdList",
          "description": "One or more Spot instance request IDs."
        }
      },
      "description": "Contains the parameters for CancelSpotInstanceRequests."
    },
    "CancelSpotInstanceRequestsResult": {
      "type": "object",
      "properties": {
        "CancelledSpotInstanceRequests": {
          "$ref": "#/definitions/CancelledSpotInstanceRequestList",
          "description": "One or more Spot instance requests."
        }
      },
      "description": "Contains the output of CancelSpotInstanceRequests."
    },
    "CancelledSpotInstanceRequest": {
      "type": "object",
      "properties": {
        "SpotInstanceRequestId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Spot instance request."
        },
        "State": {
          "$ref": "#/definitions/CancelSpotInstanceRequestState",
          "description": "The state of the Spot instance request."
        }
      },
      "description": "Describes a request to cancel a Spot instance."
    },
    "CancelledSpotInstanceRequestList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CancelledSpotInstanceRequest"
      }
    },
    "ClassicLinkDnsSupport": {
      "type": "object",
      "properties": {
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        },
        "ClassicLinkDnsSupported": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether ClassicLink DNS support is enabled for the VPC."
        }
      },
      "description": "Describes the ClassicLink DNS support status of a VPC."
    },
    "ClassicLinkDnsSupportList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ClassicLinkDnsSupport"
      }
    },
    "ClassicLinkInstance": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        },
        "Groups": {
          "$ref": "#/definitions/GroupIdentifierList",
          "description": "A list of security groups."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the instance."
        }
      },
      "description": "Describes a linked EC2-Classic instance."
    },
    "ClassicLinkInstanceList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ClassicLinkInstance"
      }
    },
    "ClientData": {
      "type": "object",
      "properties": {
        "UploadStart": {
          "$ref": "#/definitions/DateTime",
          "description": "The time that the disk upload starts."
        },
        "UploadEnd": {
          "$ref": "#/definitions/DateTime",
          "description": "The time that the disk upload ends."
        },
        "UploadSize": {
          "$ref": "#/definitions/Double",
          "description": "The size of the uploaded disk image, in GiB."
        },
        "Comment": {
          "$ref": "#/definitions/String",
          "description": "A user-defined comment about the disk upload."
        }
      },
      "description": "Describes the client-specific data."
    },
    "ConfirmProductInstanceRequest": {
      "type": "object",
      "required": [
        "ProductCode",
        "InstanceId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ProductCode": {
          "$ref": "#/definitions/String",
          "description": "The product code. This must be a product code that you own."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        }
      },
      "description": "Contains the parameters for ConfirmProductInstance."
    },
    "ConfirmProductInstanceResult": {
      "type": "object",
      "properties": {
        "OwnerId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account ID of the instance owner. This is only present if the product code is attached to the instance."
        },
        "Return": {
          "$ref": "#/definitions/Boolean",
          "description": "The return value of the request. Returns <code>true</code> if the specified product code is owned by the requester and associated with the specified instance."
        }
      },
      "description": "Contains the output of ConfirmProductInstance."
    },
    "ContainerFormat": {
      "type": "string",
      "enum": [
        "ova"
      ]
    },
    "ConversionIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "ConversionTask": {
      "type": "object",
      "required": [
        "ConversionTaskId",
        "State"
      ],
      "properties": {
        "ConversionTaskId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the conversion task."
        },
        "ExpirationTime": {
          "$ref": "#/definitions/String",
          "description": "The time when the task expires. If the upload isn't complete before the expiration time, we automatically cancel the task."
        },
        "ImportInstance": {
          "$ref": "#/definitions/ImportInstanceTaskDetails",
          "description": "If the task is for importing an instance, this contains information about the import instance task."
        },
        "ImportVolume": {
          "$ref": "#/definitions/ImportVolumeTaskDetails",
          "description": "If the task is for importing a volume, this contains information about the import volume task."
        },
        "State": {
          "$ref": "#/definitions/ConversionTaskState",
          "description": "The state of the conversion task."
        },
        "StatusMessage": {
          "$ref": "#/definitions/String",
          "description": "The status message related to the conversion task."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the task."
        }
      },
      "description": "Describes a conversion task."
    },
    "ConversionTaskState": {
      "type": "string",
      "enum": [
        "active",
        "cancelling",
        "cancelled",
        "completed"
      ]
    },
    "CopyImageRequest": {
      "type": "object",
      "required": [
        "SourceRegion",
        "SourceImageId",
        "Name"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SourceRegion": {
          "$ref": "#/definitions/String",
          "description": "The name of the region that contains the AMI to copy."
        },
        "SourceImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the AMI to copy."
        },
        "Name": {
          "$ref": "#/definitions/String",
          "description": "The name of the new AMI in the destination region."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description for the new AMI in the destination region."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>."
        },
        "Encrypted": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies whether the destination snapshots of the copied image should be encrypted. The default CMK for EBS is used unless a non-default AWS Key Management Service (AWS KMS) CMK is specified with <code>KmsKeyId</code>. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html\">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "The full ARN of the AWS Key Management Service (AWS KMS) CMK to use when encrypting the snapshots of an image during a copy operation. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. The ARN contains the <code>arn:aws:kms</code> namespace, followed by the region of the CMK, the AWS account ID of the CMK owner, the <code>key</code> namespace, and then the CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>. The specified CMK must exist in the region that the snapshot is being copied to. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be set."
        }
      },
      "description": "Contains the parameters for CopyImage."
    },
    "CopyImageResult": {
      "type": "object",
      "properties": {
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the new AMI."
        }
      },
      "description": "Contains the output of CopyImage."
    },
    "CopySnapshotRequest": {
      "type": "object",
      "required": [
        "SourceRegion",
        "SourceSnapshotId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SourceRegion": {
          "$ref": "#/definitions/String",
          "description": "The ID of the region that contains the snapshot to be copied."
        },
        "SourceSnapshotId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the EBS snapshot to copy."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description for the EBS snapshot."
        },
        "DestinationRegion": {
          "$ref": "#/definitions/String",
          "description": "<p>The destination region to use in the <code>PresignedUrl</code> parameter of a snapshot copy operation. This parameter is only valid for specifying the destination region in a <code>PresignedUrl</code> parameter, where it is required.</p> <note> <p> <code>CopySnapshot</code> sends the snapshot copy to the regional endpoint that you send the HTTP request to, such as <code>ec2.us-east-1.amazonaws.com</code> (in the AWS CLI, this is specified with the <code>--region</code> parameter or the default region in your AWS configuration file).</p> </note>"
        },
        "PresignedUrl": {
          "$ref": "#/definitions/String",
          "description": "The pre-signed URL that facilitates copying an encrypted snapshot. This parameter is only required when copying an encrypted snapshot with the Amazon EC2 Query API; it is available as an optional parameter in all other cases. The <code>PresignedUrl</code> should use the snapshot source endpoint, the <code>CopySnapshot</code> action, and include the <code>SourceRegion</code>, <code>SourceSnapshotId</code>, and <code>DestinationRegion</code> parameters. The <code>PresignedUrl</code> must be signed using AWS Signature Version 4. Because EBS snapshots are stored in Amazon S3, the signing algorithm for this parameter uses the same logic that is described in <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\">Authenticating Requests by Using Query Parameters (AWS Signature Version 4)</a> in the <i>Amazon Simple Storage Service API Reference</i>. An invalid or improperly signed <code>PresignedUrl</code> will cause the copy operation to fail asynchronously, and the snapshot will move to an <code>error</code> state."
        },
        "Encrypted": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies whether the destination snapshot should be encrypted. You can encrypt a copy of an unencrypted snapshot using this flag, but you cannot use it to create an unencrypted copy from an encrypted snapshot. Your default CMK for EBS is used unless a non-default AWS Key Management Service (AWS KMS) CMK is specified with <code>KmsKeyId</code>. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html\">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "The full ARN of the AWS Key Management Service (AWS KMS) CMK to use when creating the snapshot copy. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. The ARN contains the <code>arn:aws:kms</code> namespace, followed by the region of the CMK, the AWS account ID of the CMK owner, the <code>key</code> namespace, and then the CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>. The specified CMK must exist in the region that the snapshot is being copied to. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be set."
        }
      },
      "description": "Contains the parameters for CopySnapshot."
    },
    "CopySnapshotResult": {
      "type": "object",
      "properties": {
        "SnapshotId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the new snapshot."
        }
      },
      "description": "Contains the output of CopySnapshot."
    },
    "CreateCustomerGatewayRequest": {
      "type": "object",
      "required": [
        "Type",
        "PublicIp",
        "BgpAsn"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "Type": {
          "$ref": "#/definitions/GatewayType",
          "description": "The type of VPN connection that this customer gateway supports (<code>ipsec.1</code>)."
        },
        "PublicIp": {
          "$ref": "#/definitions/String",
          "description": "The Internet-routable IP address for the customer gateway's outside interface. The address must be static."
        },
        "BgpAsn": {
          "$ref": "#/definitions/Integer",
          "description": "<p>For devices that support BGP, the customer gateway's BGP ASN.</p> <p>Default: 65000</p>"
        }
      },
      "description": "Contains the parameters for CreateCustomerGateway."
    },
    "CreateCustomerGatewayResult": {
      "type": "object",
      "properties": {
        "CustomerGateway": {
          "$ref": "#/definitions/CustomerGateway",
          "description": "Information about the customer gateway."
        }
      },
      "description": "Contains the output of CreateCustomerGateway."
    },
    "CreateDhcpOptionsRequest": {
      "type": "object",
      "required": [
        "DhcpConfigurations"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "DhcpConfigurations": {
          "$ref": "#/definitions/NewDhcpConfigurationList",
          "description": "A DHCP configuration option."
        }
      },
      "description": "Contains the parameters for CreateDhcpOptions."
    },
    "CreateDhcpOptionsResult": {
      "type": "object",
      "properties": {
        "DhcpOptions": {
          "$ref": "#/definitions/DhcpOptions",
          "description": "A set of DHCP options."
        }
      },
      "description": "Contains the output of CreateDhcpOptions."
    },
    "CreateFlowLogsRequest": {
      "type": "object",
      "required": [
        "ResourceIds",
        "ResourceType",
        "TrafficType",
        "LogGroupName",
        "DeliverLogsPermissionArn"
      ],
      "properties": {
        "ResourceIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "<p>One or more subnet, network interface, or VPC IDs.</p> <p>Constraints: Maximum of 1000 resources</p>"
        },
        "ResourceType": {
          "$ref": "#/definitions/FlowLogsResourceType",
          "description": "The type of resource on which to create the flow log."
        },
        "TrafficType": {
          "$ref": "#/definitions/TrafficType",
          "description": "The type of traffic to log."
        },
        "LogGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the CloudWatch log group."
        },
        "DeliverLogsPermissionArn": {
          "$ref": "#/definitions/String",
          "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">How to Ensure Idempotency</a>."
        }
      },
      "description": "Contains the parameters for CreateFlowLogs."
    },
    "CreateFlowLogsResult": {
      "type": "object",
      "properties": {
        "FlowLogIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "The IDs of the flow logs."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request."
        },
        "Unsuccessful": {
          "$ref": "#/definitions/UnsuccessfulItemSet",
          "description": "Information about the flow logs that could not be created successfully."
        }
      },
      "description": "Contains the output of CreateFlowLogs."
    },
    "CreateImageRequest": {
      "type": "object",
      "required": [
        "InstanceId",
        "Name"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "Name": {
          "$ref": "#/definitions/String",
          "description": "<p>A name for the new image.</p> <p>Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)</p>"
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description for the new image."
        },
        "NoReboot": {
          "$ref": "#/definitions/Boolean",
          "description": "By default, Amazon EC2 attempts to shut down and reboot the instance before creating the image. If the 'No Reboot' option is set, Amazon EC2 doesn't shut down the instance before creating the image. When this option is used, file system integrity on the created image can't be guaranteed."
        },
        "BlockDeviceMappings": {
          "$ref": "#/definitions/BlockDeviceMappingRequestList",
          "description": "Information about one or more block device mappings."
        }
      },
      "description": "Contains the parameters for CreateImage."
    },
    "CreateImageResult": {
      "type": "object",
      "properties": {
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the new AMI."
        }
      },
      "description": "Contains the output of CreateImage."
    },
    "CreateInstanceExportTaskRequest": {
      "type": "object",
      "required": [
        "InstanceId"
      ],
      "properties": {
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description for the conversion task or the resource being exported. The maximum length is 255 bytes."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "TargetEnvironment": {
          "$ref": "#/definitions/ExportEnvironment",
          "description": "The target virtualization environment."
        },
        "ExportToS3Task": {
          "$ref": "#/definitions/ExportToS3TaskSpecification",
          "description": "The format and location for an instance export task."
        }
      },
      "description": "Contains the parameters for CreateInstanceExportTask."
    },
    "CreateInstanceExportTaskResult": {
      "type": "object",
      "properties": {
        "ExportTask": {
          "$ref": "#/definitions/ExportTask",
          "description": "Information about the instance export task."
        }
      },
      "description": "Contains the output for CreateInstanceExportTask."
    },
    "CreateInternetGatewayRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        }
      },
      "description": "Contains the parameters for CreateInternetGateway."
    },
    "CreateInternetGatewayResult": {
      "type": "object",
      "properties": {
        "InternetGateway": {
          "$ref": "#/definitions/InternetGateway",
          "description": "Information about the Internet gateway."
        }
      },
      "description": "Contains the output of CreateInternetGateway."
    },
    "CreateKeyPairRequest": {
      "type": "object",
      "required": [
        "KeyName"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "KeyName": {
          "$ref": "#/definitions/String",
          "description": "<p>A unique name for the key pair.</p> <p>Constraints: Up to 255 ASCII characters</p>"
        }
      },
      "description": "Contains the parameters for CreateKeyPair."
    },
    "CreateNatGatewayRequest": {
      "type": "object",
      "required": [
        "SubnetId",
        "AllocationId"
      ],
      "properties": {
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The subnet in which to create the NAT gateway."
        },
        "AllocationId": {
          "$ref": "#/definitions/String",
          "description": "The allocation ID of an Elastic IP address to associate with the NAT gateway. If the Elastic IP address is associated with another resource, you must first disassociate it."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">How to Ensure Idempotency</a>.</p> <p>Constraint: Maximum 64 ASCII characters.</p>"
        }
      },
      "description": "Contains the parameters for CreateNatGateway."
    },
    "CreateNatGatewayResult": {
      "type": "object",
      "properties": {
        "NatGateway": {
          "$ref": "#/definitions/NatGateway",
          "description": "Information about the NAT gateway."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "Unique, case-sensitive identifier to ensure the idempotency of the request. Only returned if a client token was provided in the request."
        }
      },
      "description": "Contains the output of CreateNatGateway."
    },
    "CreateNetworkAclEntryRequest": {
      "type": "object",
      "required": [
        "NetworkAclId",
        "RuleNumber",
        "Protocol",
        "RuleAction",
        "Egress",
        "CidrBlock"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "NetworkAclId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network ACL."
        },
        "RuleNumber": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.</p> <p>Constraints: Positive integer from 1 to 32766. The range 32767 to 65535 is reserved for internal use.</p>"
        },
        "Protocol": {
          "$ref": "#/definitions/String",
          "description": "The protocol. A value of -1 means all protocols."
        },
        "RuleAction": {
          "$ref": "#/definitions/RuleAction",
          "description": "Indicates whether to allow or deny the traffic that matches the rule."
        },
        "Egress": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet)."
        },
        "CidrBlock": {
          "$ref": "#/definitions/String",
          "description": "The network range to allow or deny, in CIDR notation (for example <code>172.16.0.0/24</code>)."
        },
        "IcmpTypeCode": {
          "$ref": "#/definitions/IcmpTypeCode",
          "description": "ICMP protocol: The ICMP type and code. Required if specifying ICMP for the protocol."
        },
        "PortRange": {
          "$ref": "#/definitions/PortRange",
          "description": "TCP or UDP protocols: The range of ports the rule applies to."
        }
      },
      "description": "Contains the parameters for CreateNetworkAclEntry."
    },
    "CreateNetworkAclRequest": {
      "type": "object",
      "required": [
        "VpcId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        }
      },
      "description": "Contains the parameters for CreateNetworkAcl."
    },
    "CreateNetworkAclResult": {
      "type": "object",
      "properties": {
        "NetworkAcl": {
          "$ref": "#/definitions/NetworkAcl",
          "description": "Information about the network ACL."
        }
      },
      "description": "Contains the output of CreateNetworkAcl."
    },
    "CreateNetworkInterfaceRequest": {
      "type": "object",
      "required": [
        "SubnetId"
      ],
      "properties": {
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet to associate with the network interface."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description for the network interface."
        },
        "PrivateIpAddress": {
          "$ref": "#/definitions/String",
          "description": "The primary private IP address of the network interface. If you don't specify an IP address, Amazon EC2 selects one for you from the subnet range. If you specify an IP address, you cannot indicate any IP addresses specified in <code>privateIpAddresses</code> as primary (only one IP address can be designated as primary)."
        },
        "Groups": {
          "$ref": "#/definitions/SecurityGroupIdStringList",
          "description": "The IDs of one or more security groups."
        },
        "PrivateIpAddresses": {
          "$ref": "#/definitions/PrivateIpAddressSpecificationList",
          "description": "One or more private IP addresses."
        },
        "SecondaryPrivateIpAddressCount": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The number of secondary private IP addresses to assign to a network interface. When you specify a number of secondary IP addresses, Amazon EC2 selects these IP addresses within the subnet range. You can't specify this option and specify more than one private IP address using <code>privateIpAddresses</code>.</p> <p>The number of IP addresses you can assign to a network interface varies by instance type. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI\">Private IP Addresses Per ENI Per Instance Type</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>"
        },
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        }
      },
      "description": "Contains the parameters for CreateNetworkInterface."
    },
    "CreateNetworkInterfaceResult": {
      "type": "object",
      "properties": {
        "NetworkInterface": {
          "$ref": "#/definitions/NetworkInterface",
          "description": "Information about the network interface."
        }
      },
      "description": "Contains the output of CreateNetworkInterface."
    },
    "CreatePlacementGroupRequest": {
      "type": "object",
      "required": [
        "GroupName",
        "Strategy"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "GroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>A name for the placement group.</p> <p>Constraints: Up to 255 ASCII characters</p>"
        },
        "Strategy": {
          "$ref": "#/definitions/PlacementStrategy",
          "description": "The placement strategy."
        }
      },
      "description": "Contains the parameters for CreatePlacementGroup."
    },
    "CreateReservedInstancesListingRequest": {
      "type": "object",
      "required": [
        "ReservedInstancesId",
        "InstanceCount",
        "PriceSchedules",
        "ClientToken"
      ],
      "properties": {
        "ReservedInstancesId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the active Reserved Instance."
        },
        "InstanceCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of instances that are a part of a Reserved Instance account to be listed in the Reserved Instance Marketplace. This number should be less than or equal to the instance count associated with the Reserved Instance ID specified in this call."
        },
        "PriceSchedules": {
          "$ref": "#/definitions/PriceScheduleSpecificationList",
          "description": "A list specifying the price of the Reserved Instance for each month remaining in the Reserved Instance term."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "Unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>."
        }
      },
      "description": "Contains the parameters for CreateReservedInstancesListing."
    },
    "CreateReservedInstancesListingResult": {
      "type": "object",
      "properties": {
        "ReservedInstancesListings": {
          "$ref": "#/definitions/ReservedInstancesListingList",
          "description": "Information about the Reserved Instance listing."
        }
      },
      "description": "Contains the output of CreateReservedInstancesListing."
    },
    "CreateRouteRequest": {
      "type": "object",
      "required": [
        "RouteTableId",
        "DestinationCidrBlock"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "RouteTableId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the route table for the route."
        },
        "DestinationCidrBlock": {
          "$ref": "#/definitions/String",
          "description": "The CIDR address block used for the destination match. Routing decisions are based on the most specific match."
        },
        "GatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of an Internet gateway or virtual private gateway attached to your VPC."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached."
        },
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of a network interface."
        },
        "VpcPeeringConnectionId": {
          "$ref": "#/definitions/String",
          "description": "The ID of a VPC peering connection."
        },
        "NatGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of a NAT gateway."
        }
      },
      "description": "Contains the parameters for CreateRoute."
    },
    "CreateRouteResult": {
      "type": "object",
      "properties": {
        "Return": {
          "$ref": "#/definitions/Boolean",
          "description": "Returns <code>true</code> if the request succeeds; otherwise, it returns an error."
        }
      },
      "description": "Contains the output of CreateRoute."
    },
    "CreateRouteTableRequest": {
      "type": "object",
      "required": [
        "VpcId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        }
      },
      "description": "Contains the parameters for CreateRouteTable."
    },
    "CreateRouteTableResult": {
      "type": "object",
      "properties": {
        "RouteTable": {
          "$ref": "#/definitions/RouteTable",
          "description": "Information about the route table."
        }
      },
      "description": "Contains the output of CreateRouteTable."
    },
    "CreateSecurityGroupRequest": {
      "type": "object",
      "required": [
        "GroupName",
        "Description"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "GroupName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the security group.</p> <p>Constraints: Up to 255 characters in length</p> <p>Constraints for EC2-Classic: ASCII characters</p> <p>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>"
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "<p>A description for the security group. This is informational only.</p> <p>Constraints: Up to 255 characters in length</p> <p>Constraints for EC2-Classic: ASCII characters</p> <p>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>"
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "[EC2-VPC] The ID of the VPC. Required for EC2-VPC."
        }
      },
      "description": "Contains the parameters for CreateSecurityGroup."
    },
    "CreateSecurityGroupResult": {
      "type": "object",
      "properties": {
        "GroupId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the security group."
        }
      },
      "description": "Contains the output of CreateSecurityGroup."
    },
    "CreateSnapshotRequest": {
      "type": "object",
      "required": [
        "VolumeId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VolumeId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the EBS volume."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description for the snapshot."
        }
      },
      "description": "Contains the parameters for CreateSnapshot."
    },
    "CreateSpotDatafeedSubscriptionRequest": {
      "type": "object",
      "required": [
        "Bucket"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "Bucket": {
          "$ref": "#/definitions/String",
          "description": "The Amazon S3 bucket in which to store the Spot instance data feed."
        },
        "Prefix": {
          "$ref": "#/definitions/String",
          "description": "A prefix for the data feed file names."
        }
      },
      "description": "Contains the parameters for CreateSpotDatafeedSubscription."
    },
    "CreateSpotDatafeedSubscriptionResult": {
      "type": "object",
      "properties": {
        "SpotDatafeedSubscription": {
          "$ref": "#/definitions/SpotDatafeedSubscription",
          "description": "The Spot instance data feed subscription."
        }
      },
      "description": "Contains the output of CreateSpotDatafeedSubscription."
    },
    "CreateSubnetRequest": {
      "type": "object",
      "required": [
        "VpcId",
        "CidrBlock"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        },
        "CidrBlock": {
          "$ref": "#/definitions/String",
          "description": "The network range for the subnet, in CIDR notation. For example, <code>10.0.0.0/24</code>."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "<p>The Availability Zone for the subnet.</p> <p>Default: AWS selects one for you. If you create more than one subnet in your VPC, we may not necessarily select a different zone for each subnet.</p>"
        }
      },
      "description": "Contains the parameters for CreateSubnet."
    },
    "CreateSubnetResult": {
      "type": "object",
      "properties": {
        "Subnet": {
          "$ref": "#/definitions/Subnet",
          "description": "Information about the subnet."
        }
      },
      "description": "Contains the output of CreateSubnet."
    },
    "CreateTagsRequest": {
      "type": "object",
      "required": [
        "Resources",
        "Tags"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "Resources": {
          "$ref": "#/definitions/ResourceIdList",
          "description": "The IDs of one or more resources to tag. For example, ami-1a2b3c4d."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "One or more tags. The <code>value</code> parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string. "
        }
      },
      "description": "Contains the parameters for CreateTags."
    },
    "CreateVolumePermission": {
      "type": "object",
      "properties": {
        "UserId": {
          "$ref": "#/definitions/String",
          "description": "The specific AWS account ID that is to be added or removed from a volume's list of create volume permissions."
        },
        "Group": {
          "$ref": "#/definitions/PermissionGroup",
          "description": "The specific group that is to be added or removed from a volume's list of create volume permissions."
        }
      },
      "description": "Describes the user or group to be added or removed from the permissions for a volume."
    },
    "CreateVolumePermissionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CreateVolumePermission"
      }
    },
    "CreateVolumePermissionModifications": {
      "type": "object",
      "properties": {
        "Add": {
          "$ref": "#/definitions/CreateVolumePermissionList",
          "description": "Adds a specific AWS account ID or group to a volume's list of create volume permissions."
        },
        "Remove": {
          "$ref": "#/definitions/CreateVolumePermissionList",
          "description": "Removes a specific AWS account ID or group from a volume's list of create volume permissions."
        }
      },
      "description": "Describes modifications to the permissions for a volume."
    },
    "CreateVolumeRequest": {
      "type": "object",
      "required": [
        "AvailabilityZone"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "Size": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The size of the volume, in GiBs.</p> <p>Constraints: 1-16384 for <code>gp2</code>, 4-16384 for <code>io1</code>, 500-16384 for <code>st1</code>, 500-16384 for <code>sc1</code>, and 1-1024 for <code>standard</code>. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.</p> <p>Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.</p>"
        },
        "SnapshotId": {
          "$ref": "#/definitions/String",
          "description": "The snapshot from which to create the volume."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone in which to create the volume. Use <a>DescribeAvailabilityZones</a> to list the Availability Zones that are currently available to you."
        },
        "VolumeType": {
          "$ref": "#/definitions/VolumeType",
          "description": "<p>The volume type. This can be <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code> for Cold HDD, or <code>standard</code> for Magnetic volumes.</p> <p>Default: <code>standard</code> </p>"
        },
        "Iops": {
          "$ref": "#/definitions/Integer",
          "description": "<p>Only valid for Provisioned IOPS SSD volumes. The number of I/O operations per second (IOPS) to provision for the volume, with a maximum ratio of 30 IOPS/GiB.</p> <p>Constraint: Range is 100 to 20000 for Provisioned IOPS SSD volumes </p>"
        },
        "Encrypted": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies whether the volume should be encrypted. Encrypted Amazon EBS volumes may only be attached to instances that support Amazon EBS encryption. Volumes that are created from encrypted snapshots are automatically encrypted. There is no way to create an encrypted volume from an unencrypted snapshot or vice versa. If your AMI uses encrypted volumes, you can only launch it on supported instance types. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html\">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume. This parameter is only required if you want to use a non-default CMK; if this parameter is not specified, the default CMK for EBS is used. The ARN contains the <code>arn:aws:kms</code> namespace, followed by the region of the CMK, the AWS account ID of the CMK owner, the <code>key</code> namespace, and then the CMK ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be set."
        }
      },
      "description": "Contains the parameters for CreateVolume."
    },
    "CreateVpcEndpointRequest": {
      "type": "object",
      "required": [
        "VpcId",
        "ServiceName"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC in which the endpoint will be used."
        },
        "ServiceName": {
          "$ref": "#/definitions/String",
          "description": "The AWS service name, in the form <code>com.amazonaws.<i>region</i>.<i>service</i> </code>. To get a list of available services, use the <a>DescribeVpcEndpointServices</a> request."
        },
        "PolicyDocument": {
          "$ref": "#/definitions/String",
          "description": "A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format. If this parameter is not specified, we attach a default policy that allows full access to the service."
        },
        "RouteTableIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "One or more route table IDs."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">How to Ensure Idempotency</a>."
        }
      },
      "description": "Contains the parameters for CreateVpcEndpoint."
    },
    "CreateVpcEndpointResult": {
      "type": "object",
      "properties": {
        "VpcEndpoint": {
          "$ref": "#/definitions/VpcEndpoint",
          "description": "Information about the endpoint."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request."
        }
      },
      "description": "Contains the output of CreateVpcEndpoint."
    },
    "CreateVpcPeeringConnectionRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the requester VPC."
        },
        "PeerVpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC with which you are creating the VPC peering connection."
        },
        "PeerOwnerId": {
          "$ref": "#/definitions/String",
          "description": "<p>The AWS account ID of the owner of the peer VPC.</p> <p>Default: Your AWS account ID</p>"
        }
      },
      "description": "Contains the parameters for CreateVpcPeeringConnection."
    },
    "CreateVpcPeeringConnectionResult": {
      "type": "object",
      "properties": {
        "VpcPeeringConnection": {
          "$ref": "#/definitions/VpcPeeringConnection",
          "description": "Information about the VPC peering connection."
        }
      },
      "description": "Contains the output of CreateVpcPeeringConnection."
    },
    "CreateVpcRequest": {
      "type": "object",
      "required": [
        "CidrBlock"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "CidrBlock": {
          "$ref": "#/definitions/String",
          "description": "The network range for the VPC, in CIDR notation. For example, <code>10.0.0.0/16</code>."
        },
        "InstanceTenancy": {
          "$ref": "#/definitions/Tenancy",
          "description": "<p>The tenancy options for instances launched into the VPC. For <code>default</code>, instances are launched with shared tenancy by default. You can launch instances with any tenancy into a shared tenancy VPC. For <code>dedicated</code>, instances are launched as dedicated tenancy instances by default. You can only launch instances with a tenancy of <code>dedicated</code> or <code>host</code> into a dedicated tenancy VPC. </p> <p> <b>Important:</b> The <code>host</code> value cannot be used with this parameter. Use the <code>default</code> or <code>dedicated</code> values only.</p> <p>Default: <code>default</code> </p>"
        }
      },
      "description": "Contains the parameters for CreateVpc."
    },
    "CreateVpcResult": {
      "type": "object",
      "properties": {
        "Vpc": {
          "$ref": "#/definitions/Vpc",
          "description": "Information about the VPC."
        }
      },
      "description": "Contains the output of CreateVpc."
    },
    "CreateVpnConnectionRequest": {
      "type": "object",
      "required": [
        "Type",
        "CustomerGatewayId",
        "VpnGatewayId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "Type": {
          "$ref": "#/definitions/String",
          "description": "The type of VPN connection (<code>ipsec.1</code>)."
        },
        "CustomerGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the customer gateway."
        },
        "VpnGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the virtual private gateway."
        },
        "Options": {
          "$ref": "#/definitions/VpnConnectionOptionsSpecification",
          "description": "<p>Indicates whether the VPN connection requires static routes. If you are creating a VPN connection for a device that does not support BGP, you must specify <code>true</code>.</p> <p>Default: <code>false</code> </p>"
        }
      },
      "description": "Contains the parameters for CreateVpnConnection."
    },
    "CreateVpnConnectionResult": {
      "type": "object",
      "properties": {
        "VpnConnection": {
          "$ref": "#/definitions/VpnConnection",
          "description": "Information about the VPN connection."
        }
      },
      "description": "Contains the output of CreateVpnConnection."
    },
    "CreateVpnConnectionRouteRequest": {
      "type": "object",
      "required": [
        "VpnConnectionId",
        "DestinationCidrBlock"
      ],
      "properties": {
        "VpnConnectionId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPN connection."
        },
        "DestinationCidrBlock": {
          "$ref": "#/definitions/String",
          "description": "The CIDR block associated with the local subnet of the customer network."
        }
      },
      "description": "Contains the parameters for CreateVpnConnectionRoute."
    },
    "CreateVpnGatewayRequest": {
      "type": "object",
      "required": [
        "Type"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "Type": {
          "$ref": "#/definitions/GatewayType",
          "description": "The type of VPN connection this virtual private gateway supports."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone for the virtual private gateway."
        }
      },
      "description": "Contains the parameters for CreateVpnGateway."
    },
    "CreateVpnGatewayResult": {
      "type": "object",
      "properties": {
        "VpnGateway": {
          "$ref": "#/definitions/VpnGateway",
          "description": "Information about the virtual private gateway."
        }
      },
      "description": "Contains the output of CreateVpnGateway."
    },
    "CurrencyCodeValues": {
      "type": "string",
      "enum": [
        "USD"
      ]
    },
    "CustomerGateway": {
      "type": "object",
      "properties": {
        "CustomerGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the customer gateway."
        },
        "State": {
          "$ref": "#/definitions/String",
          "description": "The current state of the customer gateway (<code>pending | available | deleting | deleted</code>)."
        },
        "Type": {
          "$ref": "#/definitions/String",
          "description": "The type of VPN connection the customer gateway supports (<code>ipsec.1</code>)."
        },
        "IpAddress": {
          "$ref": "#/definitions/String",
          "description": "The Internet-routable IP address of the customer gateway's outside interface."
        },
        "BgpAsn": {
          "$ref": "#/definitions/String",
          "description": "The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN)."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the customer gateway."
        }
      },
      "description": "Describes a customer gateway."
    },
    "CustomerGatewayIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "CustomerGatewayList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CustomerGateway"
      }
    },
    "DatafeedSubscriptionState": {
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "DateTime": {
      "type": "string",
      "format": "date-time"
    },
    "DeleteCustomerGatewayRequest": {
      "type": "object",
      "required": [
        "CustomerGatewayId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "CustomerGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the customer gateway."
        }
      },
      "description": "Contains the parameters for DeleteCustomerGateway."
    },
    "DeleteDhcpOptionsRequest": {
      "type": "object",
      "required": [
        "DhcpOptionsId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "DhcpOptionsId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the DHCP options set."
        }
      },
      "description": "Contains the parameters for DeleteDhcpOptions."
    },
    "DeleteFlowLogsRequest": {
      "type": "object",
      "required": [
        "FlowLogIds"
      ],
      "properties": {
        "FlowLogIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "One or more flow log IDs."
        }
      },
      "description": "Contains the parameters for DeleteFlowLogs."
    },
    "DeleteFlowLogsResult": {
      "type": "object",
      "properties": {
        "Unsuccessful": {
          "$ref": "#/definitions/UnsuccessfulItemSet",
          "description": "Information about the flow logs that could not be deleted successfully."
        }
      },
      "description": "Contains the output of DeleteFlowLogs."
    },
    "DeleteInternetGatewayRequest": {
      "type": "object",
      "required": [
        "InternetGatewayId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InternetGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Internet gateway."
        }
      },
      "description": "Contains the parameters for DeleteInternetGateway."
    },
    "DeleteKeyPairRequest": {
      "type": "object",
      "required": [
        "KeyName"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "KeyName": {
          "$ref": "#/definitions/String",
          "description": "The name of the key pair."
        }
      },
      "description": "Contains the parameters for DeleteKeyPair."
    },
    "DeleteNatGatewayRequest": {
      "type": "object",
      "required": [
        "NatGatewayId"
      ],
      "properties": {
        "NatGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the NAT gateway."
        }
      },
      "description": "Contains the parameters for DeleteNatGateway."
    },
    "DeleteNatGatewayResult": {
      "type": "object",
      "properties": {
        "NatGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the NAT gateway."
        }
      },
      "description": "Contains the output of DeleteNatGateway."
    },
    "DeleteNetworkAclEntryRequest": {
      "type": "object",
      "required": [
        "NetworkAclId",
        "RuleNumber",
        "Egress"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "NetworkAclId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network ACL."
        },
        "RuleNumber": {
          "$ref": "#/definitions/Integer",
          "description": "The rule number of the entry to delete."
        },
        "Egress": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the rule is an egress rule."
        }
      },
      "description": "Contains the parameters for DeleteNetworkAclEntry."
    },
    "DeleteNetworkAclRequest": {
      "type": "object",
      "required": [
        "NetworkAclId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "NetworkAclId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network ACL."
        }
      },
      "description": "Contains the parameters for DeleteNetworkAcl."
    },
    "DeleteNetworkInterfaceRequest": {
      "type": "object",
      "required": [
        "NetworkInterfaceId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface."
        }
      },
      "description": "Contains the parameters for DeleteNetworkInterface."
    },
    "DeletePlacementGroupRequest": {
      "type": "object",
      "required": [
        "GroupName"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "GroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the placement group."
        }
      },
      "description": "Contains the parameters for DeletePlacementGroup."
    },
    "DeleteRouteRequest": {
      "type": "object",
      "required": [
        "RouteTableId",
        "DestinationCidrBlock"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "RouteTableId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the route table."
        },
        "DestinationCidrBlock": {
          "$ref": "#/definitions/String",
          "description": "The CIDR range for the route. The value you specify must match the CIDR for the route exactly."
        }
      },
      "description": "Contains the parameters for DeleteRoute."
    },
    "DeleteRouteTableRequest": {
      "type": "object",
      "required": [
        "RouteTableId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "RouteTableId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the route table."
        }
      },
      "description": "Contains the parameters for DeleteRouteTable."
    },
    "DeleteSecurityGroupRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "GroupName": {
          "$ref": "#/definitions/String",
          "description": "[EC2-Classic, default VPC] The name of the security group. You can specify either the security group name or the security group ID."
        },
        "GroupId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the security group. Required for a nondefault VPC."
        }
      },
      "description": "Contains the parameters for DeleteSecurityGroup."
    },
    "DeleteSnapshotRequest": {
      "type": "object",
      "required": [
        "SnapshotId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SnapshotId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the EBS snapshot."
        }
      },
      "description": "Contains the parameters for DeleteSnapshot."
    },
    "DeleteSpotDatafeedSubscriptionRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        }
      },
      "description": "Contains the parameters for DeleteSpotDatafeedSubscription."
    },
    "DeleteSubnetRequest": {
      "type": "object",
      "required": [
        "SubnetId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet."
        }
      },
      "description": "Contains the parameters for DeleteSubnet."
    },
    "DeleteTagsRequest": {
      "type": "object",
      "required": [
        "Resources"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "Resources": {
          "$ref": "#/definitions/ResourceIdList",
          "description": "The ID of the resource. For example, ami-1a2b3c4d. You can specify more than one resource ID."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "One or more tags to delete. If you omit the <code>value</code> parameter, we delete the tag regardless of its value. If you specify this parameter with an empty string as the value, we delete the key only if its value is an empty string."
        }
      },
      "description": "Contains the parameters for DeleteTags."
    },
    "DeleteVolumeRequest": {
      "type": "object",
      "required": [
        "VolumeId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VolumeId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the volume."
        }
      },
      "description": "Contains the parameters for DeleteVolume."
    },
    "DeleteVpcEndpointsRequest": {
      "type": "object",
      "required": [
        "VpcEndpointIds"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcEndpointIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "One or more endpoint IDs."
        }
      },
      "description": "Contains the parameters for DeleteVpcEndpoints."
    },
    "DeleteVpcEndpointsResult": {
      "type": "object",
      "properties": {
        "Unsuccessful": {
          "$ref": "#/definitions/UnsuccessfulItemSet",
          "description": "Information about the endpoints that were not successfully deleted."
        }
      },
      "description": "Contains the output of DeleteVpcEndpoints."
    },
    "DeleteVpcPeeringConnectionRequest": {
      "type": "object",
      "required": [
        "VpcPeeringConnectionId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcPeeringConnectionId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC peering connection."
        }
      },
      "description": "Contains the parameters for DeleteVpcPeeringConnection."
    },
    "DeleteVpcPeeringConnectionResult": {
      "type": "object",
      "properties": {
        "Return": {
          "$ref": "#/definitions/Boolean",
          "description": "Returns <code>true</code> if the request succeeds; otherwise, it returns an error."
        }
      },
      "description": "Contains the output of DeleteVpcPeeringConnection."
    },
    "DeleteVpcRequest": {
      "type": "object",
      "required": [
        "VpcId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        }
      },
      "description": "Contains the parameters for DeleteVpc."
    },
    "DeleteVpnConnectionRequest": {
      "type": "object",
      "required": [
        "VpnConnectionId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpnConnectionId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPN connection."
        }
      },
      "description": "Contains the parameters for DeleteVpnConnection."
    },
    "DeleteVpnConnectionRouteRequest": {
      "type": "object",
      "required": [
        "VpnConnectionId",
        "DestinationCidrBlock"
      ],
      "properties": {
        "VpnConnectionId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPN connection."
        },
        "DestinationCidrBlock": {
          "$ref": "#/definitions/String",
          "description": "The CIDR block associated with the local subnet of the customer network."
        }
      },
      "description": "Contains the parameters for DeleteVpnConnectionRoute."
    },
    "DeleteVpnGatewayRequest": {
      "type": "object",
      "required": [
        "VpnGatewayId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpnGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the virtual private gateway."
        }
      },
      "description": "Contains the parameters for DeleteVpnGateway."
    },
    "DeregisterImageRequest": {
      "type": "object",
      "required": [
        "ImageId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the AMI."
        }
      },
      "description": "Contains the parameters for DeregisterImage."
    },
    "DescribeAccountAttributesRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "AttributeNames": {
          "$ref": "#/definitions/AccountAttributeNameStringList",
          "description": "One or more account attribute names."
        }
      },
      "description": "Contains the parameters for DescribeAccountAttributes."
    },
    "DescribeAccountAttributesResult": {
      "type": "object",
      "properties": {
        "AccountAttributes": {
          "$ref": "#/definitions/AccountAttributeList",
          "description": "Information about one or more account attributes."
        }
      },
      "description": "Contains the output of DescribeAccountAttributes."
    },
    "DescribeAddressesRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "PublicIps": {
          "$ref": "#/definitions/PublicIpStringList",
          "description": "<p>[EC2-Classic] One or more Elastic IP addresses.</p> <p>Default: Describes all your Elastic IP addresses.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>allocation-id</code> - [EC2-VPC] The allocation ID for the address.</p> </li> <li> <p> <code>association-id</code> - [EC2-VPC] The association ID for the address.</p> </li> <li> <p> <code>domain</code> - Indicates whether the address is for use in EC2-Classic (<code>standard</code>) or in a VPC (<code>vpc</code>).</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance the address is associated with, if any.</p> </li> <li> <p> <code>network-interface-id</code> - [EC2-VPC] The ID of the network interface that the address is associated with, if any.</p> </li> <li> <p> <code>network-interface-owner-id</code> - The AWS account ID of the owner.</p> </li> <li> <p> <code>private-ip-address</code> - [EC2-VPC] The private IP address associated with the Elastic IP address.</p> </li> <li> <p> <code>public-ip</code> - The Elastic IP address.</p> </li> </ul>"
        },
        "AllocationIds": {
          "$ref": "#/definitions/AllocationIdList",
          "description": "<p>[EC2-VPC] One or more allocation IDs.</p> <p>Default: Describes all your Elastic IP addresses.</p>"
        }
      },
      "description": "Contains the parameters for DescribeAddresses."
    },
    "DescribeAddressesResult": {
      "type": "object",
      "properties": {
        "Addresses": {
          "$ref": "#/definitions/AddressList",
          "description": "Information about one or more Elastic IP addresses."
        }
      },
      "description": "Contains the output of DescribeAddresses."
    },
    "DescribeAvailabilityZonesRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ZoneNames": {
          "$ref": "#/definitions/ZoneNameStringList",
          "description": "The names of one or more Availability Zones."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>message</code> - Information about the Availability Zone.</p> </li> <li> <p> <code>region-name</code> - The name of the region for the Availability Zone (for example, <code>us-east-1</code>).</p> </li> <li> <p> <code>state</code> - The state of the Availability Zone (<code>available</code> | <code>information</code> | <code>impaired</code> | <code>unavailable</code>).</p> </li> <li> <p> <code>zone-name</code> - The name of the Availability Zone (for example, <code>us-east-1a</code>).</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeAvailabilityZones."
    },
    "DescribeAvailabilityZonesResult": {
      "type": "object",
      "properties": {
        "AvailabilityZones": {
          "$ref": "#/definitions/AvailabilityZoneList",
          "description": "Information about one or more Availability Zones."
        }
      },
      "description": "Contains the output of DescribeAvailabiltyZones."
    },
    "DescribeBundleTasksRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "BundleIds": {
          "$ref": "#/definitions/BundleIdStringList",
          "description": "<p>One or more bundle task IDs.</p> <p>Default: Describes all your bundle tasks.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>bundle-id</code> - The ID of the bundle task.</p> </li> <li> <p> <code>error-code</code> - If the task failed, the error code returned.</p> </li> <li> <p> <code>error-message</code> - If the task failed, the error message returned.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>progress</code> - The level of task completion, as a percentage (for example, 20%).</p> </li> <li> <p> <code>s3-bucket</code> - The Amazon S3 bucket to store the AMI.</p> </li> <li> <p> <code>s3-prefix</code> - The beginning of the AMI name.</p> </li> <li> <p> <code>start-time</code> - The time the task started (for example, 2013-09-15T17:15:20.000Z).</p> </li> <li> <p> <code>state</code> - The state of the task (<code>pending</code> | <code>waiting-for-shutdown</code> | <code>bundling</code> | <code>storing</code> | <code>cancelling</code> | <code>complete</code> | <code>failed</code>).</p> </li> <li> <p> <code>update-time</code> - The time of the most recent update for the task.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeBundleTasks."
    },
    "DescribeBundleTasksResult": {
      "type": "object",
      "properties": {
        "BundleTasks": {
          "$ref": "#/definitions/BundleTaskList",
          "description": "Information about one or more bundle tasks."
        }
      },
      "description": "Contains the output of DescribeBundleTasks."
    },
    "DescribeClassicLinkInstancesRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceIds": {
          "$ref": "#/definitions/InstanceIdStringList",
          "description": "One or more instance IDs. Must be instances linked to a VPC through ClassicLink."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>group-id</code> - The ID of a VPC security group that's associated with the instance.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC that the instance is linked to.</p> </li> </ul>"
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to retrieve the next page of results."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. You cannot specify this parameter and the instance IDs parameter in the same request.</p> <p>Constraint: If the value is greater than 1000, we return only 1000 items.</p>"
        }
      },
      "description": "Contains the parameters for DescribeClassicLinkInstances."
    },
    "DescribeClassicLinkInstancesResult": {
      "type": "object",
      "properties": {
        "Instances": {
          "$ref": "#/definitions/ClassicLinkInstanceList",
          "description": "Information about one or more linked EC2-Classic instances."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeClassicLinkInstances."
    },
    "DescribeConversionTaskList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ConversionTask"
      }
    },
    "DescribeConversionTasksRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "One or more filters."
        },
        "ConversionTaskIds": {
          "$ref": "#/definitions/ConversionIdStringList",
          "description": "One or more conversion task IDs."
        }
      },
      "description": "Contains the parameters for DescribeConversionTasks."
    },
    "DescribeConversionTasksResult": {
      "type": "object",
      "properties": {
        "ConversionTasks": {
          "$ref": "#/definitions/DescribeConversionTaskList",
          "description": "Information about the conversion tasks."
        }
      },
      "description": "Contains the output for DescribeConversionTasks."
    },
    "DescribeCustomerGatewaysRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "CustomerGatewayIds": {
          "$ref": "#/definitions/CustomerGatewayIdStringList",
          "description": "<p>One or more customer gateway IDs.</p> <p>Default: Describes all your customer gateways.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>bgp-asn</code> - The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).</p> </li> <li> <p> <code>customer-gateway-id</code> - The ID of the customer gateway.</p> </li> <li> <p> <code>ip-address</code> - The IP address of the customer gateway's Internet-routable external interface.</p> </li> <li> <p> <code>state</code> - The state of the customer gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>type</code> - The type of customer gateway. Currently, the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeCustomerGateways."
    },
    "DescribeCustomerGatewaysResult": {
      "type": "object",
      "properties": {
        "CustomerGateways": {
          "$ref": "#/definitions/CustomerGatewayList",
          "description": "Information about one or more customer gateways."
        }
      },
      "description": "Contains the output of DescribeCustomerGateways."
    },
    "DescribeDhcpOptionsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "DhcpOptionsIds": {
          "$ref": "#/definitions/DhcpOptionsIdStringList",
          "description": "<p>The IDs of one or more DHCP options sets.</p> <p>Default: Describes all your DHCP options sets.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>dhcp-options-id</code> - The ID of a set of DHCP options.</p> </li> <li> <p> <code>key</code> - The key for one of the options (for example, <code>domain-name</code>).</p> </li> <li> <p> <code>value</code> - The value for one of the options.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeDhcpOptions."
    },
    "DescribeDhcpOptionsResult": {
      "type": "object",
      "properties": {
        "DhcpOptions": {
          "$ref": "#/definitions/DhcpOptionsList",
          "description": "Information about one or more DHCP options sets."
        }
      },
      "description": "Contains the output of DescribeDhcpOptions."
    },
    "DescribeExportTasksRequest": {
      "type": "object",
      "properties": {
        "ExportTaskIds": {
          "$ref": "#/definitions/ExportTaskIdStringList",
          "description": "One or more export task IDs."
        }
      },
      "description": "Contains the parameters for DescribeExportTasks."
    },
    "DescribeExportTasksResult": {
      "type": "object",
      "properties": {
        "ExportTasks": {
          "$ref": "#/definitions/ExportTaskList",
          "description": "Information about the export tasks."
        }
      },
      "description": "Contains the output for DescribeExportTasks."
    },
    "DescribeFlowLogsRequest": {
      "type": "object",
      "properties": {
        "FlowLogIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "One or more flow log IDs."
        },
        "Filter": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>deliver-log-status</code> - The status of the logs delivery (<code>SUCCESS</code> | <code>FAILED</code>).</p> </li> <li> <p> <code>flow-log-id</code> - The ID of the flow log.</p> </li> <li> <p> <code>log-group-name</code> - The name of the log group.</p> </li> <li> <p> <code>resource-id</code> - The ID of the VPC, subnet, or network interface.</p> </li> <li> <p> <code>traffic-type</code> - The type of traffic (<code>ACCEPT</code> | <code>REJECT</code> | <code>ALL</code>)</p> </li> </ul>"
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to retrieve the next page of results."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. You cannot specify this parameter and the flow log IDs parameter in the same request."
        }
      },
      "description": "Contains the parameters for DescribeFlowLogs."
    },
    "DescribeFlowLogsResult": {
      "type": "object",
      "properties": {
        "FlowLogs": {
          "$ref": "#/definitions/FlowLogSet",
          "description": "Information about the flow logs."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeFlowLogs."
    },
    "DescribeHostReservationOfferingsRequest": {
      "type": "object",
      "properties": {
        "OfferingId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the reservation offering."
        },
        "MinDuration": {
          "$ref": "#/definitions/Integer",
          "description": "This is the minimum duration of the reservation you'd like to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 31536000 for one year."
        },
        "MaxDuration": {
          "$ref": "#/definitions/Integer",
          "description": "This is the maximum duration of the reservation you'd like to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 94608000 for three years."
        },
        "Filter": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>instance-family</code> - The instance family of the offering (e.g., <code>m4</code>).</p> </li> <li> <p> <code>payment-option</code> - The payment option (<code>No Upfront</code> | <code>Partial Upfront</code> | <code>All Upfront</code>).</p> </li> </ul>"
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500; if <code>maxResults</code> is given a larger value than 500, you will receive an error."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results."
        }
      }
    },
    "DescribeHostReservationOfferingsResult": {
      "type": "object",
      "properties": {
        "OfferingSet": {
          "$ref": "#/definitions/HostOfferingSet",
          "description": "Information about the offerings."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      }
    },
    "DescribeHostReservationsRequest": {
      "type": "object",
      "properties": {
        "HostReservationIdSet": {
          "$ref": "#/definitions/HostReservationIdSet",
          "description": "One or more host reservation IDs."
        },
        "Filter": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>instance-family</code> - The instance family (e.g., <code>m4</code>).</p> </li> <li> <p> <code>payment-option</code> - The payment option (<code>No Upfront</code> | <code>Partial Upfront</code> | <code>All Upfront</code>).</p> </li> <li> <p> <code>state</code> - The state of the reservation (<code>payment-pending</code> | <code>payment-failed</code> | <code>active</code> | <code>retired</code>).</p> </li> </ul>"
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500; if <code>maxResults</code> is given a larger value than 500, you will receive an error."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results."
        }
      }
    },
    "DescribeHostReservationsResult": {
      "type": "object",
      "properties": {
        "HostReservationSet": {
          "$ref": "#/definitions/HostReservationSet",
          "description": "Details about the reservation's configuration."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      }
    },
    "DescribeHostsRequest": {
      "type": "object",
      "properties": {
        "HostIds": {
          "$ref": "#/definitions/RequestHostIdList",
          "description": "The IDs of the Dedicated Hosts. The IDs are used for targeted instance launches."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to retrieve the next page of results."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500; if <code>maxResults</code> is given a larger value than 500, you will receive an error. You cannot specify this parameter and the host IDs parameter in the same request."
        },
        "Filter": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>instance-type</code> - The instance type size that the Dedicated Host is configured to support.</p> </li> <li> <p> <code>auto-placement</code> - Whether auto-placement is enabled or disabled (<code>on</code> | <code>off</code>).</p> </li> <li> <p> <code>host-reservation-id</code> - The ID of the reservation assigned to this host.</p> </li> <li> <p> <code>client-token</code> - The idempotency token you provided when you launched the instance</p> </li> <li> <p> <code>state</code>- The allocation state of the Dedicated Host (<code>available</code> | <code>under-assessment</code> | <code>permanent-failure</code> | <code>released</code> | <code>released-permanent-failure</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the host.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeHosts."
    },
    "DescribeHostsResult": {
      "type": "object",
      "properties": {
        "Hosts": {
          "$ref": "#/definitions/HostList",
          "description": "Information about the Dedicated Hosts."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeHosts."
    },
    "DescribeIdFormatRequest": {
      "type": "object",
      "properties": {
        "Resource": {
          "$ref": "#/definitions/String",
          "description": "The type of resource: <code>instance</code> | <code>reservation</code> | <code>snapshot</code> | <code>volume</code> "
        }
      },
      "description": "Contains the parameters for DescribeIdFormat."
    },
    "DescribeIdFormatResult": {
      "type": "object",
      "properties": {
        "Statuses": {
          "$ref": "#/definitions/IdFormatList",
          "description": "Information about the ID format for the resource."
        }
      },
      "description": "Contains the output of DescribeIdFormat."
    },
    "DescribeIdentityIdFormatRequest": {
      "type": "object",
      "required": [
        "PrincipalArn"
      ],
      "properties": {
        "Resource": {
          "$ref": "#/definitions/String",
          "description": "The type of resource: <code>instance</code> | <code>reservation</code> | <code>snapshot</code> | <code>volume</code> "
        },
        "PrincipalArn": {
          "$ref": "#/definitions/String",
          "description": "The ARN of the principal, which can be an IAM role, IAM user, or the root user."
        }
      },
      "description": "Contains the parameters for DescribeIdentityIdFormat."
    },
    "DescribeIdentityIdFormatResult": {
      "type": "object",
      "properties": {
        "Statuses": {
          "$ref": "#/definitions/IdFormatList",
          "description": "Information about the ID format for the resources."
        }
      },
      "description": "Contains the output of DescribeIdentityIdFormat."
    },
    "DescribeImageAttributeRequest": {
      "type": "object",
      "required": [
        "ImageId",
        "Attribute"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the AMI."
        },
        "Attribute": {
          "$ref": "#/definitions/ImageAttributeName",
          "description": "<p>The AMI attribute.</p> <p> <b>Note</b>: Depending on your account privileges, the <code>blockDeviceMapping</code> attribute may return a <code>Client.AuthFailure</code> error. If this happens, use <a>DescribeImages</a> to get information about the block device mapping for the AMI.</p>"
        }
      },
      "description": "Contains the parameters for DescribeImageAttribute."
    },
    "DescribeImagesRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ImageIds": {
          "$ref": "#/definitions/ImageIdStringList",
          "description": "<p>One or more image IDs.</p> <p>Default: Describes all images available to you.</p>"
        },
        "Owners": {
          "$ref": "#/definitions/OwnerStringList",
          "description": "Filters the images by the owner. Specify an AWS account ID, <code>self</code> (owner is the sender of the request), or an AWS owner alias (valid values are <code>amazon</code> | <code>aws-marketplace</code> | <code>microsoft</code>). Omitting this option returns all images for which you have launch permissions, regardless of ownership."
        },
        "ExecutableUsers": {
          "$ref": "#/definitions/ExecutableByStringList",
          "description": "Scopes the images by users with explicit launch permissions. Specify an AWS account ID, <code>self</code> (the sender of the request), or <code>all</code> (public AMIs)."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>architecture</code> - The image architecture (<code>i386</code> | <code>x86_64</code>).</p> </li> <li> <p> <code>block-device-mapping.delete-on-termination</code> - A Boolean value that indicates whether the Amazon EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>block-device-mapping.device-name</code> - The device name for the EBS volume (for example, <code>/dev/sdh</code>).</p> </li> <li> <p> <code>block-device-mapping.snapshot-id</code> - The ID of the snapshot used for the EBS volume.</p> </li> <li> <p> <code>block-device-mapping.volume-size</code> - The volume size of the EBS volume, in GiB.</p> </li> <li> <p> <code>block-device-mapping.volume-type</code> - The volume type of the EBS volume (<code>gp2</code> | <code>io1</code> | <code>st1 </code>| <code>sc1</code> | <code>standard</code>).</p> </li> <li> <p> <code>description</code> - The description of the image (provided during image creation).</p> </li> <li> <p> <code>hypervisor</code> - The hypervisor type (<code>ovm</code> | <code>xen</code>).</p> </li> <li> <p> <code>image-id</code> - The ID of the image.</p> </li> <li> <p> <code>image-type</code> - The image type (<code>machine</code> | <code>kernel</code> | <code>ramdisk</code>).</p> </li> <li> <p> <code>is-public</code> - A Boolean that indicates whether the image is public.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>manifest-location</code> - The location of the image manifest.</p> </li> <li> <p> <code>name</code> - The name of the AMI (provided during image creation).</p> </li> <li> <p> <code>owner-alias</code> - String value from an Amazon-maintained list (<code>amazon</code> | <code>aws-marketplace</code> | <code>microsoft</code>) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM console.</p> </li> <li> <p> <code>owner-id</code> - The AWS account ID of the image owner.</p> </li> <li> <p> <code>platform</code> - The platform. To only list Windows-based AMIs, use <code>windows</code>.</p> </li> <li> <p> <code>product-code</code> - The product code.</p> </li> <li> <p> <code>product-code.type</code> - The type of the product code (<code>devpay</code> | <code>marketplace</code>).</p> </li> <li> <p> <code>ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>root-device-name</code> - The name of the root device volume (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>root-device-type</code> - The type of the root device volume (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p> <code>state</code> - The state of the image (<code>available</code> | <code>pending</code> | <code>failed</code>).</p> </li> <li> <p> <code>state-reason-code</code> - The reason code for the state change.</p> </li> <li> <p> <code>state-reason-message</code> - The message for the state change.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the tag-value filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>virtualization-type</code> - The virtualization type (<code>paravirtual</code> | <code>hvm</code>).</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeImages."
    },
    "DescribeImagesResult": {
      "type": "object",
      "properties": {
        "Images": {
          "$ref": "#/definitions/ImageList",
          "description": "Information about one or more images."
        }
      },
      "description": "Contains the output of DescribeImages."
    },
    "DescribeImportImageTasksRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ImportTaskIds": {
          "$ref": "#/definitions/ImportTaskIdList",
          "description": "A list of import image task IDs."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "A token that indicates the next page of results."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "Filter tasks using the <code>task-state</code> filter and one of the following values: active, completed, deleting, deleted."
        }
      },
      "description": "Contains the parameters for DescribeImportImageTasks."
    },
    "DescribeImportImageTasksResult": {
      "type": "object",
      "properties": {
        "ImportImageTasks": {
          "$ref": "#/definitions/ImportImageTaskList",
          "description": "A list of zero or more import image tasks that are currently active or were completed or canceled in the previous 7 days."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to get the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output for DescribeImportImageTasks."
    },
    "DescribeImportSnapshotTasksRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ImportTaskIds": {
          "$ref": "#/definitions/ImportTaskIdList",
          "description": "A list of import snapshot task IDs."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "A token that indicates the next page of results."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "One or more filters."
        }
      },
      "description": "Contains the parameters for DescribeImportSnapshotTasks."
    },
    "DescribeImportSnapshotTasksResult": {
      "type": "object",
      "properties": {
        "ImportSnapshotTasks": {
          "$ref": "#/definitions/ImportSnapshotTaskList",
          "description": "A list of zero or more import snapshot tasks that are currently active or were completed or canceled in the previous 7 days."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to get the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output for DescribeImportSnapshotTasks."
    },
    "DescribeInstanceAttributeRequest": {
      "type": "object",
      "required": [
        "InstanceId",
        "Attribute"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "Attribute": {
          "$ref": "#/definitions/InstanceAttributeName",
          "description": "<p>The instance attribute.</p> <p>Note: The <code>enaSupport</code> attribute is not supported at this time.</p>"
        }
      },
      "description": "Contains the parameters for DescribeInstanceAttribute."
    },
    "DescribeInstanceStatusRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceIds": {
          "$ref": "#/definitions/InstanceIdStringList",
          "description": "<p>One or more instance IDs.</p> <p>Default: Describes all your instances.</p> <p>Constraints: Maximum 100 explicitly specified instance IDs.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>event.code</code> - The code for the scheduled event (<code>instance-reboot</code> | <code>system-reboot</code> | <code>system-maintenance</code> | <code>instance-retirement</code> | <code>instance-stop</code>).</p> </li> <li> <p> <code>event.description</code> - A description of the event.</p> </li> <li> <p> <code>event.not-after</code> - The latest end time for the scheduled event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p> <code>event.not-before</code> - The earliest start time for the scheduled event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p> <code>instance-state-code</code> - The code for the instance state, as a 16-bit unsigned integer. The high byte is an opaque internal value and should be ignored. The low byte is set based on the state represented. The valid values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p> </li> <li> <p> <code>instance-state-name</code> - The state of the instance (<code>pending</code> | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p> </li> <li> <p> <code>instance-status.reachability</code> - Filters on instance status where the name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code> | <code>insufficient-data</code>).</p> </li> <li> <p> <code>instance-status.status</code> - The status of the instance (<code>ok</code> | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code> | <code>not-applicable</code>).</p> </li> <li> <p> <code>system-status.reachability</code> - Filters on system status where the name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code> | <code>insufficient-data</code>).</p> </li> <li> <p> <code>system-status.status</code> - The system status of the instance (<code>ok</code> | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code> | <code>not-applicable</code>).</p> </li> </ul>"
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to retrieve the next page of results."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call."
        },
        "IncludeAllInstances": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>When <code>true</code>, includes the health status for all instances. When <code>false</code>, includes the health status for running instances only.</p> <p>Default: <code>false</code> </p>"
        }
      },
      "description": "Contains the parameters for DescribeInstanceStatus."
    },
    "DescribeInstanceStatusResult": {
      "type": "object",
      "properties": {
        "InstanceStatuses": {
          "$ref": "#/definitions/InstanceStatusList",
          "description": "One or more instance status descriptions."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeInstanceStatus."
    },
    "DescribeInstancesRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceIds": {
          "$ref": "#/definitions/InstanceIdStringList",
          "description": "<p>One or more instance IDs.</p> <p>Default: Describes all your instances.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>affinity</code> - The affinity setting for an instance running on a Dedicated Host (<code>default</code> | <code>host</code>).</p> </li> <li> <p> <code>architecture</code> - The instance architecture (<code>i386</code> | <code>x86_64</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>block-device-mapping.attach-time</code> - The attach time for an EBS volume mapped to the instance, for example, <code>2010-09-15T17:15:20.000Z</code>.</p> </li> <li> <p> <code>block-device-mapping.delete-on-termination</code> - A Boolean that indicates whether the EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>block-device-mapping.device-name</code> - The device name for the EBS volume (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p> </li> <li> <p> <code>block-device-mapping.status</code> - The status for the EBS volume (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>block-device-mapping.volume-id</code> - The volume ID of the EBS volume.</p> </li> <li> <p> <code>client-token</code> - The idempotency token you provided when you launched the instance.</p> </li> <li> <p> <code>dns-name</code> - The public DNS name of the instance.</p> </li> <li> <p> <code>group-id</code> - The ID of the security group for the instance. EC2-Classic only.</p> </li> <li> <p> <code>group-name</code> - The name of the security group for the instance. EC2-Classic only.</p> </li> <li> <p> <code>host-id</code> - The ID of the Dedicated Host on which the instance is running, if applicable.</p> </li> <li> <p> <code>hypervisor</code> - The hypervisor type of the instance (<code>ovm</code> | <code>xen</code>).</p> </li> <li> <p> <code>iam-instance-profile.arn</code> - The instance profile associated with the instance. Specified as an ARN.</p> </li> <li> <p> <code>image-id</code> - The ID of the image used to launch the instance.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>instance-lifecycle</code> - Indicates whether this is a Spot Instance or a Scheduled Instance (<code>spot</code> | <code>scheduled</code>).</p> </li> <li> <p> <code>instance-state-code</code> - The state of the instance, as a 16-bit unsigned integer. The high byte is an opaque internal value and should be ignored. The low byte is set based on the state represented. The valid values are: 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p> </li> <li> <p> <code>instance-state-name</code> - The state of the instance (<code>pending</code> | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p> </li> <li> <p> <code>instance-type</code> - The type of instance (for example, <code>t2.micro</code>).</p> </li> <li> <p> <code>instance.group-id</code> - The ID of the security group for the instance. </p> </li> <li> <p> <code>instance.group-name</code> - The name of the security group for the instance. </p> </li> <li> <p> <code>ip-address</code> - The public IP address of the instance.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>key-name</code> - The name of the key pair used when the instance was launched.</p> </li> <li> <p> <code>launch-index</code> - When launching multiple instances, this is the index for the instance in the launch group (for example, 0, 1, 2, and so on). </p> </li> <li> <p> <code>launch-time</code> - The time when the instance was launched.</p> </li> <li> <p> <code>monitoring-state</code> - Indicates whether monitoring is enabled for the instance (<code>disabled</code> | <code>enabled</code>).</p> </li> <li> <p> <code>owner-id</code> - The AWS account ID of the instance owner.</p> </li> <li> <p> <code>placement-group-name</code> - The name of the placement group for the instance.</p> </li> <li> <p> <code>platform</code> - The platform. Use <code>windows</code> if you have Windows instances; otherwise, leave blank.</p> </li> <li> <p> <code>private-dns-name</code> - The private DNS name of the instance.</p> </li> <li> <p> <code>private-ip-address</code> - The private IP address of the instance.</p> </li> <li> <p> <code>product-code</code> - The product code associated with the AMI used to launch the instance.</p> </li> <li> <p> <code>product-code.type</code> - The type of product code (<code>devpay</code> | <code>marketplace</code>).</p> </li> <li> <p> <code>ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>reason</code> - The reason for the current state of the instance (for example, shows \"User Initiated [date]\" when you stop or terminate the instance). Similar to the state-reason-code filter.</p> </li> <li> <p> <code>requester-id</code> - The ID of the entity that launched the instance on your behalf (for example, AWS Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>reservation-id</code> - The ID of the instance's reservation. A reservation ID is created any time you launch an instance. A reservation ID has a one-to-one relationship with an instance launch request, but can be associated with more than one instance if you launch multiple instances using the same launch request. For example, if you launch one instance, you'll get one reservation ID. If you launch ten instances using the same launch request, you'll also get one reservation ID.</p> </li> <li> <p> <code>root-device-name</code> - The name of the root device for the instance (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>).</p> </li> <li> <p> <code>root-device-type</code> - The type of root device that the instance uses (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p> <code>source-dest-check</code> - Indicates whether the instance performs source/destination checking. A value of <code>true</code> means that checking is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code> for the instance to perform network address translation (NAT) in your VPC. </p> </li> <li> <p> <code>spot-instance-request-id</code> - The ID of the Spot instance request.</p> </li> <li> <p> <code>state-reason-code</code> - The reason code for the state change.</p> </li> <li> <p> <code>state-reason-message</code> - A message that describes the state change.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet for the instance.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource, where <code>tag</code>:<i>key</i> is the tag's key. </p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>tenancy</code> - The tenancy of an instance (<code>dedicated</code> | <code>default</code> | <code>host</code>).</p> </li> <li> <p> <code>virtualization-type</code> - The virtualization type of the instance (<code>paravirtual</code> | <code>hvm</code>).</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC that the instance is running in.</p> </li> <li> <p> <code>network-interface.description</code> - The description of the network interface.</p> </li> <li> <p> <code>network-interface.subnet-id</code> - The ID of the subnet for the network interface.</p> </li> <li> <p> <code>network-interface.vpc-id</code> - The ID of the VPC for the network interface.</p> </li> <li> <p> <code>network-interface.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>network-interface.owner-id</code> - The ID of the owner of the network interface.</p> </li> <li> <p> <code>network-interface.availability-zone</code> - The Availability Zone for the network interface.</p> </li> <li> <p> <code>network-interface.requester-id</code> - The requester ID for the network interface.</p> </li> <li> <p> <code>network-interface.requester-managed</code> - Indicates whether the network interface is being managed by AWS.</p> </li> <li> <p> <code>network-interface.status</code> - The status of the network interface (<code>available</code>) | <code>in-use</code>).</p> </li> <li> <p> <code>network-interface.mac-address</code> - The MAC address of the network interface.</p> </li> <li> <p> <code>network-interface.private-dns-name</code> - The private DNS name of the network interface.</p> </li> <li> <p> <code>network-interface.source-dest-check</code> - Whether the network interface performs source/destination checking. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC.</p> </li> <li> <p> <code>network-interface.group-id</code> - The ID of a security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.group-name</code> - The name of a security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.attachment.attachment-id</code> - The ID of the interface attachment.</p> </li> <li> <p> <code>network-interface.attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.addresses.private-ip-address</code> - The private IP address associated with the network interface.</p> </li> <li> <p> <code>network-interface.attachment.device-index</code> - The device index to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>network-interface.attachment.attach-time</code> - The time that the network interface was attached to an instance.</p> </li> <li> <p> <code>network-interface.attachment.delete-on-termination</code> - Specifies whether the attachment is deleted when an instance is terminated.</p> </li> <li> <p> <code>network-interface.addresses.primary</code> - Specifies whether the IP address of the network interface is the primary private IP address.</p> </li> <li> <p> <code>network-interface.addresses.association.public-ip</code> - The ID of the association of an Elastic IP address with a network interface.</p> </li> <li> <p> <code>network-interface.addresses.association.ip-owner-id</code> - The owner ID of the private IP address associated with the network interface.</p> </li> <li> <p> <code>association.public-ip</code> - The address of the Elastic IP address bound to the network interface.</p> </li> <li> <p> <code>association.ip-owner-id</code> - The owner of the Elastic IP address associated with the network interface.</p> </li> <li> <p> <code>association.allocation-id</code> - The allocation ID returned when you allocated the Elastic IP address for your network interface.</p> </li> <li> <p> <code>association.association-id</code> - The association ID returned when the network interface was associated with an IP address.</p> </li> </ul>"
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to request the next page of results."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter or tag filters in the same call."
        }
      },
      "description": "Contains the parameters for DescribeInstances."
    },
    "DescribeInstancesResult": {
      "type": "object",
      "properties": {
        "Reservations": {
          "$ref": "#/definitions/ReservationList",
          "description": "Zero or more reservations."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeInstances."
    },
    "DescribeInternetGatewaysRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InternetGatewayIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "<p>One or more Internet gateway IDs.</p> <p>Default: Describes all your Internet gateways.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>available</code>). Present only if a VPC is attached.</p> </li> <li> <p> <code>attachment.vpc-id</code> - The ID of an attached VPC.</p> </li> <li> <p> <code>internet-gateway-id</code> - The ID of the Internet gateway.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeInternetGateways."
    },
    "DescribeInternetGatewaysResult": {
      "type": "object",
      "properties": {
        "InternetGateways": {
          "$ref": "#/definitions/InternetGatewayList",
          "description": "Information about one or more Internet gateways."
        }
      },
      "description": "Contains the output of DescribeInternetGateways."
    },
    "DescribeKeyPairsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "KeyNames": {
          "$ref": "#/definitions/KeyNameStringList",
          "description": "<p>One or more key pair names.</p> <p>Default: Describes all your key pairs.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>fingerprint</code> - The fingerprint of the key pair.</p> </li> <li> <p> <code>key-name</code> - The name of the key pair.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeKeyPairs."
    },
    "DescribeKeyPairsResult": {
      "type": "object",
      "properties": {
        "KeyPairs": {
          "$ref": "#/definitions/KeyPairList",
          "description": "Information about one or more key pairs."
        }
      },
      "description": "Contains the output of DescribeKeyPairs."
    },
    "DescribeMovingAddressesRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "PublicIps": {
          "$ref": "#/definitions/ValueStringList",
          "description": "One or more Elastic IP addresses."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>moving-status</code> - The status of the Elastic IP address (<code>MovingToVpc</code> | <code>RestoringToClassic</code>).</p> </li> </ul>"
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value outside of this range, an error is returned.</p> <p>Default: If no value is provided, the default is 1000.</p>"
        }
      },
      "description": "Contains the parameters for DescribeMovingAddresses."
    },
    "DescribeMovingAddressesResult": {
      "type": "object",
      "properties": {
        "MovingAddressStatuses": {
          "$ref": "#/definitions/MovingAddressStatusSet",
          "description": "The status for each Elastic IP address."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeMovingAddresses."
    },
    "DescribeNatGatewaysRequest": {
      "type": "object",
      "properties": {
        "NatGatewayIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "One or more NAT gateway IDs."
        },
        "Filter": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>nat-gateway-id</code> - The ID of the NAT gateway.</p> </li> <li> <p> <code>state</code> - The state of the NAT gateway (<code>pending</code> | <code>failed</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet in which the NAT gateway resides.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC in which the NAT gateway resides.</p> </li> </ul>"
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value specified is greater than 1000, we return only 1000 items.</p>"
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to retrieve the next page of results."
        }
      },
      "description": "Contains the parameters for DescribeNatGateways."
    },
    "DescribeNatGatewaysResult": {
      "type": "object",
      "properties": {
        "NatGateways": {
          "$ref": "#/definitions/NatGatewayList",
          "description": "Information about the NAT gateways."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeNatGateways."
    },
    "DescribeNetworkAclsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "NetworkAclIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "<p>One or more network ACL IDs.</p> <p>Default: Describes all your network ACLs.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>association.association-id</code> - The ID of an association ID for the ACL.</p> </li> <li> <p> <code>association.network-acl-id</code> - The ID of the network ACL involved in the association.</p> </li> <li> <p> <code>association.subnet-id</code> - The ID of the subnet involved in the association.</p> </li> <li> <p> <code>default</code> - Indicates whether the ACL is the default network ACL for the VPC.</p> </li> <li> <p> <code>entry.cidr</code> - The CIDR range specified in the entry.</p> </li> <li> <p> <code>entry.egress</code> - Indicates whether the entry applies to egress traffic.</p> </li> <li> <p> <code>entry.icmp.code</code> - The ICMP code specified in the entry, if any.</p> </li> <li> <p> <code>entry.icmp.type</code> - The ICMP type specified in the entry, if any.</p> </li> <li> <p> <code>entry.port-range.from</code> - The start of the port range specified in the entry. </p> </li> <li> <p> <code>entry.port-range.to</code> - The end of the port range specified in the entry. </p> </li> <li> <p> <code>entry.protocol</code> - The protocol specified in the entry (<code>tcp</code> | <code>udp</code> | <code>icmp</code> or a protocol number).</p> </li> <li> <p> <code>entry.rule-action</code> - Allows or denies the matching traffic (<code>allow</code> | <code>deny</code>).</p> </li> <li> <p> <code>entry.rule-number</code> - The number of an entry (in other words, rule) in the ACL's set of entries.</p> </li> <li> <p> <code>network-acl-id</code> - The ID of the network ACL.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the network ACL.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeNetworkAcls."
    },
    "DescribeNetworkAclsResult": {
      "type": "object",
      "properties": {
        "NetworkAcls": {
          "$ref": "#/definitions/NetworkAclList",
          "description": "Information about one or more network ACLs."
        }
      },
      "description": "Contains the output of DescribeNetworkAcls."
    },
    "DescribeNetworkInterfaceAttributeRequest": {
      "type": "object",
      "required": [
        "NetworkInterfaceId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface."
        },
        "Attribute": {
          "$ref": "#/definitions/NetworkInterfaceAttribute",
          "description": "The attribute of the network interface."
        }
      },
      "description": "Contains the parameters for DescribeNetworkInterfaceAttribute."
    },
    "DescribeNetworkInterfaceAttributeResult": {
      "type": "object",
      "properties": {
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface."
        },
        "Description": {
          "$ref": "#/definitions/AttributeValue",
          "description": "The description of the network interface."
        },
        "SourceDestCheck": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "Indicates whether source/destination checking is enabled."
        },
        "Groups": {
          "$ref": "#/definitions/GroupIdentifierList",
          "description": "The security groups associated with the network interface."
        },
        "Attachment": {
          "$ref": "#/definitions/NetworkInterfaceAttachment",
          "description": "The attachment (if any) of the network interface."
        }
      },
      "description": "Contains the output of DescribeNetworkInterfaceAttribute."
    },
    "DescribeNetworkInterfacesRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "NetworkInterfaceIds": {
          "$ref": "#/definitions/NetworkInterfaceIdList",
          "description": "<p>One or more network interface IDs.</p> <p>Default: Describes all your network interfaces.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>addresses.private-ip-address</code> - The private IP addresses associated with the network interface.</p> </li> <li> <p> <code>addresses.primary</code> - Whether the private IP address is the primary IP address associated with the network interface. </p> </li> <li> <p> <code>addresses.association.public-ip</code> - The association ID returned when the network interface was associated with the Elastic IP address.</p> </li> <li> <p> <code>addresses.association.owner-id</code> - The owner ID of the addresses associated with the network interface.</p> </li> <li> <p> <code>association.association-id</code> - The association ID returned when the network interface was associated with an IP address.</p> </li> <li> <p> <code>association.allocation-id</code> - The allocation ID returned when you allocated the Elastic IP address for your network interface.</p> </li> <li> <p> <code>association.ip-owner-id</code> - The owner of the Elastic IP address associated with the network interface.</p> </li> <li> <p> <code>association.public-ip</code> - The address of the Elastic IP address bound to the network interface.</p> </li> <li> <p> <code>association.public-dns-name</code> - The public DNS name for the network interface.</p> </li> <li> <p> <code>attachment.attachment-id</code> - The ID of the interface attachment.</p> </li> <li> <p> <code>attachment.attach.time</code> - The time that the network interface was attached to an instance.</p> </li> <li> <p> <code>attachment.delete-on-termination</code> - Indicates whether the attachment is deleted when an instance is terminated.</p> </li> <li> <p> <code>attachment.device-index</code> - The device index to which the network interface is attached.</p> </li> <li> <p> <code>attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>attachment.nat-gateway-id</code> - The ID of the NAT gateway to which the network interface is attached.</p> </li> <li> <p> <code>attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the network interface.</p> </li> <li> <p> <code>description</code> - The description of the network interface.</p> </li> <li> <p> <code>group-id</code> - The ID of a security group associated with the network interface.</p> </li> <li> <p> <code>group-name</code> - The name of a security group associated with the network interface.</p> </li> <li> <p> <code>mac-address</code> - The MAC address of the network interface.</p> </li> <li> <p> <code>network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>owner-id</code> - The AWS account ID of the network interface owner.</p> </li> <li> <p> <code>private-ip-address</code> - The private IP address or addresses of the network interface.</p> </li> <li> <p> <code>private-dns-name</code> - The private DNS name of the network interface.</p> </li> <li> <p> <code>requester-id</code> - The ID of the entity that launched the instance on your behalf (for example, AWS Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>requester-managed</code> - Indicates whether the network interface is being managed by an AWS service (for example, AWS Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>source-desk-check</code> - Indicates whether the network interface performs source/destination checking. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC. </p> </li> <li> <p> <code>status</code> - The status of the network interface. If the network interface is not attached to an instance, the status is <code>available</code>; if a network interface is attached to an instance the status is <code>in-use</code>.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet for the network interface.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the network interface.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeNetworkInterfaces."
    },
    "DescribeNetworkInterfacesResult": {
      "type": "object",
      "properties": {
        "NetworkInterfaces": {
          "$ref": "#/definitions/NetworkInterfaceList",
          "description": "Information about one or more network interfaces."
        }
      },
      "description": "Contains the output of DescribeNetworkInterfaces."
    },
    "DescribePlacementGroupsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "GroupNames": {
          "$ref": "#/definitions/PlacementGroupStringList",
          "description": "<p>One or more placement group names.</p> <p>Default: Describes all your placement groups, or only those otherwise specified.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>group-name</code> - The name of the placement group.</p> </li> <li> <p> <code>state</code> - The state of the placement group (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>strategy</code> - The strategy of the placement group (<code>cluster</code>).</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribePlacementGroups."
    },
    "DescribePlacementGroupsResult": {
      "type": "object",
      "properties": {
        "PlacementGroups": {
          "$ref": "#/definitions/PlacementGroupList",
          "description": "One or more placement groups."
        }
      },
      "description": "Contains the output of DescribePlacementGroups."
    },
    "DescribePrefixListsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "PrefixListIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "One or more prefix list IDs."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>prefix-list-id</code>: The ID of a prefix list.</p> </li> <li> <p> <code>prefix-list-name</code>: The name of a prefix list.</p> </li> </ul>"
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value specified is greater than 1000, we return only 1000 items.</p>"
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token for the next set of items to return. (You received this token from a prior call.)"
        }
      },
      "description": "Contains the parameters for DescribePrefixLists."
    },
    "DescribePrefixListsResult": {
      "type": "object",
      "properties": {
        "PrefixLists": {
          "$ref": "#/definitions/PrefixListSet",
          "description": "All available prefix lists."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty."
        }
      },
      "description": "Contains the output of DescribePrefixLists."
    },
    "DescribeRegionsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "RegionNames": {
          "$ref": "#/definitions/RegionNameStringList",
          "description": "The names of one or more regions."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>endpoint</code> - The endpoint of the region (for example, <code>ec2.us-east-1.amazonaws.com</code>).</p> </li> <li> <p> <code>region-name</code> - The name of the region (for example, <code>us-east-1</code>).</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeRegions."
    },
    "DescribeRegionsResult": {
      "type": "object",
      "properties": {
        "Regions": {
          "$ref": "#/definitions/RegionList",
          "description": "Information about one or more regions."
        }
      },
      "description": "Contains the output of DescribeRegions."
    },
    "DescribeReservedInstancesListingsRequest": {
      "type": "object",
      "properties": {
        "ReservedInstancesId": {
          "$ref": "#/definitions/String",
          "description": "One or more Reserved Instance IDs."
        },
        "ReservedInstancesListingId": {
          "$ref": "#/definitions/String",
          "description": "One or more Reserved Instance listing IDs."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instances.</p> </li> <li> <p> <code>reserved-instances-listing-id</code> - The ID of the Reserved Instances listing.</p> </li> <li> <p> <code>status</code> - The status of the Reserved Instance listing (<code>pending</code> | <code>active</code> | <code>cancelled</code> | <code>closed</code>).</p> </li> <li> <p> <code>status-message</code> - The reason for the status.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeReservedInstancesListings."
    },
    "DescribeReservedInstancesListingsResult": {
      "type": "object",
      "properties": {
        "ReservedInstancesListings": {
          "$ref": "#/definitions/ReservedInstancesListingList",
          "description": "Information about the Reserved Instance listing."
        }
      },
      "description": "Contains the output of DescribeReservedInstancesListings."
    },
    "DescribeReservedInstancesModificationsRequest": {
      "type": "object",
      "properties": {
        "ReservedInstancesModificationIds": {
          "$ref": "#/definitions/ReservedInstancesModificationIdStringList",
          "description": "IDs for the submitted modification request."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to retrieve the next page of results."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>client-token</code> - The idempotency token for the modification request.</p> </li> <li> <p> <code>create-date</code> - The time when the modification request was created.</p> </li> <li> <p> <code>effective-date</code> - The time when the modification becomes effective.</p> </li> <li> <p> <code>modification-result.reserved-instances-id</code> - The ID for the Reserved Instances created as part of the modification request. This ID is only available when the status of the modification is <code>fulfilled</code>.</p> </li> <li> <p> <code>modification-result.target-configuration.availability-zone</code> - The Availability Zone for the new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.instance-count </code> - The number of new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.instance-type</code> - The instance type of the new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.platform</code> - The network platform of the new Reserved Instances (<code>EC2-Classic</code> | <code>EC2-VPC</code>).</p> </li> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instances modified.</p> </li> <li> <p> <code>reserved-instances-modification-id</code> - The ID of the modification request.</p> </li> <li> <p> <code>status</code> - The status of the Reserved Instances modification request (<code>processing</code> | <code>fulfilled</code> | <code>failed</code>).</p> </li> <li> <p> <code>status-message</code> - The reason for the status.</p> </li> <li> <p> <code>update-date</code> - The time when the modification request was last updated.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeReservedInstancesModifications."
    },
    "DescribeReservedInstancesModificationsResult": {
      "type": "object",
      "properties": {
        "ReservedInstancesModifications": {
          "$ref": "#/definitions/ReservedInstancesModificationList",
          "description": "The Reserved Instance modification information."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeReservedInstancesModifications."
    },
    "DescribeReservedInstancesOfferingsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ReservedInstancesOfferingIds": {
          "$ref": "#/definitions/ReservedInstancesOfferingIdStringList",
          "description": "One or more Reserved Instances offering IDs."
        },
        "InstanceType": {
          "$ref": "#/definitions/InstanceType",
          "description": "The instance type that the reservation will cover (for example, <code>m1.small</code>). For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone in which the Reserved Instance can be used."
        },
        "ProductDescription": {
          "$ref": "#/definitions/RIProductDescription",
          "description": "The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the description are for use with Amazon VPC."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone where the Reserved Instance can be used.</p> </li> <li> <p> <code>duration</code> - The duration of the Reserved Instance (for example, one year or three years), in seconds (<code>31536000</code> | <code>94608000</code>).</p> </li> <li> <p> <code>fixed-price</code> - The purchase price of the Reserved Instance (for example, 9800.0).</p> </li> <li> <p> <code>instance-type</code> - The instance type that is covered by the reservation.</p> </li> <li> <p> <code>marketplace</code> - Set to <code>true</code> to show only Reserved Instance Marketplace offerings. When this filter is not used, which is the default behavior, all offerings from both AWS and the Reserved Instance Marketplace are listed.</p> </li> <li> <p> <code>product-description</code> - The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the product platform description will only be displayed to EC2-Classic account holders and are for use with Amazon VPC. (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Windows</code> | <code>Windows (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code> | <code> Windows with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL Server Enterprise</code> | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>) </p> </li> <li> <p> <code>reserved-instances-offering-id</code> - The Reserved Instances offering ID.</p> </li> <li> <p> <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for example, 0.84).</p> </li> </ul>"
        },
        "InstanceTenancy": {
          "$ref": "#/definitions/Tenancy",
          "description": "<p>The tenancy of the instances covered by the reservation. A Reserved Instance with a tenancy of <code>dedicated</code> is applied to instances that run in a VPC on single-tenant hardware (i.e., Dedicated Instances).</p> <p>Default: <code>default</code> </p>"
        },
        "OfferingType": {
          "$ref": "#/definitions/OfferingTypeValues",
          "description": "The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type. "
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to retrieve the next page of results."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. The maximum is 100.</p> <p>Default: 100</p>"
        },
        "IncludeMarketplace": {
          "$ref": "#/definitions/Boolean",
          "description": "Include Reserved Instance Marketplace offerings in the response."
        },
        "MinDuration": {
          "$ref": "#/definitions/Long",
          "description": "<p>The minimum duration (in seconds) to filter when searching for offerings.</p> <p>Default: 2592000 (1 month)</p>"
        },
        "MaxDuration": {
          "$ref": "#/definitions/Long",
          "description": "<p>The maximum duration (in seconds) to filter when searching for offerings.</p> <p>Default: 94608000 (3 years)</p>"
        },
        "MaxInstanceCount": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The maximum number of instances to filter when searching for offerings.</p> <p>Default: 20</p>"
        }
      },
      "description": "Contains the parameters for DescribeReservedInstancesOfferings."
    },
    "DescribeReservedInstancesOfferingsResult": {
      "type": "object",
      "properties": {
        "ReservedInstancesOfferings": {
          "$ref": "#/definitions/ReservedInstancesOfferingList",
          "description": "A list of Reserved Instances offerings."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeReservedInstancesOfferings."
    },
    "DescribeReservedInstancesRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ReservedInstancesIds": {
          "$ref": "#/definitions/ReservedInstancesIdStringList",
          "description": "<p>One or more Reserved Instance IDs.</p> <p>Default: Describes all your Reserved Instances, or only those otherwise specified.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone where the Reserved Instance can be used.</p> </li> <li> <p> <code>duration</code> - The duration of the Reserved Instance (one year or three years), in seconds (<code>31536000</code> | <code>94608000</code>).</p> </li> <li> <p> <code>end</code> - The time when the Reserved Instance expires (for example, 2015-08-07T11:54:42.000Z).</p> </li> <li> <p> <code>fixed-price</code> - The purchase price of the Reserved Instance (for example, 9800.0).</p> </li> <li> <p> <code>instance-type</code> - The instance type that is covered by the reservation.</p> </li> <li> <p> <code>product-description</code> - The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the product platform description will only be displayed to EC2-Classic account holders and are for use with Amazon VPC (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Windows</code> | <code>Windows (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code> | <code>Windows with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL Server Enterprise</code> | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>).</p> </li> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instance.</p> </li> <li> <p> <code>start</code> - The time at which the Reserved Instance purchase request was placed (for example, 2014-08-07T11:54:42.000Z).</p> </li> <li> <p> <code>state</code> - The state of the Reserved Instance (<code>payment-pending</code> | <code>active</code> | <code>payment-failed</code> | <code>retired</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for example, 0.84).</p> </li> </ul>"
        },
        "OfferingType": {
          "$ref": "#/definitions/OfferingTypeValues",
          "description": "The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type. "
        }
      },
      "description": "Contains the parameters for DescribeReservedInstances."
    },
    "DescribeReservedInstancesResult": {
      "type": "object",
      "properties": {
        "ReservedInstances": {
          "$ref": "#/definitions/ReservedInstancesList",
          "description": "A list of Reserved Instances."
        }
      },
      "description": "Contains the output for DescribeReservedInstances."
    },
    "DescribeRouteTablesRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "RouteTableIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "<p>One or more route table IDs.</p> <p>Default: Describes all your route tables.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>association.route-table-association-id</code> - The ID of an association ID for the route table.</p> </li> <li> <p> <code>association.route-table-id</code> - The ID of the route table involved in the association.</p> </li> <li> <p> <code>association.subnet-id</code> - The ID of the subnet involved in the association.</p> </li> <li> <p> <code>association.main</code> - Indicates whether the route table is the main route table for the VPC (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>route-table-id</code> - The ID of the route table.</p> </li> <li> <p> <code>route.destination-cidr-block</code> - The CIDR range specified in a route in the table.</p> </li> <li> <p> <code>route.destination-prefix-list-id</code> - The ID (prefix) of the AWS service specified in a route in the table.</p> </li> <li> <p> <code>route.gateway-id</code> - The ID of a gateway specified in a route in the table.</p> </li> <li> <p> <code>route.instance-id</code> - The ID of an instance specified in a route in the table.</p> </li> <li> <p> <code>route.nat-gateway-id</code> - The ID of a NAT gateway.</p> </li> <li> <p> <code>route.origin</code> - Describes how the route was created. <code>CreateRouteTable</code> indicates that the route was automatically created when the route table was created; <code>CreateRoute</code> indicates that the route was manually added to the route table; <code>EnableVgwRoutePropagation</code> indicates that the route was propagated by route propagation.</p> </li> <li> <p> <code>route.state</code> - The state of a route in the route table (<code>active</code> | <code>blackhole</code>). The blackhole state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, the specified NAT instance has been terminated, and so on).</p> </li> <li> <p> <code>route.vpc-peering-connection-id</code> - The ID of a VPC peering connection specified in a route in the table.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the route table.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeRouteTables."
    },
    "DescribeRouteTablesResult": {
      "type": "object",
      "properties": {
        "RouteTables": {
          "$ref": "#/definitions/RouteTableList",
          "description": "Information about one or more route tables."
        }
      },
      "description": "Contains the output of DescribeRouteTables."
    },
    "DescribeScheduledInstanceAvailabilityRequest": {
      "type": "object",
      "required": [
        "Recurrence",
        "FirstSlotStartTimeRange"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "Recurrence": {
          "$ref": "#/definitions/ScheduledInstanceRecurrenceRequest",
          "description": "The schedule recurrence."
        },
        "FirstSlotStartTimeRange": {
          "$ref": "#/definitions/SlotDateTimeRangeRequest",
          "description": "The time period for the first schedule to start."
        },
        "MinSlotDurationInHours": {
          "$ref": "#/definitions/Integer",
          "description": "The minimum available duration, in hours. The minimum required duration is 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours."
        },
        "MaxSlotDurationInHours": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum available duration, in hours. This value must be greater than <code>MinSlotDurationInHours</code> and less than 1,720."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token for the next set of results."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 300. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p> </li> <li> <p> <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p> </li> <li> <p> <code>network-platform</code> - The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p> </li> <li> <p> <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeScheduledInstanceAvailability."
    },
    "DescribeScheduledInstanceAvailabilityResult": {
      "type": "object",
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return."
        },
        "ScheduledInstanceAvailabilitySet": {
          "$ref": "#/definitions/ScheduledInstanceAvailabilitySet",
          "description": "Information about the available Scheduled Instances."
        }
      },
      "description": "Contains the output of DescribeScheduledInstanceAvailability."
    },
    "DescribeScheduledInstancesRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ScheduledInstanceIds": {
          "$ref": "#/definitions/ScheduledInstanceIdRequestSet",
          "description": "One or more Scheduled Instance IDs."
        },
        "SlotStartTimeRange": {
          "$ref": "#/definitions/SlotStartTimeRangeRequest",
          "description": "The time period for the first schedule to start."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token for the next set of results."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 100. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p> </li> <li> <p> <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p> </li> <li> <p> <code>network-platform</code> - The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p> </li> <li> <p> <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeScheduledInstances."
    },
    "DescribeScheduledInstancesResult": {
      "type": "object",
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return."
        },
        "ScheduledInstanceSet": {
          "$ref": "#/definitions/ScheduledInstanceSet",
          "description": "Information about the Scheduled Instances."
        }
      },
      "description": "Contains the output of DescribeScheduledInstances."
    },
    "DescribeSecurityGroupReferencesRequest": {
      "type": "object",
      "required": [
        "GroupId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation."
        },
        "GroupId": {
          "$ref": "#/definitions/GroupIds",
          "description": "One or more security group IDs in your account."
        }
      }
    },
    "DescribeSecurityGroupReferencesResult": {
      "type": "object",
      "properties": {
        "SecurityGroupReferenceSet": {
          "$ref": "#/definitions/SecurityGroupReferences",
          "description": "Information about the VPCs with the referencing security groups."
        }
      }
    },
    "DescribeSecurityGroupsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "GroupNames": {
          "$ref": "#/definitions/GroupNameStringList",
          "description": "<p>[EC2-Classic and default VPC only] One or more security group names. You can specify either the security group name or the security group ID. For security groups in a nondefault VPC, use the <code>group-name</code> filter to describe security groups by name.</p> <p>Default: Describes all your security groups.</p>"
        },
        "GroupIds": {
          "$ref": "#/definitions/GroupIdStringList",
          "description": "<p>One or more security group IDs. Required for security groups in a nondefault VPC.</p> <p>Default: Describes all your security groups.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters. If using multiple filters for rules, the results include security groups for which any combination of rules - not necessarily a single rule - match all filters.</p> <ul> <li> <p> <code>description</code> - The description of the security group.</p> </li> <li> <p> <code>egress.ip-permission.prefix-list-id</code> - The ID (prefix) of the AWS service to which the security group allows access.</p> </li> <li> <p> <code>group-id</code> - The ID of the security group. </p> </li> <li> <p> <code>group-name</code> - The name of the security group.</p> </li> <li> <p> <code>ip-permission.cidr</code> - A CIDR range that has been granted permission.</p> </li> <li> <p> <code>ip-permission.from-port</code> - The start of port range for the TCP and UDP protocols, or an ICMP type number.</p> </li> <li> <p> <code>ip-permission.group-id</code> - The ID of a security group that has been granted permission.</p> </li> <li> <p> <code>ip-permission.group-name</code> - The name of a security group that has been granted permission.</p> </li> <li> <p> <code>ip-permission.protocol</code> - The IP protocol for the permission (<code>tcp</code> | <code>udp</code> | <code>icmp</code> or a protocol number).</p> </li> <li> <p> <code>ip-permission.to-port</code> - The end of port range for the TCP and UDP protocols, or an ICMP code.</p> </li> <li> <p> <code>ip-permission.user-id</code> - The ID of an AWS account that has been granted permission.</p> </li> <li> <p> <code>owner-id</code> - The AWS account ID of the owner of the security group.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the security group.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the security group.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC specified when the security group was created.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeSecurityGroups."
    },
    "DescribeSecurityGroupsResult": {
      "type": "object",
      "properties": {
        "SecurityGroups": {
          "$ref": "#/definitions/SecurityGroupList",
          "description": "Information about one or more security groups."
        }
      },
      "description": "Contains the output of DescribeSecurityGroups."
    },
    "DescribeSnapshotAttributeRequest": {
      "type": "object",
      "required": [
        "SnapshotId",
        "Attribute"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SnapshotId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the EBS snapshot."
        },
        "Attribute": {
          "$ref": "#/definitions/SnapshotAttributeName",
          "description": "The snapshot attribute you would like to view."
        }
      },
      "description": "Contains the parameters for DescribeSnapshotAttribute."
    },
    "DescribeSnapshotAttributeResult": {
      "type": "object",
      "properties": {
        "SnapshotId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the EBS snapshot."
        },
        "CreateVolumePermissions": {
          "$ref": "#/definitions/CreateVolumePermissionList",
          "description": "A list of permissions for creating volumes from the snapshot."
        },
        "ProductCodes": {
          "$ref": "#/definitions/ProductCodeList",
          "description": "A list of product codes."
        }
      },
      "description": "Contains the output of DescribeSnapshotAttribute."
    },
    "DescribeSnapshotsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SnapshotIds": {
          "$ref": "#/definitions/SnapshotIdStringList",
          "description": "<p>One or more snapshot IDs.</p> <p>Default: Describes snapshots for which you have launch permissions.</p>"
        },
        "OwnerIds": {
          "$ref": "#/definitions/OwnerStringList",
          "description": "Returns the snapshots owned by the specified owner. Multiple owners can be specified."
        },
        "RestorableByUserIds": {
          "$ref": "#/definitions/RestorableByStringList",
          "description": "One or more AWS accounts IDs that can create volumes from the snapshot."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>description</code> - A description of the snapshot.</p> </li> <li> <p> <code>owner-alias</code> - Value from an Amazon-maintained list (<code>amazon</code> | <code>aws-marketplace</code> | <code>microsoft</code>) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM consolew.</p> </li> <li> <p> <code>owner-id</code> - The ID of the AWS account that owns the snapshot.</p> </li> <li> <p> <code>progress</code> - The progress of the snapshot, as a percentage (for example, 80%).</p> </li> <li> <p> <code>snapshot-id</code> - The snapshot ID.</p> </li> <li> <p> <code>start-time</code> - The time stamp when the snapshot was initiated.</p> </li> <li> <p> <code>status</code> - The status of the snapshot (<code>pending</code> | <code>completed</code> | <code>error</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>volume-id</code> - The ID of the volume the snapshot is for.</p> </li> <li> <p> <code>volume-size</code> - The size of the volume, in GiB.</p> </li> </ul>"
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The <code>NextToken</code> value returned from a previous paginated <code>DescribeSnapshots</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of snapshot results returned by <code>DescribeSnapshots</code> in paginated output. When this parameter is used, <code>DescribeSnapshots</code> only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeSnapshots</code> request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then <code>DescribeSnapshots</code> returns all results. You cannot specify this parameter and the snapshot IDs parameter in the same request."
        }
      },
      "description": "Contains the parameters for DescribeSnapshots."
    },
    "DescribeSnapshotsResult": {
      "type": "object",
      "properties": {
        "Snapshots": {
          "$ref": "#/definitions/SnapshotList",
          "description": "Information about the snapshots."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The <code>NextToken</code> value to include in a future <code>DescribeSnapshots</code> request. When the results of a <code>DescribeSnapshots</code> request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeSnapshots."
    },
    "DescribeSpotDatafeedSubscriptionRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        }
      },
      "description": "Contains the parameters for DescribeSpotDatafeedSubscription."
    },
    "DescribeSpotDatafeedSubscriptionResult": {
      "type": "object",
      "properties": {
        "SpotDatafeedSubscription": {
          "$ref": "#/definitions/SpotDatafeedSubscription",
          "description": "The Spot instance data feed subscription."
        }
      },
      "description": "Contains the output of DescribeSpotDatafeedSubscription."
    },
    "DescribeSpotFleetInstancesRequest": {
      "type": "object",
      "required": [
        "SpotFleetRequestId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SpotFleetRequestId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Spot fleet request."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token for the next set of results."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value."
        }
      },
      "description": "Contains the parameters for DescribeSpotFleetInstances."
    },
    "DescribeSpotFleetInstancesResponse": {
      "type": "object",
      "required": [
        "SpotFleetRequestId",
        "ActiveInstances"
      ],
      "properties": {
        "SpotFleetRequestId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Spot fleet request."
        },
        "ActiveInstances": {
          "$ref": "#/definitions/ActiveInstanceSet",
          "description": "The running instances. Note that this list is refreshed periodically and might be out of date."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeSpotFleetInstances."
    },
    "DescribeSpotFleetRequestHistoryRequest": {
      "type": "object",
      "required": [
        "SpotFleetRequestId",
        "StartTime"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SpotFleetRequestId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Spot fleet request."
        },
        "EventType": {
          "$ref": "#/definitions/EventType",
          "description": "The type of events to describe. By default, all events are described."
        },
        "StartTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z)."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token for the next set of results."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value."
        }
      },
      "description": "Contains the parameters for DescribeSpotFleetRequestHistory."
    },
    "DescribeSpotFleetRequestHistoryResponse": {
      "type": "object",
      "required": [
        "SpotFleetRequestId",
        "StartTime",
        "LastEvaluatedTime",
        "HistoryRecords"
      ],
      "properties": {
        "SpotFleetRequestId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Spot fleet request."
        },
        "StartTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z)."
        },
        "LastEvaluatedTime": {
          "$ref": "#/definitions/DateTime",
          "description": "<p>The last date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). All records up to this time were retrieved.</p> <p>If <code>nextToken</code> indicates that there are more results, this value is not present.</p>"
        },
        "HistoryRecords": {
          "$ref": "#/definitions/HistoryRecords",
          "description": "Information about the events in the history of the Spot fleet request."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeSpotFleetRequestHistory."
    },
    "DescribeSpotFleetRequestsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SpotFleetRequestIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "The IDs of the Spot fleet requests."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token for the next set of results."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value."
        }
      },
      "description": "Contains the parameters for DescribeSpotFleetRequests."
    },
    "DescribeSpotFleetRequestsResponse": {
      "type": "object",
      "required": [
        "SpotFleetRequestConfigs"
      ],
      "properties": {
        "SpotFleetRequestConfigs": {
          "$ref": "#/definitions/SpotFleetRequestConfigSet",
          "description": "Information about the configuration of your Spot fleet."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeSpotFleetRequests."
    },
    "DescribeSpotInstanceRequestsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SpotInstanceRequestIds": {
          "$ref": "#/definitions/SpotInstanceRequestIdList",
          "description": "One or more Spot instance request IDs."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone-group</code> - The Availability Zone group.</p> </li> <li> <p> <code>create-time</code> - The time stamp when the Spot instance request was created.</p> </li> <li> <p> <code>fault-code</code> - The fault code related to the request.</p> </li> <li> <p> <code>fault-message</code> - The fault message related to the request.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance that fulfilled the request.</p> </li> <li> <p> <code>launch-group</code> - The Spot instance launch group.</p> </li> <li> <p> <code>launch.block-device-mapping.delete-on-termination</code> - Indicates whether the Amazon EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>launch.block-device-mapping.device-name</code> - The device name for the Amazon EBS volume (for example, <code>/dev/sdh</code>).</p> </li> <li> <p> <code>launch.block-device-mapping.snapshot-id</code> - The ID of the snapshot used for the Amazon EBS volume.</p> </li> <li> <p> <code>launch.block-device-mapping.volume-size</code> - The size of the Amazon EBS volume, in GiB.</p> </li> <li> <p> <code>launch.block-device-mapping.volume-type</code> - The type of the Amazon EBS volume: <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code>for Cold HDD, or <code>standard</code> for Magnetic.</p> </li> <li> <p> <code>launch.group-id</code> - The security group for the instance.</p> </li> <li> <p> <code>launch.image-id</code> - The ID of the AMI.</p> </li> <li> <p> <code>launch.instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</p> </li> <li> <p> <code>launch.kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>launch.key-name</code> - The name of the key pair the instance launched with.</p> </li> <li> <p> <code>launch.monitoring-enabled</code> - Whether monitoring is enabled for the Spot instance.</p> </li> <li> <p> <code>launch.ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>network-interface.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>network-interface.device-index</code> - The index of the device for the network interface attachment on the instance.</p> </li> <li> <p> <code>network-interface.subnet-id</code> - The ID of the subnet for the instance.</p> </li> <li> <p> <code>network-interface.description</code> - A description of the network interface.</p> </li> <li> <p> <code>network-interface.private-ip-address</code> - The primary private IP address of the network interface.</p> </li> <li> <p> <code>network-interface.delete-on-termination</code> - Indicates whether the network interface is deleted when the instance is terminated.</p> </li> <li> <p> <code>network-interface.group-id</code> - The ID of the security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.group-name</code> - The name of the security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.addresses.primary</code> - Indicates whether the IP address is the primary private IP address.</p> </li> <li> <p> <code>product-description</code> - The product description associated with the instance (<code>Linux/UNIX</code> | <code>Windows</code>).</p> </li> <li> <p> <code>spot-instance-request-id</code> - The Spot instance request ID.</p> </li> <li> <p> <code>spot-price</code> - The maximum hourly price for any Spot instance launched to fulfill the request.</p> </li> <li> <p> <code>state</code> - The state of the Spot instance request (<code>open</code> | <code>active</code> | <code>closed</code> | <code>cancelled</code> | <code>failed</code>). Spot bid status information can help you track your Amazon EC2 Spot instance requests. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html\">Spot Bid Status</a> in the Amazon Elastic Compute Cloud User Guide.</p> </li> <li> <p> <code>status-code</code> - The short code describing the most recent evaluation of your Spot instance request.</p> </li> <li> <p> <code>status-message</code> - The message explaining the status of the Spot instance request.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>type</code> - The type of Spot instance request (<code>one-time</code> | <code>persistent</code>).</p> </li> <li> <p> <code>launched-availability-zone</code> - The Availability Zone in which the bid is launched.</p> </li> <li> <p> <code>valid-from</code> - The start date of the request.</p> </li> <li> <p> <code>valid-until</code> - The end date of the request.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeSpotInstanceRequests."
    },
    "DescribeSpotInstanceRequestsResult": {
      "type": "object",
      "properties": {
        "SpotInstanceRequests": {
          "$ref": "#/definitions/SpotInstanceRequestList",
          "description": "One or more Spot instance requests."
        }
      },
      "description": "Contains the output of DescribeSpotInstanceRequests."
    },
    "DescribeSpotPriceHistoryRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "StartTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time, up to the past 90 days, from which to start retrieving the price history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z)."
        },
        "EndTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time, up to the current date, from which to stop retrieving the price history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z)."
        },
        "InstanceTypes": {
          "$ref": "#/definitions/InstanceTypeList",
          "description": "Filters the results by the specified instance types."
        },
        "ProductDescriptions": {
          "$ref": "#/definitions/ProductDescriptionList",
          "description": "Filters the results by the specified basic product descriptions."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone for which prices should be returned.</p> </li> <li> <p> <code>instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</p> </li> <li> <p> <code>product-description</code> - The product description for the Spot price (<code>Linux/UNIX</code> | <code>SUSE Linux</code> | <code>Windows</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Windows (Amazon VPC)</code>).</p> </li> <li> <p> <code>spot-price</code> - The Spot price. The value must match exactly (or use wildcards; greater than or less than comparison is not supported).</p> </li> <li> <p> <code>timestamp</code> - The timestamp of the Spot price history, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). You can use wildcards (* and ?). Greater than or less than comparison is not supported.</p> </li> </ul>"
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "Filters the results by the specified Availability Zone."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token for the next set of results."
        }
      },
      "description": "Contains the parameters for DescribeSpotPriceHistory."
    },
    "DescribeSpotPriceHistoryResult": {
      "type": "object",
      "properties": {
        "SpotPriceHistory": {
          "$ref": "#/definitions/SpotPriceHistoryList",
          "description": "The historical Spot prices."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeSpotPriceHistory."
    },
    "DescribeStaleSecurityGroupsRequest": {
      "type": "object",
      "required": [
        "VpcId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is DryRunOperation. Otherwise, it is UnauthorizedOperation."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token for the next set of items to return. (You received this token from a prior call.)"
        }
      }
    },
    "DescribeStaleSecurityGroupsResult": {
      "type": "object",
      "properties": {
        "StaleSecurityGroupSet": {
          "$ref": "#/definitions/StaleSecurityGroupSet",
          "description": "Information about the stale security groups."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty."
        }
      }
    },
    "DescribeSubnetsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SubnetIds": {
          "$ref": "#/definitions/SubnetIdStringList",
          "description": "<p>One or more subnet IDs.</p> <p>Default: Describes all your subnets.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>availabilityZone</code> - The Availability Zone for the subnet. You can also use <code>availability-zone</code> as the filter name.</p> </li> <li> <p> <code>available-ip-address-count</code> - The number of IP addresses in the subnet that are available.</p> </li> <li> <p> <code>cidrBlock</code> - The CIDR block of the subnet. The CIDR block you specify must exactly match the subnet's CIDR block for information to be returned for the subnet. You can also use <code>cidr</code> or <code>cidr-block</code> as the filter names.</p> </li> <li> <p> <code>defaultForAz</code> - Indicates whether this is the default subnet for the Availability Zone. You can also use <code>default-for-az</code> as the filter name.</p> </li> <li> <p> <code>state</code> - The state of the subnet (<code>pending</code> | <code>available</code>).</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the subnet.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeSubnets."
    },
    "DescribeSubnetsResult": {
      "type": "object",
      "properties": {
        "Subnets": {
          "$ref": "#/definitions/SubnetList",
          "description": "Information about one or more subnets."
        }
      },
      "description": "Contains the output of DescribeSubnets."
    },
    "DescribeTagsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>key</code> - The tag key.</p> </li> <li> <p> <code>resource-id</code> - The resource ID.</p> </li> <li> <p> <code>resource-type</code> - The resource type (<code>customer-gateway</code> | <code>dhcp-options</code> | <code>image</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-interface</code> | <code>reserved-instances</code> | <code>route-table</code> | <code>security-group</code> | <code>snapshot</code> | <code>spot-instances-request</code> | <code>subnet</code> | <code>volume</code> | <code>vpc</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>).</p> </li> <li> <p> <code>value</code> - The tag value.</p> </li> </ul>"
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to return in a single call. This value can be between 5 and 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to retrieve the next page of results."
        }
      },
      "description": "Contains the parameters for DescribeTags."
    },
    "DescribeTagsResult": {
      "type": "object",
      "properties": {
        "Tags": {
          "$ref": "#/definitions/TagDescriptionList",
          "description": "A list of tags."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.."
        }
      },
      "description": "Contains the output of DescribeTags."
    },
    "DescribeVolumeAttributeRequest": {
      "type": "object",
      "required": [
        "VolumeId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VolumeId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the volume."
        },
        "Attribute": {
          "$ref": "#/definitions/VolumeAttributeName",
          "description": "The instance attribute."
        }
      },
      "description": "Contains the parameters for DescribeVolumeAttribute."
    },
    "DescribeVolumeAttributeResult": {
      "type": "object",
      "properties": {
        "VolumeId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the volume."
        },
        "AutoEnableIO": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "The state of <code>autoEnableIO</code> attribute."
        },
        "ProductCodes": {
          "$ref": "#/definitions/ProductCodeList",
          "description": "A list of product codes."
        }
      },
      "description": "Contains the output of DescribeVolumeAttribute."
    },
    "DescribeVolumeStatusRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VolumeIds": {
          "$ref": "#/definitions/VolumeIdStringList",
          "description": "<p>One or more volume IDs.</p> <p>Default: Describes all your volumes.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>action.code</code> - The action code for the event (for example, <code>enable-volume-io</code>).</p> </li> <li> <p> <code>action.description</code> - A description of the action.</p> </li> <li> <p> <code>action.event-id</code> - The event ID associated with the action.</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>event.description</code> - A description of the event.</p> </li> <li> <p> <code>event.event-id</code> - The event ID.</p> </li> <li> <p> <code>event.event-type</code> - The event type (for <code>io-enabled</code>: <code>passed</code> | <code>failed</code>; for <code>io-performance</code>: <code>io-performance:degraded</code> | <code>io-performance:severely-degraded</code> | <code>io-performance:stalled</code>).</p> </li> <li> <p> <code>event.not-after</code> - The latest end time for the event.</p> </li> <li> <p> <code>event.not-before</code> - The earliest start time for the event.</p> </li> <li> <p> <code>volume-status.details-name</code> - The cause for <code>volume-status.status</code> (<code>io-enabled</code> | <code>io-performance</code>).</p> </li> <li> <p> <code>volume-status.details-status</code> - The status of <code>volume-status.details-name</code> (for <code>io-enabled</code>: <code>passed</code> | <code>failed</code>; for <code>io-performance</code>: <code>normal</code> | <code>degraded</code> | <code>severely-degraded</code> | <code>stalled</code>).</p> </li> <li> <p> <code>volume-status.status</code> - The status of the volume (<code>ok</code> | <code>impaired</code> | <code>warning</code> | <code>insufficient-data</code>).</p> </li> </ul>"
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The <code>NextToken</code> value to include in a future <code>DescribeVolumeStatus</code> request. When the results of the request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of volume results returned by <code>DescribeVolumeStatus</code> in paginated output. When this parameter is used, the request only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then <code>DescribeVolumeStatus</code> returns all results. You cannot specify this parameter and the volume IDs parameter in the same request."
        }
      },
      "description": "Contains the parameters for DescribeVolumeStatus."
    },
    "DescribeVolumeStatusResult": {
      "type": "object",
      "properties": {
        "VolumeStatuses": {
          "$ref": "#/definitions/VolumeStatusList",
          "description": "A list of volumes."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeVolumeStatus."
    },
    "DescribeVolumesRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VolumeIds": {
          "$ref": "#/definitions/VolumeIdStringList",
          "description": "One or more volume IDs."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>attachment.attach-time</code> - The time stamp when the attachment initiated.</p> </li> <li> <p> <code>attachment.delete-on-termination</code> - Whether the volume is deleted on instance termination.</p> </li> <li> <p> <code>attachment.device</code> - The device name that is exposed to the instance (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>attachment.instance-id</code> - The ID of the instance the volume is attached to.</p> </li> <li> <p> <code>attachment.status</code> - The attachment state (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone in which the volume was created.</p> </li> <li> <p> <code>create-time</code> - The time stamp when the volume was created.</p> </li> <li> <p> <code>encrypted</code> - The encryption status of the volume.</p> </li> <li> <p> <code>size</code> - The size of the volume, in GiB.</p> </li> <li> <p> <code>snapshot-id</code> - The snapshot from which the volume was created.</p> </li> <li> <p> <code>status</code> - The status of the volume (<code>creating</code> | <code>available</code> | <code>in-use</code> | <code>deleting</code> | <code>deleted</code> | <code>error</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>volume-id</code> - The volume ID.</p> </li> <li> <p> <code>volume-type</code> - The Amazon EBS volume type. This can be <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code> for Cold HDD, or <code>standard</code> for Magnetic volumes.</p> </li> </ul>"
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The <code>NextToken</code> value returned from a previous paginated <code>DescribeVolumes</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of volume results returned by <code>DescribeVolumes</code> in paginated output. When this parameter is used, <code>DescribeVolumes</code> only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeVolumes</code> request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then <code>DescribeVolumes</code> returns all results. You cannot specify this parameter and the volume IDs parameter in the same request."
        }
      },
      "description": "Contains the parameters for DescribeVolumes."
    },
    "DescribeVolumesResult": {
      "type": "object",
      "properties": {
        "Volumes": {
          "$ref": "#/definitions/VolumeList",
          "description": "Information about the volumes."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The <code>NextToken</code> value to include in a future <code>DescribeVolumes</code> request. When the results of a <code>DescribeVolumes</code> request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return."
        }
      },
      "description": "Contains the output of DescribeVolumes."
    },
    "DescribeVpcAttributeRequest": {
      "type": "object",
      "required": [
        "VpcId",
        "Attribute"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        },
        "Attribute": {
          "$ref": "#/definitions/VpcAttributeName",
          "description": "The VPC attribute."
        }
      },
      "description": "Contains the parameters for DescribeVpcAttribute."
    },
    "DescribeVpcAttributeResult": {
      "type": "object",
      "properties": {
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        },
        "EnableDnsSupport": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "Indicates whether DNS resolution is enabled for the VPC. If this attribute is <code>true</code>, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not."
        },
        "EnableDnsHostnames": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "Indicates whether the instances launched in the VPC get DNS hostnames. If this attribute is <code>true</code>, instances in the VPC get DNS hostnames; otherwise, they do not."
        }
      },
      "description": "Contains the output of DescribeVpcAttribute."
    },
    "DescribeVpcClassicLinkDnsSupportRequest": {
      "type": "object",
      "properties": {
        "VpcIds": {
          "$ref": "#/definitions/VpcClassicLinkIdList",
          "description": "One or more VPC IDs."
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token for the next set of items to return. (You received this token from a prior call.)"
        }
      },
      "description": "Contains the parameters for DescribeVpcClassicLinkDnsSupport."
    },
    "DescribeVpcClassicLinkDnsSupportResult": {
      "type": "object",
      "properties": {
        "Vpcs": {
          "$ref": "#/definitions/ClassicLinkDnsSupportList",
          "description": "Information about the ClassicLink DNS support status of the VPCs."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token to use when requesting the next set of items."
        }
      },
      "description": "Contains the output of DescribeVpcClassicLinkDnsSupport."
    },
    "DescribeVpcClassicLinkRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcIds": {
          "$ref": "#/definitions/VpcClassicLinkIdList",
          "description": "One or more VPCs for which you want to describe the ClassicLink status."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>is-classic-link-enabled</code> - Whether the VPC is enabled for ClassicLink (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeVpcClassicLink."
    },
    "DescribeVpcClassicLinkResult": {
      "type": "object",
      "properties": {
        "Vpcs": {
          "$ref": "#/definitions/VpcClassicLinkList",
          "description": "The ClassicLink status of one or more VPCs."
        }
      },
      "description": "Contains the output of DescribeVpcClassicLink."
    },
    "DescribeVpcEndpointServicesRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value is greater than 1000, we return only 1000 items.</p>"
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token for the next set of items to return. (You received this token from a prior call.)"
        }
      },
      "description": "Contains the parameters for DescribeVpcEndpointServices."
    },
    "DescribeVpcEndpointServicesResult": {
      "type": "object",
      "properties": {
        "ServiceNames": {
          "$ref": "#/definitions/ValueStringList",
          "description": "A list of supported AWS services."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty."
        }
      },
      "description": "Contains the output of DescribeVpcEndpointServices."
    },
    "DescribeVpcEndpointsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcEndpointIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "One or more endpoint IDs."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>service-name</code>: The name of the AWS service.</p> </li> <li> <p> <code>vpc-id</code>: The ID of the VPC in which the endpoint resides.</p> </li> <li> <p> <code>vpc-endpoint-id</code>: The ID of the endpoint.</p> </li> <li> <p> <code>vpc-endpoint-state</code>: The state of the endpoint. (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>)</p> </li> </ul>"
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value is greater than 1000, we return only 1000 items.</p>"
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token for the next set of items to return. (You received this token from a prior call.)"
        }
      },
      "description": "Contains the parameters for DescribeVpcEndpoints."
    },
    "DescribeVpcEndpointsResult": {
      "type": "object",
      "properties": {
        "VpcEndpoints": {
          "$ref": "#/definitions/VpcEndpointSet",
          "description": "Information about the endpoints."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "The token to use when requesting the next set of items. If there are no additional items to return, the string is empty."
        }
      },
      "description": "Contains the output of DescribeVpcEndpoints."
    },
    "DescribeVpcPeeringConnectionsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcPeeringConnectionIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "<p>One or more VPC peering connection IDs.</p> <p>Default: Describes all your VPC peering connections.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>accepter-vpc-info.cidr-block</code> - The CIDR block of the peer VPC.</p> </li> <li> <p> <code>accepter-vpc-info.owner-id</code> - The AWS account ID of the owner of the peer VPC.</p> </li> <li> <p> <code>accepter-vpc-info.vpc-id</code> - The ID of the peer VPC.</p> </li> <li> <p> <code>expiration-time</code> - The expiration date and time for the VPC peering connection.</p> </li> <li> <p> <code>requester-vpc-info.cidr-block</code> - The CIDR block of the requester's VPC.</p> </li> <li> <p> <code>requester-vpc-info.owner-id</code> - The AWS account ID of the owner of the requester VPC.</p> </li> <li> <p> <code>requester-vpc-info.vpc-id</code> - The ID of the requester VPC.</p> </li> <li> <p> <code>status-code</code> - The status of the VPC peering connection (<code>pending-acceptance</code> | <code>failed</code> | <code>expired</code> | <code>provisioning</code> | <code>active</code> | <code>deleted</code> | <code>rejected</code>).</p> </li> <li> <p> <code>status-message</code> - A message that provides more information about the status of the VPC peering connection, if applicable.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-peering-connection-id</code> - The ID of the VPC peering connection.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeVpcPeeringConnections."
    },
    "DescribeVpcPeeringConnectionsResult": {
      "type": "object",
      "properties": {
        "VpcPeeringConnections": {
          "$ref": "#/definitions/VpcPeeringConnectionList",
          "description": "Information about the VPC peering connections."
        }
      },
      "description": "Contains the output of DescribeVpcPeeringConnections."
    },
    "DescribeVpcsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcIds": {
          "$ref": "#/definitions/VpcIdStringList",
          "description": "<p>One or more VPC IDs.</p> <p>Default: Describes all your VPCs.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>cidr</code> - The CIDR block of the VPC. The CIDR block you specify must exactly match the VPC's CIDR block for information to be returned for the VPC. Must contain the slash followed by one or two digits (for example, <code>/28</code>).</p> </li> <li> <p> <code>dhcp-options-id</code> - The ID of a set of DHCP options.</p> </li> <li> <p> <code>isDefault</code> - Indicates whether the VPC is the default VPC.</p> </li> <li> <p> <code>state</code> - The state of the VPC (<code>pending</code> | <code>available</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeVpcs."
    },
    "DescribeVpcsResult": {
      "type": "object",
      "properties": {
        "Vpcs": {
          "$ref": "#/definitions/VpcList",
          "description": "Information about one or more VPCs."
        }
      },
      "description": "Contains the output of DescribeVpcs."
    },
    "DescribeVpnConnectionsRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpnConnectionIds": {
          "$ref": "#/definitions/VpnConnectionIdStringList",
          "description": "<p>One or more VPN connection IDs.</p> <p>Default: Describes your VPN connections.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>customer-gateway-configuration</code> - The configuration information for the customer gateway.</p> </li> <li> <p> <code>customer-gateway-id</code> - The ID of a customer gateway associated with the VPN connection.</p> </li> <li> <p> <code>state</code> - The state of the VPN connection (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>option.static-routes-only</code> - Indicates whether the connection has static routes only. Used for devices that do not support Border Gateway Protocol (BGP).</p> </li> <li> <p> <code>route.destination-cidr-block</code> - The destination CIDR block. This corresponds to the subnet used in a customer data center.</p> </li> <li> <p> <code>bgp-asn</code> - The BGP Autonomous System Number (ASN) associated with a BGP device.</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>type</code> - The type of VPN connection. Currently the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>vpn-connection-id</code> - The ID of the VPN connection.</p> </li> <li> <p> <code>vpn-gateway-id</code> - The ID of a virtual private gateway associated with the VPN connection.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeVpnConnections."
    },
    "DescribeVpnConnectionsResult": {
      "type": "object",
      "properties": {
        "VpnConnections": {
          "$ref": "#/definitions/VpnConnectionList",
          "description": "Information about one or more VPN connections."
        }
      },
      "description": "Contains the output of DescribeVpnConnections."
    },
    "DescribeVpnGatewaysRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpnGatewayIds": {
          "$ref": "#/definitions/VpnGatewayIdStringList",
          "description": "<p>One or more virtual private gateway IDs.</p> <p>Default: Describes all your virtual private gateways.</p>"
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>One or more filters.</p> <ul> <li> <p> <code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>attachment.vpc-id</code> - The ID of an attached VPC.</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone for the virtual private gateway (if applicable).</p> </li> <li> <p> <code>state</code> - The state of the virtual private gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>tag</code>:<i>key</i>=<i>value</i> - The key/value combination of a tag assigned to the resource.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. This filter is independent of the <code>tag-value</code> filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the <code>tag</code>:<i>key</i>=<i>value</i> filter.</p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the resource. This filter is independent of the <code>tag-key</code> filter.</p> </li> <li> <p> <code>type</code> - The type of virtual private gateway. Currently the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>vpn-gateway-id</code> - The ID of the virtual private gateway.</p> </li> </ul>"
        }
      },
      "description": "Contains the parameters for DescribeVpnGateways."
    },
    "DescribeVpnGatewaysResult": {
      "type": "object",
      "properties": {
        "VpnGateways": {
          "$ref": "#/definitions/VpnGatewayList",
          "description": "Information about one or more virtual private gateways."
        }
      },
      "description": "Contains the output of DescribeVpnGateways."
    },
    "DetachClassicLinkVpcRequest": {
      "type": "object",
      "required": [
        "InstanceId",
        "VpcId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance to unlink from the VPC."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC to which the instance is linked."
        }
      },
      "description": "Contains the parameters for DetachClassicLinkVpc."
    },
    "DetachClassicLinkVpcResult": {
      "type": "object",
      "properties": {
        "Return": {
          "$ref": "#/definitions/Boolean",
          "description": "Returns <code>true</code> if the request succeeds; otherwise, it returns an error."
        }
      },
      "description": "Contains the output of DetachClassicLinkVpc."
    },
    "DetachInternetGatewayRequest": {
      "type": "object",
      "required": [
        "InternetGatewayId",
        "VpcId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InternetGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Internet gateway."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        }
      },
      "description": "Contains the parameters for DetachInternetGateway."
    },
    "DetachNetworkInterfaceRequest": {
      "type": "object",
      "required": [
        "AttachmentId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "AttachmentId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the attachment."
        },
        "Force": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies whether to force a detachment."
        }
      },
      "description": "Contains the parameters for DetachNetworkInterface."
    },
    "DetachVolumeRequest": {
      "type": "object",
      "required": [
        "VolumeId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VolumeId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the volume."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "Device": {
          "$ref": "#/definitions/String",
          "description": "The device name."
        },
        "Force": {
          "$ref": "#/definitions/Boolean",
          "description": "Forces detachment if the previous detachment attempt did not occur cleanly (for example, logging into an instance, unmounting the volume, and detaching normally). This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance. The instance won't have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures."
        }
      },
      "description": "Contains the parameters for DetachVolume."
    },
    "DetachVpnGatewayRequest": {
      "type": "object",
      "required": [
        "VpnGatewayId",
        "VpcId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpnGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the virtual private gateway."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        }
      },
      "description": "Contains the parameters for DetachVpnGateway."
    },
    "DeviceType": {
      "type": "string",
      "enum": [
        "ebs",
        "instance-store"
      ]
    },
    "DhcpConfiguration": {
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/String",
          "description": "The name of a DHCP option."
        },
        "Values": {
          "$ref": "#/definitions/DhcpConfigurationValueList",
          "description": "One or more values for the DHCP option."
        }
      },
      "description": "Describes a DHCP configuration option."
    },
    "DhcpConfigurationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DhcpConfiguration"
      }
    },
    "DhcpConfigurationValueList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AttributeValue"
      }
    },
    "DhcpOptions": {
      "type": "object",
      "properties": {
        "DhcpOptionsId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the set of DHCP options."
        },
        "DhcpConfigurations": {
          "$ref": "#/definitions/DhcpConfigurationList",
          "description": "One or more DHCP options in the set."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the DHCP options set."
        }
      },
      "description": "Describes a set of DHCP options."
    },
    "DhcpOptionsIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "DhcpOptionsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DhcpOptions"
      }
    },
    "DisableVgwRoutePropagationRequest": {
      "type": "object",
      "required": [
        "RouteTableId",
        "GatewayId"
      ],
      "properties": {
        "RouteTableId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the route table."
        },
        "GatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the virtual private gateway."
        }
      },
      "description": "Contains the parameters for DisableVgwRoutePropagation."
    },
    "DisableVpcClassicLinkDnsSupportRequest": {
      "type": "object",
      "properties": {
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        }
      },
      "description": "Contains the parameters for DisableVpcClassicLinkDnsSupport."
    },
    "DisableVpcClassicLinkDnsSupportResult": {
      "type": "object",
      "properties": {
        "Return": {
          "$ref": "#/definitions/Boolean",
          "description": "Returns <code>true</code> if the request succeeds; otherwise, it returns an error."
        }
      },
      "description": "Contains the output of DisableVpcClassicLinkDnsSupport."
    },
    "DisableVpcClassicLinkRequest": {
      "type": "object",
      "required": [
        "VpcId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        }
      },
      "description": "Contains the parameters for DisableVpcClassicLink."
    },
    "DisableVpcClassicLinkResult": {
      "type": "object",
      "properties": {
        "Return": {
          "$ref": "#/definitions/Boolean",
          "description": "Returns <code>true</code> if the request succeeds; otherwise, it returns an error."
        }
      },
      "description": "Contains the output of DisableVpcClassicLink."
    },
    "DisassociateAddressRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "PublicIp": {
          "$ref": "#/definitions/String",
          "description": "[EC2-Classic] The Elastic IP address. Required for EC2-Classic."
        },
        "AssociationId": {
          "$ref": "#/definitions/String",
          "description": "[EC2-VPC] The association ID. Required for EC2-VPC."
        }
      },
      "description": "Contains the parameters for DisassociateAddress."
    },
    "DisassociateRouteTableRequest": {
      "type": "object",
      "required": [
        "AssociationId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "AssociationId": {
          "$ref": "#/definitions/String",
          "description": "The association ID representing the current association between the route table and subnet."
        }
      },
      "description": "Contains the parameters for DisassociateRouteTable."
    },
    "DiskImage": {
      "type": "object",
      "properties": {
        "Image": {
          "$ref": "#/definitions/DiskImageDetail",
          "description": "Information about the disk image."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description of the disk image."
        },
        "Volume": {
          "$ref": "#/definitions/VolumeDetail",
          "description": "Information about the volume."
        }
      },
      "description": "Describes a disk image."
    },
    "DiskImageDescription": {
      "type": "object",
      "required": [
        "Format",
        "Size",
        "ImportManifestUrl"
      ],
      "properties": {
        "Format": {
          "$ref": "#/definitions/DiskImageFormat",
          "description": "The disk image format."
        },
        "Size": {
          "$ref": "#/definitions/Long",
          "description": "The size of the disk image, in GiB."
        },
        "ImportManifestUrl": {
          "$ref": "#/definitions/String",
          "description": "<p>A presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the \"Query String Request Authentication Alternative\" section of the <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html\">Authenticating REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.</p> <p>For information about the import manifest referenced by this API action, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html\">VM Import Manifest</a>.</p>"
        },
        "Checksum": {
          "$ref": "#/definitions/String",
          "description": "The checksum computed for the disk image."
        }
      },
      "description": "Describes a disk image."
    },
    "DiskImageDetail": {
      "type": "object",
      "required": [
        "Format",
        "Bytes",
        "ImportManifestUrl"
      ],
      "properties": {
        "Format": {
          "$ref": "#/definitions/DiskImageFormat",
          "description": "The disk image format."
        },
        "Bytes": {
          "$ref": "#/definitions/Long",
          "description": "The size of the disk image, in GiB."
        },
        "ImportManifestUrl": {
          "$ref": "#/definitions/String",
          "description": "<p>A presigned URL for the import manifest stored in Amazon S3 and presented here as an Amazon S3 presigned URL. For information about creating a presigned URL for an Amazon S3 object, read the \"Query String Request Authentication Alternative\" section of the <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html\">Authenticating REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.</p> <p>For information about the import manifest referenced by this API action, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html\">VM Import Manifest</a>.</p>"
        }
      },
      "description": "Describes a disk image."
    },
    "DiskImageFormat": {
      "type": "string",
      "enum": [
        "VMDK",
        "RAW",
        "VHD"
      ]
    },
    "DiskImageList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DiskImage"
      }
    },
    "DiskImageVolumeDescription": {
      "type": "object",
      "required": [
        "Id"
      ],
      "properties": {
        "Size": {
          "$ref": "#/definitions/Long",
          "description": "The size of the volume, in GiB."
        },
        "Id": {
          "$ref": "#/definitions/String",
          "description": "The volume identifier."
        }
      },
      "description": "Describes a disk image volume."
    },
    "DomainType": {
      "type": "string",
      "enum": [
        "vpc",
        "standard"
      ]
    },
    "Double": {
      "type": "number",
      "format": "double"
    },
    "EbsBlockDevice": {
      "type": "object",
      "properties": {
        "SnapshotId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the snapshot."
        },
        "VolumeSize": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The size of the volume, in GiB.</p> <p>Constraints: 1-16384 for General Purpose SSD (<code>gp2</code>), 4-16384 for Provisioned IOPS SSD (<code>io1</code>), 500-16384 for Throughput Optimized HDD (<code>st1</code>), 500-16384 for Cold HDD (<code>sc1</code>), and 1-1024 for Magnetic (<code>standard</code>) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.</p> <p>Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.</p>"
        },
        "DeleteOnTermination": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the EBS volume is deleted on instance termination."
        },
        "VolumeType": {
          "$ref": "#/definitions/VolumeType",
          "description": "<p>The volume type: <code>gp2</code>, <code>io1</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code>.</p> <p>Default: <code>standard</code> </p>"
        },
        "Iops": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The number of I/O operations per second (IOPS) that the volume supports. For <code>io1</code>, this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code>, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information about General Purpose SSD baseline performance, I/O credits, and bursting, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\">Amazon EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Constraint: Range is 100-20000 IOPS for <code>io1</code> volumes and 100-10000 IOPS for <code>gp2</code> volumes.</p> <p>Condition: This parameter is required for requests to create <code>io1</code> volumes; it is not used in requests to create <code>gp2</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code> volumes.</p>"
        },
        "Encrypted": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the EBS volume is encrypted. Encrypted Amazon EBS volumes may only be attached to instances that support Amazon EBS encryption."
        }
      },
      "description": "Describes a block device for an EBS volume."
    },
    "EbsInstanceBlockDevice": {
      "type": "object",
      "properties": {
        "VolumeId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the EBS volume."
        },
        "Status": {
          "$ref": "#/definitions/AttachmentStatus",
          "description": "The attachment state."
        },
        "AttachTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The time stamp when the attachment initiated."
        },
        "DeleteOnTermination": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the volume is deleted on instance termination."
        }
      },
      "description": "Describes a parameter used to set up an EBS volume in a block device mapping."
    },
    "EbsInstanceBlockDeviceSpecification": {
      "type": "object",
      "properties": {
        "VolumeId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the EBS volume."
        },
        "DeleteOnTermination": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the volume is deleted on instance termination."
        }
      },
      "description": "Describes information used to set up an EBS volume specified in a block device mapping."
    },
    "EnableVgwRoutePropagationRequest": {
      "type": "object",
      "required": [
        "RouteTableId",
        "GatewayId"
      ],
      "properties": {
        "RouteTableId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the route table."
        },
        "GatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the virtual private gateway."
        }
      },
      "description": "Contains the parameters for EnableVgwRoutePropagation."
    },
    "EnableVolumeIORequest": {
      "type": "object",
      "required": [
        "VolumeId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VolumeId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the volume."
        }
      },
      "description": "Contains the parameters for EnableVolumeIO."
    },
    "EnableVpcClassicLinkDnsSupportRequest": {
      "type": "object",
      "properties": {
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        }
      },
      "description": "Contains the parameters for EnableVpcClassicLinkDnsSupport."
    },
    "EnableVpcClassicLinkDnsSupportResult": {
      "type": "object",
      "properties": {
        "Return": {
          "$ref": "#/definitions/Boolean",
          "description": "Returns <code>true</code> if the request succeeds; otherwise, it returns an error."
        }
      },
      "description": "Contains the output of EnableVpcClassicLinkDnsSupport."
    },
    "EnableVpcClassicLinkRequest": {
      "type": "object",
      "required": [
        "VpcId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        }
      },
      "description": "Contains the parameters for EnableVpcClassicLink."
    },
    "EnableVpcClassicLinkResult": {
      "type": "object",
      "properties": {
        "Return": {
          "$ref": "#/definitions/Boolean",
          "description": "Returns <code>true</code> if the request succeeds; otherwise, it returns an error."
        }
      },
      "description": "Contains the output of EnableVpcClassicLink."
    },
    "EventCode": {
      "type": "string",
      "enum": [
        "instance-reboot",
        "system-reboot",
        "system-maintenance",
        "instance-retirement",
        "instance-stop"
      ]
    },
    "EventInformation": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance. This information is available only for <code>instanceChange</code> events."
        },
        "EventSubType": {
          "$ref": "#/definitions/String",
          "description": "<p>The event.</p> <p>The following are the <code>error</code> events.</p> <ul> <li> <p> <code>iamFleetRoleInvalid</code> - The Spot fleet did not have the required permissions either to launch or terminate an instance.</p> </li> <li> <p> <code>launchSpecTemporarilyBlacklisted</code> - The configuration is not valid and several attempts to launch instances have failed. For more information, see the description of the event.</p> </li> <li> <p> <code>spotFleetRequestConfigurationInvalid</code> - The configuration is not valid. For more information, see the description of the event.</p> </li> <li> <p> <code>spotInstanceCountLimitExceeded</code> - You've reached the limit on the number of Spot instances that you can launch.</p> </li> </ul> <p>The following are the <code>fleetRequestChange</code> events.</p> <ul> <li> <p> <code>active</code> - The Spot fleet has been validated and Amazon EC2 is attempting to maintain the target number of running Spot instances.</p> </li> <li> <p> <code>cancelled</code> - The Spot fleet is canceled and has no running Spot instances. The Spot fleet will be deleted two days after its instances were terminated.</p> </li> <li> <p> <code>cancelled_running</code> - The Spot fleet is canceled and will not launch additional Spot instances, but its existing Spot instances continue to run until they are interrupted or terminated.</p> </li> <li> <p> <code>cancelled_terminating</code> - The Spot fleet is canceled and its Spot instances are terminating.</p> </li> <li> <p> <code>expired</code> - The Spot fleet request has expired. A subsequent event indicates that the instances were terminated, if the request was created with <code>TerminateInstancesWithExpiration</code> set.</p> </li> <li> <p> <code>modify_in_progress</code> - A request to modify the Spot fleet request was accepted and is in progress.</p> </li> <li> <p> <code>modify_successful</code> - The Spot fleet request was modified.</p> </li> <li> <p> <code>price_update</code> - The bid price for a launch configuration was adjusted because it was too high. This change is permanent.</p> </li> <li> <p> <code>submitted</code> - The Spot fleet request is being evaluated and Amazon EC2 is preparing to launch the target number of Spot instances.</p> </li> </ul> <p>The following are the <code>instanceChange</code> events.</p> <ul> <li> <p> <code>launched</code> - A bid was fulfilled and a new instance was launched.</p> </li> <li> <p> <code>terminated</code> - An instance was terminated by the user.</p> </li> </ul>"
        },
        "EventDescription": {
          "$ref": "#/definitions/String",
          "description": "The description of the event."
        }
      },
      "description": "Describes a Spot fleet event."
    },
    "EventType": {
      "type": "string",
      "enum": [
        "instanceChange",
        "fleetRequestChange",
        "error"
      ]
    },
    "ExcessCapacityTerminationPolicy": {
      "type": "string",
      "enum": [
        "noTermination",
        "default"
      ]
    },
    "ExecutableByStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "ExportEnvironment": {
      "type": "string",
      "enum": [
        "citrix",
        "vmware",
        "microsoft"
      ]
    },
    "ExportTask": {
      "type": "object",
      "properties": {
        "ExportTaskId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the export task."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description of the resource being exported."
        },
        "State": {
          "$ref": "#/definitions/ExportTaskState",
          "description": "The state of the export task."
        },
        "StatusMessage": {
          "$ref": "#/definitions/String",
          "description": "The status message related to the export task."
        },
        "InstanceExportDetails": {
          "$ref": "#/definitions/InstanceExportDetails",
          "description": "Information about the instance to export."
        },
        "ExportToS3Task": {
          "$ref": "#/definitions/ExportToS3Task",
          "description": "Information about the export task."
        }
      },
      "description": "Describes an instance export task."
    },
    "ExportTaskIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "ExportTaskList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ExportTask"
      }
    },
    "ExportTaskState": {
      "type": "string",
      "enum": [
        "active",
        "cancelling",
        "cancelled",
        "completed"
      ]
    },
    "ExportToS3Task": {
      "type": "object",
      "properties": {
        "DiskImageFormat": {
          "$ref": "#/definitions/DiskImageFormat",
          "description": "The format for the exported image."
        },
        "ContainerFormat": {
          "$ref": "#/definitions/ContainerFormat",
          "description": "The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported."
        },
        "S3Bucket": {
          "$ref": "#/definitions/String",
          "description": "The S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the AWS account <code>vm-import-export@amazon.com</code>."
        },
        "S3Key": {
          "$ref": "#/definitions/String",
          "description": "The encryption key for your S3 bucket."
        }
      },
      "description": "Describes the format and location for an instance export task."
    },
    "ExportToS3TaskSpecification": {
      "type": "object",
      "properties": {
        "DiskImageFormat": {
          "$ref": "#/definitions/DiskImageFormat",
          "description": "The format for the exported image."
        },
        "ContainerFormat": {
          "$ref": "#/definitions/ContainerFormat",
          "description": "The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported."
        },
        "S3Bucket": {
          "$ref": "#/definitions/String",
          "description": "The S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the AWS account <code>vm-import-export@amazon.com</code>."
        },
        "S3Prefix": {
          "$ref": "#/definitions/String",
          "description": "The image is written to a single object in the S3 bucket at the S3 key s3prefix + exportTaskId + '.' + diskImageFormat."
        }
      },
      "description": "Describes an instance export task."
    },
    "Filter": {
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/String",
          "description": "The name of the filter. Filter names are case-sensitive."
        },
        "Values": {
          "$ref": "#/definitions/ValueStringList",
          "description": "One or more filter values. Filter values are case-sensitive."
        }
      },
      "description": "A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria, such as tags, attributes, or IDs."
    },
    "FilterList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Filter"
      }
    },
    "FleetType": {
      "type": "string",
      "enum": [
        "request",
        "maintain"
      ]
    },
    "Float": {
      "type": "number",
      "format": "float"
    },
    "FlowLog": {
      "type": "object",
      "properties": {
        "CreationTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time the flow log was created."
        },
        "FlowLogId": {
          "$ref": "#/definitions/String",
          "description": "The flow log ID."
        },
        "FlowLogStatus": {
          "$ref": "#/definitions/String",
          "description": "The status of the flow log (<code>ACTIVE</code>)."
        },
        "ResourceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the resource on which the flow log was created."
        },
        "TrafficType": {
          "$ref": "#/definitions/TrafficType",
          "description": "The type of traffic captured for the flow log."
        },
        "LogGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the flow log group."
        },
        "DeliverLogsStatus": {
          "$ref": "#/definitions/String",
          "description": "The status of the logs delivery (<code>SUCCESS</code> | <code>FAILED</code>)."
        },
        "DeliverLogsErrorMessage": {
          "$ref": "#/definitions/String",
          "description": "Information about the error that occurred. <code>Rate limited</code> indicates that CloudWatch logs throttling has been applied for one or more network interfaces, or that you've reached the limit on the number of CloudWatch Logs log groups that you can create. <code>Access error</code> indicates that the IAM role associated with the flow log does not have sufficient permissions to publish to CloudWatch Logs. <code>Unknown error</code> indicates an internal error."
        },
        "DeliverLogsPermissionArn": {
          "$ref": "#/definitions/String",
          "description": "The ARN of the IAM role that posts logs to CloudWatch Logs."
        }
      },
      "description": "Describes a flow log."
    },
    "FlowLogSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/FlowLog"
      }
    },
    "FlowLogsResourceType": {
      "type": "string",
      "enum": [
        "VPC",
        "Subnet",
        "NetworkInterface"
      ]
    },
    "GatewayType": {
      "type": "string",
      "enum": [
        "ipsec.1"
      ]
    },
    "GetConsoleOutputRequest": {
      "type": "object",
      "required": [
        "InstanceId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        }
      },
      "description": "Contains the parameters for GetConsoleOutput."
    },
    "GetConsoleOutputResult": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "Timestamp": {
          "$ref": "#/definitions/DateTime",
          "description": "The time the output was last updated."
        },
        "Output": {
          "$ref": "#/definitions/String",
          "description": "The console output, Base64-encoded. If using a command line tool, the tool decodes the output for you."
        }
      },
      "description": "Contains the output of GetConsoleOutput."
    },
    "GetConsoleScreenshotRequest": {
      "type": "object",
      "required": [
        "InstanceId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "WakeUp": {
          "$ref": "#/definitions/Boolean",
          "description": "When set to <code>true</code>, acts as keystroke input and wakes up an instance that's in standby or \"sleep\" mode."
        }
      },
      "description": "Contains the parameters for the request."
    },
    "GetConsoleScreenshotResult": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "ImageData": {
          "$ref": "#/definitions/String",
          "description": "The data that comprises the image."
        }
      },
      "description": "Contains the output of the request."
    },
    "GetHostReservationPurchasePreviewRequest": {
      "type": "object",
      "required": [
        "OfferingId",
        "HostIdSet"
      ],
      "properties": {
        "OfferingId": {
          "$ref": "#/definitions/String",
          "description": "The offering ID of the reservation."
        },
        "HostIdSet": {
          "$ref": "#/definitions/RequestHostIdSet",
          "description": "The ID/s of the Dedicated Host/s that the reservation will be associated with."
        }
      }
    },
    "GetHostReservationPurchasePreviewResult": {
      "type": "object",
      "properties": {
        "Purchase": {
          "$ref": "#/definitions/PurchaseSet",
          "description": "The purchase information of the Dedicated Host Reservation and the Dedicated Hosts associated with it."
        },
        "TotalUpfrontPrice": {
          "$ref": "#/definitions/String",
          "description": "The potential total upfront price. This is billed immediately."
        },
        "TotalHourlyPrice": {
          "$ref": "#/definitions/String",
          "description": "The potential total hourly price of the reservation per hour."
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCodeValues",
          "description": "The currency in which the <code>totalUpfrontPrice</code> and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>."
        }
      }
    },
    "GetPasswordDataRequest": {
      "type": "object",
      "required": [
        "InstanceId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Windows instance."
        }
      },
      "description": "Contains the parameters for GetPasswordData."
    },
    "GetPasswordDataResult": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Windows instance."
        },
        "Timestamp": {
          "$ref": "#/definitions/DateTime",
          "description": "The time the data was last updated."
        },
        "PasswordData": {
          "$ref": "#/definitions/String",
          "description": "The password of the instance."
        }
      },
      "description": "Contains the output of GetPasswordData."
    },
    "GroupIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "GroupIdentifier": {
      "type": "object",
      "properties": {
        "GroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the security group."
        },
        "GroupId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the security group."
        }
      },
      "description": "Describes a security group."
    },
    "GroupIdentifierList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/GroupIdentifier"
      }
    },
    "GroupIds": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "GroupNameStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "HistoryRecord": {
      "type": "object",
      "required": [
        "Timestamp",
        "EventType",
        "EventInformation"
      ],
      "properties": {
        "Timestamp": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time of the event, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z)."
        },
        "EventType": {
          "$ref": "#/definitions/EventType",
          "description": "<p>The event type.</p> <ul> <li> <p> <code>error</code> - Indicates an error with the Spot fleet request.</p> </li> <li> <p> <code>fleetRequestChange</code> - Indicates a change in the status or configuration of the Spot fleet request.</p> </li> <li> <p> <code>instanceChange</code> - Indicates that an instance was launched or terminated.</p> </li> </ul>"
        },
        "EventInformation": {
          "$ref": "#/definitions/EventInformation",
          "description": "Information about the event."
        }
      },
      "description": "Describes an event in the history of the Spot fleet request."
    },
    "HistoryRecords": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/HistoryRecord"
      }
    },
    "Host": {
      "type": "object",
      "properties": {
        "HostId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Dedicated Host."
        },
        "AutoPlacement": {
          "$ref": "#/definitions/AutoPlacement",
          "description": "Whether auto-placement is on or off."
        },
        "HostReservationId": {
          "$ref": "#/definitions/String",
          "description": "The reservation ID of the Dedicated Host. This returns a <code>null</code> response if the Dedicated Host doesn't have an associated reservation."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. "
        },
        "HostProperties": {
          "$ref": "#/definitions/HostProperties",
          "description": "The hardware specifications of the Dedicated Host."
        },
        "State": {
          "$ref": "#/definitions/AllocationState",
          "description": "The Dedicated Host's state."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone of the Dedicated Host."
        },
        "Instances": {
          "$ref": "#/definitions/HostInstanceList",
          "description": "The IDs and instance type that are currently running on the Dedicated Host."
        },
        "AvailableCapacity": {
          "$ref": "#/definitions/AvailableCapacity",
          "description": "The number of new instances that can be launched onto the Dedicated Host."
        }
      },
      "description": "Describes the properties of the Dedicated Host."
    },
    "HostInstance": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "the IDs of instances that are running on the Dedicated Host."
        },
        "InstanceType": {
          "$ref": "#/definitions/String",
          "description": "The instance type size (for example, <code>m3.medium</code>) of the running instance."
        }
      },
      "description": "Describes an instance running on a Dedicated Host."
    },
    "HostInstanceList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/HostInstance"
      }
    },
    "HostList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Host"
      }
    },
    "HostOffering": {
      "type": "object",
      "properties": {
        "OfferingId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the offering."
        },
        "InstanceFamily": {
          "$ref": "#/definitions/String",
          "description": "The instance family of the offering."
        },
        "PaymentOption": {
          "$ref": "#/definitions/PaymentOption",
          "description": "The available payment option."
        },
        "UpfrontPrice": {
          "$ref": "#/definitions/String",
          "description": "The upfront price of the offering. Does not apply to No Upfront offerings."
        },
        "HourlyPrice": {
          "$ref": "#/definitions/String",
          "description": "The hourly price of the offering."
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCodeValues",
          "description": "The currency of the offering."
        },
        "Duration": {
          "$ref": "#/definitions/Integer",
          "description": "The duration of the offering (in seconds)."
        }
      },
      "description": "Details about the Dedicated Host Reservation offering."
    },
    "HostOfferingSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/HostOffering"
      }
    },
    "HostProperties": {
      "type": "object",
      "properties": {
        "Sockets": {
          "$ref": "#/definitions/Integer",
          "description": "The number of sockets on the Dedicated Host."
        },
        "Cores": {
          "$ref": "#/definitions/Integer",
          "description": "The number of cores on the Dedicated Host."
        },
        "TotalVCpus": {
          "$ref": "#/definitions/Integer",
          "description": "The number of vCPUs on the Dedicated Host."
        },
        "InstanceType": {
          "$ref": "#/definitions/String",
          "description": "The instance type size that the Dedicated Host supports (for example, <code>m3.medium</code>)."
        }
      },
      "description": "Describes properties of a Dedicated Host."
    },
    "HostReservation": {
      "type": "object",
      "properties": {
        "HostReservationId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the reservation that specifies the associated Dedicated Hosts."
        },
        "HostIdSet": {
          "$ref": "#/definitions/ResponseHostIdSet",
          "description": "The IDs of the Dedicated Hosts associated with the reservation."
        },
        "OfferingId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the reservation. This remains the same regardless of which Dedicated Hosts are associated with it."
        },
        "InstanceFamily": {
          "$ref": "#/definitions/String",
          "description": "The instance family of the Dedicated Host Reservation. The instance family on the Dedicated Host must be the same in order for it to benefit from the reservation."
        },
        "PaymentOption": {
          "$ref": "#/definitions/PaymentOption",
          "description": "The payment option selected for this reservation."
        },
        "HourlyPrice": {
          "$ref": "#/definitions/String",
          "description": "The hourly price of the reservation."
        },
        "UpfrontPrice": {
          "$ref": "#/definitions/String",
          "description": "The upfront price of the reservation."
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCodeValues",
          "description": "The currency in which the <code>upfrontPrice</code> and <code>hourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>."
        },
        "Count": {
          "$ref": "#/definitions/Integer",
          "description": "The number of Dedicated Hosts the reservation is associated with."
        },
        "Duration": {
          "$ref": "#/definitions/Integer",
          "description": "The length of the reservation's term, specified in seconds. Can be <code>31536000 (1 year)</code> | <code>94608000 (3 years)</code>."
        },
        "End": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time that the reservation ends."
        },
        "Start": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time that the reservation started."
        },
        "State": {
          "$ref": "#/definitions/ReservationState",
          "description": "The state of the reservation."
        }
      },
      "description": "Details about the Dedicated Host Reservation and associated Dedicated Hosts."
    },
    "HostReservationIdSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "HostReservationSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/HostReservation"
      }
    },
    "HostTenancy": {
      "type": "string",
      "enum": [
        "dedicated",
        "host"
      ]
    },
    "HypervisorType": {
      "type": "string",
      "enum": [
        "ovm",
        "xen"
      ]
    },
    "IamInstanceProfile": {
      "type": "object",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the instance profile."
        },
        "Id": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance profile."
        }
      },
      "description": "Describes an IAM instance profile."
    },
    "IamInstanceProfileSpecification": {
      "type": "object",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the instance profile."
        },
        "Name": {
          "$ref": "#/definitions/String",
          "description": "The name of the instance profile."
        }
      },
      "description": "Describes an IAM instance profile."
    },
    "IcmpTypeCode": {
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/Integer",
          "description": "The ICMP code. A value of -1 means all codes for the specified ICMP type."
        },
        "Code": {
          "$ref": "#/definitions/Integer",
          "description": "The ICMP type. A value of -1 means all types."
        }
      },
      "description": "Describes the ICMP type and code."
    },
    "IdFormat": {
      "type": "object",
      "properties": {
        "Resource": {
          "$ref": "#/definitions/String",
          "description": "The type of resource."
        },
        "UseLongIds": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether longer IDs (17-character IDs) are enabled for the resource."
        },
        "Deadline": {
          "$ref": "#/definitions/DateTime",
          "description": "The date in UTC at which you are permanently switched over to using longer IDs. If a deadline is not yet available for this resource type, this field is not returned."
        }
      },
      "description": "Describes the ID format for a resource."
    },
    "IdFormatList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/IdFormat"
      }
    },
    "Image": {
      "type": "object",
      "properties": {
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the AMI."
        },
        "ImageLocation": {
          "$ref": "#/definitions/String",
          "description": "The location of the AMI."
        },
        "State": {
          "$ref": "#/definitions/ImageState",
          "description": "The current state of the AMI. If the state is <code>available</code>, the image is successfully registered and can be used to launch an instance."
        },
        "OwnerId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account ID of the image owner."
        },
        "CreationDate": {
          "$ref": "#/definitions/String",
          "description": "The date and time the image was created."
        },
        "Public": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the image has public launch permissions. The value is <code>true</code> if this image has public launch permissions or <code>false</code> if it has only implicit and explicit launch permissions."
        },
        "ProductCodes": {
          "$ref": "#/definitions/ProductCodeList",
          "description": "Any product codes associated with the AMI."
        },
        "Architecture": {
          "$ref": "#/definitions/ArchitectureValues",
          "description": "The architecture of the image."
        },
        "ImageType": {
          "$ref": "#/definitions/ImageTypeValues",
          "description": "The type of image."
        },
        "KernelId": {
          "$ref": "#/definitions/String",
          "description": "The kernel associated with the image, if any. Only applicable for machine images."
        },
        "RamdiskId": {
          "$ref": "#/definitions/String",
          "description": "The RAM disk associated with the image, if any. Only applicable for machine images."
        },
        "Platform": {
          "$ref": "#/definitions/PlatformValues",
          "description": "The value is <code>Windows</code> for Windows AMIs; otherwise blank."
        },
        "SriovNetSupport": {
          "$ref": "#/definitions/String",
          "description": "Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled."
        },
        "EnaSupport": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies whether enhanced networking with ENA is enabled."
        },
        "StateReason": {
          "$ref": "#/definitions/StateReason",
          "description": "The reason for the state change."
        },
        "ImageOwnerAlias": {
          "$ref": "#/definitions/String",
          "description": "The AWS account alias (for example, <code>amazon</code>, <code>self</code>) or the AWS account ID of the AMI owner."
        },
        "Name": {
          "$ref": "#/definitions/String",
          "description": "The name of the AMI that was provided during image creation."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description of the AMI that was provided during image creation."
        },
        "RootDeviceType": {
          "$ref": "#/definitions/DeviceType",
          "description": "The type of root device used by the AMI. The AMI can use an EBS volume or an instance store volume."
        },
        "RootDeviceName": {
          "$ref": "#/definitions/String",
          "description": "The device name of the root device (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>)."
        },
        "BlockDeviceMappings": {
          "$ref": "#/definitions/BlockDeviceMappingList",
          "description": "Any block device mapping entries."
        },
        "VirtualizationType": {
          "$ref": "#/definitions/VirtualizationType",
          "description": "The type of virtualization of the AMI."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the image."
        },
        "Hypervisor": {
          "$ref": "#/definitions/HypervisorType",
          "description": "The hypervisor type of the image."
        }
      },
      "description": "Describes an image."
    },
    "ImageAttribute": {
      "type": "object",
      "properties": {
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the AMI."
        },
        "LaunchPermissions": {
          "$ref": "#/definitions/LaunchPermissionList",
          "description": "One or more launch permissions."
        },
        "ProductCodes": {
          "$ref": "#/definitions/ProductCodeList",
          "description": "One or more product codes."
        },
        "KernelId": {
          "$ref": "#/definitions/AttributeValue",
          "description": "The kernel ID."
        },
        "RamdiskId": {
          "$ref": "#/definitions/AttributeValue",
          "description": "The RAM disk ID."
        },
        "Description": {
          "$ref": "#/definitions/AttributeValue",
          "description": "A description for the AMI."
        },
        "SriovNetSupport": {
          "$ref": "#/definitions/AttributeValue",
          "description": "Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled."
        },
        "BlockDeviceMappings": {
          "$ref": "#/definitions/BlockDeviceMappingList",
          "description": "One or more block device mapping entries."
        }
      },
      "description": "Describes an image attribute."
    },
    "ImageAttributeName": {
      "type": "string",
      "enum": [
        "description",
        "kernel",
        "ramdisk",
        "launchPermission",
        "productCodes",
        "blockDeviceMapping",
        "sriovNetSupport"
      ]
    },
    "ImageDiskContainer": {
      "type": "object",
      "properties": {
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description of the disk image."
        },
        "Format": {
          "$ref": "#/definitions/String",
          "description": "<p>The format of the disk image being imported.</p> <p>Valid values: <code>RAW</code> | <code>VHD</code> | <code>VMDK</code> | <code>OVA</code> </p>"
        },
        "Url": {
          "$ref": "#/definitions/String",
          "description": "The URL to the Amazon S3-based disk image being imported. The URL can either be a https URL (https://..) or an Amazon S3 URL (s3://..)"
        },
        "UserBucket": {
          "$ref": "#/definitions/UserBucket",
          "description": "The S3 bucket for the disk image."
        },
        "DeviceName": {
          "$ref": "#/definitions/String",
          "description": "The block device mapping for the disk."
        },
        "SnapshotId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the EBS snapshot to be used for importing the snapshot."
        }
      },
      "description": "Describes the disk container object for an import image task."
    },
    "ImageDiskContainerList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ImageDiskContainer"
      }
    },
    "ImageIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "ImageList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Image"
      }
    },
    "ImageState": {
      "type": "string",
      "enum": [
        "pending",
        "available",
        "invalid",
        "deregistered",
        "transient",
        "failed",
        "error"
      ]
    },
    "ImageTypeValues": {
      "type": "string",
      "enum": [
        "machine",
        "kernel",
        "ramdisk"
      ]
    },
    "ImportImageRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description string for the import image task."
        },
        "DiskContainers": {
          "$ref": "#/definitions/ImageDiskContainerList",
          "description": "Information about the disk containers."
        },
        "LicenseType": {
          "$ref": "#/definitions/String",
          "description": "<p>The license type to be used for the Amazon Machine Image (AMI) after importing.</p> <p> <b>Note:</b> You may only use BYOL if you have existing licenses with rights to use these licenses in a third party cloud like AWS. For more information, see <a href=\"http://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html#prerequisites-image\">Prerequisites</a> in the VM Import/Export User Guide.</p> <p>Valid values: <code>AWS</code> | <code>BYOL</code> </p>"
        },
        "Hypervisor": {
          "$ref": "#/definitions/String",
          "description": "<p>The target hypervisor platform.</p> <p>Valid values: <code>xen</code> </p>"
        },
        "Architecture": {
          "$ref": "#/definitions/String",
          "description": "<p>The architecture of the virtual machine.</p> <p>Valid values: <code>i386</code> | <code>x86_64</code> </p>"
        },
        "Platform": {
          "$ref": "#/definitions/String",
          "description": "<p>The operating system of the virtual machine.</p> <p>Valid values: <code>Windows</code> | <code>Linux</code> </p>"
        },
        "ClientData": {
          "$ref": "#/definitions/ClientData",
          "description": "The client-specific data."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "The token to enable idempotency for VM import requests."
        },
        "RoleName": {
          "$ref": "#/definitions/String",
          "description": "The name of the role to use when not using the default role, 'vmimport'."
        }
      },
      "description": "Contains the parameters for ImportImage."
    },
    "ImportImageResult": {
      "type": "object",
      "properties": {
        "ImportTaskId": {
          "$ref": "#/definitions/String",
          "description": "The task ID of the import image task."
        },
        "Architecture": {
          "$ref": "#/definitions/String",
          "description": "The architecture of the virtual machine."
        },
        "LicenseType": {
          "$ref": "#/definitions/String",
          "description": "The license type of the virtual machine."
        },
        "Platform": {
          "$ref": "#/definitions/String",
          "description": "The operating system of the virtual machine."
        },
        "Hypervisor": {
          "$ref": "#/definitions/String",
          "description": "The target hypervisor of the import task."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description of the import task."
        },
        "SnapshotDetails": {
          "$ref": "#/definitions/SnapshotDetailList",
          "description": "Information about the snapshots."
        },
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Amazon Machine Image (AMI) created by the import task."
        },
        "Progress": {
          "$ref": "#/definitions/String",
          "description": "The progress of the task."
        },
        "StatusMessage": {
          "$ref": "#/definitions/String",
          "description": "A detailed status message of the import task."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "A brief status of the task."
        }
      },
      "description": "Contains the output for ImportImage."
    },
    "ImportImageTask": {
      "type": "object",
      "properties": {
        "ImportTaskId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the import image task."
        },
        "Architecture": {
          "$ref": "#/definitions/String",
          "description": "<p>The architecture of the virtual machine.</p> <p>Valid values: <code>i386</code> | <code>x86_64</code> </p>"
        },
        "LicenseType": {
          "$ref": "#/definitions/String",
          "description": "The license type of the virtual machine."
        },
        "Platform": {
          "$ref": "#/definitions/String",
          "description": "The description string for the import image task."
        },
        "Hypervisor": {
          "$ref": "#/definitions/String",
          "description": "<p>The target hypervisor for the import task.</p> <p>Valid values: <code>xen</code> </p>"
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description of the import task."
        },
        "SnapshotDetails": {
          "$ref": "#/definitions/SnapshotDetailList",
          "description": "Information about the snapshots."
        },
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Amazon Machine Image (AMI) of the imported virtual machine."
        },
        "Progress": {
          "$ref": "#/definitions/String",
          "description": "The percentage of progress of the import image task."
        },
        "StatusMessage": {
          "$ref": "#/definitions/String",
          "description": "A descriptive status message for the import image task."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "A brief status for the import image task."
        }
      },
      "description": "Describes an import image task."
    },
    "ImportImageTaskList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ImportImageTask"
      }
    },
    "ImportInstanceLaunchSpecification": {
      "type": "object",
      "properties": {
        "Architecture": {
          "$ref": "#/definitions/ArchitectureValues",
          "description": "The architecture of the instance."
        },
        "GroupNames": {
          "$ref": "#/definitions/SecurityGroupStringList",
          "description": "One or more security group names."
        },
        "GroupIds": {
          "$ref": "#/definitions/SecurityGroupIdStringList",
          "description": "One or more security group IDs."
        },
        "AdditionalInfo": {
          "$ref": "#/definitions/String",
          "description": "Reserved."
        },
        "UserData": {
          "$ref": "#/definitions/UserData",
          "description": "The user data to make available to the instance. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text."
        },
        "InstanceType": {
          "$ref": "#/definitions/InstanceType",
          "description": "The instance type. For more information about the instance types that you can import, see <a href=\"http://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html#vmimport-instance-types\">Instance Types</a> in the VM Import/Export User Guide."
        },
        "Placement": {
          "$ref": "#/definitions/Placement",
          "description": "The placement information for the instance."
        },
        "Monitoring": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether monitoring is enabled."
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "[EC2-VPC] The ID of the subnet in which to launch the instance."
        },
        "InstanceInitiatedShutdownBehavior": {
          "$ref": "#/definitions/ShutdownBehavior",
          "description": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown)."
        },
        "PrivateIpAddress": {
          "$ref": "#/definitions/String",
          "description": "[EC2-VPC] An available IP address from the IP address range of the subnet."
        }
      },
      "description": "Describes the launch specification for VM import."
    },
    "ImportInstanceRequest": {
      "type": "object",
      "required": [
        "Platform"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description for the instance being imported."
        },
        "LaunchSpecification": {
          "$ref": "#/definitions/ImportInstanceLaunchSpecification",
          "description": "The launch specification."
        },
        "DiskImages": {
          "$ref": "#/definitions/DiskImageList",
          "description": "The disk image."
        },
        "Platform": {
          "$ref": "#/definitions/PlatformValues",
          "description": "The instance operating system."
        }
      },
      "description": "Contains the parameters for ImportInstance."
    },
    "ImportInstanceResult": {
      "type": "object",
      "properties": {
        "ConversionTask": {
          "$ref": "#/definitions/ConversionTask",
          "description": "Information about the conversion task."
        }
      },
      "description": "Contains the output for ImportInstance."
    },
    "ImportInstanceTaskDetails": {
      "type": "object",
      "required": [
        "Volumes"
      ],
      "properties": {
        "Volumes": {
          "$ref": "#/definitions/ImportInstanceVolumeDetailSet",
          "description": "One or more volumes."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "Platform": {
          "$ref": "#/definitions/PlatformValues",
          "description": "The instance operating system."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description of the task."
        }
      },
      "description": "Describes an import instance task."
    },
    "ImportInstanceVolumeDetailItem": {
      "type": "object",
      "required": [
        "BytesConverted",
        "AvailabilityZone",
        "Image",
        "Volume",
        "Status"
      ],
      "properties": {
        "BytesConverted": {
          "$ref": "#/definitions/Long",
          "description": "The number of bytes converted so far."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone where the resulting instance will reside."
        },
        "Image": {
          "$ref": "#/definitions/DiskImageDescription",
          "description": "The image."
        },
        "Volume": {
          "$ref": "#/definitions/DiskImageVolumeDescription",
          "description": "The volume."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The status of the import of this particular disk image."
        },
        "StatusMessage": {
          "$ref": "#/definitions/String",
          "description": "The status information or errors related to the disk image."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description of the task."
        }
      },
      "description": "Describes an import volume task."
    },
    "ImportInstanceVolumeDetailSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ImportInstanceVolumeDetailItem"
      }
    },
    "ImportKeyPairRequest": {
      "type": "object",
      "required": [
        "KeyName",
        "PublicKeyMaterial"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "KeyName": {
          "$ref": "#/definitions/String",
          "description": "A unique name for the key pair."
        },
        "PublicKeyMaterial": {
          "$ref": "#/definitions/Blob",
          "description": "The public key. For API calls, the text must be base64-encoded. For command line tools, base64 encoding is performed for you."
        }
      },
      "description": "Contains the parameters for ImportKeyPair."
    },
    "ImportKeyPairResult": {
      "type": "object",
      "properties": {
        "KeyName": {
          "$ref": "#/definitions/String",
          "description": "The key pair name you provided."
        },
        "KeyFingerprint": {
          "$ref": "#/definitions/String",
          "description": "The MD5 public key fingerprint as specified in section 4 of RFC 4716."
        }
      },
      "description": "Contains the output of ImportKeyPair."
    },
    "ImportSnapshotRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description string for the import snapshot task."
        },
        "DiskContainer": {
          "$ref": "#/definitions/SnapshotDiskContainer",
          "description": "Information about the disk container."
        },
        "ClientData": {
          "$ref": "#/definitions/ClientData",
          "description": "The client-specific data."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "Token to enable idempotency for VM import requests."
        },
        "RoleName": {
          "$ref": "#/definitions/String",
          "description": "The name of the role to use when not using the default role, 'vmimport'."
        }
      },
      "description": "Contains the parameters for ImportSnapshot."
    },
    "ImportSnapshotResult": {
      "type": "object",
      "properties": {
        "ImportTaskId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the import snapshot task."
        },
        "SnapshotTaskDetail": {
          "$ref": "#/definitions/SnapshotTaskDetail",
          "description": "Information about the import snapshot task."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description of the import snapshot task."
        }
      },
      "description": "Contains the output for ImportSnapshot."
    },
    "ImportSnapshotTask": {
      "type": "object",
      "properties": {
        "ImportTaskId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the import snapshot task."
        },
        "SnapshotTaskDetail": {
          "$ref": "#/definitions/SnapshotTaskDetail",
          "description": "Describes an import snapshot task."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description of the import snapshot task."
        }
      },
      "description": "Describes an import snapshot task."
    },
    "ImportSnapshotTaskList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ImportSnapshotTask"
      }
    },
    "ImportTaskIdList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "ImportVolumeRequest": {
      "type": "object",
      "required": [
        "AvailabilityZone",
        "Image",
        "Volume"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone for the resulting EBS volume."
        },
        "Image": {
          "$ref": "#/definitions/DiskImageDetail",
          "description": "The disk image."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description of the volume."
        },
        "Volume": {
          "$ref": "#/definitions/VolumeDetail",
          "description": "The volume size."
        }
      },
      "description": "Contains the parameters for ImportVolume."
    },
    "ImportVolumeResult": {
      "type": "object",
      "properties": {
        "ConversionTask": {
          "$ref": "#/definitions/ConversionTask",
          "description": "Information about the conversion task."
        }
      },
      "description": "Contains the output for ImportVolume."
    },
    "ImportVolumeTaskDetails": {
      "type": "object",
      "required": [
        "BytesConverted",
        "AvailabilityZone",
        "Image",
        "Volume"
      ],
      "properties": {
        "BytesConverted": {
          "$ref": "#/definitions/Long",
          "description": "The number of bytes converted so far."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone where the resulting volume will reside."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description you provided when starting the import volume task."
        },
        "Image": {
          "$ref": "#/definitions/DiskImageDescription",
          "description": "The image."
        },
        "Volume": {
          "$ref": "#/definitions/DiskImageVolumeDescription",
          "description": "The volume."
        }
      },
      "description": "Describes an import volume task."
    },
    "Instance": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the AMI used to launch the instance."
        },
        "State": {
          "$ref": "#/definitions/InstanceState",
          "description": "The current state of the instance."
        },
        "PrivateDnsName": {
          "$ref": "#/definitions/String",
          "description": "The private DNS name assigned to the instance. This DNS name can only be used inside the Amazon EC2 network. This name is not available until the instance enters the <code>running</code> state. For EC2-VPC, this name is only available if you've enabled DNS hostnames for your VPC."
        },
        "PublicDnsName": {
          "$ref": "#/definitions/String",
          "description": "The public DNS name assigned to the instance. This name is not available until the instance enters the <code>running</code> state. For EC2-VPC, this name is only available if you've enabled DNS hostnames for your VPC."
        },
        "StateTransitionReason": {
          "$ref": "#/definitions/String",
          "description": "The reason for the most recent state transition. This might be an empty string."
        },
        "KeyName": {
          "$ref": "#/definitions/String",
          "description": "The name of the key pair, if this instance was launched with an associated key pair."
        },
        "AmiLaunchIndex": {
          "$ref": "#/definitions/Integer",
          "description": "The AMI launch index, which can be used to find this instance in the launch group."
        },
        "ProductCodes": {
          "$ref": "#/definitions/ProductCodeList",
          "description": "The product codes attached to this instance, if applicable."
        },
        "InstanceType": {
          "$ref": "#/definitions/InstanceType",
          "description": "The instance type."
        },
        "LaunchTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The time the instance was launched."
        },
        "Placement": {
          "$ref": "#/definitions/Placement",
          "description": "The location where the instance launched, if applicable."
        },
        "KernelId": {
          "$ref": "#/definitions/String",
          "description": "The kernel associated with this instance, if applicable."
        },
        "RamdiskId": {
          "$ref": "#/definitions/String",
          "description": "The RAM disk associated with this instance, if applicable."
        },
        "Platform": {
          "$ref": "#/definitions/PlatformValues",
          "description": "The value is <code>Windows</code> for Windows instances; otherwise blank."
        },
        "Monitoring": {
          "$ref": "#/definitions/Monitoring",
          "description": "The monitoring information for the instance."
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "[EC2-VPC] The ID of the subnet in which the instance is running."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "[EC2-VPC] The ID of the VPC in which the instance is running."
        },
        "PrivateIpAddress": {
          "$ref": "#/definitions/String",
          "description": "The private IP address assigned to the instance."
        },
        "PublicIpAddress": {
          "$ref": "#/definitions/String",
          "description": "The public IP address assigned to the instance, if applicable."
        },
        "StateReason": {
          "$ref": "#/definitions/StateReason",
          "description": "The reason for the most recent state transition."
        },
        "Architecture": {
          "$ref": "#/definitions/ArchitectureValues",
          "description": "The architecture of the image."
        },
        "RootDeviceType": {
          "$ref": "#/definitions/DeviceType",
          "description": "The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume."
        },
        "RootDeviceName": {
          "$ref": "#/definitions/String",
          "description": "The root device name (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>)."
        },
        "BlockDeviceMappings": {
          "$ref": "#/definitions/InstanceBlockDeviceMappingList",
          "description": "Any block device mapping entries for the instance."
        },
        "VirtualizationType": {
          "$ref": "#/definitions/VirtualizationType",
          "description": "The virtualization type of the instance."
        },
        "InstanceLifecycle": {
          "$ref": "#/definitions/InstanceLifecycleType",
          "description": "Indicates whether this is a Spot instance or a Scheduled Instance."
        },
        "SpotInstanceRequestId": {
          "$ref": "#/definitions/String",
          "description": "If the request is a Spot instance request, the ID of the request."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "The idempotency token you provided when you launched the instance, if applicable."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the instance."
        },
        "SecurityGroups": {
          "$ref": "#/definitions/GroupIdentifierList",
          "description": "One or more security groups for the instance."
        },
        "SourceDestCheck": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies whether to enable an instance launched in a VPC to perform NAT. This controls whether source/destination checking is enabled on the instance. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code> for the instance to perform NAT. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html\">NAT Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>."
        },
        "Hypervisor": {
          "$ref": "#/definitions/HypervisorType",
          "description": "The hypervisor type of the instance."
        },
        "NetworkInterfaces": {
          "$ref": "#/definitions/InstanceNetworkInterfaceList",
          "description": "[EC2-VPC] One or more network interfaces for the instance."
        },
        "IamInstanceProfile": {
          "$ref": "#/definitions/IamInstanceProfile",
          "description": "The IAM instance profile associated with the instance, if applicable."
        },
        "EbsOptimized": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance."
        },
        "SriovNetSupport": {
          "$ref": "#/definitions/String",
          "description": "Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled."
        },
        "EnaSupport": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies whether enhanced networking with ENA is enabled."
        }
      },
      "description": "Describes an instance."
    },
    "InstanceAttribute": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "InstanceType": {
          "$ref": "#/definitions/AttributeValue",
          "description": "The instance type."
        },
        "KernelId": {
          "$ref": "#/definitions/AttributeValue",
          "description": "The kernel ID."
        },
        "RamdiskId": {
          "$ref": "#/definitions/AttributeValue",
          "description": "The RAM disk ID."
        },
        "UserData": {
          "$ref": "#/definitions/AttributeValue",
          "description": "The user data."
        },
        "DisableApiTermination": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "If the value is <code>true</code>, you can't terminate the instance through the Amazon EC2 console, CLI, or API; otherwise, you can."
        },
        "InstanceInitiatedShutdownBehavior": {
          "$ref": "#/definitions/AttributeValue",
          "description": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown)."
        },
        "RootDeviceName": {
          "$ref": "#/definitions/AttributeValue",
          "description": "The name of the root device (for example, <code>/dev/sda1</code> or <code>/dev/xvda</code>)."
        },
        "BlockDeviceMappings": {
          "$ref": "#/definitions/InstanceBlockDeviceMappingList",
          "description": "The block device mapping of the instance."
        },
        "ProductCodes": {
          "$ref": "#/definitions/ProductCodeList",
          "description": "A list of product codes."
        },
        "EbsOptimized": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "Indicates whether the instance is optimized for EBS I/O."
        },
        "SriovNetSupport": {
          "$ref": "#/definitions/AttributeValue",
          "description": "Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled."
        },
        "EnaSupport": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "Indicates whether enhanced networking with ENA is enabled."
        },
        "SourceDestCheck": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "Indicates whether source/destination checking is enabled. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. This value must be <code>false</code> for a NAT instance to perform NAT."
        },
        "Groups": {
          "$ref": "#/definitions/GroupIdentifierList",
          "description": "The security groups associated with the instance."
        }
      },
      "description": "Describes an instance attribute."
    },
    "InstanceAttributeName": {
      "type": "string",
      "enum": [
        "instanceType",
        "kernel",
        "ramdisk",
        "userData",
        "disableApiTermination",
        "instanceInitiatedShutdownBehavior",
        "rootDeviceName",
        "blockDeviceMapping",
        "productCodes",
        "sourceDestCheck",
        "groupSet",
        "ebsOptimized",
        "sriovNetSupport",
        "enaSupport"
      ]
    },
    "InstanceBlockDeviceMapping": {
      "type": "object",
      "properties": {
        "DeviceName": {
          "$ref": "#/definitions/String",
          "description": "The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>)."
        },
        "Ebs": {
          "$ref": "#/definitions/EbsInstanceBlockDevice",
          "description": "Parameters used to automatically set up EBS volumes when the instance is launched."
        }
      },
      "description": "Describes a block device mapping."
    },
    "InstanceBlockDeviceMappingList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceBlockDeviceMapping"
      }
    },
    "InstanceBlockDeviceMappingSpecification": {
      "type": "object",
      "properties": {
        "DeviceName": {
          "$ref": "#/definitions/String",
          "description": "The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>)."
        },
        "Ebs": {
          "$ref": "#/definitions/EbsInstanceBlockDeviceSpecification",
          "description": "Parameters used to automatically set up EBS volumes when the instance is launched."
        },
        "VirtualName": {
          "$ref": "#/definitions/String",
          "description": "The virtual device name."
        },
        "NoDevice": {
          "$ref": "#/definitions/String",
          "description": "suppress the specified device included in the block device mapping."
        }
      },
      "description": "Describes a block device mapping entry."
    },
    "InstanceBlockDeviceMappingSpecificationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceBlockDeviceMappingSpecification"
      }
    },
    "InstanceCapacity": {
      "type": "object",
      "properties": {
        "InstanceType": {
          "$ref": "#/definitions/String",
          "description": "The instance type size supported by the Dedicated Host."
        },
        "AvailableCapacity": {
          "$ref": "#/definitions/Integer",
          "description": "The number of instances that can still be launched onto the Dedicated Host."
        },
        "TotalCapacity": {
          "$ref": "#/definitions/Integer",
          "description": "The total number of instances that can be launched onto the Dedicated Host."
        }
      },
      "description": "Information about the instance type that the Dedicated Host supports."
    },
    "InstanceCount": {
      "type": "object",
      "properties": {
        "State": {
          "$ref": "#/definitions/ListingState",
          "description": "The states of the listed Reserved Instances."
        },
        "InstanceCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of listed Reserved Instances in the state specified by the <code>state</code>."
        }
      },
      "description": "Describes a Reserved Instance listing state."
    },
    "InstanceCountList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceCount"
      }
    },
    "InstanceExportDetails": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the resource being exported."
        },
        "TargetEnvironment": {
          "$ref": "#/definitions/ExportEnvironment",
          "description": "The target virtualization environment."
        }
      },
      "description": "Describes an instance to export."
    },
    "InstanceIdSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "InstanceIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "InstanceLifecycleType": {
      "type": "string",
      "enum": [
        "spot",
        "scheduled"
      ]
    },
    "InstanceList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Instance"
      }
    },
    "InstanceMonitoring": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "Monitoring": {
          "$ref": "#/definitions/Monitoring",
          "description": "The monitoring information."
        }
      },
      "description": "Describes the monitoring information of the instance."
    },
    "InstanceMonitoringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceMonitoring"
      }
    },
    "InstanceNetworkInterface": {
      "type": "object",
      "properties": {
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface."
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description."
        },
        "OwnerId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the AWS account that created the network interface."
        },
        "Status": {
          "$ref": "#/definitions/NetworkInterfaceStatus",
          "description": "The status of the network interface."
        },
        "MacAddress": {
          "$ref": "#/definitions/String",
          "description": "The MAC address."
        },
        "PrivateIpAddress": {
          "$ref": "#/definitions/String",
          "description": "The IP address of the network interface within the subnet."
        },
        "PrivateDnsName": {
          "$ref": "#/definitions/String",
          "description": "The private DNS name."
        },
        "SourceDestCheck": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether to validate network traffic to or from this network interface."
        },
        "Groups": {
          "$ref": "#/definitions/GroupIdentifierList",
          "description": "One or more security groups."
        },
        "Attachment": {
          "$ref": "#/definitions/InstanceNetworkInterfaceAttachment",
          "description": "The network interface attachment."
        },
        "Association": {
          "$ref": "#/definitions/InstanceNetworkInterfaceAssociation",
          "description": "The association information for an Elastic IP associated with the network interface."
        },
        "PrivateIpAddresses": {
          "$ref": "#/definitions/InstancePrivateIpAddressList",
          "description": "The private IP addresses associated with the network interface."
        }
      },
      "description": "Describes a network interface."
    },
    "InstanceNetworkInterfaceAssociation": {
      "type": "object",
      "properties": {
        "PublicIp": {
          "$ref": "#/definitions/String",
          "description": "The public IP address or Elastic IP address bound to the network interface."
        },
        "PublicDnsName": {
          "$ref": "#/definitions/String",
          "description": "The public DNS name."
        },
        "IpOwnerId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the owner of the Elastic IP address."
        }
      },
      "description": "Describes association information for an Elastic IP address."
    },
    "InstanceNetworkInterfaceAttachment": {
      "type": "object",
      "properties": {
        "AttachmentId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface attachment."
        },
        "DeviceIndex": {
          "$ref": "#/definitions/Integer",
          "description": "The index of the device on the instance for the network interface attachment."
        },
        "Status": {
          "$ref": "#/definitions/AttachmentStatus",
          "description": "The attachment state."
        },
        "AttachTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The time stamp when the attachment initiated."
        },
        "DeleteOnTermination": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the network interface is deleted when the instance is terminated."
        }
      },
      "description": "Describes a network interface attachment."
    },
    "InstanceNetworkInterfaceList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceNetworkInterface"
      }
    },
    "InstanceNetworkInterfaceSpecification": {
      "type": "object",
      "properties": {
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface."
        },
        "DeviceIndex": {
          "$ref": "#/definitions/Integer",
          "description": "The index of the device on the instance for the network interface attachment. If you are specifying a network interface in a <a>RunInstances</a> request, you must provide the device index."
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet associated with the network string. Applies only if creating a network interface when launching an instance."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description of the network interface. Applies only if creating a network interface when launching an instance."
        },
        "PrivateIpAddress": {
          "$ref": "#/definitions/String",
          "description": "The private IP address of the network interface. Applies only if creating a network interface when launching an instance."
        },
        "Groups": {
          "$ref": "#/definitions/SecurityGroupIdStringList",
          "description": "The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance."
        },
        "DeleteOnTermination": {
          "$ref": "#/definitions/Boolean",
          "description": "If set to <code>true</code>, the interface is deleted when the instance is terminated. You can specify <code>true</code> only if creating a new network interface when launching an instance."
        },
        "PrivateIpAddresses": {
          "$ref": "#/definitions/PrivateIpAddressSpecificationList",
          "description": "One or more private IP addresses to assign to the network interface. Only one private IP address can be designated as primary."
        },
        "SecondaryPrivateIpAddressCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of secondary private IP addresses. You can't specify this option and specify more than one private IP address using the private IP addresses option."
        },
        "AssociatePublicIpAddress": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether to assign a public IP address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is <code>true</code>."
        }
      },
      "description": "Describes a network interface."
    },
    "InstanceNetworkInterfaceSpecificationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceNetworkInterfaceSpecification"
      }
    },
    "InstancePrivateIpAddress": {
      "type": "object",
      "properties": {
        "PrivateIpAddress": {
          "$ref": "#/definitions/String",
          "description": "The private IP address of the network interface."
        },
        "PrivateDnsName": {
          "$ref": "#/definitions/String",
          "description": "The private DNS name."
        },
        "Primary": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether this IP address is the primary private IP address of the network interface."
        },
        "Association": {
          "$ref": "#/definitions/InstanceNetworkInterfaceAssociation",
          "description": "The association information for an Elastic IP address for the network interface."
        }
      },
      "description": "Describes a private IP address."
    },
    "InstancePrivateIpAddressList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstancePrivateIpAddress"
      }
    },
    "InstanceState": {
      "type": "object",
      "properties": {
        "Code": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The low byte represents the state. The high byte is an opaque internal value and should be ignored.</p> <ul> <li> <p> <code>0</code> : <code>pending</code> </p> </li> <li> <p> <code>16</code> : <code>running</code> </p> </li> <li> <p> <code>32</code> : <code>shutting-down</code> </p> </li> <li> <p> <code>48</code> : <code>terminated</code> </p> </li> <li> <p> <code>64</code> : <code>stopping</code> </p> </li> <li> <p> <code>80</code> : <code>stopped</code> </p> </li> </ul>"
        },
        "Name": {
          "$ref": "#/definitions/InstanceStateName",
          "description": "The current state of the instance."
        }
      },
      "description": "Describes the current state of the instance."
    },
    "InstanceStateChange": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "CurrentState": {
          "$ref": "#/definitions/InstanceState",
          "description": "The current state of the instance."
        },
        "PreviousState": {
          "$ref": "#/definitions/InstanceState",
          "description": "The previous state of the instance."
        }
      },
      "description": "Describes an instance state change."
    },
    "InstanceStateChangeList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceStateChange"
      }
    },
    "InstanceStateName": {
      "type": "string",
      "enum": [
        "pending",
        "running",
        "shutting-down",
        "terminated",
        "stopping",
        "stopped"
      ]
    },
    "InstanceStatus": {
      "type": "object",
      "properties": {
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone of the instance."
        },
        "Events": {
          "$ref": "#/definitions/InstanceStatusEventList",
          "description": "Any scheduled events associated with the instance."
        },
        "InstanceState": {
          "$ref": "#/definitions/InstanceState",
          "description": "The intended state of the instance. <a>DescribeInstanceStatus</a> requires that an instance be in the <code>running</code> state."
        },
        "SystemStatus": {
          "$ref": "#/definitions/InstanceStatusSummary",
          "description": "Reports impaired functionality that stems from issues related to the systems that support an instance, such as hardware failures and network connectivity problems."
        },
        "InstanceStatus": {
          "$ref": "#/definitions/InstanceStatusSummary",
          "description": "Reports impaired functionality that stems from issues internal to the instance, such as impaired reachability."
        }
      },
      "description": "Describes the status of an instance."
    },
    "InstanceStatusDetails": {
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/StatusName",
          "description": "The type of instance status."
        },
        "Status": {
          "$ref": "#/definitions/StatusType",
          "description": "The status."
        },
        "ImpairedSince": {
          "$ref": "#/definitions/DateTime",
          "description": "The time when a status check failed. For an instance that was launched and impaired, this is the time when the instance was launched."
        }
      },
      "description": "Describes the instance status."
    },
    "InstanceStatusDetailsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceStatusDetails"
      }
    },
    "InstanceStatusEvent": {
      "type": "object",
      "properties": {
        "Code": {
          "$ref": "#/definitions/EventCode",
          "description": "The event code."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "<p>A description of the event.</p> <p>After a scheduled event is completed, it can still be described for up to a week. If the event has been completed, this description starts with the following text: [Completed].</p>"
        },
        "NotBefore": {
          "$ref": "#/definitions/DateTime",
          "description": "The earliest scheduled start time for the event."
        },
        "NotAfter": {
          "$ref": "#/definitions/DateTime",
          "description": "The latest scheduled end time for the event."
        }
      },
      "description": "Describes a scheduled event for an instance."
    },
    "InstanceStatusEventList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceStatusEvent"
      }
    },
    "InstanceStatusList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceStatus"
      }
    },
    "InstanceStatusSummary": {
      "type": "object",
      "properties": {
        "Status": {
          "$ref": "#/definitions/SummaryStatus",
          "description": "The status."
        },
        "Details": {
          "$ref": "#/definitions/InstanceStatusDetailsList",
          "description": "The system instance health or application instance health."
        }
      },
      "description": "Describes the status of an instance."
    },
    "InstanceType": {
      "type": "string",
      "enum": [
        "t1.micro",
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "cr1.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "x1.4xlarge",
        "x1.8xlarge",
        "x1.16xlarge",
        "x1.32xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "cc1.4xlarge",
        "cc2.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "cg1.4xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge"
      ]
    },
    "InstanceTypeList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceType"
      }
    },
    "Integer": {
      "type": "integer"
    },
    "InternetGateway": {
      "type": "object",
      "properties": {
        "InternetGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Internet gateway."
        },
        "Attachments": {
          "$ref": "#/definitions/InternetGatewayAttachmentList",
          "description": "Any VPCs attached to the Internet gateway."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the Internet gateway."
        }
      },
      "description": "Describes an Internet gateway."
    },
    "InternetGatewayAttachment": {
      "type": "object",
      "properties": {
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        },
        "State": {
          "$ref": "#/definitions/AttachmentStatus",
          "description": "The current state of the attachment."
        }
      },
      "description": "Describes the attachment of a VPC to an Internet gateway."
    },
    "InternetGatewayAttachmentList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InternetGatewayAttachment"
      }
    },
    "InternetGatewayList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InternetGateway"
      }
    },
    "IpPermission": {
      "type": "object",
      "properties": {
        "IpProtocol": {
          "$ref": "#/definitions/String",
          "description": "<p>The IP protocol name (for <code>tcp</code>, <code>udp</code>, and <code>icmp</code>) or number (see <a href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\">Protocol Numbers</a>). </p> <p>[EC2-VPC only] When you authorize or revoke security group rules, you can use <code>-1</code> to specify all.</p>"
        },
        "FromPort": {
          "$ref": "#/definitions/Integer",
          "description": "The start of port range for the TCP and UDP protocols, or an ICMP type number. A value of <code>-1</code> indicates all ICMP types."
        },
        "ToPort": {
          "$ref": "#/definitions/Integer",
          "description": "The end of port range for the TCP and UDP protocols, or an ICMP code. A value of <code>-1</code> indicates all ICMP codes for the specified ICMP type."
        },
        "UserIdGroupPairs": {
          "$ref": "#/definitions/UserIdGroupPairList",
          "description": "One or more security group and AWS account ID pairs."
        },
        "IpRanges": {
          "$ref": "#/definitions/IpRangeList",
          "description": "One or more IP ranges."
        },
        "PrefixListIds": {
          "$ref": "#/definitions/PrefixListIdList",
          "description": "(Valid for <a>AuthorizeSecurityGroupEgress</a>, <a>RevokeSecurityGroupEgress</a> and <a>DescribeSecurityGroups</a> only) One or more prefix list IDs for an AWS service. In an <a>AuthorizeSecurityGroupEgress</a> request, this is the AWS service that you want to access through a VPC endpoint from instances associated with the security group."
        }
      },
      "description": "Describes a security group rule."
    },
    "IpPermissionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/IpPermission"
      }
    },
    "IpRange": {
      "type": "object",
      "properties": {
        "CidrIp": {
          "$ref": "#/definitions/String",
          "description": "The CIDR range. You can either specify a CIDR range or a source security group, not both."
        }
      },
      "description": "Describes an IP range."
    },
    "IpRangeList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/IpRange"
      }
    },
    "IpRanges": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "KeyNameStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "KeyPair": {
      "type": "object",
      "properties": {
        "KeyName": {
          "$ref": "#/definitions/String",
          "description": "The name of the key pair."
        },
        "KeyFingerprint": {
          "$ref": "#/definitions/String",
          "description": "The SHA-1 digest of the DER encoded private key."
        },
        "KeyMaterial": {
          "$ref": "#/definitions/String",
          "description": "An unencrypted PEM encoded RSA private key."
        }
      },
      "description": "Describes a key pair."
    },
    "KeyPairInfo": {
      "type": "object",
      "properties": {
        "KeyName": {
          "$ref": "#/definitions/String",
          "description": "The name of the key pair."
        },
        "KeyFingerprint": {
          "$ref": "#/definitions/String",
          "description": "If you used <a>CreateKeyPair</a> to create the key pair, this is the SHA-1 digest of the DER encoded private key. If you used <a>ImportKeyPair</a> to provide AWS the public key, this is the MD5 public key fingerprint as specified in section 4 of RFC4716."
        }
      },
      "description": "Describes a key pair."
    },
    "KeyPairList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/KeyPairInfo"
      }
    },
    "LaunchPermission": {
      "type": "object",
      "properties": {
        "UserId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account ID."
        },
        "Group": {
          "$ref": "#/definitions/PermissionGroup",
          "description": "The name of the group."
        }
      },
      "description": "Describes a launch permission."
    },
    "LaunchPermissionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/LaunchPermission"
      }
    },
    "LaunchPermissionModifications": {
      "type": "object",
      "properties": {
        "Add": {
          "$ref": "#/definitions/LaunchPermissionList",
          "description": "The AWS account ID to add to the list of launch permissions for the AMI."
        },
        "Remove": {
          "$ref": "#/definitions/LaunchPermissionList",
          "description": "The AWS account ID to remove from the list of launch permissions for the AMI."
        }
      },
      "description": "Describes a launch permission modification."
    },
    "LaunchSpecification": {
      "type": "object",
      "properties": {
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the AMI."
        },
        "KeyName": {
          "$ref": "#/definitions/String",
          "description": "The name of the key pair."
        },
        "SecurityGroups": {
          "$ref": "#/definitions/GroupIdentifierList",
          "description": "One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups."
        },
        "UserData": {
          "$ref": "#/definitions/String",
          "description": "The user data to make available to the instances. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text."
        },
        "AddressingType": {
          "$ref": "#/definitions/String",
          "description": "Deprecated."
        },
        "InstanceType": {
          "$ref": "#/definitions/InstanceType",
          "description": "The instance type."
        },
        "Placement": {
          "$ref": "#/definitions/SpotPlacement",
          "description": "The placement information for the instance."
        },
        "KernelId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the kernel."
        },
        "RamdiskId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the RAM disk."
        },
        "BlockDeviceMappings": {
          "$ref": "#/definitions/BlockDeviceMappingList",
          "description": "<p>One or more block device mapping entries.</p> <p>Although you can specify encrypted EBS volumes in this block device mapping for your Spot Instances, these volumes are not encrypted.</p>"
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet in which to launch the instance."
        },
        "NetworkInterfaces": {
          "$ref": "#/definitions/InstanceNetworkInterfaceSpecificationList",
          "description": "One or more network interfaces."
        },
        "IamInstanceProfile": {
          "$ref": "#/definitions/IamInstanceProfileSpecification",
          "description": "The IAM instance profile."
        },
        "EbsOptimized": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code> </p>"
        },
        "Monitoring": {
          "$ref": "#/definitions/RunInstancesMonitoringEnabled"
        }
      },
      "description": "Describes the launch specification for an instance."
    },
    "LaunchSpecsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SpotFleetLaunchSpecification"
      },
      "minItems": 1
    },
    "ListingState": {
      "type": "string",
      "enum": [
        "available",
        "sold",
        "cancelled",
        "pending"
      ]
    },
    "ListingStatus": {
      "type": "string",
      "enum": [
        "active",
        "pending",
        "cancelled",
        "closed"
      ]
    },
    "Long": {
      "type": "integer"
    },
    "MaxResults": {
      "type": "integer",
      "minimum": 5,
      "maximum": 255
    },
    "ModifyHostsRequest": {
      "type": "object",
      "required": [
        "HostIds",
        "AutoPlacement"
      ],
      "properties": {
        "HostIds": {
          "$ref": "#/definitions/RequestHostIdList",
          "description": "The host IDs of the Dedicated Hosts you want to modify."
        },
        "AutoPlacement": {
          "$ref": "#/definitions/AutoPlacement",
          "description": "Specify whether to enable or disable auto-placement."
        }
      },
      "description": "Contains the parameters for ModifyHosts."
    },
    "ModifyHostsResult": {
      "type": "object",
      "properties": {
        "Successful": {
          "$ref": "#/definitions/ResponseHostIdList",
          "description": "The IDs of the Dedicated Hosts that were successfully modified."
        },
        "Unsuccessful": {
          "$ref": "#/definitions/UnsuccessfulItemList",
          "description": "The IDs of the Dedicated Hosts that could not be modified. Check whether the setting you requested can be used."
        }
      },
      "description": "Contains the output of ModifyHosts."
    },
    "ModifyIdFormatRequest": {
      "type": "object",
      "required": [
        "Resource",
        "UseLongIds"
      ],
      "properties": {
        "Resource": {
          "$ref": "#/definitions/String",
          "description": "The type of resource: <code>instance</code> | <code>reservation</code> | <code>snapshot</code> | <code>volume</code> "
        },
        "UseLongIds": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicate whether the resource should use longer IDs (17-character IDs)."
        }
      },
      "description": "Contains the parameters of ModifyIdFormat."
    },
    "ModifyIdentityIdFormatRequest": {
      "type": "object",
      "required": [
        "Resource",
        "UseLongIds",
        "PrincipalArn"
      ],
      "properties": {
        "Resource": {
          "$ref": "#/definitions/String",
          "description": "The type of resource: <code>instance</code> | <code>reservation</code> | <code>snapshot</code> | <code>volume</code> "
        },
        "UseLongIds": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the resource should use longer IDs (17-character IDs)"
        },
        "PrincipalArn": {
          "$ref": "#/definitions/String",
          "description": "The ARN of the principal, which can be an IAM user, IAM role, or the root user. Specify <code>all</code> to modify the ID format for all IAM users, IAM roles, and the root user of the account."
        }
      },
      "description": "Contains the parameters of ModifyIdentityIdFormat."
    },
    "ModifyImageAttributeRequest": {
      "type": "object",
      "required": [
        "ImageId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the AMI."
        },
        "Attribute": {
          "$ref": "#/definitions/String",
          "description": "The name of the attribute to modify."
        },
        "OperationType": {
          "$ref": "#/definitions/OperationType",
          "description": "The operation type."
        },
        "UserIds": {
          "$ref": "#/definitions/UserIdStringList",
          "description": "One or more AWS account IDs. This is only valid when modifying the <code>launchPermission</code> attribute."
        },
        "UserGroups": {
          "$ref": "#/definitions/UserGroupStringList",
          "description": "One or more user groups. This is only valid when modifying the <code>launchPermission</code> attribute."
        },
        "ProductCodes": {
          "$ref": "#/definitions/ProductCodeStringList",
          "description": "One or more product codes. After you add a product code to an AMI, it can't be removed. This is only valid when modifying the <code>productCodes</code> attribute."
        },
        "Value": {
          "$ref": "#/definitions/String",
          "description": "The value of the attribute being modified. This is only valid when modifying the <code>description</code> attribute."
        },
        "LaunchPermission": {
          "$ref": "#/definitions/LaunchPermissionModifications",
          "description": "A launch permission modification."
        },
        "Description": {
          "$ref": "#/definitions/AttributeValue",
          "description": "A description for the AMI."
        }
      },
      "description": "Contains the parameters for ModifyImageAttribute."
    },
    "ModifyInstanceAttributeRequest": {
      "type": "object",
      "required": [
        "InstanceId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "Attribute": {
          "$ref": "#/definitions/InstanceAttributeName",
          "description": "The name of the attribute."
        },
        "Value": {
          "$ref": "#/definitions/String",
          "description": "A new value for the attribute. Use only with the <code>kernel</code>, <code>ramdisk</code>, <code>userData</code>, <code>disableApiTermination</code>, or <code>instanceInitiatedShutdownBehavior</code> attribute."
        },
        "BlockDeviceMappings": {
          "$ref": "#/definitions/InstanceBlockDeviceMappingSpecificationList",
          "description": "<p>Modifies the <code>DeleteOnTermination</code> attribute for volumes that are currently attached. The volume must be owned by the caller. If no value is specified for <code>DeleteOnTermination</code>, the default is <code>true</code> and the volume is deleted when the instance is terminated.</p> <p>To add instance store volumes to an Amazon EBS-backed instance, you must add them when you launch the instance. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#Using_OverridingAMIBDM\">Updating the Block Device Mapping when Launching an Instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>"
        },
        "SourceDestCheck": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "Specifies whether source/destination checking is enabled. A value of <code>true</code> means that checking is enabled, and <code>false</code> means checking is disabled. This value must be <code>false</code> for a NAT instance to perform NAT."
        },
        "DisableApiTermination": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "If the value is <code>true</code>, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. You cannot use this paramater for Spot Instances."
        },
        "InstanceType": {
          "$ref": "#/definitions/AttributeValue",
          "description": "Changes the instance type to the specified value. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance Types</a>. If the instance type is not valid, the error returned is <code>InvalidInstanceAttributeValue</code>."
        },
        "Kernel": {
          "$ref": "#/definitions/AttributeValue",
          "description": "Changes the instance's kernel to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html\">PV-GRUB</a>."
        },
        "Ramdisk": {
          "$ref": "#/definitions/AttributeValue",
          "description": "Changes the instance's RAM disk to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html\">PV-GRUB</a>."
        },
        "UserData": {
          "$ref": "#/definitions/BlobAttributeValue",
          "description": "Changes the instance's user data to the specified value. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text."
        },
        "InstanceInitiatedShutdownBehavior": {
          "$ref": "#/definitions/AttributeValue",
          "description": "Specifies whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown)."
        },
        "Groups": {
          "$ref": "#/definitions/GroupIdStringList",
          "description": "[EC2-VPC] Changes the security groups of the instance. You must specify at least one security group, even if it's just the default security group for the VPC. You must specify the security group ID, not the security group name."
        },
        "EbsOptimized": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "Specifies whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance."
        },
        "SriovNetSupport": {
          "$ref": "#/definitions/AttributeValue",
          "description": "<p>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual Function interface for the instance.</p> <p>There is no way to disable enhanced networking with the Intel 82599 Virtual Function interface at this time.</p> <p>This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.</p>"
        },
        "EnaSupport": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "<p>Set to <code>true</code> to enable enhanced networking with ENA for the instance.</p> <p>This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.</p>"
        }
      },
      "description": "Contains the parameters for ModifyInstanceAttribute."
    },
    "ModifyInstancePlacementRequest": {
      "type": "object",
      "required": [
        "InstanceId"
      ],
      "properties": {
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance that you are modifying."
        },
        "Tenancy": {
          "$ref": "#/definitions/HostTenancy",
          "description": "The tenancy of the instance that you are modifying."
        },
        "Affinity": {
          "$ref": "#/definitions/Affinity",
          "description": "The new affinity setting for the instance."
        },
        "HostId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Dedicated Host that the instance will have affinity with."
        }
      },
      "description": "Contains the parameters for ModifyInstancePlacement."
    },
    "ModifyInstancePlacementResult": {
      "type": "object",
      "properties": {
        "Return": {
          "$ref": "#/definitions/Boolean",
          "description": "Is <code>true</code> if the request succeeds, and an error otherwise."
        }
      },
      "description": "Contains the output of ModifyInstancePlacement."
    },
    "ModifyNetworkInterfaceAttributeRequest": {
      "type": "object",
      "required": [
        "NetworkInterfaceId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface."
        },
        "Description": {
          "$ref": "#/definitions/AttributeValue",
          "description": "A description for the network interface."
        },
        "SourceDestCheck": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "Indicates whether source/destination checking is enabled. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. This value must be <code>false</code> for a NAT instance to perform NAT. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html\">NAT Instances</a> in the <i>Amazon Virtual Private Cloud User Guide</i>."
        },
        "Groups": {
          "$ref": "#/definitions/SecurityGroupIdStringList",
          "description": "Changes the security groups for the network interface. The new set of groups you specify replaces the current set. You must specify at least one group, even if it's just the default security group in the VPC. You must specify the ID of the security group, not the name."
        },
        "Attachment": {
          "$ref": "#/definitions/NetworkInterfaceAttachmentChanges",
          "description": "Information about the interface attachment. If modifying the 'delete on termination' attribute, you must specify the ID of the interface attachment."
        }
      },
      "description": "Contains the parameters for ModifyNetworkInterfaceAttribute."
    },
    "ModifyReservedInstancesRequest": {
      "type": "object",
      "required": [
        "ReservedInstancesIds",
        "TargetConfigurations"
      ],
      "properties": {
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "A unique, case-sensitive token you provide to ensure idempotency of your modification request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>."
        },
        "ReservedInstancesIds": {
          "$ref": "#/definitions/ReservedInstancesIdStringList",
          "description": "The IDs of the Reserved Instances to modify."
        },
        "TargetConfigurations": {
          "$ref": "#/definitions/ReservedInstancesConfigurationList",
          "description": "The configuration settings for the Reserved Instances to modify."
        }
      },
      "description": "Contains the parameters for ModifyReservedInstances."
    },
    "ModifyReservedInstancesResult": {
      "type": "object",
      "properties": {
        "ReservedInstancesModificationId": {
          "$ref": "#/definitions/String",
          "description": "The ID for the modification."
        }
      },
      "description": "Contains the output of ModifyReservedInstances."
    },
    "ModifySnapshotAttributeRequest": {
      "type": "object",
      "required": [
        "SnapshotId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SnapshotId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the snapshot."
        },
        "Attribute": {
          "$ref": "#/definitions/SnapshotAttributeName",
          "description": "<p>The snapshot attribute to modify.</p> <note> <p>Only volume creation permissions may be modified at the customer level.</p> </note>"
        },
        "OperationType": {
          "$ref": "#/definitions/OperationType",
          "description": "The type of operation to perform to the attribute."
        },
        "UserIds": {
          "$ref": "#/definitions/UserIdStringList",
          "description": "The account ID to modify for the snapshot."
        },
        "GroupNames": {
          "$ref": "#/definitions/GroupNameStringList",
          "description": "The group to modify for the snapshot."
        },
        "CreateVolumePermission": {
          "$ref": "#/definitions/CreateVolumePermissionModifications",
          "description": "A JSON representation of the snapshot attribute modification."
        }
      },
      "description": "Contains the parameters for ModifySnapshotAttribute."
    },
    "ModifySpotFleetRequestRequest": {
      "type": "object",
      "required": [
        "SpotFleetRequestId"
      ],
      "properties": {
        "SpotFleetRequestId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Spot fleet request."
        },
        "TargetCapacity": {
          "$ref": "#/definitions/Integer",
          "description": "The size of the fleet."
        },
        "ExcessCapacityTerminationPolicy": {
          "$ref": "#/definitions/ExcessCapacityTerminationPolicy",
          "description": "Indicates whether running Spot instances should be terminated if the target capacity of the Spot fleet request is decreased below the current size of the Spot fleet."
        }
      },
      "description": "Contains the parameters for ModifySpotFleetRequest."
    },
    "ModifySpotFleetRequestResponse": {
      "type": "object",
      "properties": {
        "Return": {
          "$ref": "#/definitions/Boolean",
          "description": "Is <code>true</code> if the request succeeds, and an error otherwise."
        }
      },
      "description": "Contains the output of ModifySpotFleetRequest."
    },
    "ModifySubnetAttributeRequest": {
      "type": "object",
      "required": [
        "SubnetId"
      ],
      "properties": {
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet."
        },
        "MapPublicIpOnLaunch": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "Specify <code>true</code> to indicate that instances launched into the specified subnet should be assigned public IP address."
        }
      },
      "description": "Contains the parameters for ModifySubnetAttribute."
    },
    "ModifyVolumeAttributeRequest": {
      "type": "object",
      "required": [
        "VolumeId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VolumeId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the volume."
        },
        "AutoEnableIO": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "Indicates whether the volume should be auto-enabled for I/O operations."
        }
      },
      "description": "Contains the parameters for ModifyVolumeAttribute."
    },
    "ModifyVpcAttributeRequest": {
      "type": "object",
      "required": [
        "VpcId"
      ],
      "properties": {
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        },
        "EnableDnsSupport": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "<p>Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range \"plus two\" will succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.</p> <p>You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute.</p>"
        },
        "EnableDnsHostnames": {
          "$ref": "#/definitions/AttributeBooleanValue",
          "description": "<p>Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.</p> <p>You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute. You can only enable DNS hostnames if you've enabled DNS support.</p>"
        }
      },
      "description": "Contains the parameters for ModifyVpcAttribute."
    },
    "ModifyVpcEndpointRequest": {
      "type": "object",
      "required": [
        "VpcEndpointId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcEndpointId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the endpoint."
        },
        "ResetPolicy": {
          "$ref": "#/definitions/Boolean",
          "description": "Specify <code>true</code> to reset the policy document to the default policy. The default policy allows access to the service."
        },
        "PolicyDocument": {
          "$ref": "#/definitions/String",
          "description": "A policy document to attach to the endpoint. The policy must be in valid JSON format."
        },
        "AddRouteTableIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "One or more route tables IDs to associate with the endpoint."
        },
        "RemoveRouteTableIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "One or more route table IDs to disassociate from the endpoint."
        }
      },
      "description": "Contains the parameters for ModifyVpcEndpoint."
    },
    "ModifyVpcEndpointResult": {
      "type": "object",
      "properties": {
        "Return": {
          "$ref": "#/definitions/Boolean",
          "description": "Returns <code>true</code> if the request succeeds; otherwise, it returns an error."
        }
      },
      "description": "Contains the output of ModifyVpcEndpoint."
    },
    "ModifyVpcPeeringConnectionOptionsRequest": {
      "type": "object",
      "required": [
        "VpcPeeringConnectionId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the operation, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcPeeringConnectionId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC peering connection."
        },
        "RequesterPeeringConnectionOptions": {
          "$ref": "#/definitions/PeeringConnectionOptionsRequest",
          "description": "The VPC peering connection options for the requester VPC."
        },
        "AccepterPeeringConnectionOptions": {
          "$ref": "#/definitions/PeeringConnectionOptionsRequest",
          "description": "The VPC peering connection options for the accepter VPC."
        }
      }
    },
    "ModifyVpcPeeringConnectionOptionsResult": {
      "type": "object",
      "properties": {
        "RequesterPeeringConnectionOptions": {
          "$ref": "#/definitions/PeeringConnectionOptions",
          "description": "Information about the VPC peering connection options for the requester VPC."
        },
        "AccepterPeeringConnectionOptions": {
          "$ref": "#/definitions/PeeringConnectionOptions",
          "description": "Information about the VPC peering connection options for the accepter VPC."
        }
      }
    },
    "MonitorInstancesRequest": {
      "type": "object",
      "required": [
        "InstanceIds"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceIds": {
          "$ref": "#/definitions/InstanceIdStringList",
          "description": "One or more instance IDs."
        }
      },
      "description": "Contains the parameters for MonitorInstances."
    },
    "MonitorInstancesResult": {
      "type": "object",
      "properties": {
        "InstanceMonitorings": {
          "$ref": "#/definitions/InstanceMonitoringList",
          "description": "Monitoring information for one or more instances."
        }
      },
      "description": "Contains the output of MonitorInstances."
    },
    "Monitoring": {
      "type": "object",
      "properties": {
        "State": {
          "$ref": "#/definitions/MonitoringState",
          "description": "Indicates whether monitoring is enabled for the instance."
        }
      },
      "description": "Describes the monitoring for the instance."
    },
    "MonitoringState": {
      "type": "string",
      "enum": [
        "disabled",
        "disabling",
        "enabled",
        "pending"
      ]
    },
    "MoveAddressToVpcRequest": {
      "type": "object",
      "required": [
        "PublicIp"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "PublicIp": {
          "$ref": "#/definitions/String",
          "description": "The Elastic IP address."
        }
      },
      "description": "Contains the parameters for MoveAddressToVpc."
    },
    "MoveAddressToVpcResult": {
      "type": "object",
      "properties": {
        "AllocationId": {
          "$ref": "#/definitions/String",
          "description": "The allocation ID for the Elastic IP address."
        },
        "Status": {
          "$ref": "#/definitions/Status",
          "description": "The status of the move of the IP address."
        }
      },
      "description": "Contains the output of MoveAddressToVpc."
    },
    "MoveStatus": {
      "type": "string",
      "enum": [
        "movingToVpc",
        "restoringToClassic"
      ]
    },
    "MovingAddressStatus": {
      "type": "object",
      "properties": {
        "PublicIp": {
          "$ref": "#/definitions/String",
          "description": "The Elastic IP address."
        },
        "MoveStatus": {
          "$ref": "#/definitions/MoveStatus",
          "description": "The status of the Elastic IP address that's being moved to the EC2-VPC platform, or restored to the EC2-Classic platform."
        }
      },
      "description": "Describes the status of a moving Elastic IP address."
    },
    "MovingAddressStatusSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MovingAddressStatus"
      }
    },
    "NatGateway": {
      "type": "object",
      "properties": {
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC in which the NAT gateway is located."
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet in which the NAT gateway is located."
        },
        "NatGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the NAT gateway."
        },
        "CreateTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time the NAT gateway was created."
        },
        "DeleteTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time the NAT gateway was deleted, if applicable."
        },
        "NatGatewayAddresses": {
          "$ref": "#/definitions/NatGatewayAddressList",
          "description": "Information about the IP addresses and network interface associated with the NAT gateway."
        },
        "State": {
          "$ref": "#/definitions/NatGatewayState",
          "description": "<p>The state of the NAT gateway.</p> <ul> <li> <p> <code>pending</code>: The NAT gateway is being created and is not ready to process traffic.</p> </li> <li> <p> <code>failed</code>: The NAT gateway could not be created. Check the <code>failureCode</code> and <code>failureMessage</code> fields for the reason.</p> </li> <li> <p> <code>available</code>: The NAT gateway is able to process traffic. This status remains until you delete the NAT gateway, and does not indicate the health of the NAT gateway.</p> </li> <li> <p> <code>deleting</code>: The NAT gateway is in the process of being terminated and may still be processing traffic.</p> </li> <li> <p> <code>deleted</code>: The NAT gateway has been terminated and is no longer processing traffic.</p> </li> </ul>"
        },
        "FailureCode": {
          "$ref": "#/definitions/String",
          "description": "If the NAT gateway could not be created, specifies the error code for the failure. (<code>InsufficientFreeAddressesInSubnet</code> | <code>Gateway.NotAttached</code> | <code>InvalidAllocationID.NotFound</code> | <code>Resource.AlreadyAssociated</code> | <code>InternalError</code> | <code>InvalidSubnetID.NotFound</code>)"
        },
        "FailureMessage": {
          "$ref": "#/definitions/String",
          "description": "<p>If the NAT gateway could not be created, specifies the error message for the failure, that corresponds to the error code.</p> <ul> <li> <p>For InsufficientFreeAddressesInSubnet: \"Subnet has insufficient free addresses to create this NAT gateway\"</p> </li> <li> <p>For Gateway.NotAttached: \"Network vpc-xxxxxxxx has no Internet gateway attached\"</p> </li> <li> <p>For InvalidAllocationID.NotFound: \"Elastic IP address eipalloc-xxxxxxxx could not be associated with this NAT gateway\"</p> </li> <li> <p>For Resource.AlreadyAssociated: \"Elastic IP address eipalloc-xxxxxxxx is already associated\"</p> </li> <li> <p>For InternalError: \"Network interface eni-xxxxxxxx, created and used internally by this NAT gateway is in an invalid state. Please try again.\"</p> </li> <li> <p>For InvalidSubnetID.NotFound: \"The specified subnet subnet-xxxxxxxx does not exist or could not be found.\"</p> </li> </ul>"
        },
        "ProvisionedBandwidth": {
          "$ref": "#/definitions/ProvisionedBandwidth",
          "description": "Reserved. If you need to sustain traffic greater than the <a href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html\">documented limits</a>, contact us through the <a href=\"https://console.aws.amazon.com/support/home?\">Support Center</a>."
        }
      },
      "description": "Describes a NAT gateway."
    },
    "NatGatewayAddress": {
      "type": "object",
      "properties": {
        "PublicIp": {
          "$ref": "#/definitions/String",
          "description": "The Elastic IP address associated with the NAT gateway."
        },
        "AllocationId": {
          "$ref": "#/definitions/String",
          "description": "The allocation ID of the Elastic IP address that's associated with the NAT gateway."
        },
        "PrivateIp": {
          "$ref": "#/definitions/String",
          "description": "The private IP address associated with the Elastic IP address."
        },
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface associated with the NAT gateway."
        }
      },
      "description": "Describes the IP addresses and network interface associated with a NAT gateway."
    },
    "NatGatewayAddressList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/NatGatewayAddress"
      }
    },
    "NatGatewayList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/NatGateway"
      }
    },
    "NatGatewayState": {
      "type": "string",
      "enum": [
        "pending",
        "failed",
        "available",
        "deleting",
        "deleted"
      ]
    },
    "NetworkAcl": {
      "type": "object",
      "properties": {
        "NetworkAclId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network ACL."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC for the network ACL."
        },
        "IsDefault": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether this is the default network ACL for the VPC."
        },
        "Entries": {
          "$ref": "#/definitions/NetworkAclEntryList",
          "description": "One or more entries (rules) in the network ACL."
        },
        "Associations": {
          "$ref": "#/definitions/NetworkAclAssociationList",
          "description": "Any associations between the network ACL and one or more subnets"
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the network ACL."
        }
      },
      "description": "Describes a network ACL."
    },
    "NetworkAclAssociation": {
      "type": "object",
      "properties": {
        "NetworkAclAssociationId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the association between a network ACL and a subnet."
        },
        "NetworkAclId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network ACL."
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet."
        }
      },
      "description": "Describes an association between a network ACL and a subnet."
    },
    "NetworkAclAssociationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/NetworkAclAssociation"
      }
    },
    "NetworkAclEntry": {
      "type": "object",
      "properties": {
        "RuleNumber": {
          "$ref": "#/definitions/Integer",
          "description": "The rule number for the entry. ACL entries are processed in ascending order by rule number."
        },
        "Protocol": {
          "$ref": "#/definitions/String",
          "description": "The protocol. A value of <code>-1</code> means all protocols."
        },
        "RuleAction": {
          "$ref": "#/definitions/RuleAction",
          "description": "Indicates whether to allow or deny the traffic that matches the rule."
        },
        "Egress": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the rule is an egress rule (applied to traffic leaving the subnet)."
        },
        "CidrBlock": {
          "$ref": "#/definitions/String",
          "description": "The network range to allow or deny, in CIDR notation."
        },
        "IcmpTypeCode": {
          "$ref": "#/definitions/IcmpTypeCode",
          "description": "ICMP protocol: The ICMP type and code."
        },
        "PortRange": {
          "$ref": "#/definitions/PortRange",
          "description": "TCP or UDP protocols: The range of ports the rule applies to."
        }
      },
      "description": "Describes an entry in a network ACL."
    },
    "NetworkAclEntryList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/NetworkAclEntry"
      }
    },
    "NetworkAclList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/NetworkAcl"
      }
    },
    "NetworkInterface": {
      "type": "object",
      "properties": {
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface."
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description."
        },
        "OwnerId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account ID of the owner of the network interface."
        },
        "RequesterId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the entity that launched the instance on your behalf (for example, AWS Management Console or Auto Scaling)."
        },
        "RequesterManaged": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the network interface is being managed by AWS."
        },
        "Status": {
          "$ref": "#/definitions/NetworkInterfaceStatus",
          "description": "The status of the network interface."
        },
        "MacAddress": {
          "$ref": "#/definitions/String",
          "description": "The MAC address."
        },
        "PrivateIpAddress": {
          "$ref": "#/definitions/String",
          "description": "The IP address of the network interface within the subnet."
        },
        "PrivateDnsName": {
          "$ref": "#/definitions/String",
          "description": "The private DNS name."
        },
        "SourceDestCheck": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether traffic to or from the instance is validated."
        },
        "Groups": {
          "$ref": "#/definitions/GroupIdentifierList",
          "description": "Any security groups for the network interface."
        },
        "Attachment": {
          "$ref": "#/definitions/NetworkInterfaceAttachment",
          "description": "The network interface attachment."
        },
        "Association": {
          "$ref": "#/definitions/NetworkInterfaceAssociation",
          "description": "The association information for an Elastic IP associated with the network interface."
        },
        "TagSet": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the network interface."
        },
        "PrivateIpAddresses": {
          "$ref": "#/definitions/NetworkInterfacePrivateIpAddressList",
          "description": "The private IP addresses associated with the network interface."
        },
        "InterfaceType": {
          "$ref": "#/definitions/NetworkInterfaceType",
          "description": "The type of interface."
        }
      },
      "description": "Describes a network interface."
    },
    "NetworkInterfaceAssociation": {
      "type": "object",
      "properties": {
        "PublicIp": {
          "$ref": "#/definitions/String",
          "description": "The address of the Elastic IP address bound to the network interface."
        },
        "PublicDnsName": {
          "$ref": "#/definitions/String",
          "description": "The public DNS name."
        },
        "IpOwnerId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Elastic IP address owner."
        },
        "AllocationId": {
          "$ref": "#/definitions/String",
          "description": "The allocation ID."
        },
        "AssociationId": {
          "$ref": "#/definitions/String",
          "description": "The association ID."
        }
      },
      "description": "Describes association information for an Elastic IP address."
    },
    "NetworkInterfaceAttachment": {
      "type": "object",
      "properties": {
        "AttachmentId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface attachment."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "InstanceOwnerId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account ID of the owner of the instance."
        },
        "DeviceIndex": {
          "$ref": "#/definitions/Integer",
          "description": "The device index of the network interface attachment on the instance."
        },
        "Status": {
          "$ref": "#/definitions/AttachmentStatus",
          "description": "The attachment state."
        },
        "AttachTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The timestamp indicating when the attachment initiated."
        },
        "DeleteOnTermination": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the network interface is deleted when the instance is terminated."
        }
      },
      "description": "Describes a network interface attachment."
    },
    "NetworkInterfaceAttachmentChanges": {
      "type": "object",
      "properties": {
        "AttachmentId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface attachment."
        },
        "DeleteOnTermination": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the network interface is deleted when the instance is terminated."
        }
      },
      "description": "Describes an attachment change."
    },
    "NetworkInterfaceAttribute": {
      "type": "string",
      "enum": [
        "description",
        "groupSet",
        "sourceDestCheck",
        "attachment"
      ]
    },
    "NetworkInterfaceIdList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "NetworkInterfaceList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/NetworkInterface"
      }
    },
    "NetworkInterfacePrivateIpAddress": {
      "type": "object",
      "properties": {
        "PrivateIpAddress": {
          "$ref": "#/definitions/String",
          "description": "The private IP address."
        },
        "PrivateDnsName": {
          "$ref": "#/definitions/String",
          "description": "The private DNS name."
        },
        "Primary": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether this IP address is the primary private IP address of the network interface."
        },
        "Association": {
          "$ref": "#/definitions/NetworkInterfaceAssociation",
          "description": "The association information for an Elastic IP address associated with the network interface."
        }
      },
      "description": "Describes the private IP address of a network interface."
    },
    "NetworkInterfacePrivateIpAddressList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/NetworkInterfacePrivateIpAddress"
      }
    },
    "NetworkInterfaceStatus": {
      "type": "string",
      "enum": [
        "available",
        "attaching",
        "in-use",
        "detaching"
      ]
    },
    "NetworkInterfaceType": {
      "type": "string",
      "enum": [
        "interface",
        "natGateway"
      ]
    },
    "NewDhcpConfiguration": {
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/String"
        },
        "Values": {
          "$ref": "#/definitions/ValueStringList"
        }
      }
    },
    "NewDhcpConfigurationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/NewDhcpConfiguration"
      }
    },
    "NextToken": {
      "type": "string",
      "minLength": 1,
      "maxLength": 1024
    },
    "OccurrenceDayRequestSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Integer"
      }
    },
    "OccurrenceDaySet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Integer"
      }
    },
    "OfferingTypeValues": {
      "type": "string",
      "enum": [
        "Heavy Utilization",
        "Medium Utilization",
        "Light Utilization",
        "No Upfront",
        "Partial Upfront",
        "All Upfront"
      ]
    },
    "OperationType": {
      "type": "string",
      "enum": [
        "add",
        "remove"
      ]
    },
    "OwnerStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "PaymentOption": {
      "type": "string",
      "enum": [
        "AllUpfront",
        "PartialUpfront",
        "NoUpfront"
      ]
    },
    "PeeringConnectionOptions": {
      "type": "object",
      "properties": {
        "AllowEgressFromLocalClassicLinkToRemoteVpc": {
          "$ref": "#/definitions/Boolean",
          "description": "If true, enables outbound communication from an EC2-Classic instance that's linked to a local VPC via ClassicLink to instances in a peer VPC."
        },
        "AllowEgressFromLocalVpcToRemoteClassicLink": {
          "$ref": "#/definitions/Boolean",
          "description": "If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that's linked to a peer VPC via ClassicLink."
        },
        "AllowDnsResolutionFromRemoteVpc": {
          "$ref": "#/definitions/Boolean",
          "description": "If true, enables a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC."
        }
      },
      "description": "Describes the VPC peering connection options."
    },
    "PeeringConnectionOptionsRequest": {
      "type": "object",
      "properties": {
        "AllowEgressFromLocalClassicLinkToRemoteVpc": {
          "$ref": "#/definitions/Boolean",
          "description": "If true, enables outbound communication from an EC2-Classic instance that's linked to a local VPC via ClassicLink to instances in a peer VPC."
        },
        "AllowEgressFromLocalVpcToRemoteClassicLink": {
          "$ref": "#/definitions/Boolean",
          "description": "If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that's linked to a peer VPC via ClassicLink."
        },
        "AllowDnsResolutionFromRemoteVpc": {
          "$ref": "#/definitions/Boolean",
          "description": "If true, enables a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC."
        }
      },
      "description": "The VPC peering connection options."
    },
    "PermissionGroup": {
      "type": "string",
      "enum": [
        "all"
      ]
    },
    "Placement": {
      "type": "object",
      "properties": {
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone of the instance."
        },
        "GroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the placement group the instance is in (for cluster compute instances)."
        },
        "Tenancy": {
          "$ref": "#/definitions/Tenancy",
          "description": "The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code> tenancy is not supported for the <a>ImportInstance</a> command."
        },
        "HostId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Dedicted host on which the instance resides. This parameter is not support for the <a>ImportInstance</a> command."
        },
        "Affinity": {
          "$ref": "#/definitions/String",
          "description": "The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the <a>ImportInstance</a> command."
        }
      },
      "description": "Describes the placement for the instance."
    },
    "PlacementGroup": {
      "type": "object",
      "properties": {
        "GroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the placement group."
        },
        "Strategy": {
          "$ref": "#/definitions/PlacementStrategy",
          "description": "The placement strategy."
        },
        "State": {
          "$ref": "#/definitions/PlacementGroupState",
          "description": "The state of the placement group."
        }
      },
      "description": "Describes a placement group."
    },
    "PlacementGroupList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PlacementGroup"
      }
    },
    "PlacementGroupState": {
      "type": "string",
      "enum": [
        "pending",
        "available",
        "deleting",
        "deleted"
      ]
    },
    "PlacementGroupStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "PlacementStrategy": {
      "type": "string",
      "enum": [
        "cluster"
      ]
    },
    "PlatformValues": {
      "type": "string",
      "enum": [
        "Windows"
      ]
    },
    "PortRange": {
      "type": "object",
      "properties": {
        "From": {
          "$ref": "#/definitions/Integer",
          "description": "The first port in the range."
        },
        "To": {
          "$ref": "#/definitions/Integer",
          "description": "The last port in the range."
        }
      },
      "description": "Describes a range of ports."
    },
    "PrefixList": {
      "type": "object",
      "properties": {
        "PrefixListId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the prefix."
        },
        "PrefixListName": {
          "$ref": "#/definitions/String",
          "description": "The name of the prefix."
        },
        "Cidrs": {
          "$ref": "#/definitions/ValueStringList",
          "description": "The IP address range of the AWS service."
        }
      },
      "description": "Describes prefixes for AWS services."
    },
    "PrefixListId": {
      "type": "object",
      "properties": {
        "PrefixListId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the prefix."
        }
      },
      "description": "The ID of the prefix."
    },
    "PrefixListIdList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PrefixListId"
      }
    },
    "PrefixListIdSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "PrefixListSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PrefixList"
      }
    },
    "PriceSchedule": {
      "type": "object",
      "properties": {
        "Term": {
          "$ref": "#/definitions/Long",
          "description": "The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires."
        },
        "Price": {
          "$ref": "#/definitions/Double",
          "description": "The fixed price for the term."
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCodeValues",
          "description": "The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>."
        },
        "Active": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>The current price schedule, as determined by the term remaining for the Reserved Instance in the listing.</p> <p>A specific price schedule is always in effect, but only one price schedule can be active at any time. Take, for example, a Reserved Instance listing that has five months remaining in its term. When you specify price schedules for five months and two months, this means that schedule 1, covering the first three months of the remaining term, will be active during months 5, 4, and 3. Then schedule 2, covering the last two months of the term, will be active for months 2 and 1.</p>"
        }
      },
      "description": "Describes the price for a Reserved Instance."
    },
    "PriceScheduleList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PriceSchedule"
      }
    },
    "PriceScheduleSpecification": {
      "type": "object",
      "properties": {
        "Term": {
          "$ref": "#/definitions/Long",
          "description": "The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires."
        },
        "Price": {
          "$ref": "#/definitions/Double",
          "description": "The fixed price for the term."
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCodeValues",
          "description": "The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>."
        }
      },
      "description": "Describes the price for a Reserved Instance."
    },
    "PriceScheduleSpecificationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PriceScheduleSpecification"
      }
    },
    "PricingDetail": {
      "type": "object",
      "properties": {
        "Price": {
          "$ref": "#/definitions/Double",
          "description": "The price per instance."
        },
        "Count": {
          "$ref": "#/definitions/Integer",
          "description": "The number of reservations available for the price."
        }
      },
      "description": "Describes a Reserved Instance offering."
    },
    "PricingDetailsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PricingDetail"
      }
    },
    "PrivateIpAddressConfigSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ScheduledInstancesPrivateIpAddressConfig"
      }
    },
    "PrivateIpAddressSpecification": {
      "type": "object",
      "required": [
        "PrivateIpAddress"
      ],
      "properties": {
        "PrivateIpAddress": {
          "$ref": "#/definitions/String",
          "description": "The private IP addresses."
        },
        "Primary": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the private IP address is the primary private IP address. Only one IP address can be designated as primary."
        }
      },
      "description": "Describes a secondary private IP address for a network interface."
    },
    "PrivateIpAddressSpecificationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PrivateIpAddressSpecification"
      }
    },
    "PrivateIpAddressStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "ProductCode": {
      "type": "object",
      "properties": {
        "ProductCodeId": {
          "$ref": "#/definitions/String",
          "description": "The product code."
        },
        "ProductCodeType": {
          "$ref": "#/definitions/ProductCodeValues",
          "description": "The type of product code."
        }
      },
      "description": "Describes a product code."
    },
    "ProductCodeList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ProductCode"
      }
    },
    "ProductCodeStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "ProductCodeValues": {
      "type": "string",
      "enum": [
        "devpay",
        "marketplace"
      ]
    },
    "ProductDescriptionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "PropagatingVgw": {
      "type": "object",
      "properties": {
        "GatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the virtual private gateway (VGW)."
        }
      },
      "description": "Describes a virtual private gateway propagating route."
    },
    "PropagatingVgwList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PropagatingVgw"
      }
    },
    "ProvisionedBandwidth": {
      "type": "object",
      "properties": {
        "Provisioned": {
          "$ref": "#/definitions/String",
          "description": "Reserved. If you need to sustain traffic greater than the <a href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html\">documented limits</a>, contact us through the <a href=\"https://console.aws.amazon.com/support/home?\">Support Center</a>."
        },
        "Requested": {
          "$ref": "#/definitions/String",
          "description": "Reserved. If you need to sustain traffic greater than the <a href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html\">documented limits</a>, contact us through the <a href=\"https://console.aws.amazon.com/support/home?\">Support Center</a>."
        },
        "RequestTime": {
          "$ref": "#/definitions/DateTime",
          "description": "Reserved. If you need to sustain traffic greater than the <a href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html\">documented limits</a>, contact us through the <a href=\"https://console.aws.amazon.com/support/home?\">Support Center</a>."
        },
        "ProvisionTime": {
          "$ref": "#/definitions/DateTime",
          "description": "Reserved. If you need to sustain traffic greater than the <a href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html\">documented limits</a>, contact us through the <a href=\"https://console.aws.amazon.com/support/home?\">Support Center</a>."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "Reserved. If you need to sustain traffic greater than the <a href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html\">documented limits</a>, contact us through the <a href=\"https://console.aws.amazon.com/support/home?\">Support Center</a>."
        }
      },
      "description": "Reserved. If you need to sustain traffic greater than the <a href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html\">documented limits</a>, contact us through the <a href=\"https://console.aws.amazon.com/support/home?\">Support Center</a>."
    },
    "PublicIpStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "Purchase": {
      "type": "object",
      "properties": {
        "HostReservationId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the reservation."
        },
        "HostIdSet": {
          "$ref": "#/definitions/ResponseHostIdSet",
          "description": "The IDs of the Dedicated Hosts associated with the reservation."
        },
        "InstanceFamily": {
          "$ref": "#/definitions/String",
          "description": "The instance family on the Dedicated Host that the reservation can be associated with."
        },
        "PaymentOption": {
          "$ref": "#/definitions/PaymentOption",
          "description": "The payment option for the reservation."
        },
        "UpfrontPrice": {
          "$ref": "#/definitions/String",
          "description": "The upfront price of the reservation."
        },
        "HourlyPrice": {
          "$ref": "#/definitions/String",
          "description": "The hourly price of the reservation per hour."
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCodeValues",
          "description": "The currency in which the <code>UpfrontPrice</code> and <code>HourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>."
        },
        "Duration": {
          "$ref": "#/definitions/Integer",
          "description": "The duration of the reservation's term in seconds."
        }
      },
      "description": "Describes the result of the purchase."
    },
    "PurchaseHostReservationRequest": {
      "type": "object",
      "required": [
        "OfferingId",
        "HostIdSet"
      ],
      "properties": {
        "OfferingId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the offering."
        },
        "HostIdSet": {
          "$ref": "#/definitions/RequestHostIdSet",
          "description": "The ID/s of the Dedicated Host/s that the reservation will be associated with."
        },
        "LimitPrice": {
          "$ref": "#/definitions/String",
          "description": "The specified limit is checked against the total upfront cost of the reservation (calculated as the offering's upfront cost multiplied by the host count). If the total upfront cost is greater than the specified price limit, the request will fail. This is used to ensure that the purchase does not exceed the expected upfront cost of the purchase. At this time, the only supported currency is <code>USD</code>. For example, to indicate a limit price of USD 100, specify 100.00."
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCodeValues",
          "description": "The currency in which the <code>totalUpfrontPrice</code>, <code>LimitPrice</code>, and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>."
        }
      }
    },
    "PurchaseHostReservationResult": {
      "type": "object",
      "properties": {
        "Purchase": {
          "$ref": "#/definitions/PurchaseSet",
          "description": "Describes the details of the purchase."
        },
        "TotalUpfrontPrice": {
          "$ref": "#/definitions/String",
          "description": "The total amount that will be charged to your account when you purchase the reservation."
        },
        "TotalHourlyPrice": {
          "$ref": "#/definitions/String",
          "description": "The total hourly price of the reservation calculated per hour."
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCodeValues",
          "description": "The currency in which the <code>totalUpfrontPrice</code> and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i> "
        }
      }
    },
    "PurchaseRequest": {
      "type": "object",
      "required": [
        "PurchaseToken",
        "InstanceCount"
      ],
      "properties": {
        "PurchaseToken": {
          "$ref": "#/definitions/String",
          "description": "The purchase token."
        },
        "InstanceCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of instances."
        }
      },
      "description": "Describes a request to purchase Scheduled Instances."
    },
    "PurchaseRequestSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PurchaseRequest"
      },
      "minItems": 1
    },
    "PurchaseReservedInstancesOfferingRequest": {
      "type": "object",
      "required": [
        "ReservedInstancesOfferingId",
        "InstanceCount"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ReservedInstancesOfferingId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Reserved Instance offering to purchase."
        },
        "InstanceCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of Reserved Instances to purchase."
        },
        "LimitPrice": {
          "$ref": "#/definitions/ReservedInstanceLimitPrice",
          "description": "Specified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices."
        }
      },
      "description": "Contains the parameters for PurchaseReservedInstancesOffering."
    },
    "PurchaseReservedInstancesOfferingResult": {
      "type": "object",
      "properties": {
        "ReservedInstancesId": {
          "$ref": "#/definitions/String",
          "description": "The IDs of the purchased Reserved Instances."
        }
      },
      "description": "Contains the output of PurchaseReservedInstancesOffering."
    },
    "PurchaseScheduledInstancesRequest": {
      "type": "object",
      "required": [
        "PurchaseRequests"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>."
        },
        "PurchaseRequests": {
          "$ref": "#/definitions/PurchaseRequestSet",
          "description": "One or more purchase requests."
        }
      },
      "description": "Contains the parameters for PurchaseScheduledInstances."
    },
    "PurchaseScheduledInstancesResult": {
      "type": "object",
      "properties": {
        "ScheduledInstanceSet": {
          "$ref": "#/definitions/PurchasedScheduledInstanceSet",
          "description": "Information about the Scheduled Instances."
        }
      },
      "description": "Contains the output of PurchaseScheduledInstances."
    },
    "PurchaseSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Purchase"
      }
    },
    "PurchasedScheduledInstanceSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ScheduledInstance"
      }
    },
    "RIProductDescription": {
      "type": "string",
      "enum": [
        "Linux/UNIX",
        "Linux/UNIX (Amazon VPC)",
        "Windows",
        "Windows (Amazon VPC)"
      ]
    },
    "ReasonCodesList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ReportInstanceReasonCodes"
      }
    },
    "RebootInstancesRequest": {
      "type": "object",
      "required": [
        "InstanceIds"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceIds": {
          "$ref": "#/definitions/InstanceIdStringList",
          "description": "One or more instance IDs."
        }
      },
      "description": "Contains the parameters for RebootInstances."
    },
    "RecurringCharge": {
      "type": "object",
      "properties": {
        "Frequency": {
          "$ref": "#/definitions/RecurringChargeFrequency",
          "description": "The frequency of the recurring charge."
        },
        "Amount": {
          "$ref": "#/definitions/Double",
          "description": "The amount of the recurring charge."
        }
      },
      "description": "Describes a recurring charge."
    },
    "RecurringChargeFrequency": {
      "type": "string",
      "enum": [
        "Hourly"
      ]
    },
    "RecurringChargesList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RecurringCharge"
      }
    },
    "Region": {
      "type": "object",
      "properties": {
        "RegionName": {
          "$ref": "#/definitions/String",
          "description": "The name of the region."
        },
        "Endpoint": {
          "$ref": "#/definitions/String",
          "description": "The region service endpoint."
        }
      },
      "description": "Describes a region."
    },
    "RegionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Region"
      }
    },
    "RegionNameStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "RegisterImageRequest": {
      "type": "object",
      "required": [
        "Name"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ImageLocation": {
          "$ref": "#/definitions/String",
          "description": "The full path to your AMI manifest in Amazon S3 storage."
        },
        "Name": {
          "$ref": "#/definitions/String",
          "description": "<p>A name for your AMI.</p> <p>Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)</p>"
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description for your AMI."
        },
        "Architecture": {
          "$ref": "#/definitions/ArchitectureValues",
          "description": "<p>The architecture of the AMI.</p> <p>Default: For Amazon EBS-backed AMIs, <code>i386</code>. For instance store-backed AMIs, the architecture specified in the manifest file.</p>"
        },
        "KernelId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the kernel."
        },
        "RamdiskId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the RAM disk."
        },
        "RootDeviceName": {
          "$ref": "#/definitions/String",
          "description": "The name of the root device (for example, <code>/dev/sda1</code>, or <code>/dev/xvda</code>)."
        },
        "BlockDeviceMappings": {
          "$ref": "#/definitions/BlockDeviceMappingRequestList",
          "description": "One or more block device mapping entries."
        },
        "VirtualizationType": {
          "$ref": "#/definitions/String",
          "description": "<p>The type of virtualization.</p> <p>Default: <code>paravirtual</code> </p>"
        },
        "SriovNetSupport": {
          "$ref": "#/definitions/String",
          "description": "<p>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual Function interface for the AMI and any instances that you launch from the AMI.</p> <p>There is no way to disable <code>sriovNetSupport</code> at this time.</p> <p>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.</p>"
        },
        "EnaSupport": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Set to <code>true</code> to enable enhanced networking with ENA for the AMI and any instances that you launch from the AMI.</p> <p>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.</p>"
        }
      },
      "description": "Contains the parameters for RegisterImage."
    },
    "RegisterImageResult": {
      "type": "object",
      "properties": {
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the newly registered AMI."
        }
      },
      "description": "Contains the output of RegisterImage."
    },
    "RejectVpcPeeringConnectionRequest": {
      "type": "object",
      "required": [
        "VpcPeeringConnectionId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "VpcPeeringConnectionId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC peering connection."
        }
      },
      "description": "Contains the parameters for RejectVpcPeeringConnection."
    },
    "RejectVpcPeeringConnectionResult": {
      "type": "object",
      "properties": {
        "Return": {
          "$ref": "#/definitions/Boolean",
          "description": "Returns <code>true</code> if the request succeeds; otherwise, it returns an error."
        }
      },
      "description": "Contains the output of RejectVpcPeeringConnection."
    },
    "ReleaseAddressRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "PublicIp": {
          "$ref": "#/definitions/String",
          "description": "[EC2-Classic] The Elastic IP address. Required for EC2-Classic."
        },
        "AllocationId": {
          "$ref": "#/definitions/String",
          "description": "[EC2-VPC] The allocation ID. Required for EC2-VPC."
        }
      },
      "description": "Contains the parameters for ReleaseAddress."
    },
    "ReleaseHostsRequest": {
      "type": "object",
      "required": [
        "HostIds"
      ],
      "properties": {
        "HostIds": {
          "$ref": "#/definitions/RequestHostIdList",
          "description": "The IDs of the Dedicated Hosts you want to release."
        }
      },
      "description": "Contains the parameters for ReleaseHosts."
    },
    "ReleaseHostsResult": {
      "type": "object",
      "properties": {
        "Successful": {
          "$ref": "#/definitions/ResponseHostIdList",
          "description": "The IDs of the Dedicated Hosts that were successfully released."
        },
        "Unsuccessful": {
          "$ref": "#/definitions/UnsuccessfulItemList",
          "description": "The IDs of the Dedicated Hosts that could not be released, including an error message."
        }
      },
      "description": "Contains the output of ReleaseHosts."
    },
    "ReplaceNetworkAclAssociationRequest": {
      "type": "object",
      "required": [
        "AssociationId",
        "NetworkAclId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "AssociationId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the current association between the original network ACL and the subnet."
        },
        "NetworkAclId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the new network ACL to associate with the subnet."
        }
      },
      "description": "Contains the parameters for ReplaceNetworkAclAssociation."
    },
    "ReplaceNetworkAclAssociationResult": {
      "type": "object",
      "properties": {
        "NewAssociationId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the new association."
        }
      },
      "description": "Contains the output of ReplaceNetworkAclAssociation."
    },
    "ReplaceNetworkAclEntryRequest": {
      "type": "object",
      "required": [
        "NetworkAclId",
        "RuleNumber",
        "Protocol",
        "RuleAction",
        "Egress",
        "CidrBlock"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "NetworkAclId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the ACL."
        },
        "RuleNumber": {
          "$ref": "#/definitions/Integer",
          "description": "The rule number of the entry to replace."
        },
        "Protocol": {
          "$ref": "#/definitions/String",
          "description": "The IP protocol. You can specify <code>all</code> or <code>-1</code> to mean all protocols."
        },
        "RuleAction": {
          "$ref": "#/definitions/RuleAction",
          "description": "Indicates whether to allow or deny the traffic that matches the rule."
        },
        "Egress": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Indicates whether to replace the egress rule.</p> <p>Default: If no value is specified, we replace the ingress rule.</p>"
        },
        "CidrBlock": {
          "$ref": "#/definitions/String",
          "description": "The network range to allow or deny, in CIDR notation."
        },
        "IcmpTypeCode": {
          "$ref": "#/definitions/IcmpTypeCode",
          "description": "ICMP protocol: The ICMP type and code. Required if specifying 1 (ICMP) for the protocol."
        },
        "PortRange": {
          "$ref": "#/definitions/PortRange",
          "description": "TCP or UDP protocols: The range of ports the rule applies to. Required if specifying 6 (TCP) or 17 (UDP) for the protocol."
        }
      },
      "description": "Contains the parameters for ReplaceNetworkAclEntry."
    },
    "ReplaceRouteRequest": {
      "type": "object",
      "required": [
        "RouteTableId",
        "DestinationCidrBlock"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "RouteTableId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the route table."
        },
        "DestinationCidrBlock": {
          "$ref": "#/definitions/String",
          "description": "The CIDR address block used for the destination match. The value you provide must match the CIDR of an existing route in the table."
        },
        "GatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of an Internet gateway or virtual private gateway."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of a NAT instance in your VPC."
        },
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of a network interface."
        },
        "VpcPeeringConnectionId": {
          "$ref": "#/definitions/String",
          "description": "The ID of a VPC peering connection."
        },
        "NatGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of a NAT gateway."
        }
      },
      "description": "Contains the parameters for ReplaceRoute."
    },
    "ReplaceRouteTableAssociationRequest": {
      "type": "object",
      "required": [
        "AssociationId",
        "RouteTableId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "AssociationId": {
          "$ref": "#/definitions/String",
          "description": "The association ID."
        },
        "RouteTableId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the new route table to associate with the subnet."
        }
      },
      "description": "Contains the parameters for ReplaceRouteTableAssociation."
    },
    "ReplaceRouteTableAssociationResult": {
      "type": "object",
      "properties": {
        "NewAssociationId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the new association."
        }
      },
      "description": "Contains the output of ReplaceRouteTableAssociation."
    },
    "ReportInstanceReasonCodes": {
      "type": "string",
      "enum": [
        "instance-stuck-in-state",
        "unresponsive",
        "not-accepting-credentials",
        "password-not-available",
        "performance-network",
        "performance-instance-store",
        "performance-ebs-volume",
        "performance-other",
        "other"
      ]
    },
    "ReportInstanceStatusRequest": {
      "type": "object",
      "required": [
        "Instances",
        "Status",
        "ReasonCodes"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "Instances": {
          "$ref": "#/definitions/InstanceIdStringList",
          "description": "One or more instances."
        },
        "Status": {
          "$ref": "#/definitions/ReportStatusType",
          "description": "The status of all instances listed."
        },
        "StartTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The time at which the reported instance health state began."
        },
        "EndTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The time at which the reported instance health state ended."
        },
        "ReasonCodes": {
          "$ref": "#/definitions/ReasonCodesList",
          "description": "<p>One or more reason codes that describes the health state of your instance.</p> <ul> <li> <p> <code>instance-stuck-in-state</code>: My instance is stuck in a state.</p> </li> <li> <p> <code>unresponsive</code>: My instance is unresponsive.</p> </li> <li> <p> <code>not-accepting-credentials</code>: My instance is not accepting my credentials.</p> </li> <li> <p> <code>password-not-available</code>: A password is not available for my instance.</p> </li> <li> <p> <code>performance-network</code>: My instance is experiencing performance problems which I believe are network related.</p> </li> <li> <p> <code>performance-instance-store</code>: My instance is experiencing performance problems which I believe are related to the instance stores.</p> </li> <li> <p> <code>performance-ebs-volume</code>: My instance is experiencing performance problems which I believe are related to an EBS volume.</p> </li> <li> <p> <code>performance-other</code>: My instance is experiencing performance problems.</p> </li> <li> <p> <code>other</code>: [explain using the description parameter]</p> </li> </ul>"
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "Descriptive text about the health state of your instance."
        }
      },
      "description": "Contains the parameters for ReportInstanceStatus."
    },
    "ReportStatusType": {
      "type": "string",
      "enum": [
        "ok",
        "impaired"
      ]
    },
    "RequestHostIdList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "RequestHostIdSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "RequestSpotFleetRequest": {
      "type": "object",
      "required": [
        "SpotFleetRequestConfig"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SpotFleetRequestConfig": {
          "$ref": "#/definitions/SpotFleetRequestConfigData",
          "description": "The configuration for the Spot fleet request."
        }
      },
      "description": "Contains the parameters for RequestSpotFleet."
    },
    "RequestSpotFleetResponse": {
      "type": "object",
      "required": [
        "SpotFleetRequestId"
      ],
      "properties": {
        "SpotFleetRequestId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Spot fleet request."
        }
      },
      "description": "Contains the output of RequestSpotFleet."
    },
    "RequestSpotInstancesRequest": {
      "type": "object",
      "required": [
        "SpotPrice"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SpotPrice": {
          "$ref": "#/definitions/String",
          "description": "The maximum hourly price (bid) for any Spot instance launched to fulfill the request."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\">How to Ensure Idempotency</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>."
        },
        "InstanceCount": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The maximum number of Spot instances to launch.</p> <p>Default: 1</p>"
        },
        "Type": {
          "$ref": "#/definitions/SpotInstanceType",
          "description": "<p>The Spot instance request type.</p> <p>Default: <code>one-time</code> </p>"
        },
        "ValidFrom": {
          "$ref": "#/definitions/DateTime",
          "description": "<p>The start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.</p> <p>Default: The request is effective indefinitely.</p>"
        },
        "ValidUntil": {
          "$ref": "#/definitions/DateTime",
          "description": "<p>The end date of the request. If this is a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached.</p> <p>Default: The request is effective indefinitely.</p>"
        },
        "LaunchGroup": {
          "$ref": "#/definitions/String",
          "description": "<p>The instance launch group. Launch groups are Spot instances that launch together and terminate together.</p> <p>Default: Instances are launched and terminated individually</p>"
        },
        "AvailabilityZoneGroup": {
          "$ref": "#/definitions/String",
          "description": "<p>The user-specified name for a logical grouping of bids.</p> <p>When you specify an Availability Zone group in a Spot Instance request, all Spot instances in the request are launched in the same Availability Zone. Instance proximity is maintained with this parameter, but the choice of Availability Zone is not. The group applies only to bids for Spot Instances of the same instance type. Any additional Spot instance requests that are specified with the same Availability Zone group name are launched in that same Availability Zone, as long as at least one instance from the group is still active.</p> <p>If there is no active instance running in the Availability Zone group that you specify for a new Spot instance request (all instances are terminated, the bid is expired, or the bid falls below current market), then Amazon EC2 launches the instance in any Availability Zone where the constraint can be met. Consequently, the subsequent set of Spot instances could be placed in a different zone from the original request, even if you specified the same Availability Zone group.</p> <p>Default: Instances are launched in any available Availability Zone.</p>"
        },
        "BlockDurationMinutes": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The required duration for the Spot instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).</p> <p>The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.</p> <p>Note that you can't specify an Availability Zone group or a launch group if you specify a duration.</p>"
        },
        "LaunchSpecification": {
          "$ref": "#/definitions/RequestSpotLaunchSpecification"
        }
      },
      "description": "Contains the parameters for RequestSpotInstances."
    },
    "RequestSpotInstancesResult": {
      "type": "object",
      "properties": {
        "SpotInstanceRequests": {
          "$ref": "#/definitions/SpotInstanceRequestList",
          "description": "One or more Spot instance requests."
        }
      },
      "description": "Contains the output of RequestSpotInstances."
    },
    "RequestSpotLaunchSpecification": {
      "type": "object",
      "properties": {
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the AMI."
        },
        "KeyName": {
          "$ref": "#/definitions/String",
          "description": "The name of the key pair."
        },
        "SecurityGroups": {
          "$ref": "#/definitions/ValueStringList"
        },
        "UserData": {
          "$ref": "#/definitions/String",
          "description": "The user data to make available to the instances. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text."
        },
        "AddressingType": {
          "$ref": "#/definitions/String",
          "description": "Deprecated."
        },
        "InstanceType": {
          "$ref": "#/definitions/InstanceType",
          "description": "The instance type."
        },
        "Placement": {
          "$ref": "#/definitions/SpotPlacement",
          "description": "The placement information for the instance."
        },
        "KernelId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the kernel."
        },
        "RamdiskId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the RAM disk."
        },
        "BlockDeviceMappings": {
          "$ref": "#/definitions/BlockDeviceMappingList",
          "description": "<p>One or more block device mapping entries.</p> <p>Although you can specify encrypted EBS volumes in this block device mapping for your Spot Instances, these volumes are not encrypted.</p>"
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet in which to launch the instance."
        },
        "NetworkInterfaces": {
          "$ref": "#/definitions/InstanceNetworkInterfaceSpecificationList",
          "description": "One or more network interfaces."
        },
        "IamInstanceProfile": {
          "$ref": "#/definitions/IamInstanceProfileSpecification",
          "description": "The IAM instance profile."
        },
        "EbsOptimized": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code> </p>"
        },
        "Monitoring": {
          "$ref": "#/definitions/RunInstancesMonitoringEnabled"
        },
        "SecurityGroupIds": {
          "$ref": "#/definitions/ValueStringList"
        }
      },
      "description": "Describes the launch specification for an instance."
    },
    "Reservation": {
      "type": "object",
      "properties": {
        "ReservationId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the reservation."
        },
        "OwnerId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the AWS account that owns the reservation."
        },
        "RequesterId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the requester that launched the instances on your behalf (for example, AWS Management Console or Auto Scaling)."
        },
        "Groups": {
          "$ref": "#/definitions/GroupIdentifierList",
          "description": "[EC2-Classic only] One or more security groups."
        },
        "Instances": {
          "$ref": "#/definitions/InstanceList",
          "description": "One or more instances."
        }
      },
      "description": "Describes a reservation."
    },
    "ReservationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Reservation"
      }
    },
    "ReservationState": {
      "type": "string",
      "enum": [
        "payment-pending",
        "payment-failed",
        "active",
        "retired"
      ]
    },
    "ReservedInstanceLimitPrice": {
      "type": "object",
      "properties": {
        "Amount": {
          "$ref": "#/definitions/Double",
          "description": "Used for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price)."
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCodeValues",
          "description": "The currency in which the <code>limitPrice</code> amount is specified. At this time, the only supported currency is <code>USD</code>."
        }
      },
      "description": "Describes the limit price of a Reserved Instance offering."
    },
    "ReservedInstanceState": {
      "type": "string",
      "enum": [
        "payment-pending",
        "active",
        "payment-failed",
        "retired"
      ]
    },
    "ReservedInstances": {
      "type": "object",
      "properties": {
        "ReservedInstancesId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Reserved Instance."
        },
        "InstanceType": {
          "$ref": "#/definitions/InstanceType",
          "description": "The instance type on which the Reserved Instance can be used."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone in which the Reserved Instance can be used."
        },
        "Start": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time the Reserved Instance started."
        },
        "End": {
          "$ref": "#/definitions/DateTime",
          "description": "The time when the Reserved Instance expires."
        },
        "Duration": {
          "$ref": "#/definitions/Long",
          "description": "The duration of the Reserved Instance, in seconds."
        },
        "UsagePrice": {
          "$ref": "#/definitions/Float",
          "description": "The usage price of the Reserved Instance, per hour."
        },
        "FixedPrice": {
          "$ref": "#/definitions/Float",
          "description": "The purchase price of the Reserved Instance."
        },
        "InstanceCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of reservations purchased."
        },
        "ProductDescription": {
          "$ref": "#/definitions/RIProductDescription",
          "description": "The Reserved Instance product platform description."
        },
        "State": {
          "$ref": "#/definitions/ReservedInstanceState",
          "description": "The state of the Reserved Instance purchase."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the resource."
        },
        "InstanceTenancy": {
          "$ref": "#/definitions/Tenancy",
          "description": "The tenancy of the instance."
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCodeValues",
          "description": "The currency of the Reserved Instance. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is <code>USD</code>."
        },
        "OfferingType": {
          "$ref": "#/definitions/OfferingTypeValues",
          "description": "The Reserved Instance offering type."
        },
        "RecurringCharges": {
          "$ref": "#/definitions/RecurringChargesList",
          "description": "The recurring charge tag assigned to the resource."
        }
      },
      "description": "Describes a Reserved Instance."
    },
    "ReservedInstancesConfiguration": {
      "type": "object",
      "properties": {
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone for the modified Reserved Instances."
        },
        "Platform": {
          "$ref": "#/definitions/String",
          "description": "The network platform of the modified Reserved Instances, which is either EC2-Classic or EC2-VPC."
        },
        "InstanceCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of modified Reserved Instances."
        },
        "InstanceType": {
          "$ref": "#/definitions/InstanceType",
          "description": "The instance type for the modified Reserved Instances."
        }
      },
      "description": "Describes the configuration settings for the modified Reserved Instances."
    },
    "ReservedInstancesConfigurationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ReservedInstancesConfiguration"
      }
    },
    "ReservedInstancesId": {
      "type": "object",
      "properties": {
        "ReservedInstancesId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Reserved Instance."
        }
      },
      "description": "Describes the ID of a Reserved Instance."
    },
    "ReservedInstancesIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "ReservedInstancesList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ReservedInstances"
      }
    },
    "ReservedInstancesListing": {
      "type": "object",
      "properties": {
        "ReservedInstancesListingId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Reserved Instance listing."
        },
        "ReservedInstancesId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Reserved Instance."
        },
        "CreateDate": {
          "$ref": "#/definitions/DateTime",
          "description": "The time the listing was created."
        },
        "UpdateDate": {
          "$ref": "#/definitions/DateTime",
          "description": "The last modified timestamp of the listing."
        },
        "Status": {
          "$ref": "#/definitions/ListingStatus",
          "description": "The status of the Reserved Instance listing."
        },
        "StatusMessage": {
          "$ref": "#/definitions/String",
          "description": "The reason for the current status of the Reserved Instance listing. The response can be blank."
        },
        "InstanceCounts": {
          "$ref": "#/definitions/InstanceCountList",
          "description": "The number of instances in this state."
        },
        "PriceSchedules": {
          "$ref": "#/definitions/PriceScheduleList",
          "description": "The price of the Reserved Instance listing."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the resource."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>."
        }
      },
      "description": "Describes a Reserved Instance listing."
    },
    "ReservedInstancesListingList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ReservedInstancesListing"
      }
    },
    "ReservedInstancesModification": {
      "type": "object",
      "properties": {
        "ReservedInstancesModificationId": {
          "$ref": "#/definitions/String",
          "description": "A unique ID for the Reserved Instance modification."
        },
        "ReservedInstancesIds": {
          "$ref": "#/definitions/ReservedIntancesIds",
          "description": "The IDs of one or more Reserved Instances."
        },
        "ModificationResults": {
          "$ref": "#/definitions/ReservedInstancesModificationResultList",
          "description": "Contains target configurations along with their corresponding new Reserved Instance IDs."
        },
        "CreateDate": {
          "$ref": "#/definitions/DateTime",
          "description": "The time when the modification request was created."
        },
        "UpdateDate": {
          "$ref": "#/definitions/DateTime",
          "description": "The time when the modification request was last updated."
        },
        "EffectiveDate": {
          "$ref": "#/definitions/DateTime",
          "description": "The time for the modification to become effective."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The status of the Reserved Instances modification request."
        },
        "StatusMessage": {
          "$ref": "#/definitions/String",
          "description": "The reason for the status."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>."
        }
      },
      "description": "Describes a Reserved Instance modification."
    },
    "ReservedInstancesModificationIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "ReservedInstancesModificationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ReservedInstancesModification"
      }
    },
    "ReservedInstancesModificationResult": {
      "type": "object",
      "properties": {
        "ReservedInstancesId": {
          "$ref": "#/definitions/String",
          "description": "The ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled."
        },
        "TargetConfiguration": {
          "$ref": "#/definitions/ReservedInstancesConfiguration",
          "description": "The target Reserved Instances configurations supplied as part of the modification request."
        }
      },
      "description": "Describes the modification request/s."
    },
    "ReservedInstancesModificationResultList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ReservedInstancesModificationResult"
      }
    },
    "ReservedInstancesOffering": {
      "type": "object",
      "properties": {
        "ReservedInstancesOfferingId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Reserved Instance offering."
        },
        "InstanceType": {
          "$ref": "#/definitions/InstanceType",
          "description": "The instance type on which the Reserved Instance can be used."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone in which the Reserved Instance can be used."
        },
        "Duration": {
          "$ref": "#/definitions/Long",
          "description": "The duration of the Reserved Instance, in seconds."
        },
        "UsagePrice": {
          "$ref": "#/definitions/Float",
          "description": "The usage price of the Reserved Instance, per hour."
        },
        "FixedPrice": {
          "$ref": "#/definitions/Float",
          "description": "The purchase price of the Reserved Instance."
        },
        "ProductDescription": {
          "$ref": "#/definitions/RIProductDescription",
          "description": "The Reserved Instance product platform description."
        },
        "InstanceTenancy": {
          "$ref": "#/definitions/Tenancy",
          "description": "The tenancy of the instance."
        },
        "CurrencyCode": {
          "$ref": "#/definitions/CurrencyCodeValues",
          "description": "The currency of the Reserved Instance offering you are purchasing. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is <code>USD</code>."
        },
        "OfferingType": {
          "$ref": "#/definitions/OfferingTypeValues",
          "description": "The Reserved Instance offering type."
        },
        "RecurringCharges": {
          "$ref": "#/definitions/RecurringChargesList",
          "description": "The recurring charge tag assigned to the resource."
        },
        "Marketplace": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the offering is available through the Reserved Instance Marketplace (resale) or AWS. If it's a Reserved Instance Marketplace offering, this is <code>true</code>."
        },
        "PricingDetails": {
          "$ref": "#/definitions/PricingDetailsList",
          "description": "The pricing details of the Reserved Instance offering."
        }
      },
      "description": "Describes a Reserved Instance offering."
    },
    "ReservedInstancesOfferingIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "ReservedInstancesOfferingList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ReservedInstancesOffering"
      }
    },
    "ReservedIntancesIds": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ReservedInstancesId"
      }
    },
    "ResetImageAttributeName": {
      "type": "string",
      "enum": [
        "launchPermission"
      ]
    },
    "ResetImageAttributeRequest": {
      "type": "object",
      "required": [
        "ImageId",
        "Attribute"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the AMI."
        },
        "Attribute": {
          "$ref": "#/definitions/ResetImageAttributeName",
          "description": "The attribute to reset (currently you can only reset the launch permission attribute)."
        }
      },
      "description": "Contains the parameters for ResetImageAttribute."
    },
    "ResetInstanceAttributeRequest": {
      "type": "object",
      "required": [
        "InstanceId",
        "Attribute"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "Attribute": {
          "$ref": "#/definitions/InstanceAttributeName",
          "description": "<p>The attribute to reset.</p> <important> <p>You can only reset the following attributes: <code>kernel</code> | <code>ramdisk</code> | <code>sourceDestCheck</code>. To change an instance attribute, use <a>ModifyInstanceAttribute</a>.</p> </important>"
        }
      },
      "description": "Contains the parameters for ResetInstanceAttribute."
    },
    "ResetNetworkInterfaceAttributeRequest": {
      "type": "object",
      "required": [
        "NetworkInterfaceId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface."
        },
        "SourceDestCheck": {
          "$ref": "#/definitions/String",
          "description": "The source/destination checking attribute. Resets the value to <code>true</code>."
        }
      },
      "description": "Contains the parameters for ResetNetworkInterfaceAttribute."
    },
    "ResetSnapshotAttributeRequest": {
      "type": "object",
      "required": [
        "SnapshotId",
        "Attribute"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "SnapshotId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the snapshot."
        },
        "Attribute": {
          "$ref": "#/definitions/SnapshotAttributeName",
          "description": "The attribute to reset. Currently, only the attribute for permission to create volumes can be reset."
        }
      },
      "description": "Contains the parameters for ResetSnapshotAttribute."
    },
    "ResourceIdList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "ResourceType": {
      "type": "string",
      "enum": [
        "customer-gateway",
        "dhcp-options",
        "image",
        "instance",
        "internet-gateway",
        "network-acl",
        "network-interface",
        "reserved-instances",
        "route-table",
        "snapshot",
        "spot-instances-request",
        "subnet",
        "security-group",
        "volume",
        "vpc",
        "vpn-connection",
        "vpn-gateway"
      ]
    },
    "ResponseHostIdList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "ResponseHostIdSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "RestorableByStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "RestoreAddressToClassicRequest": {
      "type": "object",
      "required": [
        "PublicIp"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "PublicIp": {
          "$ref": "#/definitions/String",
          "description": "The Elastic IP address."
        }
      },
      "description": "Contains the parameters for RestoreAddressToClassic."
    },
    "RestoreAddressToClassicResult": {
      "type": "object",
      "properties": {
        "Status": {
          "$ref": "#/definitions/Status",
          "description": "The move status for the IP address."
        },
        "PublicIp": {
          "$ref": "#/definitions/String",
          "description": "The Elastic IP address."
        }
      },
      "description": "Contains the output of RestoreAddressToClassic."
    },
    "RevokeSecurityGroupEgressRequest": {
      "type": "object",
      "required": [
        "GroupId"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "GroupId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the security group."
        },
        "SourceSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of a destination security group. To revoke outbound access to a destination security group, we recommend that you use a set of IP permissions instead."
        },
        "SourceSecurityGroupOwnerId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account number for a destination security group. To revoke outbound access to a destination security group, we recommend that you use a set of IP permissions instead."
        },
        "IpProtocol": {
          "$ref": "#/definitions/String",
          "description": "The IP protocol name or number. We recommend that you specify the protocol in a set of IP permissions instead."
        },
        "FromPort": {
          "$ref": "#/definitions/Integer",
          "description": "The start of port range for the TCP and UDP protocols, or an ICMP type number. We recommend that you specify the port range in a set of IP permissions instead."
        },
        "ToPort": {
          "$ref": "#/definitions/Integer",
          "description": "The end of port range for the TCP and UDP protocols, or an ICMP type number. We recommend that you specify the port range in a set of IP permissions instead."
        },
        "CidrIp": {
          "$ref": "#/definitions/String",
          "description": "The CIDR IP address range. We recommend that you specify the CIDR range in a set of IP permissions instead."
        },
        "IpPermissions": {
          "$ref": "#/definitions/IpPermissionList",
          "description": "A set of IP permissions. You can't specify a destination security group and a CIDR IP address range."
        }
      },
      "description": "Contains the parameters for RevokeSecurityGroupEgress."
    },
    "RevokeSecurityGroupIngressRequest": {
      "type": "object",
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "GroupName": {
          "$ref": "#/definitions/String",
          "description": "[EC2-Classic, default VPC] The name of the security group."
        },
        "GroupId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the security group. Required for a security group in a nondefault VPC."
        },
        "SourceSecurityGroupName": {
          "$ref": "#/definitions/String",
          "description": "[EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. For EC2-VPC, the source security group must be in the same VPC. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead."
        },
        "SourceSecurityGroupOwnerId": {
          "$ref": "#/definitions/String",
          "description": "[EC2-Classic] The AWS account ID of the source security group, if the source security group is in a different account. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead."
        },
        "IpProtocol": {
          "$ref": "#/definitions/String",
          "description": "The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>) or number (see <a href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\">Protocol Numbers</a>). Use <code>-1</code> to specify all."
        },
        "FromPort": {
          "$ref": "#/definitions/Integer",
          "description": "The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use <code>-1</code> to specify all ICMP types."
        },
        "ToPort": {
          "$ref": "#/definitions/Integer",
          "description": "The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use <code>-1</code> to specify all ICMP codes for the ICMP type."
        },
        "CidrIp": {
          "$ref": "#/definitions/String",
          "description": "The CIDR IP address range. You can't specify this parameter when specifying a source security group."
        },
        "IpPermissions": {
          "$ref": "#/definitions/IpPermissionList",
          "description": "A set of IP permissions. You can't specify a source security group and a CIDR IP address range."
        }
      },
      "description": "Contains the parameters for RevokeSecurityGroupIngress."
    },
    "Route": {
      "type": "object",
      "properties": {
        "DestinationCidrBlock": {
          "$ref": "#/definitions/String",
          "description": "The CIDR block used for the destination match."
        },
        "DestinationPrefixListId": {
          "$ref": "#/definitions/String",
          "description": "The prefix of the AWS service."
        },
        "GatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of a gateway attached to your VPC."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of a NAT instance in your VPC."
        },
        "InstanceOwnerId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account ID of the owner of the instance."
        },
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface."
        },
        "VpcPeeringConnectionId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC peering connection."
        },
        "NatGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of a NAT gateway."
        },
        "State": {
          "$ref": "#/definitions/RouteState",
          "description": "The state of the route. The <code>blackhole</code> state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, or the specified NAT instance has been terminated)."
        },
        "Origin": {
          "$ref": "#/definitions/RouteOrigin",
          "description": "<p>Describes how the route was created.</p> <ul> <li> <p> <code>CreateRouteTable</code> - The route was automatically created when the route table was created.</p> </li> <li> <p> <code>CreateRoute</code> - The route was manually added to the route table.</p> </li> <li> <p> <code>EnableVgwRoutePropagation</code> - The route was propagated by route propagation.</p> </li> </ul>"
        }
      },
      "description": "Describes a route in a route table."
    },
    "RouteList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Route"
      }
    },
    "RouteOrigin": {
      "type": "string",
      "enum": [
        "CreateRouteTable",
        "CreateRoute",
        "EnableVgwRoutePropagation"
      ]
    },
    "RouteState": {
      "type": "string",
      "enum": [
        "active",
        "blackhole"
      ]
    },
    "RouteTable": {
      "type": "object",
      "properties": {
        "RouteTableId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the route table."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        },
        "Routes": {
          "$ref": "#/definitions/RouteList",
          "description": "The routes in the route table."
        },
        "Associations": {
          "$ref": "#/definitions/RouteTableAssociationList",
          "description": "The associations between the route table and one or more subnets."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the route table."
        },
        "PropagatingVgws": {
          "$ref": "#/definitions/PropagatingVgwList",
          "description": "Any virtual private gateway (VGW) propagating routes."
        }
      },
      "description": "Describes a route table."
    },
    "RouteTableAssociation": {
      "type": "object",
      "properties": {
        "RouteTableAssociationId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the association between a route table and a subnet."
        },
        "RouteTableId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the route table."
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet. A subnet ID is not returned for an implicit association."
        },
        "Main": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether this is the main route table."
        }
      },
      "description": "Describes an association between a route table and a subnet."
    },
    "RouteTableAssociationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RouteTableAssociation"
      }
    },
    "RouteTableList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RouteTable"
      }
    },
    "RuleAction": {
      "type": "string",
      "enum": [
        "allow",
        "deny"
      ]
    },
    "RunInstancesMonitoringEnabled": {
      "type": "object",
      "required": [
        "Enabled"
      ],
      "properties": {
        "Enabled": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether monitoring is enabled for the instance."
        }
      },
      "description": "Describes the monitoring for the instance."
    },
    "RunInstancesRequest": {
      "type": "object",
      "required": [
        "ImageId",
        "MinCount",
        "MaxCount"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the AMI, which you can get by calling <a>DescribeImages</a>."
        },
        "MinCount": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances.</p> <p>Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see <a href=\"http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2\">How many instances can I run in Amazon EC2</a> in the Amazon EC2 General FAQ.</p>"
        },
        "MaxCount": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above <code>MinCount</code>.</p> <p>Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see <a href=\"http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2\">How many instances can I run in Amazon EC2</a> in the Amazon EC2 FAQ.</p>"
        },
        "KeyName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the key pair. You can create a key pair using <a>CreateKeyPair</a> or <a>ImportKeyPair</a>.</p> <important> <p>If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.</p> </important>"
        },
        "SecurityGroups": {
          "$ref": "#/definitions/SecurityGroupStringList",
          "description": "<p>[EC2-Classic, default VPC] One or more security group names. For a nondefault VPC, you must use security group IDs instead.</p> <p>Default: Amazon EC2 uses the default security group.</p>"
        },
        "SecurityGroupIds": {
          "$ref": "#/definitions/SecurityGroupIdStringList",
          "description": "<p>One or more security group IDs. You can create a security group using <a>CreateSecurityGroup</a>.</p> <p>Default: Amazon EC2 uses the default security group.</p>"
        },
        "UserData": {
          "$ref": "#/definitions/String",
          "description": "The user data to make available to the instance. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html\">Running Commands on Your Linux Instance at Launch</a> (Linux) and <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data\">Adding User Data</a> (Windows). If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text."
        },
        "InstanceType": {
          "$ref": "#/definitions/InstanceType",
          "description": "<p>The instance type. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Default: <code>m1.small</code> </p>"
        },
        "Placement": {
          "$ref": "#/definitions/Placement",
          "description": "The placement for the instance."
        },
        "KernelId": {
          "$ref": "#/definitions/String",
          "description": "<p>The ID of the kernel.</p> <important> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html\"> PV-GRUB</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </important>"
        },
        "RamdiskId": {
          "$ref": "#/definitions/String",
          "description": "<p>The ID of the RAM disk.</p> <important> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html\"> PV-GRUB</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </important>"
        },
        "BlockDeviceMappings": {
          "$ref": "#/definitions/BlockDeviceMappingRequestList",
          "description": "<p>The block device mapping.</p> <important> <p>Supplying both a snapshot ID and an encryption value as arguments for block-device mapping results in an error. This is because only blank volumes can be encrypted on start, and these are not created from a snapshot. If a snapshot is the basis for the volume, it contains data by definition and its encryption status cannot be changed using this action.</p> </important>"
        },
        "Monitoring": {
          "$ref": "#/definitions/RunInstancesMonitoringEnabled",
          "description": "The monitoring for the instance."
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "[EC2-VPC] The ID of the subnet to launch the instance into."
        },
        "DisableApiTermination": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>If you set this parameter to <code>true</code>, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. If you set this parameter to <code>true</code> and then later want to be able to terminate the instance, you must first change the value of the <code>disableApiTermination</code> attribute to <code>false</code> using <a>ModifyInstanceAttribute</a>. Alternatively, if you set <code>InstanceInitiatedShutdownBehavior</code> to <code>terminate</code>, you can terminate the instance by running the shutdown command from the instance.</p> <p>Default: <code>false</code> </p>"
        },
        "InstanceInitiatedShutdownBehavior": {
          "$ref": "#/definitions/ShutdownBehavior",
          "description": "<p>Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).</p> <p>Default: <code>stop</code> </p>"
        },
        "PrivateIpAddress": {
          "$ref": "#/definitions/String",
          "description": "<p>[EC2-VPC] The primary IP address. You must specify a value from the IP address range of the subnet.</p> <p>Only one private IP address can be designated as primary. Therefore, you can't specify this parameter if <code>PrivateIpAddresses.n.Primary</code> is set to <code>true</code> and <code>PrivateIpAddresses.n.PrivateIpAddress</code> is set to an IP address. </p> <p>Default: We select an IP address from the IP address range of the subnet.</p>"
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>.</p> <p>Constraints: Maximum 64 ASCII characters</p>"
        },
        "AdditionalInfo": {
          "$ref": "#/definitions/String",
          "description": "Reserved."
        },
        "NetworkInterfaces": {
          "$ref": "#/definitions/InstanceNetworkInterfaceSpecificationList",
          "description": "One or more network interfaces."
        },
        "IamInstanceProfile": {
          "$ref": "#/definitions/IamInstanceProfileSpecification",
          "description": "The IAM instance profile."
        },
        "EbsOptimized": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.</p> <p>Default: <code>false</code> </p>"
        }
      },
      "description": "Contains the parameters for RunInstances."
    },
    "RunScheduledInstancesRequest": {
      "type": "object",
      "required": [
        "ScheduledInstanceId",
        "LaunchSpecification"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>."
        },
        "InstanceCount": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The number of instances.</p> <p>Default: 1</p>"
        },
        "ScheduledInstanceId": {
          "$ref": "#/definitions/String",
          "description": "The Scheduled Instance ID."
        },
        "LaunchSpecification": {
          "$ref": "#/definitions/ScheduledInstancesLaunchSpecification",
          "description": "The launch specification. You must match the instance type, Availability Zone, network, and platform of the schedule that you purchased."
        }
      },
      "description": "Contains the parameters for RunScheduledInstances."
    },
    "RunScheduledInstancesResult": {
      "type": "object",
      "properties": {
        "InstanceIdSet": {
          "$ref": "#/definitions/InstanceIdSet",
          "description": "The IDs of the newly launched instances."
        }
      },
      "description": "Contains the output of RunScheduledInstances."
    },
    "S3Storage": {
      "type": "object",
      "properties": {
        "Bucket": {
          "$ref": "#/definitions/String",
          "description": "The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error."
        },
        "Prefix": {
          "$ref": "#/definitions/String",
          "description": "The beginning of the file name of the AMI."
        },
        "AWSAccessKeyId": {
          "$ref": "#/definitions/String",
          "description": "The access key ID of the owner of the bucket. Before you specify a value for your access key ID, review and follow the guidance in <a href=\"http://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html\">Best Practices for Managing AWS Access Keys</a>."
        },
        "UploadPolicy": {
          "$ref": "#/definitions/Blob",
          "description": "An Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon S3 on your behalf."
        },
        "UploadPolicySignature": {
          "$ref": "#/definitions/String",
          "description": "The signature of the JSON document."
        }
      },
      "description": "Describes the storage parameters for S3 and S3 buckets for an instance store-backed AMI."
    },
    "ScheduledInstance": {
      "type": "object",
      "properties": {
        "ScheduledInstanceId": {
          "$ref": "#/definitions/String",
          "description": "The Scheduled Instance ID."
        },
        "InstanceType": {
          "$ref": "#/definitions/String",
          "description": "The instance type."
        },
        "Platform": {
          "$ref": "#/definitions/String",
          "description": "The platform (<code>Linux/UNIX</code> or <code>Windows</code>)."
        },
        "NetworkPlatform": {
          "$ref": "#/definitions/String",
          "description": "The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>)."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone."
        },
        "SlotDurationInHours": {
          "$ref": "#/definitions/Integer",
          "description": "The number of hours in the schedule."
        },
        "Recurrence": {
          "$ref": "#/definitions/ScheduledInstanceRecurrence",
          "description": "The schedule recurrence."
        },
        "PreviousSlotEndTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The time that the previous schedule ended or will end."
        },
        "NextSlotStartTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The time for the next schedule to start."
        },
        "HourlyPrice": {
          "$ref": "#/definitions/String",
          "description": "The hourly price for a single instance."
        },
        "TotalScheduledInstanceHours": {
          "$ref": "#/definitions/Integer",
          "description": "The total number of hours for a single instance for the entire term."
        },
        "InstanceCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of instances."
        },
        "TermStartDate": {
          "$ref": "#/definitions/DateTime",
          "description": "The start date for the Scheduled Instance."
        },
        "TermEndDate": {
          "$ref": "#/definitions/DateTime",
          "description": "The end date for the Scheduled Instance."
        },
        "CreateDate": {
          "$ref": "#/definitions/DateTime",
          "description": "The date when the Scheduled Instance was purchased."
        }
      },
      "description": "Describes a Scheduled Instance."
    },
    "ScheduledInstanceAvailability": {
      "type": "object",
      "properties": {
        "InstanceType": {
          "$ref": "#/definitions/String",
          "description": "The instance type. You can specify one of the C3, C4, M4, or R3 instance types."
        },
        "Platform": {
          "$ref": "#/definitions/String",
          "description": "The platform (<code>Linux/UNIX</code> or <code>Windows</code>)."
        },
        "NetworkPlatform": {
          "$ref": "#/definitions/String",
          "description": "The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>)."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone."
        },
        "PurchaseToken": {
          "$ref": "#/definitions/String",
          "description": "The purchase token. This token expires in two hours."
        },
        "SlotDurationInHours": {
          "$ref": "#/definitions/Integer",
          "description": "The number of hours in the schedule."
        },
        "Recurrence": {
          "$ref": "#/definitions/ScheduledInstanceRecurrence",
          "description": "The schedule recurrence."
        },
        "FirstSlotStartTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The time period for the first schedule to start."
        },
        "HourlyPrice": {
          "$ref": "#/definitions/String",
          "description": "The hourly price for a single instance."
        },
        "TotalScheduledInstanceHours": {
          "$ref": "#/definitions/Integer",
          "description": "The total number of hours for a single instance for the entire term."
        },
        "AvailableInstanceCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of available instances."
        },
        "MinTermDurationInDays": {
          "$ref": "#/definitions/Integer",
          "description": "The minimum term. The only possible value is 365 days."
        },
        "MaxTermDurationInDays": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum term. The only possible value is 365 days."
        }
      },
      "description": "Describes a schedule that is available for your Scheduled Instances."
    },
    "ScheduledInstanceAvailabilitySet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ScheduledInstanceAvailability"
      }
    },
    "ScheduledInstanceIdRequestSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "ScheduledInstanceRecurrence": {
      "type": "object",
      "properties": {
        "Frequency": {
          "$ref": "#/definitions/String",
          "description": "The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>)."
        },
        "Interval": {
          "$ref": "#/definitions/Integer",
          "description": "The interval quantity. The interval unit depends on the value of <code>frequency</code>. For example, every 2 weeks or every 2 months."
        },
        "OccurrenceDaySet": {
          "$ref": "#/definitions/OccurrenceDaySet",
          "description": "The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday)."
        },
        "OccurrenceRelativeToEnd": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the occurrence is relative to the end of the specified week or month."
        },
        "OccurrenceUnit": {
          "$ref": "#/definitions/String",
          "description": "The unit for <code>occurrenceDaySet</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>)."
        }
      },
      "description": "Describes the recurring schedule for a Scheduled Instance."
    },
    "ScheduledInstanceRecurrenceRequest": {
      "type": "object",
      "properties": {
        "Frequency": {
          "$ref": "#/definitions/String",
          "description": "The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>)."
        },
        "Interval": {
          "$ref": "#/definitions/Integer",
          "description": "The interval quantity. The interval unit depends on the value of <code>Frequency</code>. For example, every 2 weeks or every 2 months."
        },
        "OccurrenceDays": {
          "$ref": "#/definitions/OccurrenceDayRequestSet",
          "description": "The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday). You can't specify this value with a daily schedule. If the occurrence is relative to the end of the month, you can specify only a single day."
        },
        "OccurrenceRelativeToEnd": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the occurrence is relative to the end of the specified week or month. You can't specify this value with a daily schedule."
        },
        "OccurrenceUnit": {
          "$ref": "#/definitions/String",
          "description": "The unit for <code>OccurrenceDays</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>). This value is required for a monthly schedule. You can't specify <code>DayOfWeek</code> with a weekly schedule. You can't specify this value with a daily schedule."
        }
      },
      "description": "Describes the recurring schedule for a Scheduled Instance."
    },
    "ScheduledInstanceSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ScheduledInstance"
      }
    },
    "ScheduledInstancesBlockDeviceMapping": {
      "type": "object",
      "properties": {
        "DeviceName": {
          "$ref": "#/definitions/String",
          "description": "The device name exposed to the instance (for example, <code>/dev/sdh</code> or <code>xvdh</code>)."
        },
        "NoDevice": {
          "$ref": "#/definitions/String",
          "description": "Suppresses the specified device included in the block device mapping of the AMI."
        },
        "VirtualName": {
          "$ref": "#/definitions/String",
          "description": "<p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered starting from 0. An instance type with two available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>.The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.</p> <p>Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.</p>"
        },
        "Ebs": {
          "$ref": "#/definitions/ScheduledInstancesEbs",
          "description": "Parameters used to set up EBS volumes automatically when the instance is launched."
        }
      },
      "description": "Describes a block device mapping for a Scheduled Instance."
    },
    "ScheduledInstancesBlockDeviceMappingSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ScheduledInstancesBlockDeviceMapping"
      }
    },
    "ScheduledInstancesEbs": {
      "type": "object",
      "properties": {
        "SnapshotId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the snapshot."
        },
        "VolumeSize": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The size of the volume, in GiB.</p> <p>Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.</p>"
        },
        "DeleteOnTermination": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the volume is deleted on instance termination."
        },
        "VolumeType": {
          "$ref": "#/definitions/String",
          "description": "<p>The volume type. <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, Throughput Optimized HDD for <code>st1</code>, Cold HDD for <code>sc1</code>, or <code>standard</code> for Magnetic.</p> <p>Default: <code>standard</code> </p>"
        },
        "Iops": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information about <code>gp2</code> baseline performance, I/O credits, and bursting, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\">Amazon EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Constraint: Range is 100-20000 IOPS for <code>io1</code> volumes and 100-10000 IOPS for <code>gp2</code> volumes.</p> <p>Condition: This parameter is required for requests to create <code>io1</code>volumes; it is not used in requests to create <code>gp2</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code> volumes.</p>"
        },
        "Encrypted": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the volume is encrypted. You can attached encrypted volumes only to instances that support them."
        }
      },
      "description": "Describes an EBS volume for a Scheduled Instance."
    },
    "ScheduledInstancesIamInstanceProfile": {
      "type": "object",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN)."
        },
        "Name": {
          "$ref": "#/definitions/String",
          "description": "The name."
        }
      },
      "description": "Describes an IAM instance profile for a Scheduled Instance."
    },
    "ScheduledInstancesLaunchSpecification": {
      "type": "object",
      "required": [
        "ImageId"
      ],
      "properties": {
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Amazon Machine Image (AMI)."
        },
        "KeyName": {
          "$ref": "#/definitions/String",
          "description": "The name of the key pair."
        },
        "SecurityGroupIds": {
          "$ref": "#/definitions/ScheduledInstancesSecurityGroupIdSet",
          "description": "The IDs of one or more security groups."
        },
        "UserData": {
          "$ref": "#/definitions/String",
          "description": "The base64-encoded MIME user data."
        },
        "Placement": {
          "$ref": "#/definitions/ScheduledInstancesPlacement",
          "description": "The placement information."
        },
        "KernelId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the kernel."
        },
        "InstanceType": {
          "$ref": "#/definitions/String",
          "description": "The instance type."
        },
        "RamdiskId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the RAM disk."
        },
        "BlockDeviceMappings": {
          "$ref": "#/definitions/ScheduledInstancesBlockDeviceMappingSet",
          "description": "One or more block device mapping entries."
        },
        "Monitoring": {
          "$ref": "#/definitions/ScheduledInstancesMonitoring",
          "description": "Enable or disable monitoring for the instances."
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet in which to launch the instances."
        },
        "NetworkInterfaces": {
          "$ref": "#/definitions/ScheduledInstancesNetworkInterfaceSet",
          "description": "One or more network interfaces."
        },
        "IamInstanceProfile": {
          "$ref": "#/definitions/ScheduledInstancesIamInstanceProfile",
          "description": "The IAM instance profile."
        },
        "EbsOptimized": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.</p> <p>Default: <code>false</code> </p>"
        }
      },
      "description": "<p>Describes the launch specification for a Scheduled Instance.</p> <p>If you are launching the Scheduled Instance in EC2-VPC, you must specify the ID of the subnet. You can specify the subnet using either <code>SubnetId</code> or <code>NetworkInterface</code>.</p>"
    },
    "ScheduledInstancesMonitoring": {
      "type": "object",
      "properties": {
        "Enabled": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether monitoring is enabled."
        }
      },
      "description": "Describes whether monitoring is enabled for a Scheduled Instance."
    },
    "ScheduledInstancesNetworkInterface": {
      "type": "object",
      "properties": {
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface."
        },
        "DeviceIndex": {
          "$ref": "#/definitions/Integer",
          "description": "The index of the device for the network interface attachment."
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description."
        },
        "PrivateIpAddress": {
          "$ref": "#/definitions/String",
          "description": "The IP address of the network interface within the subnet."
        },
        "PrivateIpAddressConfigs": {
          "$ref": "#/definitions/PrivateIpAddressConfigSet",
          "description": "The private IP addresses."
        },
        "SecondaryPrivateIpAddressCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of secondary private IP addresses."
        },
        "AssociatePublicIpAddress": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether to assign a public IP address to instances launched in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is <code>true</code>."
        },
        "Groups": {
          "$ref": "#/definitions/ScheduledInstancesSecurityGroupIdSet",
          "description": "The IDs of one or more security groups."
        },
        "DeleteOnTermination": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether to delete the interface when the instance is terminated."
        }
      },
      "description": "Describes a network interface for a Scheduled Instance."
    },
    "ScheduledInstancesNetworkInterfaceSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ScheduledInstancesNetworkInterface"
      }
    },
    "ScheduledInstancesPlacement": {
      "type": "object",
      "properties": {
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone."
        },
        "GroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the placement group."
        }
      },
      "description": "Describes the placement for a Scheduled Instance."
    },
    "ScheduledInstancesPrivateIpAddressConfig": {
      "type": "object",
      "properties": {
        "PrivateIpAddress": {
          "$ref": "#/definitions/String",
          "description": "The IP address."
        },
        "Primary": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether this is a primary IP address. Otherwise, this is a secondary IP address."
        }
      },
      "description": "Describes a private IP address for a Scheduled Instance."
    },
    "ScheduledInstancesSecurityGroupIdSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "SecurityGroup": {
      "type": "object",
      "properties": {
        "OwnerId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account ID of the owner of the security group."
        },
        "GroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the security group."
        },
        "GroupId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the security group."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description of the security group."
        },
        "IpPermissions": {
          "$ref": "#/definitions/IpPermissionList",
          "description": "One or more inbound rules associated with the security group."
        },
        "IpPermissionsEgress": {
          "$ref": "#/definitions/IpPermissionList",
          "description": "[EC2-VPC] One or more outbound rules associated with the security group."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "[EC2-VPC] The ID of the VPC for the security group."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the security group."
        }
      },
      "description": "Describes a security group"
    },
    "SecurityGroupIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "SecurityGroupList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SecurityGroup"
      }
    },
    "SecurityGroupReference": {
      "type": "object",
      "required": [
        "GroupId",
        "ReferencingVpcId"
      ],
      "properties": {
        "GroupId": {
          "$ref": "#/definitions/String",
          "description": "The ID of your security group."
        },
        "ReferencingVpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC with the referencing security group."
        },
        "VpcPeeringConnectionId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC peering connection."
        }
      },
      "description": "Describes a VPC with a security group that references your security group."
    },
    "SecurityGroupReferences": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SecurityGroupReference"
      }
    },
    "SecurityGroupStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "ShutdownBehavior": {
      "type": "string",
      "enum": [
        "stop",
        "terminate"
      ]
    },
    "SlotDateTimeRangeRequest": {
      "type": "object",
      "required": [
        "EarliestTime",
        "LatestTime"
      ],
      "properties": {
        "EarliestTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The earliest date and time, in UTC, for the Scheduled Instance to start."
        },
        "LatestTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The latest date and time, in UTC, for the Scheduled Instance to start. This value must be later than or equal to the earliest date and at most three months in the future."
        }
      },
      "description": "Describes the time period for a Scheduled Instance to start its first schedule. The time period must span less than one day."
    },
    "SlotStartTimeRangeRequest": {
      "type": "object",
      "properties": {
        "EarliestTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The earliest date and time, in UTC, for the Scheduled Instance to start."
        },
        "LatestTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The latest date and time, in UTC, for the Scheduled Instance to start."
        }
      },
      "description": "Describes the time period for a Scheduled Instance to start its first schedule."
    },
    "Snapshot": {
      "type": "object",
      "properties": {
        "SnapshotId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the snapshot. Each snapshot receives a unique identifier when it is created."
        },
        "VolumeId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the volume that was used to create the snapshot. Snapshots created by the <a>CopySnapshot</a> action have an arbitrary volume ID that should not be used for any purpose."
        },
        "State": {
          "$ref": "#/definitions/SnapshotState",
          "description": "The snapshot state."
        },
        "StateMessage": {
          "$ref": "#/definitions/String",
          "description": "Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper AWS Key Management Service (AWS KMS) permissions are not obtained) this field displays error state details to help you diagnose why the error occurred. This parameter is only returned by the <a>DescribeSnapshots</a> API operation."
        },
        "StartTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The time stamp when the snapshot was initiated."
        },
        "Progress": {
          "$ref": "#/definitions/String",
          "description": "The progress of the snapshot, as a percentage."
        },
        "OwnerId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account ID of the EBS snapshot owner."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description for the snapshot."
        },
        "VolumeSize": {
          "$ref": "#/definitions/Integer",
          "description": "The size of the volume, in GiB."
        },
        "OwnerAlias": {
          "$ref": "#/definitions/String",
          "description": " Value from an Amazon-maintained list (<code>amazon</code> | <code>aws-marketplace</code> | <code>microsoft</code>) of snapshot owners. Not to be confused with the user-configured AWS account alias, which is set from the IAM console. "
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the snapshot."
        },
        "Encrypted": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the snapshot is encrypted."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the parent volume."
        },
        "DataEncryptionKeyId": {
          "$ref": "#/definitions/String",
          "description": "The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data encryption key that was used to encrypt the original volume or snapshot copy. Because data encryption keys are inherited by volumes created from snapshots, and vice versa, if snapshots share the same data encryption key identifier, then they belong to the same volume/snapshot lineage. This parameter is only returned by the <a>DescribeSnapshots</a> API operation."
        }
      },
      "description": "Describes a snapshot."
    },
    "SnapshotAttributeName": {
      "type": "string",
      "enum": [
        "productCodes",
        "createVolumePermission"
      ]
    },
    "SnapshotDetail": {
      "type": "object",
      "properties": {
        "DiskImageSize": {
          "$ref": "#/definitions/Double",
          "description": "The size of the disk in the snapshot, in GiB."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description for the snapshot."
        },
        "Format": {
          "$ref": "#/definitions/String",
          "description": "The format of the disk image from which the snapshot is created."
        },
        "Url": {
          "$ref": "#/definitions/String",
          "description": "The URL used to access the disk image."
        },
        "UserBucket": {
          "$ref": "#/definitions/UserBucketDetails",
          "description": "The S3 bucket for the disk image."
        },
        "DeviceName": {
          "$ref": "#/definitions/String",
          "description": "The block device mapping for the snapshot."
        },
        "SnapshotId": {
          "$ref": "#/definitions/String",
          "description": "The snapshot ID of the disk being imported."
        },
        "Progress": {
          "$ref": "#/definitions/String",
          "description": "The percentage of progress for the task."
        },
        "StatusMessage": {
          "$ref": "#/definitions/String",
          "description": "A detailed status message for the snapshot creation."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "A brief status of the snapshot creation."
        }
      },
      "description": "Describes the snapshot created from the imported disk."
    },
    "SnapshotDetailList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SnapshotDetail"
      }
    },
    "SnapshotDiskContainer": {
      "type": "object",
      "properties": {
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description of the disk image being imported."
        },
        "Format": {
          "$ref": "#/definitions/String",
          "description": "<p>The format of the disk image being imported.</p> <p>Valid values: <code>RAW</code> | <code>VHD</code> | <code>VMDK</code> | <code>OVA</code> </p>"
        },
        "Url": {
          "$ref": "#/definitions/String",
          "description": "The URL to the Amazon S3-based disk image being imported. It can either be a https URL (https://..) or an Amazon S3 URL (s3://..)."
        },
        "UserBucket": {
          "$ref": "#/definitions/UserBucket",
          "description": "The S3 bucket for the disk image."
        }
      },
      "description": "The disk container object for the import snapshot request."
    },
    "SnapshotIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "SnapshotList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Snapshot"
      }
    },
    "SnapshotState": {
      "type": "string",
      "enum": [
        "pending",
        "completed",
        "error"
      ]
    },
    "SnapshotTaskDetail": {
      "type": "object",
      "properties": {
        "DiskImageSize": {
          "$ref": "#/definitions/Double",
          "description": "The size of the disk in the snapshot, in GiB."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description of the snapshot."
        },
        "Format": {
          "$ref": "#/definitions/String",
          "description": "The format of the disk image from which the snapshot is created."
        },
        "Url": {
          "$ref": "#/definitions/String",
          "description": "The URL of the disk image from which the snapshot is created."
        },
        "UserBucket": {
          "$ref": "#/definitions/UserBucketDetails",
          "description": "The S3 bucket for the disk image."
        },
        "SnapshotId": {
          "$ref": "#/definitions/String",
          "description": "The snapshot ID of the disk being imported."
        },
        "Progress": {
          "$ref": "#/definitions/String",
          "description": "The percentage of completion for the import snapshot task."
        },
        "StatusMessage": {
          "$ref": "#/definitions/String",
          "description": "A detailed status message for the import snapshot task."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "A brief status for the import snapshot task."
        }
      },
      "description": "Details about the import snapshot task."
    },
    "SpotDatafeedSubscription": {
      "type": "object",
      "properties": {
        "OwnerId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account ID of the account."
        },
        "Bucket": {
          "$ref": "#/definitions/String",
          "description": "The Amazon S3 bucket where the Spot instance data feed is located."
        },
        "Prefix": {
          "$ref": "#/definitions/String",
          "description": "The prefix that is prepended to data feed files."
        },
        "State": {
          "$ref": "#/definitions/DatafeedSubscriptionState",
          "description": "The state of the Spot instance data feed subscription."
        },
        "Fault": {
          "$ref": "#/definitions/SpotInstanceStateFault",
          "description": "The fault codes for the Spot instance request, if any."
        }
      },
      "description": "Describes the data feed for a Spot instance."
    },
    "SpotFleetLaunchSpecification": {
      "type": "object",
      "properties": {
        "ImageId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the AMI."
        },
        "KeyName": {
          "$ref": "#/definitions/String",
          "description": "The name of the key pair."
        },
        "SecurityGroups": {
          "$ref": "#/definitions/GroupIdentifierList",
          "description": "One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups."
        },
        "UserData": {
          "$ref": "#/definitions/String",
          "description": "The user data to make available to the instances. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text."
        },
        "AddressingType": {
          "$ref": "#/definitions/String",
          "description": "Deprecated."
        },
        "InstanceType": {
          "$ref": "#/definitions/InstanceType",
          "description": "The instance type."
        },
        "Placement": {
          "$ref": "#/definitions/SpotPlacement",
          "description": "The placement information."
        },
        "KernelId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the kernel."
        },
        "RamdiskId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the RAM disk."
        },
        "BlockDeviceMappings": {
          "$ref": "#/definitions/BlockDeviceMappingList",
          "description": "One or more block device mapping entries."
        },
        "Monitoring": {
          "$ref": "#/definitions/SpotFleetMonitoring",
          "description": "Enable or disable monitoring for the instances."
        },
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet in which to launch the instances. To specify multiple subnets, separate them using commas; for example, \"subnet-a61dafcf, subnet-65ea5f08\"."
        },
        "NetworkInterfaces": {
          "$ref": "#/definitions/InstanceNetworkInterfaceSpecificationList",
          "description": "One or more network interfaces."
        },
        "IamInstanceProfile": {
          "$ref": "#/definitions/IamInstanceProfileSpecification",
          "description": "The IAM instance profile."
        },
        "EbsOptimized": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code> </p>"
        },
        "WeightedCapacity": {
          "$ref": "#/definitions/Double",
          "description": "<p>The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms (instances or a performance characteristic such as vCPUs, memory, or I/O).</p> <p>If the target capacity divided by this value is not a whole number, we round the number of instances to the next whole number. If this value is not specified, the default is 1.</p>"
        },
        "SpotPrice": {
          "$ref": "#/definitions/String",
          "description": "The bid price per unit hour for the specified instance type. If this value is not specified, the default is the Spot bid price specified for the fleet. To determine the bid price per unit hour, divide the Spot bid price by the value of <code>WeightedCapacity</code>."
        }
      },
      "description": "Describes the launch specification for one or more Spot instances."
    },
    "SpotFleetMonitoring": {
      "type": "object",
      "properties": {
        "Enabled": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Enables monitoring for the instance.</p> <p>Default: <code>false</code> </p>"
        }
      },
      "description": "Describes whether monitoring is enabled."
    },
    "SpotFleetRequestConfig": {
      "type": "object",
      "required": [
        "SpotFleetRequestId",
        "SpotFleetRequestState",
        "SpotFleetRequestConfig",
        "CreateTime"
      ],
      "properties": {
        "SpotFleetRequestId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Spot fleet request."
        },
        "SpotFleetRequestState": {
          "$ref": "#/definitions/BatchState",
          "description": "The state of the Spot fleet request."
        },
        "SpotFleetRequestConfig": {
          "$ref": "#/definitions/SpotFleetRequestConfigData",
          "description": "Information about the configuration of the Spot fleet request."
        },
        "CreateTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The creation date and time of the request."
        },
        "ActivityStatus": {
          "$ref": "#/definitions/ActivityStatus",
          "description": "The progress of the Spot fleet request. If there is an error, the status is <code>error</code>. After all bids are placed, the status is <code>pending_fulfillment</code>. If the size of the fleet is equal to or greater than its target capacity, the status is <code>fulfilled</code>. If the size of the fleet is decreased, the status is <code>pending_termination</code> while Spot instances are terminating."
        }
      },
      "description": "Describes a Spot fleet request."
    },
    "SpotFleetRequestConfigData": {
      "type": "object",
      "required": [
        "SpotPrice",
        "TargetCapacity",
        "IamFleetRole",
        "LaunchSpecifications"
      ],
      "properties": {
        "ClientToken": {
          "$ref": "#/definitions/String",
          "description": "A unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring Idempotency</a>."
        },
        "SpotPrice": {
          "$ref": "#/definitions/String",
          "description": "The bid price per unit hour."
        },
        "TargetCapacity": {
          "$ref": "#/definitions/Integer",
          "description": "The number of units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O."
        },
        "ValidFrom": {
          "$ref": "#/definitions/DateTime",
          "description": "The start date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). The default is to start fulfilling the request immediately."
        },
        "ValidUntil": {
          "$ref": "#/definitions/DateTime",
          "description": "The end date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). At this point, no new Spot instance requests are placed or enabled to fulfill the request."
        },
        "TerminateInstancesWithExpiration": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether running Spot instances should be terminated when the Spot fleet request expires."
        },
        "IamFleetRole": {
          "$ref": "#/definitions/String",
          "description": "Grants the Spot fleet permission to terminate Spot instances on your behalf when you cancel its Spot fleet request using <a>CancelSpotFleetRequests</a> or when the Spot fleet request expires, if you set <code>terminateInstancesWithExpiration</code>."
        },
        "LaunchSpecifications": {
          "$ref": "#/definitions/LaunchSpecsList",
          "description": "Information about the launch specifications for the Spot fleet request."
        },
        "ExcessCapacityTerminationPolicy": {
          "$ref": "#/definitions/ExcessCapacityTerminationPolicy",
          "description": "Indicates whether running Spot instances should be terminated if the target capacity of the Spot fleet request is decreased below the current size of the Spot fleet."
        },
        "AllocationStrategy": {
          "$ref": "#/definitions/AllocationStrategy",
          "description": "Indicates how to allocate the target capacity across the Spot pools specified by the Spot fleet request. The default is <code>lowestPrice</code>."
        },
        "FulfilledCapacity": {
          "$ref": "#/definitions/Double",
          "description": "The number of units fulfilled by this request compared to the set target capacity."
        },
        "Type": {
          "$ref": "#/definitions/FleetType",
          "description": "The type of request. Indicates whether the fleet will only <code>request</code> the target capacity or also attempt to <code>maintain</code> it. When you <code>request</code> a certain target capacity, the fleet will only place the required bids. It will not attempt to replenish Spot instances if capacity is diminished, nor will it submit bids in alternative Spot pools if capacity is not available. When you want to <code>maintain</code> a certain target capacity, fleet will place the required bids to meet this target capacity. It will also automatically replenish any interrupted instances. Default: <code>maintain</code>."
        }
      },
      "description": "Describes the configuration of a Spot fleet request."
    },
    "SpotFleetRequestConfigSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SpotFleetRequestConfig"
      }
    },
    "SpotInstanceRequest": {
      "type": "object",
      "properties": {
        "SpotInstanceRequestId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the Spot instance request."
        },
        "SpotPrice": {
          "$ref": "#/definitions/String",
          "description": "The maximum hourly price (bid) for the Spot instance launched to fulfill the request."
        },
        "Type": {
          "$ref": "#/definitions/SpotInstanceType",
          "description": "The Spot instance request type."
        },
        "State": {
          "$ref": "#/definitions/SpotInstanceState",
          "description": "The state of the Spot instance request. Spot bid status information can help you track your Spot instance requests. For more information, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html\">Spot Bid Status</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>."
        },
        "Fault": {
          "$ref": "#/definitions/SpotInstanceStateFault",
          "description": "The fault codes for the Spot instance request, if any."
        },
        "Status": {
          "$ref": "#/definitions/SpotInstanceStatus",
          "description": "The status code and status message describing the Spot instance request."
        },
        "ValidFrom": {
          "$ref": "#/definitions/DateTime",
          "description": "The start date of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). The request becomes active at this date and time."
        },
        "ValidUntil": {
          "$ref": "#/definitions/DateTime",
          "description": "The end date of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). If this is a one-time request, it remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date is reached."
        },
        "LaunchGroup": {
          "$ref": "#/definitions/String",
          "description": "The instance launch group. Launch groups are Spot instances that launch together and terminate together."
        },
        "AvailabilityZoneGroup": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone group. If you specify the same Availability Zone group for all Spot instance requests, all Spot instances are launched in the same Availability Zone."
        },
        "LaunchSpecification": {
          "$ref": "#/definitions/LaunchSpecification",
          "description": "Additional information for launching instances."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The instance ID, if an instance has been launched to fulfill the Spot instance request."
        },
        "CreateTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time when the Spot instance request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z)."
        },
        "ProductDescription": {
          "$ref": "#/definitions/RIProductDescription",
          "description": "The product description associated with the Spot instance."
        },
        "BlockDurationMinutes": {
          "$ref": "#/definitions/Integer",
          "description": "The duration for the Spot instance, in minutes."
        },
        "ActualBlockHourlyPrice": {
          "$ref": "#/definitions/String",
          "description": "If you specified a duration and your Spot instance request was fulfilled, this is the fixed hourly price in effect for the Spot instance while it runs."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the resource."
        },
        "LaunchedAvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone in which the bid is launched."
        }
      },
      "description": "Describes a Spot instance request."
    },
    "SpotInstanceRequestIdList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "SpotInstanceRequestList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SpotInstanceRequest"
      }
    },
    "SpotInstanceState": {
      "type": "string",
      "enum": [
        "open",
        "active",
        "closed",
        "cancelled",
        "failed"
      ]
    },
    "SpotInstanceStateFault": {
      "type": "object",
      "properties": {
        "Code": {
          "$ref": "#/definitions/String",
          "description": "The reason code for the Spot instance state change."
        },
        "Message": {
          "$ref": "#/definitions/String",
          "description": "The message for the Spot instance state change."
        }
      },
      "description": "Describes a Spot instance state change."
    },
    "SpotInstanceStatus": {
      "type": "object",
      "properties": {
        "Code": {
          "$ref": "#/definitions/String",
          "description": "The status code. For a list of status codes, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html#spot-instance-bid-status-understand\">Spot Bid Status Codes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>."
        },
        "UpdateTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time of the most recent status update, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z)."
        },
        "Message": {
          "$ref": "#/definitions/String",
          "description": "The description for the status code."
        }
      },
      "description": "Describes the status of a Spot instance request."
    },
    "SpotInstanceType": {
      "type": "string",
      "enum": [
        "one-time",
        "persistent"
      ]
    },
    "SpotPlacement": {
      "type": "object",
      "properties": {
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "<p>The Availability Zone.</p> <p>[Spot fleet only] To specify multiple Availability Zones, separate them using commas; for example, \"us-west-2a, us-west-2b\".</p>"
        },
        "GroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the placement group (for cluster instances)."
        }
      },
      "description": "Describes Spot instance placement."
    },
    "SpotPrice": {
      "type": "object",
      "properties": {
        "InstanceType": {
          "$ref": "#/definitions/InstanceType",
          "description": "The instance type."
        },
        "ProductDescription": {
          "$ref": "#/definitions/RIProductDescription",
          "description": "A general description of the AMI."
        },
        "SpotPrice": {
          "$ref": "#/definitions/String",
          "description": "The maximum price (bid) that you are willing to pay for a Spot instance."
        },
        "Timestamp": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time the request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z)."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone."
        }
      },
      "description": "Describes the maximum hourly price (bid) for any Spot instance launched to fulfill the request."
    },
    "SpotPriceHistoryList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SpotPrice"
      }
    },
    "StaleIpPermission": {
      "type": "object",
      "properties": {
        "FromPort": {
          "$ref": "#/definitions/Integer",
          "description": "The start of the port range for the TCP and UDP protocols, or an ICMP type number. A value of <code>-1</code> indicates all ICMP types. "
        },
        "IpProtocol": {
          "$ref": "#/definitions/String",
          "description": "The IP protocol name (for <code>tcp</code>, <code>udp</code>, and <code>icmp</code>) or number (see <a href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\">Protocol Numbers)</a>."
        },
        "IpRanges": {
          "$ref": "#/definitions/IpRanges",
          "description": "One or more IP ranges. Not applicable for stale security group rules."
        },
        "PrefixListIds": {
          "$ref": "#/definitions/PrefixListIdSet",
          "description": "One or more prefix list IDs for an AWS service. Not applicable for stale security group rules."
        },
        "ToPort": {
          "$ref": "#/definitions/Integer",
          "description": "The end of the port range for the TCP and UDP protocols, or an ICMP type number. A value of <code>-1</code> indicates all ICMP types. "
        },
        "UserIdGroupPairs": {
          "$ref": "#/definitions/UserIdGroupPairSet",
          "description": "One or more security group pairs. Returns the ID of the referenced security group and VPC, and the ID and status of the VPC peering connection."
        }
      },
      "description": "Describes a stale rule in a security group."
    },
    "StaleIpPermissionSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/StaleIpPermission"
      }
    },
    "StaleSecurityGroup": {
      "type": "object",
      "required": [
        "GroupId"
      ],
      "properties": {
        "GroupId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the security group."
        },
        "GroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the security group."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "The description of the security group."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC for the security group."
        },
        "StaleIpPermissions": {
          "$ref": "#/definitions/StaleIpPermissionSet",
          "description": "Information about the stale inbound rules in the security group."
        },
        "StaleIpPermissionsEgress": {
          "$ref": "#/definitions/StaleIpPermissionSet",
          "description": "Information about the stale outbound rules in the security group."
        }
      },
      "description": "Describes a stale security group (a security group that contains stale rules)."
    },
    "StaleSecurityGroupSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/StaleSecurityGroup"
      }
    },
    "StartInstancesRequest": {
      "type": "object",
      "required": [
        "InstanceIds"
      ],
      "properties": {
        "InstanceIds": {
          "$ref": "#/definitions/InstanceIdStringList",
          "description": "One or more instance IDs."
        },
        "AdditionalInfo": {
          "$ref": "#/definitions/String",
          "description": "Reserved."
        },
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        }
      },
      "description": "Contains the parameters for StartInstances."
    },
    "StartInstancesResult": {
      "type": "object",
      "properties": {
        "StartingInstances": {
          "$ref": "#/definitions/InstanceStateChangeList",
          "description": "Information about one or more started instances."
        }
      },
      "description": "Contains the output of StartInstances."
    },
    "State": {
      "type": "string",
      "enum": [
        "Pending",
        "Available",
        "Deleting",
        "Deleted"
      ]
    },
    "StateReason": {
      "type": "object",
      "properties": {
        "Code": {
          "$ref": "#/definitions/String",
          "description": "The reason code for the state change."
        },
        "Message": {
          "$ref": "#/definitions/String",
          "description": "<p>The message for the state change.</p> <ul> <li> <p> <code>Server.SpotInstanceTermination</code>: A Spot instance was terminated due to an increase in the market price.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error occurred during instance launch, resulting in termination.</p> </li> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient instance capacity to satisfy the launch request.</p> </li> <li> <p> <code>Client.InternalError</code>: A client error caused the instance to terminate on launch.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down using the <code>shutdown -h</code> command from the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your limits.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.</p> </li> </ul>"
        }
      },
      "description": "Describes a state change."
    },
    "Status": {
      "type": "string",
      "enum": [
        "MoveInProgress",
        "InVpc",
        "InClassic"
      ]
    },
    "StatusName": {
      "type": "string",
      "enum": [
        "reachability"
      ]
    },
    "StatusType": {
      "type": "string",
      "enum": [
        "passed",
        "failed",
        "insufficient-data",
        "initializing"
      ]
    },
    "StopInstancesRequest": {
      "type": "object",
      "required": [
        "InstanceIds"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceIds": {
          "$ref": "#/definitions/InstanceIdStringList",
          "description": "One or more instance IDs."
        },
        "Force": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Forces the instances to stop. The instances do not have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures. This option is not recommended for Windows instances.</p> <p>Default: <code>false</code> </p>"
        }
      },
      "description": "Contains the parameters for StopInstances."
    },
    "StopInstancesResult": {
      "type": "object",
      "properties": {
        "StoppingInstances": {
          "$ref": "#/definitions/InstanceStateChangeList",
          "description": "Information about one or more stopped instances."
        }
      },
      "description": "Contains the output of StopInstances."
    },
    "Storage": {
      "type": "object",
      "properties": {
        "S3": {
          "$ref": "#/definitions/S3Storage",
          "description": "An Amazon S3 storage location."
        }
      },
      "description": "Describes the storage location for an instance store-backed AMI."
    },
    "String": {
      "type": "string"
    },
    "Subnet": {
      "type": "object",
      "properties": {
        "SubnetId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the subnet."
        },
        "State": {
          "$ref": "#/definitions/SubnetState",
          "description": "The current state of the subnet."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC the subnet is in."
        },
        "CidrBlock": {
          "$ref": "#/definitions/String",
          "description": "The CIDR block assigned to the subnet."
        },
        "AvailableIpAddressCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of unused IP addresses in the subnet. Note that the IP addresses for any stopped instances are considered unavailable."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone of the subnet."
        },
        "DefaultForAz": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether this is the default subnet for the Availability Zone."
        },
        "MapPublicIpOnLaunch": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether instances launched in this subnet receive a public IP address."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the subnet."
        }
      },
      "description": "Describes a subnet."
    },
    "SubnetIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "SubnetList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Subnet"
      }
    },
    "SubnetState": {
      "type": "string",
      "enum": [
        "pending",
        "available"
      ]
    },
    "SummaryStatus": {
      "type": "string",
      "enum": [
        "ok",
        "impaired",
        "insufficient-data",
        "not-applicable",
        "initializing"
      ]
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/String",
          "description": "<p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code> </p>"
        },
        "Value": {
          "$ref": "#/definitions/String",
          "description": "<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.</p>"
        }
      },
      "description": "Describes a tag."
    },
    "TagDescription": {
      "type": "object",
      "properties": {
        "ResourceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the resource. For example, <code>ami-1a2b3c4d</code>."
        },
        "ResourceType": {
          "$ref": "#/definitions/ResourceType",
          "description": "The resource type."
        },
        "Key": {
          "$ref": "#/definitions/String",
          "description": "The tag key."
        },
        "Value": {
          "$ref": "#/definitions/String",
          "description": "The tag value."
        }
      },
      "description": "Describes a tag."
    },
    "TagDescriptionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TagDescription"
      }
    },
    "TagList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      }
    },
    "TelemetryStatus": {
      "type": "string",
      "enum": [
        "UP",
        "DOWN"
      ]
    },
    "Tenancy": {
      "type": "string",
      "enum": [
        "default",
        "dedicated",
        "host"
      ]
    },
    "TerminateInstancesRequest": {
      "type": "object",
      "required": [
        "InstanceIds"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceIds": {
          "$ref": "#/definitions/InstanceIdStringList",
          "description": "One or more instance IDs."
        }
      },
      "description": "Contains the parameters for TerminateInstances."
    },
    "TerminateInstancesResult": {
      "type": "object",
      "properties": {
        "TerminatingInstances": {
          "$ref": "#/definitions/InstanceStateChangeList",
          "description": "Information about one or more terminated instances."
        }
      },
      "description": "Contains the output of TerminateInstances."
    },
    "TrafficType": {
      "type": "string",
      "enum": [
        "ACCEPT",
        "REJECT",
        "ALL"
      ]
    },
    "UnassignPrivateIpAddressesRequest": {
      "type": "object",
      "required": [
        "NetworkInterfaceId",
        "PrivateIpAddresses"
      ],
      "properties": {
        "NetworkInterfaceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the network interface."
        },
        "PrivateIpAddresses": {
          "$ref": "#/definitions/PrivateIpAddressStringList",
          "description": "The secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address."
        }
      },
      "description": "Contains the parameters for UnassignPrivateIpAddresses."
    },
    "UnmonitorInstancesRequest": {
      "type": "object",
      "required": [
        "InstanceIds"
      ],
      "properties": {
        "DryRun": {
          "$ref": "#/definitions/Boolean",
          "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."
        },
        "InstanceIds": {
          "$ref": "#/definitions/InstanceIdStringList",
          "description": "One or more instance IDs."
        }
      },
      "description": "Contains the parameters for UnmonitorInstances."
    },
    "UnmonitorInstancesResult": {
      "type": "object",
      "properties": {
        "InstanceMonitorings": {
          "$ref": "#/definitions/InstanceMonitoringList",
          "description": "Monitoring information for one or more instances."
        }
      },
      "description": "Contains the output of UnmonitorInstances."
    },
    "UnsuccessfulItem": {
      "type": "object",
      "required": [
        "Error"
      ],
      "properties": {
        "ResourceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the resource."
        },
        "Error": {
          "$ref": "#/definitions/UnsuccessfulItemError",
          "description": "Information about the error."
        }
      },
      "description": "Information about items that were not successfully processed in a batch call."
    },
    "UnsuccessfulItemError": {
      "type": "object",
      "required": [
        "Code",
        "Message"
      ],
      "properties": {
        "Code": {
          "$ref": "#/definitions/String",
          "description": "The error code."
        },
        "Message": {
          "$ref": "#/definitions/String",
          "description": "The error message accompanying the error code."
        }
      },
      "description": "Information about the error that occurred. For more information about errors, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html\">Error Codes</a>."
    },
    "UnsuccessfulItemList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UnsuccessfulItem"
      }
    },
    "UnsuccessfulItemSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UnsuccessfulItem"
      }
    },
    "UserBucket": {
      "type": "object",
      "properties": {
        "S3Bucket": {
          "$ref": "#/definitions/String",
          "description": "The name of the S3 bucket where the disk image is located."
        },
        "S3Key": {
          "$ref": "#/definitions/String",
          "description": "The file name of the disk image."
        }
      },
      "description": "Describes the S3 bucket for the disk image."
    },
    "UserBucketDetails": {
      "type": "object",
      "properties": {
        "S3Bucket": {
          "$ref": "#/definitions/String",
          "description": "The S3 bucket from which the disk image was created."
        },
        "S3Key": {
          "$ref": "#/definitions/String",
          "description": "The file name of the disk image."
        }
      },
      "description": "Describes the S3 bucket for the disk image."
    },
    "UserData": {
      "type": "object",
      "properties": {
        "Data": {
          "$ref": "#/definitions/String",
          "description": "The user data. If you are using an AWS SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text."
        }
      },
      "description": "Describes the user data for an instance."
    },
    "UserGroupStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "UserIdGroupPair": {
      "type": "object",
      "properties": {
        "UserId": {
          "$ref": "#/definitions/String",
          "description": "<p>The ID of an AWS account. For a referenced security group in another VPC, the account ID of the referenced security group is returned.</p> <p>[EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.</p>"
        },
        "GroupName": {
          "$ref": "#/definitions/String",
          "description": "The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID."
        },
        "GroupId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the security group."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC for the referenced security group, if applicable."
        },
        "VpcPeeringConnectionId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC peering connection, if applicable."
        },
        "PeeringStatus": {
          "$ref": "#/definitions/String",
          "description": "The status of a VPC peering connection, if applicable."
        }
      },
      "description": "Describes a security group and AWS account ID pair."
    },
    "UserIdGroupPairList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UserIdGroupPair"
      }
    },
    "UserIdGroupPairSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UserIdGroupPair"
      }
    },
    "UserIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "ValueStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "VgwTelemetry": {
      "type": "object",
      "properties": {
        "OutsideIpAddress": {
          "$ref": "#/definitions/String",
          "description": "The Internet-routable IP address of the virtual private gateway's outside interface."
        },
        "Status": {
          "$ref": "#/definitions/TelemetryStatus",
          "description": "The status of the VPN tunnel."
        },
        "LastStatusChange": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time of the last change in status."
        },
        "StatusMessage": {
          "$ref": "#/definitions/String",
          "description": "If an error occurs, a description of the error."
        },
        "AcceptedRouteCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of accepted routes."
        }
      },
      "description": "Describes telemetry for a VPN tunnel."
    },
    "VgwTelemetryList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VgwTelemetry"
      }
    },
    "VirtualizationType": {
      "type": "string",
      "enum": [
        "hvm",
        "paravirtual"
      ]
    },
    "Volume": {
      "type": "object",
      "properties": {
        "VolumeId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the volume."
        },
        "Size": {
          "$ref": "#/definitions/Integer",
          "description": "The size of the volume, in GiBs."
        },
        "SnapshotId": {
          "$ref": "#/definitions/String",
          "description": "The snapshot from which the volume was created, if applicable."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone for the volume."
        },
        "State": {
          "$ref": "#/definitions/VolumeState",
          "description": "The volume state."
        },
        "CreateTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The time stamp when volume creation was initiated."
        },
        "Attachments": {
          "$ref": "#/definitions/VolumeAttachmentList",
          "description": "Information about the volume attachments."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the volume."
        },
        "VolumeType": {
          "$ref": "#/definitions/VolumeType",
          "description": "The volume type. This can be <code>gp2</code> for General Purpose SSD, <code>io1</code> for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code> for Cold HDD, or <code>standard</code> for Magnetic volumes."
        },
        "Iops": {
          "$ref": "#/definitions/Integer",
          "description": "<p>The number of I/O operations per second (IOPS) that the volume supports. For Provisioned IOPS SSD volumes, this represents the number of IOPS that are provisioned for the volume. For General Purpose SSD volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information on General Purpose SSD baseline performance, I/O credits, and bursting, see <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\">Amazon EBS Volume Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Constraint: Range is 100-20000 IOPS for io1 volumes and 100-10000 IOPS for <code>gp2</code> volumes.</p> <p>Condition: This parameter is required for requests to create <code>io1</code> volumes; it is not used in requests to create <code>gp2</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code> volumes.</p>"
        },
        "Encrypted": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the volume will be encrypted."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "The full ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the volume encryption key for the volume."
        }
      },
      "description": "Describes a volume."
    },
    "VolumeAttachment": {
      "type": "object",
      "properties": {
        "VolumeId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the volume."
        },
        "InstanceId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the instance."
        },
        "Device": {
          "$ref": "#/definitions/String",
          "description": "The device name."
        },
        "State": {
          "$ref": "#/definitions/VolumeAttachmentState",
          "description": "The attachment state of the volume."
        },
        "AttachTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The time stamp when the attachment initiated."
        },
        "DeleteOnTermination": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the EBS volume is deleted on instance termination."
        }
      },
      "description": "Describes volume attachment details."
    },
    "VolumeAttachmentList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VolumeAttachment"
      }
    },
    "VolumeAttachmentState": {
      "type": "string",
      "enum": [
        "attaching",
        "attached",
        "detaching",
        "detached"
      ]
    },
    "VolumeAttributeName": {
      "type": "string",
      "enum": [
        "autoEnableIO",
        "productCodes"
      ]
    },
    "VolumeDetail": {
      "type": "object",
      "required": [
        "Size"
      ],
      "properties": {
        "Size": {
          "$ref": "#/definitions/Long",
          "description": "The size of the volume, in GiB."
        }
      },
      "description": "Describes an EBS volume."
    },
    "VolumeIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "VolumeList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Volume"
      }
    },
    "VolumeState": {
      "type": "string",
      "enum": [
        "creating",
        "available",
        "in-use",
        "deleting",
        "deleted",
        "error"
      ]
    },
    "VolumeStatusAction": {
      "type": "object",
      "properties": {
        "Code": {
          "$ref": "#/definitions/String",
          "description": "The code identifying the operation, for example, <code>enable-volume-io</code>."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description of the operation."
        },
        "EventType": {
          "$ref": "#/definitions/String",
          "description": "The event type associated with this operation."
        },
        "EventId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the event associated with this operation."
        }
      },
      "description": "Describes a volume status operation code."
    },
    "VolumeStatusActionsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VolumeStatusAction"
      }
    },
    "VolumeStatusDetails": {
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/VolumeStatusName",
          "description": "The name of the volume status."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The intended status of the volume status."
        }
      },
      "description": "Describes a volume status."
    },
    "VolumeStatusDetailsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VolumeStatusDetails"
      }
    },
    "VolumeStatusEvent": {
      "type": "object",
      "properties": {
        "EventType": {
          "$ref": "#/definitions/String",
          "description": "The type of this event."
        },
        "Description": {
          "$ref": "#/definitions/String",
          "description": "A description of the event."
        },
        "NotBefore": {
          "$ref": "#/definitions/DateTime",
          "description": "The earliest start time of the event."
        },
        "NotAfter": {
          "$ref": "#/definitions/DateTime",
          "description": "The latest end time of the event."
        },
        "EventId": {
          "$ref": "#/definitions/String",
          "description": "The ID of this event."
        }
      },
      "description": "Describes a volume status event."
    },
    "VolumeStatusEventsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VolumeStatusEvent"
      }
    },
    "VolumeStatusInfo": {
      "type": "object",
      "properties": {
        "Status": {
          "$ref": "#/definitions/VolumeStatusInfoStatus",
          "description": "The status of the volume."
        },
        "Details": {
          "$ref": "#/definitions/VolumeStatusDetailsList",
          "description": "The details of the volume status."
        }
      },
      "description": "Describes the status of a volume."
    },
    "VolumeStatusInfoStatus": {
      "type": "string",
      "enum": [
        "ok",
        "impaired",
        "insufficient-data"
      ]
    },
    "VolumeStatusItem": {
      "type": "object",
      "properties": {
        "VolumeId": {
          "$ref": "#/definitions/String",
          "description": "The volume ID."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone of the volume."
        },
        "VolumeStatus": {
          "$ref": "#/definitions/VolumeStatusInfo",
          "description": "The volume status."
        },
        "Events": {
          "$ref": "#/definitions/VolumeStatusEventsList",
          "description": "A list of events associated with the volume."
        },
        "Actions": {
          "$ref": "#/definitions/VolumeStatusActionsList",
          "description": "The details of the operation."
        }
      },
      "description": "Describes the volume status."
    },
    "VolumeStatusList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VolumeStatusItem"
      }
    },
    "VolumeStatusName": {
      "type": "string",
      "enum": [
        "io-enabled",
        "io-performance"
      ]
    },
    "VolumeType": {
      "type": "string",
      "enum": [
        "standard",
        "io1",
        "gp2",
        "sc1",
        "st1"
      ]
    },
    "Vpc": {
      "type": "object",
      "properties": {
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        },
        "State": {
          "$ref": "#/definitions/VpcState",
          "description": "The current state of the VPC."
        },
        "CidrBlock": {
          "$ref": "#/definitions/String",
          "description": "The CIDR block for the VPC."
        },
        "DhcpOptionsId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the set of DHCP options you've associated with the VPC (or <code>default</code> if the default options are associated with the VPC)."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the VPC."
        },
        "InstanceTenancy": {
          "$ref": "#/definitions/Tenancy",
          "description": "The allowed tenancy of instances launched into the VPC."
        },
        "IsDefault": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the VPC is the default VPC."
        }
      },
      "description": "Describes a VPC."
    },
    "VpcAttachment": {
      "type": "object",
      "properties": {
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        },
        "State": {
          "$ref": "#/definitions/AttachmentStatus",
          "description": "The current state of the attachment."
        }
      },
      "description": "Describes an attachment between a virtual private gateway and a VPC."
    },
    "VpcAttachmentList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VpcAttachment"
      }
    },
    "VpcAttributeName": {
      "type": "string",
      "enum": [
        "enableDnsSupport",
        "enableDnsHostnames"
      ]
    },
    "VpcClassicLink": {
      "type": "object",
      "properties": {
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        },
        "ClassicLinkEnabled": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the VPC is enabled for ClassicLink."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the VPC."
        }
      },
      "description": "Describes whether a VPC is enabled for ClassicLink."
    },
    "VpcClassicLinkIdList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "VpcClassicLinkList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VpcClassicLink"
      }
    },
    "VpcEndpoint": {
      "type": "object",
      "properties": {
        "VpcEndpointId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC endpoint."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC to which the endpoint is associated."
        },
        "ServiceName": {
          "$ref": "#/definitions/String",
          "description": "The name of the AWS service to which the endpoint is associated."
        },
        "State": {
          "$ref": "#/definitions/State",
          "description": "The state of the VPC endpoint."
        },
        "PolicyDocument": {
          "$ref": "#/definitions/String",
          "description": "The policy document associated with the endpoint."
        },
        "RouteTableIds": {
          "$ref": "#/definitions/ValueStringList",
          "description": "One or more route tables associated with the endpoint."
        },
        "CreationTimestamp": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time the VPC endpoint was created."
        }
      },
      "description": "Describes a VPC endpoint."
    },
    "VpcEndpointSet": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VpcEndpoint"
      }
    },
    "VpcIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "VpcList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Vpc"
      }
    },
    "VpcPeeringConnection": {
      "type": "object",
      "properties": {
        "AccepterVpcInfo": {
          "$ref": "#/definitions/VpcPeeringConnectionVpcInfo",
          "description": "Information about the accepter VPC. CIDR block information is not returned when creating a VPC peering connection, or when describing a VPC peering connection that's in the <code>initiating-request</code> or <code>pending-acceptance</code> state."
        },
        "ExpirationTime": {
          "$ref": "#/definitions/DateTime",
          "description": "The time that an unaccepted VPC peering connection will expire."
        },
        "RequesterVpcInfo": {
          "$ref": "#/definitions/VpcPeeringConnectionVpcInfo",
          "description": "Information about the requester VPC."
        },
        "Status": {
          "$ref": "#/definitions/VpcPeeringConnectionStateReason",
          "description": "The status of the VPC peering connection."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the resource."
        },
        "VpcPeeringConnectionId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC peering connection."
        }
      },
      "description": "Describes a VPC peering connection."
    },
    "VpcPeeringConnectionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VpcPeeringConnection"
      }
    },
    "VpcPeeringConnectionOptionsDescription": {
      "type": "object",
      "properties": {
        "AllowEgressFromLocalClassicLinkToRemoteVpc": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection."
        },
        "AllowEgressFromLocalVpcToRemoteClassicLink": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection."
        },
        "AllowDnsResolutionFromRemoteVpc": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether a local VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC."
        }
      },
      "description": "Describes the VPC peering connection options."
    },
    "VpcPeeringConnectionStateReason": {
      "type": "object",
      "properties": {
        "Code": {
          "$ref": "#/definitions/VpcPeeringConnectionStateReasonCode",
          "description": "The status of the VPC peering connection."
        },
        "Message": {
          "$ref": "#/definitions/String",
          "description": "A message that provides more information about the status, if applicable."
        }
      },
      "description": "Describes the status of a VPC peering connection."
    },
    "VpcPeeringConnectionStateReasonCode": {
      "type": "string",
      "enum": [
        "initiating-request",
        "pending-acceptance",
        "active",
        "deleted",
        "rejected",
        "failed",
        "expired",
        "provisioning",
        "deleting"
      ]
    },
    "VpcPeeringConnectionVpcInfo": {
      "type": "object",
      "properties": {
        "CidrBlock": {
          "$ref": "#/definitions/String",
          "description": "The CIDR block for the VPC."
        },
        "OwnerId": {
          "$ref": "#/definitions/String",
          "description": "The AWS account ID of the VPC owner."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        },
        "PeeringOptions": {
          "$ref": "#/definitions/VpcPeeringConnectionOptionsDescription",
          "description": "Information about the VPC peering connection options for the accepter or requester VPC."
        }
      },
      "description": "Describes a VPC in a VPC peering connection."
    },
    "VpcState": {
      "type": "string",
      "enum": [
        "pending",
        "available"
      ]
    },
    "VpnConnection": {
      "type": "object",
      "properties": {
        "VpnConnectionId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPN connection."
        },
        "State": {
          "$ref": "#/definitions/VpnState",
          "description": "The current state of the VPN connection."
        },
        "CustomerGatewayConfiguration": {
          "$ref": "#/definitions/String",
          "description": "The configuration information for the VPN connection's customer gateway (in the native XML format). This element is always present in the <a>CreateVpnConnection</a> response; however, it's present in the <a>DescribeVpnConnections</a> response only if the VPN connection is in the <code>pending</code> or <code>available</code> state."
        },
        "Type": {
          "$ref": "#/definitions/GatewayType",
          "description": "The type of VPN connection."
        },
        "CustomerGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the customer gateway at your end of the VPN connection."
        },
        "VpnGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the virtual private gateway at the AWS side of the VPN connection."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the VPN connection."
        },
        "VgwTelemetry": {
          "$ref": "#/definitions/VgwTelemetryList",
          "description": "Information about the VPN tunnel."
        },
        "Options": {
          "$ref": "#/definitions/VpnConnectionOptions",
          "description": "The VPN connection options."
        },
        "Routes": {
          "$ref": "#/definitions/VpnStaticRouteList",
          "description": "The static routes associated with the VPN connection."
        }
      },
      "description": "Describes a VPN connection."
    },
    "VpnConnectionIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "VpnConnectionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VpnConnection"
      }
    },
    "VpnConnectionOptions": {
      "type": "object",
      "properties": {
        "StaticRoutesOnly": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP."
        }
      },
      "description": "Describes VPN connection options."
    },
    "VpnConnectionOptionsSpecification": {
      "type": "object",
      "properties": {
        "StaticRoutesOnly": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP."
        }
      },
      "description": "Describes VPN connection options."
    },
    "VpnGateway": {
      "type": "object",
      "properties": {
        "VpnGatewayId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the virtual private gateway."
        },
        "State": {
          "$ref": "#/definitions/VpnState",
          "description": "The current state of the virtual private gateway."
        },
        "Type": {
          "$ref": "#/definitions/GatewayType",
          "description": "The type of VPN connection the virtual private gateway supports."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone where the virtual private gateway was created, if applicable. This field may be empty or not returned."
        },
        "VpcAttachments": {
          "$ref": "#/definitions/VpcAttachmentList",
          "description": "Any VPCs attached to the virtual private gateway."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Any tags assigned to the virtual private gateway."
        }
      },
      "description": "Describes a virtual private gateway."
    },
    "VpnGatewayIdStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    },
    "VpnGatewayList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VpnGateway"
      }
    },
    "VpnState": {
      "type": "string",
      "enum": [
        "pending",
        "available",
        "deleting",
        "deleted"
      ]
    },
    "VpnStaticRoute": {
      "type": "object",
      "properties": {
        "DestinationCidrBlock": {
          "$ref": "#/definitions/String",
          "description": "The CIDR block associated with the local subnet of the customer data center."
        },
        "Source": {
          "$ref": "#/definitions/VpnStaticRouteSource",
          "description": "Indicates how the routes were provided."
        },
        "State": {
          "$ref": "#/definitions/VpnState",
          "description": "The current state of the static route."
        }
      },
      "description": "Describes a static route for a VPN connection."
    },
    "VpnStaticRouteList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VpnStaticRoute"
      }
    },
    "VpnStaticRouteSource": {
      "type": "string",
      "enum": [
        "Static"
      ]
    },
    "ZoneNameStringList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/String"
      }
    }
  }
}