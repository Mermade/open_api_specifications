swagger: '2.0'
info:
  version: '2015-12-08'
  x-release: v4
  title: AWS Certificate Manager
  description: '<fullname>AWS Certificate Manager</fullname> <p>Welcome to the AWS Certificate Manager (ACM) API documentation.</p> <p>You can use ACM to manage SSL/TLS certificates for your AWS-based websites and applications. For general information about using ACM, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/"> <i>AWS Certificate Manager User Guide</i> </a>.</p>'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: aws.amazon.com
  x-serviceName: acm
  x-origin:
    format: swagger
    version: '2.0'
    url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/acm-2015-12-08.normal.json'
    converter:
      url: 'https://github.com/mermade/aws2openapi'
      version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
x-logo:
  url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
  backgroundColor: '#FFFFFF'
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/acm/'
host: acm.amazonaws.com
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AddTagsToCertificate
      description: '<p>Adds one or more tags to an ACM Certificate. Tags are labels that you can use to identify and organize your AWS resources. Each tag consists of a <code>key</code> and an optional <code>value</code>. You specify the certificate on input by its Amazon Resource Name (ARN). You specify the tag by using a key-value pair.</p> <p>You can apply a tag to just one certificate if you want to identify a specific characteristic of that certificate, or you can apply the same tag to multiple certificates if you want to filter for a common relationship among those certificates. Similarly, you can apply the same tag to multiple resources if you want to specify a relationship among those resources. For example, you can add the same tag to an ACM Certificate and an Elastic Load Balancing load balancer to indicate that they are both used by the same website. For more information, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/tags.html">Tagging ACM Certificates</a>.</p> <p>To remove one or more tags, use the <a>RemoveTagsFromCertificate</a> action. To view all of the tags that have been applied to the certificate, use the <a>ListTagsForCertificate</a> action.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: InvalidTagException
          schema:
            $ref: '#/definitions/InvalidTagException'
        '483':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddTagsToCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteCertificate':
    post:
      operationId: DeleteCertificate
      description: '<p>Deletes an ACM Certificate and its associated private key. If this action succeeds, the certificate no longer appears in the list of ACM Certificates that can be displayed by calling the <a>ListCertificates</a> action or be retrieved by calling the <a>GetCertificate</a> action. The certificate will not be available for use by other AWS services.</p> <note> <p>You cannot delete an ACM Certificate that is being used by another AWS service. To delete a certificate that is in use, the certificate association must first be removed.</p> </note>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '482':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeCertificate':
    post:
      operationId: DescribeCertificate
      description: Returns detailed metadata about the specified ACM Certificate.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCertificateResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetCertificate':
    post:
      operationId: GetCertificate
      description: '<p>Retrieves an ACM Certificate and certificate chain for the certificate specified by an ARN. The chain is an ordered list of certificates that contains the root certificate, intermediate certificates of subordinate CAs, and the ACM Certificate. The certificate and certificate chain are base64 encoded. If you want to decode the certificate chain to see the individual certificate fields, you can use OpenSSL.</p> <note> <p>Currently, ACM Certificates can be used only with Elastic Load Balancing and Amazon CloudFront.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCertificateResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: RequestInProgressException
          schema:
            $ref: '#/definitions/RequestInProgressException'
        '482':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ImportCertificate':
    post:
      operationId: ImportCertificate
      description: '<p>Imports an SSL/TLS certificate into AWS Certificate Manager (ACM) to use with <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-services.html">ACM''s integrated AWS services</a>.</p> <note> <p>ACM does not provide <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a> for certificates that you import.</p> </note> <p>For more information about importing certificates into ACM, including the differences between certificates that you import and those that ACM provides, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing Certificates</a> in the <i>AWS Certificate Manager User Guide</i>.</p> <p>To import a certificate, you must provide the certificate and the matching private key. When the certificate is not self-signed, you must also provide a certificate chain. You can omit the certificate chain when importing a self-signed certificate.</p> <p>The certificate, private key, and certificate chain must be PEM-encoded. For more information about converting these items to PEM format, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html#import-certificate-troubleshooting">Importing Certificates Troubleshooting</a> in the <i>AWS Certificate Manager User Guide</i>.</p> <p>To import a new certificate, omit the <code>CertificateArn</code> field. Include this field only when you want to replace a previously imported certificate.</p> <p>This operation returns the <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the imported certificate.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ImportCertificateResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ImportCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListCertificates':
    post:
      operationId: ListCertificates
      description: Retrieves a list of ACM Certificates and the domain name for each. You can optionally filter the list to return only the certificates that match the specified status.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCertificatesResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCertificatesRequest'
        - name: MaxItems
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTagsForCertificate':
    post:
      operationId: ListTagsForCertificate
      description: 'Lists the tags that have been applied to the ACM Certificate. Use the certificate''s Amazon Resource Name (ARN) to specify the certificate. To add a tag to an ACM Certificate, use the <a>AddTagsToCertificate</a> action. To delete a tag, use the <a>RemoveTagsFromCertificate</a> action.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForCertificateResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RemoveTagsFromCertificate':
    post:
      operationId: RemoveTagsFromCertificate
      description: '<p>Remove one or more tags from an ACM Certificate. A tag consists of a key-value pair. If you do not specify the value portion of the tag when calling this function, the tag will be removed regardless of value. If you specify a value, the tag is removed only if it is associated with the specified value.</p> <p>To add tags to a certificate, use the <a>AddTagsToCertificate</a> action. To view all of the tags that have been applied to a specific ACM Certificate, use the <a>ListTagsForCertificate</a> action.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '482':
          description: InvalidTagException
          schema:
            $ref: '#/definitions/InvalidTagException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveTagsFromCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RequestCertificate':
    post:
      operationId: RequestCertificate
      description: 'Requests an ACM Certificate for use with other AWS services. To request an ACM Certificate, you must specify the fully qualified domain name (FQDN) for your site. You can also specify additional FQDNs if users can reach your site by using other names. For each domain name you specify, email is sent to the domain owner to request approval to issue the certificate. After receiving approval from the domain owner, the ACM Certificate is issued. For more information, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/">AWS Certificate Manager User Guide</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RequestCertificateResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: InvalidDomainValidationOptionsException
          schema:
            $ref: '#/definitions/InvalidDomainValidationOptionsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RequestCertificateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ResendValidationEmail':
    post:
      operationId: ResendValidationEmail
      description: 'Resends the email that requests domain ownership validation. The domain owner or an authorized representative must approve the ACM Certificate before it can be issued. The certificate can be approved by clicking a link in the mail to navigate to the Amazon certificate approval website and then clicking <b>I Approve</b>. However, the validation email can be blocked by spam filters. Therefore, if you do not receive the original mail, you can request that the mail be resent within 72 hours of requesting the ACM Certificate. If more than 72 hours have elapsed since your original request or since your last attempt to resend validation mail, you must request a new certificate.'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidStateException
          schema:
            $ref: '#/definitions/InvalidStateException'
        '482':
          description: InvalidArnException
          schema:
            $ref: '#/definitions/InvalidArnException'
        '483':
          description: InvalidDomainValidationOptionsException
          schema:
            $ref: '#/definitions/InvalidDomainValidationOptionsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ResendValidationEmailRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AddTagsToCertificateRequest:
    type: object
    required:
      - CertificateArn
      - Tags
    properties:
      CertificateArn:
        $ref: '#/definitions/Arn'
        description: '<p>String that contains the ARN of the ACM Certificate to which the tag is to be applied. This must be of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>'
      Tags:
        $ref: '#/definitions/TagList'
        description: The key-value pair that defines the tag. The tag value is optional.
  Arn:
    type: string
    pattern: 'arn:[\w+=/,.@-]+:[\w+=/,.@-]+:[\w+=/,.@-]*:[0-9]+:[\w+=,.@-]+(/[\w+=/,.@-]+)*'
    minLength: 20
    maxLength: 2048
  CertificateBody:
    type: string
    pattern: '-{5}BEGIN CERTIFICATE-{5}\u000D?\u000A([A-Za-z0-9/+]{64}\u000D?\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\u000D?\u000A-{5}END CERTIFICATE-{5}(\u000D?\u000A)?'
    minLength: 1
    maxLength: 32768
  CertificateBodyBlob:
    type: string
    minLength: 1
    maxLength: 32768
  CertificateChain:
    type: string
    pattern: '(-{5}BEGIN CERTIFICATE-{5}\u000D?\u000A([A-Za-z0-9/+]{64}\u000D?\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\u000D?\u000A-{5}END CERTIFICATE-{5}\u000D?\u000A)*-{5}BEGIN CERTIFICATE-{5}\u000D?\u000A([A-Za-z0-9/+]{64}\u000D?\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\u000D?\u000A-{5}END CERTIFICATE-{5}(\u000D?\u000A)?'
    minLength: 1
    maxLength: 2097152
  CertificateChainBlob:
    type: string
    minLength: 1
    maxLength: 2097152
  CertificateDetail:
    type: object
    properties:
      CertificateArn:
        $ref: '#/definitions/Arn'
        description: 'The Amazon Resource Name (ARN) of the certificate. For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a> in the <i>AWS General Reference</i>.'
      DomainName:
        $ref: '#/definitions/DomainNameString'
        description: 'The fully qualified domain name for the certificate, such as www.example.com or example.com.'
      SubjectAlternativeNames:
        $ref: '#/definitions/DomainList'
        description: One or more domain names (subject alternative names) included in the certificate. This list contains the domain names that are bound to the public key that is contained in the certificate. The subject alternative names include the canonical domain name (CN) of the certificate and additional domain names that can be used to connect to the website.
      DomainValidationOptions:
        $ref: '#/definitions/DomainValidationList'
        description: Contains information about the initial validation of each domain name that occurs as a result of the <a>RequestCertificate</a> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.
      Serial:
        $ref: '#/definitions/String'
        description: The serial number of the certificate.
      Subject:
        $ref: '#/definitions/String'
        description: The name of the entity that is associated with the public key contained in the certificate.
      Issuer:
        $ref: '#/definitions/String'
        description: The name of the certificate authority that issued and signed the certificate.
      CreatedAt:
        $ref: '#/definitions/TStamp'
        description: The time at which the certificate was requested. This value exists only when the certificate type is <code>AMAZON_ISSUED</code>.
      IssuedAt:
        $ref: '#/definitions/TStamp'
        description: The time at which the certificate was issued. This value exists only when the certificate type is <code>AMAZON_ISSUED</code>.
      ImportedAt:
        $ref: '#/definitions/TStamp'
        description: The date and time at which the certificate was imported. This value exists only when the certificate type is <code>IMPORTED</code>.
      Status:
        $ref: '#/definitions/CertificateStatus'
        description: The status of the certificate.
      RevokedAt:
        $ref: '#/definitions/TStamp'
        description: The time at which the certificate was revoked. This value exists only when the certificate status is <code>REVOKED</code>.
      RevocationReason:
        $ref: '#/definitions/RevocationReason'
        description: The reason the certificate was revoked. This value exists only when the certificate status is <code>REVOKED</code>.
      NotBefore:
        $ref: '#/definitions/TStamp'
        description: The time before which the certificate is not valid.
      NotAfter:
        $ref: '#/definitions/TStamp'
        description: The time after which the certificate is not valid.
      KeyAlgorithm:
        $ref: '#/definitions/KeyAlgorithm'
        description: The algorithm that was used to generate the key pair (the public and private key).
      SignatureAlgorithm:
        $ref: '#/definitions/String'
        description: The algorithm that was used to sign the certificate.
      InUseBy:
        $ref: '#/definitions/InUseList'
        description: A list of ARNs for the AWS resources that are using the certificate. A certificate can be used by multiple AWS resources.
      FailureReason:
        $ref: '#/definitions/FailureReason'
        description: 'The reason the certificate request failed. This value exists only when the certificate status is <code>FAILED</code>. For more information, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/troubleshooting.html#troubleshooting-failed">Certificate Request Failed</a> in the <i>AWS Certificate Manager User Guide</i>.'
      Type:
        $ref: '#/definitions/CertificateType'
        description: 'The source of the certificate. For certificates provided by ACM, this value is <code>AMAZON_ISSUED</code>. For certificates that you imported with <a>ImportCertificate</a>, this value is <code>IMPORTED</code>. ACM does not provide <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a> for imported certificates. For more information about the differences between certificates that you import and those that ACM provides, see <a href="http://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html">Importing Certificates</a> in the <i>AWS Certificate Manager User Guide</i>.'
      RenewalSummary:
        $ref: '#/definitions/RenewalSummary'
        description: 'Contains information about the status of ACM''s <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a> for the certificate. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.'
    description: Contains metadata about an ACM certificate. This structure is returned in the response to a <a>DescribeCertificate</a> request.
  CertificateStatus:
    type: string
    enum:
      - PENDING_VALIDATION
      - ISSUED
      - INACTIVE
      - EXPIRED
      - VALIDATION_TIMED_OUT
      - REVOKED
      - FAILED
  CertificateStatuses:
    type: array
    items:
      $ref: '#/definitions/CertificateStatus'
  CertificateSummary:
    type: object
    properties:
      CertificateArn:
        $ref: '#/definitions/Arn'
        description: '<p>Amazon Resource Name (ARN) of the certificate. This is of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>'
      DomainName:
        $ref: '#/definitions/DomainNameString'
        description: 'Fully qualified domain name (FQDN), such as www.example.com or example.com, for the certificate.'
    description: This structure is returned in the response object of <a>ListCertificates</a> action.
  CertificateSummaryList:
    type: array
    items:
      $ref: '#/definitions/CertificateSummary'
  CertificateType:
    type: string
    enum:
      - IMPORTED
      - AMAZON_ISSUED
  DeleteCertificateRequest:
    type: object
    required:
      - CertificateArn
    properties:
      CertificateArn:
        $ref: '#/definitions/Arn'
        description: '<p>String that contains the ARN of the ACM Certificate to be deleted. This must be of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>'
  DescribeCertificateRequest:
    type: object
    required:
      - CertificateArn
    properties:
      CertificateArn:
        $ref: '#/definitions/Arn'
        description: '<p>The Amazon Resource Name (ARN) of the ACM Certificate. The ARN must have the following form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>'
  DescribeCertificateResponse:
    type: object
    properties:
      Certificate:
        $ref: '#/definitions/CertificateDetail'
        description: Metadata about an ACM certificate.
  DomainList:
    type: array
    items:
      $ref: '#/definitions/DomainNameString'
    minItems: 1
    maxItems: 100
  DomainNameString:
    type: string
    pattern: '^(\*\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$'
    minLength: 1
    maxLength: 253
  DomainStatus:
    type: string
    enum:
      - PENDING_VALIDATION
      - SUCCESS
      - FAILED
  DomainValidation:
    type: object
    required:
      - DomainName
    properties:
      DomainName:
        $ref: '#/definitions/DomainNameString'
        description: 'A fully qualified domain name (FQDN) in the certificate. For example, <code>www.example.com</code> or <code>example.com</code>.'
      ValidationEmails:
        $ref: '#/definitions/ValidationEmailList'
        description: A list of email addresses that ACM used to send domain validation emails.
      ValidationDomain:
        $ref: '#/definitions/DomainNameString'
        description: The domain name that ACM used to send domain validation emails.
      ValidationStatus:
        $ref: '#/definitions/DomainStatus'
        description: The validation status of the domain name.
    description: Contains information about the validation of each domain name in the certificate.
  DomainValidationList:
    type: array
    items:
      $ref: '#/definitions/DomainValidation'
    minItems: 1
    maxItems: 1000
  DomainValidationOption:
    type: object
    required:
      - DomainName
      - ValidationDomain
    properties:
      DomainName:
        $ref: '#/definitions/DomainNameString'
        description: A fully qualified domain name (FQDN) in the certificate request.
      ValidationDomain:
        $ref: '#/definitions/DomainNameString'
        description: '<p>The domain name that you want ACM to use to send you validation emails. This domain name is the suffix of the email addresses that you want ACM to use. This must be the same as the <code>DomainName</code> value or a superdomain of the <code>DomainName</code> value. For example, if you request a certificate for <code>testing.example.com</code>, you can specify <code>example.com</code> for this value. In that case, ACM sends domain validation emails to the following five addresses:</p> <ul> <li> <p>admin@example.com</p> </li> <li> <p>administrator@example.com</p> </li> <li> <p>hostmaster@example.com</p> </li> <li> <p>postmaster@example.com</p> </li> <li> <p>webmaster@example.com</p> </li> </ul>'
    description: Contains information about the domain names that you want ACM to use to send you emails to validate your ownership of the domain.
  DomainValidationOptionList:
    type: array
    items:
      $ref: '#/definitions/DomainValidationOption'
    minItems: 1
    maxItems: 100
  FailureReason:
    type: string
    enum:
      - NO_AVAILABLE_CONTACTS
      - ADDITIONAL_VERIFICATION_REQUIRED
      - DOMAIN_NOT_ALLOWED
      - INVALID_PUBLIC_DOMAIN
      - OTHER
  GetCertificateRequest:
    type: object
    required:
      - CertificateArn
    properties:
      CertificateArn:
        $ref: '#/definitions/Arn'
        description: '<p>String that contains a certificate ARN in the following format:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>'
  GetCertificateResponse:
    type: object
    properties:
      Certificate:
        $ref: '#/definitions/CertificateBody'
        description: String that contains the ACM Certificate represented by the ARN specified at input.
      CertificateChain:
        $ref: '#/definitions/CertificateChain'
        description: The certificate chain that contains the root certificate issued by the certificate authority (CA).
  IdempotencyToken:
    type: string
    pattern: \w+
    minLength: 1
    maxLength: 32
  ImportCertificateRequest:
    type: object
    required:
      - Certificate
      - PrivateKey
    properties:
      CertificateArn:
        $ref: '#/definitions/Arn'
        description: 'The <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of an imported certificate to replace. To import a new certificate, omit this field.'
      Certificate:
        $ref: '#/definitions/CertificateBodyBlob'
        description: '<p>The certificate to import. It must meet the following requirements:</p> <ul> <li> <p>Must be PEM-encoded.</p> </li> <li> <p>Must contain a 1024-bit or 2048-bit RSA public key.</p> </li> <li> <p>Must be valid at the time of import. You cannot import a certificate before its validity period begins (the certificate''s <code>NotBefore</code> date) or after it expires (the certificate''s <code>NotAfter</code> date).</p> </li> </ul>'
      PrivateKey:
        $ref: '#/definitions/PrivateKeyBlob'
        description: '<p>The private key that matches the public key in the certificate. It must meet the following requirements:</p> <ul> <li> <p>Must be PEM-encoded.</p> </li> <li> <p>Must be unencrypted. You cannot import a private key that is protected by a password or passphrase.</p> </li> </ul>'
      CertificateChain:
        $ref: '#/definitions/CertificateChainBlob'
        description: The certificate chain. It must be PEM-encoded.
  ImportCertificateResponse:
    type: object
    properties:
      CertificateArn:
        $ref: '#/definitions/Arn'
        description: 'The <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the imported certificate.'
  InUseList:
    type: array
    items:
      $ref: '#/definitions/String'
  InvalidArnException:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: The requested Amazon Resource Name (ARN) does not refer to an existing resource.
  InvalidDomainValidationOptionsException:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: One or more values in the <a>DomainValidationOption</a> structure is incorrect.
  InvalidStateException:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: 'Processing has reached an invalid state. For example, this exception can occur if the specified domain is not using email validation, or the current certificate status does not permit the requested operation. See the exception message returned by ACM to determine which state is not valid.'
  InvalidTagException:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: 'One or both of the values that make up the key-value pair is not valid. For example, you cannot specify a tag value that begins with <code>aws:</code>.'
  KeyAlgorithm:
    type: string
    enum:
      - RSA_2048
      - RSA_1024
      - EC_prime256v1
  LimitExceededException:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: 'An ACM limit has been exceeded. For example, you may have input more domains than are allowed or you''ve requested too many certificates for your account. See the exception message returned by ACM to determine which limit you have violated. For more information about ACM limits, see the <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html">Limits</a> topic.'
  ListCertificatesRequest:
    type: object
    properties:
      CertificateStatuses:
        $ref: '#/definitions/CertificateStatuses'
        description: The status or statuses on which to filter the list of ACM Certificates.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: Use this parameter only when paginating results and only in a subsequent request after you receive a response with truncated results. Set it to the value of <code>NextToken</code> from the response you just received.
      MaxItems:
        $ref: '#/definitions/MaxItems'
        description: 'Use this parameter when paginating results to specify the maximum number of items to return in the response. If additional items exist beyond the number you specify, the <code>NextToken</code> element is sent in the response. Use this <code>NextToken</code> value in a subsequent request to retrieve additional items.'
  ListCertificatesResponse:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'When the list is truncated, this value is present and contains the value to use for the <code>NextToken</code> parameter in a subsequent pagination request.'
      CertificateSummaryList:
        $ref: '#/definitions/CertificateSummaryList'
        description: A list of ACM Certificates.
  ListTagsForCertificateRequest:
    type: object
    required:
      - CertificateArn
    properties:
      CertificateArn:
        $ref: '#/definitions/Arn'
        description: '<p>String that contains the ARN of the ACM Certificate for which you want to list the tags. This has the following form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>'
  ListTagsForCertificateResponse:
    type: object
    properties:
      Tags:
        $ref: '#/definitions/TagList'
        description: The key-value pairs that define the applied tags.
  MaxItems:
    type: integer
    minimum: 1
    maximum: 1000
  NextToken:
    type: string
    pattern: '[\u0009\u000A\u000D\u0020-\u00FF]*'
    minLength: 1
    maxLength: 320
  PrivateKeyBlob:
    type: string
    minLength: 1
    maxLength: 524288
    format: password
  RemoveTagsFromCertificateRequest:
    type: object
    required:
      - CertificateArn
      - Tags
    properties:
      CertificateArn:
        $ref: '#/definitions/Arn'
        description: '<p>String that contains the ARN of the ACM Certificate with one or more tags that you want to remove. This must be of the form:</p> <p> <code>arn:aws:acm:region:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p> <p>For more information about ARNs, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs) and AWS Service Namespaces</a>.</p>'
      Tags:
        $ref: '#/definitions/TagList'
        description: The key-value pair that defines the tag to remove.
  RenewalStatus:
    type: string
    enum:
      - PENDING_AUTO_RENEWAL
      - PENDING_VALIDATION
      - SUCCESS
      - FAILED
  RenewalSummary:
    type: object
    required:
      - RenewalStatus
      - DomainValidationOptions
    properties:
      RenewalStatus:
        $ref: '#/definitions/RenewalStatus'
        description: 'The status of ACM''s <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a> of the certificate.'
      DomainValidationOptions:
        $ref: '#/definitions/DomainValidationList'
        description: 'Contains information about the validation of each domain name in the certificate, as it pertains to ACM''s <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a>. This is different from the initial validation that occurs as a result of the <a>RequestCertificate</a> request. This field exists only when the certificate type is <code>AMAZON_ISSUED</code>.'
    description: 'Contains information about the status of ACM''s <a href="http://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html">managed renewal</a> for the certificate. This structure exists only when the certificate type is <code>AMAZON_ISSUED</code>.'
  RequestCertificateRequest:
    type: object
    required:
      - DomainName
    properties:
      DomainName:
        $ref: '#/definitions/DomainNameString'
        description: 'Fully qualified domain name (FQDN), such as www.example.com, of the site that you want to secure with an ACM Certificate. Use an asterisk (*) to create a wildcard certificate that protects several sites in the same domain. For example, *.example.com protects www.example.com, site.example.com, and images.example.com.'
      SubjectAlternativeNames:
        $ref: '#/definitions/DomainList'
        description: 'Additional FQDNs to be included in the Subject Alternative Name extension of the ACM Certificate. For example, add the name www.example.net to a certificate for which the <code>DomainName</code> field is www.example.com if users can reach your site by using either name.'
      IdempotencyToken:
        $ref: '#/definitions/IdempotencyToken'
        description: 'Customer chosen string that can be used to distinguish between calls to <code>RequestCertificate</code>. Idempotency tokens time out after one hour. Therefore, if you call <code>RequestCertificate</code> multiple times with the same idempotency token within one hour, ACM recognizes that you are requesting only one certificate and will issue only one. If you change the idempotency token for each call, ACM recognizes that you are requesting multiple certificates.'
      DomainValidationOptions:
        $ref: '#/definitions/DomainValidationOptionList'
        description: The domain name that you want ACM to use to send you emails to validate your ownership of the domain.
  RequestCertificateResponse:
    type: object
    properties:
      CertificateArn:
        $ref: '#/definitions/Arn'
        description: '<p>String that contains the ARN of the issued certificate. This must be of the form:</p> <p> <code>arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p>'
  RequestInProgressException:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: The certificate request is in process and the certificate in your account has not yet been issued.
  ResendValidationEmailRequest:
    type: object
    required:
      - CertificateArn
      - Domain
      - ValidationDomain
    properties:
      CertificateArn:
        $ref: '#/definitions/Arn'
        description: '<p>String that contains the ARN of the requested certificate. The certificate ARN is generated and returned by the <a>RequestCertificate</a> action as soon as the request is made. By default, using this parameter causes email to be sent to all top-level domains you specified in the certificate request.</p> <p>The ARN must be of the form:</p> <p> <code>arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012</code> </p>'
      Domain:
        $ref: '#/definitions/DomainNameString'
        description: The fully qualified domain name (FQDN) of the certificate that needs to be validated.
      ValidationDomain:
        $ref: '#/definitions/DomainNameString'
        description: '<p>The base validation domain that will act as the suffix of the email addresses that are used to send the emails. This must be the same as the <code>Domain</code> value or a superdomain of the <code>Domain</code> value. For example, if you requested a certificate for <code>site.subdomain.example.com</code> and specify a <b>ValidationDomain</b> of <code>subdomain.example.com</code>, ACM sends email to the domain registrant, technical contact, and administrative contact in WHOIS and the following five addresses:</p> <ul> <li> <p>admin@subdomain.example.com</p> </li> <li> <p>administrator@subdomain.example.com</p> </li> <li> <p>hostmaster@subdomain.example.com</p> </li> <li> <p>postmaster@subdomain.example.com</p> </li> <li> <p>webmaster@subdomain.example.com</p> </li> </ul>'
  ResourceInUseException:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: The certificate is in use by another AWS service in the caller's account. Remove the association and try again.
  ResourceNotFoundException:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: 'The specified certificate cannot be found in the caller''s account, or the caller''s account cannot be found.'
  RevocationReason:
    type: string
    enum:
      - UNSPECIFIED
      - KEY_COMPROMISE
      - CA_COMPROMISE
      - AFFILIATION_CHANGED
      - SUPERCEDED
      - CESSATION_OF_OPERATION
      - CERTIFICATE_HOLD
      - REMOVE_FROM_CRL
      - PRIVILEGE_WITHDRAWN
      - A_A_COMPROMISE
  String:
    type: string
  TStamp:
    type: string
    format: date-time
  Tag:
    type: object
    required:
      - Key
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The key of the tag.
      Value:
        $ref: '#/definitions/TagValue'
        description: The value of the tag.
    description: A key-value pair that identifies or specifies metadata about an ACM resource.
  TagKey:
    type: string
    pattern: '[\p{L}\p{Z}\p{N}_.:\/=+\-@]*'
    minLength: 1
    maxLength: 128
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
    minItems: 1
    maxItems: 50
  TagValue:
    type: string
    pattern: '[\p{L}\p{Z}\p{N}_.:\/=+\-@]*'
    minLength: 0
    maxLength: 256
  TooManyTagsException:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: The request contains too many tags. Try the request again with fewer tags.
  ValidationEmailList:
    type: array
    items:
      $ref: '#/definitions/String'
