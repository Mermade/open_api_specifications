{
  "swagger": "2.0",
  "info": {
    "version": "2014-10-06",
    "x-release": "v4",
    "title": "AWS CodeDeploy",
    "description": "<fullname>AWS CodeDeploy</fullname> <b>Overview</b> <p>This reference guide provides descriptions of the AWS CodeDeploy APIs. For more information about AWS CodeDeploy, see the <a href=\"docs.aws.amazon.com/codedeploy/latest/userguide\">AWS CodeDeploy User Guide</a>.</p> <b>Using the APIs</b> <p>You can use the AWS CodeDeploy APIs to work with the following:</p> <ul> <li> <p>Applications are unique identifiers used by AWS CodeDeploy to ensure the correct combinations of revisions, deployment configurations, and deployment groups are being referenced during deployments.</p> <p>You can use the AWS CodeDeploy APIs to create, delete, get, list, and update applications.</p> </li> <li> <p>Deployment configurations are sets of deployment rules and success and failure conditions used by AWS CodeDeploy during deployments.</p> <p>You can use the AWS CodeDeploy APIs to create, delete, get, and list deployment configurations.</p> </li> <li> <p>Deployment groups are groups of instances to which application revisions can be deployed.</p> <p>You can use the AWS CodeDeploy APIs to create, delete, get, list, and update deployment groups.</p> </li> <li> <p>Instances represent Amazon EC2 instances to which application revisions are deployed. Instances are identified by their Amazon EC2 tags or Auto Scaling group names. Instances belong to deployment groups.</p> <p>You can use the AWS CodeDeploy APIs to get and list instance.</p> </li> <li> <p>Deployments represent the process of deploying revisions to instances.</p> <p>You can use the AWS CodeDeploy APIs to create, get, list, and stop deployments.</p> </li> <li> <p>Application revisions are archive files stored in Amazon S3 buckets or GitHub repositories. These revisions contain source content (such as source code, web pages, executable files, and deployment scripts) along with an application specification (AppSpec) file. (The AppSpec file is unique to AWS CodeDeploy; it defines the deployment actions you want AWS CodeDeploy to execute.) Ffor application revisions stored in Amazon S3 buckets, an application revision is uniquely identified by its Amazon S3 object key and its ETag, version, or both. For application revisions stored in GitHub repositories, an application revision is uniquely identified by its repository name and commit ID. Application revisions are deployed through deployment groups.</p> <p>You can use the AWS CodeDeploy APIs to get, list, and register application revisions.</p> </li> </ul>",
    "termsOfService": "https://aws.amazon.com/service-terms/",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/aws2openapi"
    },
    "license": {
      "name": "Apache 2.0 License",
      "url": "http://www.apache.org/licenses/"
    }
  },
  "x-logo": {
    "url": "https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg",
    "backgroundColor": "#FFFFFF"
  },
  "externalDocs": {
    "description": "Amazon Web Services documentation",
    "url": "https://aws.amazon.com/codedeploy/"
  },
  "host": "codedeploy.us-east-1.amazonaws.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "parameters": {
    "X-Amz-Content-Sha256": {
      "name": "X-Amz-Content-Sha256",
      "in": "header",
      "type": "string",
      "required": true
    },
    "X-Amz-Date": {
      "name": "X-Amz-Date",
      "in": "header",
      "type": "string",
      "format": "date-time",
      "required": true
    }
  },
  "securityDefinitions": {
    "hmac": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Amazon Signature authorization v4",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "security": [
    {
      "hmac": []
    }
  ],
  "paths": {
    "/": {
      "post": {
        "operationId": "UpdateDeploymentGroup",
        "description": "Changes information about a deployment group.",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UpdateDeploymentGroupOutput"
            }
          },
          "480": {
            "description": "ApplicationNameRequiredException",
            "schema": {
              "$ref": "#/definitions/ApplicationNameRequiredException"
            }
          },
          "481": {
            "description": "InvalidApplicationNameException",
            "schema": {
              "$ref": "#/definitions/InvalidApplicationNameException"
            }
          },
          "482": {
            "description": "ApplicationDoesNotExistException",
            "schema": {
              "$ref": "#/definitions/ApplicationDoesNotExistException"
            }
          },
          "483": {
            "description": "InvalidDeploymentGroupNameException",
            "schema": {
              "$ref": "#/definitions/InvalidDeploymentGroupNameException"
            }
          },
          "484": {
            "description": "DeploymentGroupAlreadyExistsException",
            "schema": {
              "$ref": "#/definitions/DeploymentGroupAlreadyExistsException"
            }
          },
          "485": {
            "description": "DeploymentGroupNameRequiredException",
            "schema": {
              "$ref": "#/definitions/DeploymentGroupNameRequiredException"
            }
          },
          "486": {
            "description": "DeploymentGroupDoesNotExistException",
            "schema": {
              "$ref": "#/definitions/DeploymentGroupDoesNotExistException"
            }
          },
          "487": {
            "description": "InvalidEC2TagException",
            "schema": {
              "$ref": "#/definitions/InvalidEC2TagException"
            }
          },
          "488": {
            "description": "InvalidTagException",
            "schema": {
              "$ref": "#/definitions/InvalidTagException"
            }
          },
          "489": {
            "description": "InvalidAutoScalingGroupException",
            "schema": {
              "$ref": "#/definitions/InvalidAutoScalingGroupException"
            }
          },
          "490": {
            "description": "InvalidDeploymentConfigNameException",
            "schema": {
              "$ref": "#/definitions/InvalidDeploymentConfigNameException"
            }
          },
          "491": {
            "description": "DeploymentConfigDoesNotExistException",
            "schema": {
              "$ref": "#/definitions/DeploymentConfigDoesNotExistException"
            }
          },
          "492": {
            "description": "InvalidRoleException",
            "schema": {
              "$ref": "#/definitions/InvalidRoleException"
            }
          },
          "493": {
            "description": "LifecycleHookLimitExceededException",
            "schema": {
              "$ref": "#/definitions/LifecycleHookLimitExceededException"
            }
          },
          "494": {
            "description": "InvalidTriggerConfigException",
            "schema": {
              "$ref": "#/definitions/InvalidTriggerConfigException"
            }
          },
          "495": {
            "description": "TriggerTargetsLimitExceededException",
            "schema": {
              "$ref": "#/definitions/TriggerTargetsLimitExceededException"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDeploymentGroupInput"
            }
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/X-Amz-Content-Sha256"
        },
        {
          "$ref": "#/parameters/X-Amz-Date"
        }
      ]
    }
  },
  "definitions": {
    "AddTagsToOnPremisesInstancesInput": {
      "type": "object",
      "required": [
        "tags",
        "instanceNames"
      ],
      "properties": {
        "tags": {
          "$ref": "#/definitions/TagList",
          "description": "<p>The tag key-value pairs to add to the on-premises instances.</p> <p>Keys and values are both required. Keys cannot be null or empty strings. Value-only tags are not allowed.</p>"
        },
        "instanceNames": {
          "$ref": "#/definitions/InstanceNameList",
          "description": "The names of the on-premises instances to which to add tags."
        }
      },
      "description": "Represents the input of, and adds tags to, an on-premises instance operation."
    },
    "ApplicationAlreadyExistsException": {
      "type": "object",
      "properties": {},
      "description": "An application with the specified name already exists with the applicable IAM user or AWS account."
    },
    "ApplicationDoesNotExistException": {
      "type": "object",
      "properties": {},
      "description": "The application does not exist with the applicable IAM user or AWS account."
    },
    "ApplicationId": {
      "type": "string"
    },
    "ApplicationInfo": {
      "type": "object",
      "properties": {
        "applicationId": {
          "$ref": "#/definitions/ApplicationId",
          "description": "The application ID."
        },
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The application name."
        },
        "createTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time at which the application was created."
        },
        "linkedToGitHub": {
          "$ref": "#/definitions/Boolean",
          "description": "True if the user has authenticated with GitHub for the specified application; otherwise, false."
        }
      },
      "description": "Information about an application."
    },
    "ApplicationLimitExceededException": {
      "type": "object",
      "properties": {},
      "description": "More applications were attempted to be created than are allowed."
    },
    "ApplicationName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100
    },
    "ApplicationNameRequiredException": {
      "type": "object",
      "properties": {},
      "description": "The minimum number of required application names was not specified."
    },
    "ApplicationRevisionSortBy": {
      "type": "string",
      "enum": [
        "registerTime",
        "firstUsedTime",
        "lastUsedTime"
      ]
    },
    "ApplicationsInfoList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ApplicationInfo"
      }
    },
    "ApplicationsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ApplicationName"
      }
    },
    "AutoScalingGroup": {
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/AutoScalingGroupName",
          "description": "The Auto Scaling group name."
        },
        "hook": {
          "$ref": "#/definitions/AutoScalingGroupHook",
          "description": "An Auto Scaling lifecycle event hook name."
        }
      },
      "description": "Information about an Auto Scaling group."
    },
    "AutoScalingGroupHook": {
      "type": "string"
    },
    "AutoScalingGroupList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AutoScalingGroup"
      }
    },
    "AutoScalingGroupName": {
      "type": "string"
    },
    "AutoScalingGroupNameList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AutoScalingGroupName"
      }
    },
    "BatchGetApplicationRevisionsInput": {
      "type": "object",
      "required": [
        "applicationName",
        "revisions"
      ],
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of an AWS CodeDeploy application about which to get revision information."
        },
        "revisions": {
          "$ref": "#/definitions/RevisionLocationList",
          "description": "Information to get about the application revisions, including type and location."
        }
      },
      "description": "Represents the input of a batch get application revisions operation."
    },
    "BatchGetApplicationRevisionsOutput": {
      "type": "object",
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of the application that corresponds to the revisions."
        },
        "errorMessage": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "Information about errors that may have occurred during the API call."
        },
        "revisions": {
          "$ref": "#/definitions/RevisionInfoList",
          "description": "Additional information about the revisions, including the type and location."
        }
      },
      "description": "Represents the output of a batch get application revisions operation."
    },
    "BatchGetApplicationsInput": {
      "type": "object",
      "properties": {
        "applicationNames": {
          "$ref": "#/definitions/ApplicationsList",
          "description": "A list of application names separated by spaces."
        }
      },
      "description": "Represents the input of a batch get applications operation."
    },
    "BatchGetApplicationsOutput": {
      "type": "object",
      "properties": {
        "applicationsInfo": {
          "$ref": "#/definitions/ApplicationsInfoList",
          "description": "Information about the applications."
        }
      },
      "description": "Represents the output of a batch get applications operation."
    },
    "BatchGetDeploymentGroupsInput": {
      "type": "object",
      "required": [
        "applicationName",
        "deploymentGroupNames"
      ],
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account."
        },
        "deploymentGroupNames": {
          "$ref": "#/definitions/DeploymentGroupsList",
          "description": "The deployment groups' names."
        }
      },
      "description": "Represents the input of a batch get deployment groups operation."
    },
    "BatchGetDeploymentGroupsOutput": {
      "type": "object",
      "properties": {
        "deploymentGroupsInfo": {
          "$ref": "#/definitions/DeploymentGroupInfoList",
          "description": "Information about the deployment groups."
        },
        "errorMessage": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "Information about errors that may have occurred during the API call."
        }
      },
      "description": "Represents the output of a batch get deployment groups operation."
    },
    "BatchGetDeploymentInstancesInput": {
      "type": "object",
      "required": [
        "deploymentId",
        "instanceIds"
      ],
      "properties": {
        "deploymentId": {
          "$ref": "#/definitions/DeploymentId",
          "description": "The unique ID of a deployment."
        },
        "instanceIds": {
          "$ref": "#/definitions/InstancesList",
          "description": "The unique IDs of instances in the deployment group."
        }
      },
      "description": "Represents the input of a batch get deployment instances operation."
    },
    "BatchGetDeploymentInstancesOutput": {
      "type": "object",
      "properties": {
        "instancesSummary": {
          "$ref": "#/definitions/InstanceSummaryList",
          "description": "Information about the instance."
        },
        "errorMessage": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "Information about errors that may have occurred during the API call."
        }
      },
      "description": "Represents the output of a batch get deployment instance operation."
    },
    "BatchGetDeploymentsInput": {
      "type": "object",
      "properties": {
        "deploymentIds": {
          "$ref": "#/definitions/DeploymentsList",
          "description": "A list of deployment IDs, separated by spaces."
        }
      },
      "description": "Represents the input of a batch get deployments operation."
    },
    "BatchGetDeploymentsOutput": {
      "type": "object",
      "properties": {
        "deploymentsInfo": {
          "$ref": "#/definitions/DeploymentsInfoList",
          "description": "Information about the deployments."
        }
      },
      "description": "Represents the output of a batch get deployments operation."
    },
    "BatchGetOnPremisesInstancesInput": {
      "type": "object",
      "properties": {
        "instanceNames": {
          "$ref": "#/definitions/InstanceNameList",
          "description": "The names of the on-premises instances about which to get information."
        }
      },
      "description": "Represents the input of a batch get on-premises instances operation."
    },
    "BatchGetOnPremisesInstancesOutput": {
      "type": "object",
      "properties": {
        "instanceInfos": {
          "$ref": "#/definitions/InstanceInfoList",
          "description": "Information about the on-premises instances."
        }
      },
      "description": "Represents the output of a batch get on-premises instances operation."
    },
    "BatchLimitExceededException": {
      "type": "object",
      "properties": {},
      "description": "The maximum number of names or IDs allowed for this request (100) was exceeded."
    },
    "Boolean": {
      "type": "boolean"
    },
    "BucketNameFilterRequiredException": {
      "type": "object",
      "properties": {},
      "description": "A bucket name is required, but was not provided."
    },
    "BundleType": {
      "type": "string",
      "enum": [
        "tar",
        "tgz",
        "zip"
      ]
    },
    "CommitId": {
      "type": "string"
    },
    "CreateApplicationInput": {
      "type": "object",
      "required": [
        "applicationName"
      ],
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of the application. This name must be unique with the applicable IAM user or AWS account."
        }
      },
      "description": "Represents the input of a create application operation."
    },
    "CreateApplicationOutput": {
      "type": "object",
      "properties": {
        "applicationId": {
          "$ref": "#/definitions/ApplicationId",
          "description": "A unique application ID."
        }
      },
      "description": "Represents the output of a create application operation."
    },
    "CreateDeploymentConfigInput": {
      "type": "object",
      "required": [
        "deploymentConfigName"
      ],
      "properties": {
        "deploymentConfigName": {
          "$ref": "#/definitions/DeploymentConfigName",
          "description": "The name of the deployment configuration to create."
        },
        "minimumHealthyHosts": {
          "$ref": "#/definitions/MinimumHealthyHosts",
          "description": "<p>The minimum number of healthy instances that should be available at any time during the deployment. There are two parameters expected in the input: type and value.</p> <p>The type parameter takes either of the following values:</p> <ul> <li>HOST_COUNT: The value parameter represents the minimum number of healthy instances as an absolute value.</li> <li>FLEET_PERCENT: The value parameter represents the minimum number of healthy instances as a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.</li> </ul> <p>The value parameter takes an integer.</p> <p>For example, to set a minimum of 95% healthy instance, specify a type of FLEET_PERCENT and a value of 95.</p>"
        }
      },
      "description": "Represents the input of a create deployment configuration operation."
    },
    "CreateDeploymentConfigOutput": {
      "type": "object",
      "properties": {
        "deploymentConfigId": {
          "$ref": "#/definitions/DeploymentConfigId",
          "description": "A unique deployment configuration ID."
        }
      },
      "description": "Represents the output of a create deployment configuration operation."
    },
    "CreateDeploymentGroupInput": {
      "type": "object",
      "required": [
        "applicationName",
        "deploymentGroupName",
        "serviceRoleArn"
      ],
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account."
        },
        "deploymentGroupName": {
          "$ref": "#/definitions/DeploymentGroupName",
          "description": "The name of a new deployment group for the specified application."
        },
        "deploymentConfigName": {
          "$ref": "#/definitions/DeploymentConfigName",
          "description": "<p>If specified, the deployment configuration name can be either one of the predefined configurations provided with AWS CodeDeploy or a custom deployment configuration that you create by calling the create deployment configuration operation.</p> <note> <p>CodeDeployDefault.OneAtATime is the default deployment configuration. It is used if a configuration isn't specified for the deployment or the deployment group.</p> </note> <p>The predefined deployment configurations include the following:</p> <ul> <li> <p><b>CodeDeployDefault.AllAtOnce</b> attempts to deploy an application revision to as many instance as possible at once. The status of the overall deployment will be displayed as <b>Succeeded</b> if the application revision is deployed to one or more of the instances. The status of the overall deployment will be displayed as <b>Failed</b> if the application revision is not deployed to any of the instances. Using an example of nine instance, CodeDeployDefault.AllAtOnce will attempt to deploy to all nine instance at once. The overall deployment will succeed if deployment to even a single instance is successful; it will fail only if deployments to all nine instance fail. </p> </li> <li> <p><b>CodeDeployDefault.HalfAtATime</b> deploys to up to half of the instances at a time (with fractions rounded down). The overall deployment succeeds if the application revision is deployed to at least half of the instances (with fractions rounded up); otherwise, the deployment fails. In the example of nine instances, it will deploy to up to four instance at a time. The overall deployment succeeds if deployment to five or more instances succeed; otherwise, the deployment fails. The deployment may be successfully deployed to some instances even if the overall deployment fails.</p> </li> <li> <p><b>CodeDeployDefault.OneAtATime</b> deploys the application revision to only one instance at a time.</p> <p>For deployment groups that contain more than one instance:</p> <ul> <li> <p>The overall deployment succeeds if the application revision is deployed to all of the instances. The exception to this rule is if deployment to the last instance fails, the overall deployment still succeeds. This is because AWS CodeDeploy allows only one instance at a time to be taken offline with the CodeDeployDefault.OneAtATime configuration.</p> </li> <li> <p>The overall deployment fails as soon as the application revision fails to be deployed to any but the last instance. The deployment may be successfully deployed to some instances even if the overall deployment fails.</p> </li> <li> <p>In an example using nine instance, it will deploy to one instance at a time. The overall deployment succeeds if deployment to the first eight instance is successful; the overall deployment fails if deployment to any of the first eight instance fails.</p> </li> </ul> <p>For deployment groups that contain only one instance, the overall deployment is successful only if deployment to the single instance is successful</p> </li> </ul>"
        },
        "ec2TagFilters": {
          "$ref": "#/definitions/EC2TagFilterList",
          "description": "The Amazon EC2 tags on which to filter."
        },
        "onPremisesInstanceTagFilters": {
          "$ref": "#/definitions/TagFilterList",
          "description": "The on-premises instance tags on which to filter."
        },
        "autoScalingGroups": {
          "$ref": "#/definitions/AutoScalingGroupNameList",
          "description": "A list of associated Auto Scaling groups."
        },
        "serviceRoleArn": {
          "$ref": "#/definitions/Role",
          "description": "A service role ARN that allows AWS CodeDeploy to act on the user's behalf when interacting with AWS services."
        },
        "triggerConfigurations": {
          "$ref": "#/definitions/TriggerConfigList",
          "description": "Information about triggers to create when the deployment group is created."
        }
      },
      "description": "Represents the input of a create deployment group operation."
    },
    "CreateDeploymentGroupOutput": {
      "type": "object",
      "properties": {
        "deploymentGroupId": {
          "$ref": "#/definitions/DeploymentGroupId",
          "description": "A unique deployment group ID."
        }
      },
      "description": "Represents the output of a create deployment group operation."
    },
    "CreateDeploymentInput": {
      "type": "object",
      "required": [
        "applicationName"
      ],
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account."
        },
        "deploymentGroupName": {
          "$ref": "#/definitions/DeploymentGroupName",
          "description": "The name of the deployment group."
        },
        "revision": {
          "$ref": "#/definitions/RevisionLocation",
          "description": "The type and location of the revision to deploy."
        },
        "deploymentConfigName": {
          "$ref": "#/definitions/DeploymentConfigName",
          "description": "<p>The name of a deployment configuration associated with the applicable IAM user or AWS account.</p> <p>If not specified, the value configured in the deployment group will be used as the default. If the deployment group does not have a deployment configuration associated with it, then CodeDeployDefault.OneAtATime will be used by default.</p>"
        },
        "description": {
          "$ref": "#/definitions/Description",
          "description": "A comment about the deployment."
        },
        "ignoreApplicationStopFailures": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>If set to true, then if the deployment causes the ApplicationStop deployment lifecycle event to an instance to fail, the deployment to that instance will not be considered to have failed at that point and will continue on to the BeforeInstall deployment lifecycle event.</p> <p>If set to false or not specified, then if the deployment causes the ApplicationStop deployment lifecycle event to fail to an instance, the deployment to that instance will stop, and the deployment to that instance will be considered to have failed.</p>"
        }
      },
      "description": "Represents the input of a create deployment operation."
    },
    "CreateDeploymentOutput": {
      "type": "object",
      "properties": {
        "deploymentId": {
          "$ref": "#/definitions/DeploymentId",
          "description": "A unique deployment ID."
        }
      },
      "description": "Represents the output of a create deployment operation."
    },
    "DeleteApplicationInput": {
      "type": "object",
      "required": [
        "applicationName"
      ],
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account."
        }
      },
      "description": "Represents the input of a delete application operation."
    },
    "DeleteDeploymentConfigInput": {
      "type": "object",
      "required": [
        "deploymentConfigName"
      ],
      "properties": {
        "deploymentConfigName": {
          "$ref": "#/definitions/DeploymentConfigName",
          "description": "The name of a deployment configuration associated with the applicable IAM user or AWS account."
        }
      },
      "description": "Represents the input of a delete deployment configuration operation."
    },
    "DeleteDeploymentGroupInput": {
      "type": "object",
      "required": [
        "applicationName",
        "deploymentGroupName"
      ],
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account."
        },
        "deploymentGroupName": {
          "$ref": "#/definitions/DeploymentGroupName",
          "description": "The name of an existing deployment group for the specified application."
        }
      },
      "description": "Represents the input of a delete deployment group operation."
    },
    "DeleteDeploymentGroupOutput": {
      "type": "object",
      "properties": {
        "hooksNotCleanedUp": {
          "$ref": "#/definitions/AutoScalingGroupList",
          "description": "If the output contains no data, and the corresponding deployment group contained at least one Auto Scaling group, AWS CodeDeploy successfully removed all corresponding Auto Scaling lifecycle event hooks from the Amazon EC2 instances in the Auto Scaling group. If the output contains data, AWS CodeDeploy could not remove some Auto Scaling lifecycle event hooks from the Amazon EC2 instances in the Auto Scaling group."
        }
      },
      "description": "Represents the output of a delete deployment group operation."
    },
    "DeploymentAlreadyCompletedException": {
      "type": "object",
      "properties": {},
      "description": "The deployment is already complete."
    },
    "DeploymentConfigAlreadyExistsException": {
      "type": "object",
      "properties": {},
      "description": "A deployment configuration with the specified name already exists with the applicable IAM user or AWS account."
    },
    "DeploymentConfigDoesNotExistException": {
      "type": "object",
      "properties": {},
      "description": "The deployment configuration does not exist with the applicable IAM user or AWS account."
    },
    "DeploymentConfigId": {
      "type": "string"
    },
    "DeploymentConfigInUseException": {
      "type": "object",
      "properties": {},
      "description": "The deployment configuration is still in use."
    },
    "DeploymentConfigInfo": {
      "type": "object",
      "properties": {
        "deploymentConfigId": {
          "$ref": "#/definitions/DeploymentConfigId",
          "description": "The deployment configuration ID."
        },
        "deploymentConfigName": {
          "$ref": "#/definitions/DeploymentConfigName",
          "description": "The deployment configuration name."
        },
        "minimumHealthyHosts": {
          "$ref": "#/definitions/MinimumHealthyHosts",
          "description": "Information about the number or percentage of minimum healthy instance."
        },
        "createTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time at which the deployment configuration was created."
        }
      },
      "description": "Information about a deployment configuration."
    },
    "DeploymentConfigLimitExceededException": {
      "type": "object",
      "properties": {},
      "description": "The deployment configurations limit was exceeded."
    },
    "DeploymentConfigName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100
    },
    "DeploymentConfigNameRequiredException": {
      "type": "object",
      "properties": {},
      "description": "The deployment configuration name was not specified."
    },
    "DeploymentConfigsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DeploymentConfigName"
      }
    },
    "DeploymentCreator": {
      "type": "string",
      "enum": [
        "user",
        "autoscaling"
      ]
    },
    "DeploymentDoesNotExistException": {
      "type": "object",
      "properties": {},
      "description": "The deployment does not exist with the applicable IAM user or AWS account."
    },
    "DeploymentGroupAlreadyExistsException": {
      "type": "object",
      "properties": {},
      "description": "A deployment group with the specified name already exists with the applicable IAM user or AWS account."
    },
    "DeploymentGroupDoesNotExistException": {
      "type": "object",
      "properties": {},
      "description": "The named deployment group does not exist with the applicable IAM user or AWS account."
    },
    "DeploymentGroupId": {
      "type": "string"
    },
    "DeploymentGroupInfo": {
      "type": "object",
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The application name."
        },
        "deploymentGroupId": {
          "$ref": "#/definitions/DeploymentGroupId",
          "description": "The deployment group ID."
        },
        "deploymentGroupName": {
          "$ref": "#/definitions/DeploymentGroupName",
          "description": "The deployment group name."
        },
        "deploymentConfigName": {
          "$ref": "#/definitions/DeploymentConfigName",
          "description": "The deployment configuration name."
        },
        "ec2TagFilters": {
          "$ref": "#/definitions/EC2TagFilterList",
          "description": "The Amazon EC2 tags on which to filter."
        },
        "onPremisesInstanceTagFilters": {
          "$ref": "#/definitions/TagFilterList",
          "description": "The on-premises instance tags on which to filter."
        },
        "autoScalingGroups": {
          "$ref": "#/definitions/AutoScalingGroupList",
          "description": "A list of associated Auto Scaling groups."
        },
        "serviceRoleArn": {
          "$ref": "#/definitions/Role",
          "description": "A service role ARN."
        },
        "targetRevision": {
          "$ref": "#/definitions/RevisionLocation",
          "description": "Information about the deployment group's target revision, including type and location."
        },
        "triggerConfigurations": {
          "$ref": "#/definitions/TriggerConfigList",
          "description": "A list of associated triggers. "
        }
      },
      "description": "Information about a deployment group."
    },
    "DeploymentGroupInfoList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DeploymentGroupInfo"
      }
    },
    "DeploymentGroupLimitExceededException": {
      "type": "object",
      "properties": {},
      "description": " The deployment groups limit was exceeded."
    },
    "DeploymentGroupName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100
    },
    "DeploymentGroupNameRequiredException": {
      "type": "object",
      "properties": {},
      "description": "The deployment group name was not specified."
    },
    "DeploymentGroupsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DeploymentGroupName"
      }
    },
    "DeploymentId": {
      "type": "string"
    },
    "DeploymentIdRequiredException": {
      "type": "object",
      "properties": {},
      "description": "At least one deployment ID must be specified."
    },
    "DeploymentInfo": {
      "type": "object",
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The application name."
        },
        "deploymentGroupName": {
          "$ref": "#/definitions/DeploymentGroupName",
          "description": "The deployment group name."
        },
        "deploymentConfigName": {
          "$ref": "#/definitions/DeploymentConfigName",
          "description": "The deployment configuration name."
        },
        "deploymentId": {
          "$ref": "#/definitions/DeploymentId",
          "description": "The deployment ID."
        },
        "revision": {
          "$ref": "#/definitions/RevisionLocation",
          "description": "Information about the location of stored application artifacts and the service from which to retrieve them."
        },
        "status": {
          "$ref": "#/definitions/DeploymentStatus",
          "description": "The current state of the deployment as a whole."
        },
        "errorInformation": {
          "$ref": "#/definitions/ErrorInformation",
          "description": "Information about any error associated with this deployment."
        },
        "createTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp indicating when the deployment was created."
        },
        "startTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "<p>A timestamp indicating when the deployment was deployed to the deployment group.</p> <p>In some cases, the reported value of the start time may be later than the complete time. This is due to differences in the clock settings of back-end servers that participate in the deployment process.</p>"
        },
        "completeTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp indicating when the deployment was complete."
        },
        "deploymentOverview": {
          "$ref": "#/definitions/DeploymentOverview",
          "description": "A summary of the deployment status of the instances in the deployment."
        },
        "description": {
          "$ref": "#/definitions/Description",
          "description": "A comment about the deployment."
        },
        "creator": {
          "$ref": "#/definitions/DeploymentCreator",
          "description": "<p>The means by which the deployment was created:</p> <ul> <li>user: A user created the deployment.</li> <li>autoscaling: Auto Scaling created the deployment.</li> </ul>"
        },
        "ignoreApplicationStopFailures": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>If true, then if the deployment causes the ApplicationStop deployment lifecycle event to an instance to fail, the deployment to that instance will not be considered to have failed at that point and will continue on to the BeforeInstall deployment lifecycle event.</p> <p>If false or not specified, then if the deployment causes the ApplicationStop deployment lifecycle event to an instance to fail, the deployment to that instance will stop, and the deployment to that instance will be considered to have failed.</p>"
        }
      },
      "description": "Information about a deployment."
    },
    "DeploymentLimitExceededException": {
      "type": "object",
      "properties": {},
      "description": "The number of allowed deployments was exceeded."
    },
    "DeploymentNotStartedException": {
      "type": "object",
      "properties": {},
      "description": "The specified deployment has not started."
    },
    "DeploymentOverview": {
      "type": "object",
      "properties": {
        "Pending": {
          "$ref": "#/definitions/InstanceCount",
          "description": "The number of instances in the deployment in a pending state."
        },
        "InProgress": {
          "$ref": "#/definitions/InstanceCount",
          "description": "The number of instances in which the deployment is in progress."
        },
        "Succeeded": {
          "$ref": "#/definitions/InstanceCount",
          "description": "The number of instances in the deployment to which revisions have been successfully deployed."
        },
        "Failed": {
          "$ref": "#/definitions/InstanceCount",
          "description": "The number of instances in the deployment in a failed state."
        },
        "Skipped": {
          "$ref": "#/definitions/InstanceCount",
          "description": "The number of instances in the deployment in a skipped state."
        }
      },
      "description": "Information about the deployment status of the instances in the deployment."
    },
    "DeploymentStatus": {
      "type": "string",
      "enum": [
        "Created",
        "Queued",
        "InProgress",
        "Succeeded",
        "Failed",
        "Stopped"
      ]
    },
    "DeploymentStatusList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DeploymentStatus"
      }
    },
    "DeploymentsInfoList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DeploymentInfo"
      }
    },
    "DeploymentsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DeploymentId"
      }
    },
    "DeregisterOnPremisesInstanceInput": {
      "type": "object",
      "required": [
        "instanceName"
      ],
      "properties": {
        "instanceName": {
          "$ref": "#/definitions/InstanceName",
          "description": "The name of the on-premises instance to deregister."
        }
      },
      "description": "Represents the input of a deregister on-premises instance operation."
    },
    "Description": {
      "type": "string"
    },
    "DescriptionTooLongException": {
      "type": "object",
      "properties": {},
      "description": "The description is too long."
    },
    "Diagnostics": {
      "type": "object",
      "properties": {
        "errorCode": {
          "$ref": "#/definitions/LifecycleErrorCode",
          "description": "<p>The associated error code:</p> <ul> <li>Success: The specified script ran.</li> <li>ScriptMissing: The specified script was not found in the specified location.</li> <li>ScriptNotExecutable: The specified script is not a recognized executable file type.</li> <li>ScriptTimedOut: The specified script did not finish running in the specified time period.</li> <li>ScriptFailed: The specified script failed to run as expected.</li> <li>UnknownError: The specified script did not run for an unknown reason.</li> </ul>"
        },
        "scriptName": {
          "$ref": "#/definitions/ScriptName",
          "description": "The name of the script."
        },
        "message": {
          "$ref": "#/definitions/LifecycleMessage",
          "description": "The message associated with the error."
        },
        "logTail": {
          "$ref": "#/definitions/LogTail",
          "description": "<p>The last portion of the diagnostic log.</p> <p>If available, AWS CodeDeploy returns up to the last 4 KB of the diagnostic log.</p>"
        }
      },
      "description": "Diagnostic information about executable scripts that are part of a deployment."
    },
    "EC2TagFilter": {
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/Key",
          "description": "The tag filter key."
        },
        "Value": {
          "$ref": "#/definitions/Value",
          "description": "The tag filter value."
        },
        "Type": {
          "$ref": "#/definitions/EC2TagFilterType",
          "description": "<p>The tag filter type:</p> <ul> <li>KEY_ONLY: Key only.</li> <li>VALUE_ONLY: Value only.</li> <li>KEY_AND_VALUE: Key and value.</li> </ul>"
        }
      },
      "description": "Information about a tag filter."
    },
    "EC2TagFilterList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/EC2TagFilter"
      }
    },
    "EC2TagFilterType": {
      "type": "string",
      "enum": [
        "KEY_ONLY",
        "VALUE_ONLY",
        "KEY_AND_VALUE"
      ]
    },
    "ETag": {
      "type": "string"
    },
    "ErrorCode": {
      "type": "string",
      "enum": [
        "DEPLOYMENT_GROUP_MISSING",
        "APPLICATION_MISSING",
        "REVISION_MISSING",
        "IAM_ROLE_MISSING",
        "IAM_ROLE_PERMISSIONS",
        "NO_EC2_SUBSCRIPTION",
        "OVER_MAX_INSTANCES",
        "NO_INSTANCES",
        "TIMEOUT",
        "HEALTH_CONSTRAINTS_INVALID",
        "HEALTH_CONSTRAINTS",
        "INTERNAL_ERROR",
        "THROTTLED"
      ]
    },
    "ErrorInformation": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/ErrorCode",
          "description": "<p>The error code:</p> <ul> <li>APPLICATION_MISSING: The application was missing. This error code will most likely be raised if the application is deleted after the deployment is created but before it is started.</li> <li>DEPLOYMENT_GROUP_MISSING: The deployment group was missing. This error code will most likely be raised if the deployment group is deleted after the deployment is created but before it is started.</li> <li>HEALTH_CONSTRAINTS: The deployment failed on too many instances to be successfully deployed within the instance health constraints specified.</li> <li>HEALTH_CONSTRAINTS_INVALID: The revision cannot be successfully deployed within the instance health constraints specified.</li> <li>IAM_ROLE_MISSING: The service role cannot be accessed.</li> <li>IAM_ROLE_PERMISSIONS: The service role does not have the correct permissions.</li> <li>INTERNAL_ERROR: There was an internal error.</li> <li>NO_EC2_SUBSCRIPTION: The calling account is not subscribed to the Amazon EC2 service.</li> <li>NO_INSTANCES: No instance were specified, or no instance can be found.</li> <li>OVER_MAX_INSTANCES: The maximum number of instance was exceeded.</li> <li>THROTTLED: The operation was throttled because the calling account exceeded the throttling limits of one or more AWS services.</li> <li>TIMEOUT: The deployment has timed out.</li> <li>REVISION_MISSING: The revision ID was missing. This error code will most likely be raised if the revision is deleted after the deployment is created but before it is started.</li> </ul>"
        },
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "An accompanying error message."
        }
      },
      "description": "Information about a deployment error."
    },
    "ErrorMessage": {
      "type": "string"
    },
    "GenericRevisionInfo": {
      "type": "object",
      "properties": {
        "description": {
          "$ref": "#/definitions/Description",
          "description": "A comment about the revision."
        },
        "deploymentGroups": {
          "$ref": "#/definitions/DeploymentGroupsList",
          "description": "The deployment groups for which this is the current target revision."
        },
        "firstUsedTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "When the revision was first used by AWS CodeDeploy."
        },
        "lastUsedTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "When the revision was last used by AWS CodeDeploy."
        },
        "registerTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "When the revision was registered with AWS CodeDeploy."
        }
      },
      "description": "Information about an application revision."
    },
    "GetApplicationInput": {
      "type": "object",
      "required": [
        "applicationName"
      ],
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account."
        }
      },
      "description": "Represents the input of a get application operation."
    },
    "GetApplicationOutput": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/ApplicationInfo",
          "description": "Information about the application."
        }
      },
      "description": "Represents the output of a get application operation."
    },
    "GetApplicationRevisionInput": {
      "type": "object",
      "required": [
        "applicationName",
        "revision"
      ],
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of the application that corresponds to the revision."
        },
        "revision": {
          "$ref": "#/definitions/RevisionLocation",
          "description": "Information about the application revision to get, including type and location."
        }
      },
      "description": "Represents the input of a get application revision operation."
    },
    "GetApplicationRevisionOutput": {
      "type": "object",
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of the application that corresponds to the revision."
        },
        "revision": {
          "$ref": "#/definitions/RevisionLocation",
          "description": "Additional information about the revision, including type and location."
        },
        "revisionInfo": {
          "$ref": "#/definitions/GenericRevisionInfo",
          "description": "General information about the revision."
        }
      },
      "description": "Represents the output of a get application revision operation."
    },
    "GetDeploymentConfigInput": {
      "type": "object",
      "required": [
        "deploymentConfigName"
      ],
      "properties": {
        "deploymentConfigName": {
          "$ref": "#/definitions/DeploymentConfigName",
          "description": "The name of a deployment configuration associated with the applicable IAM user or AWS account."
        }
      },
      "description": "Represents the input of a get deployment configuration operation."
    },
    "GetDeploymentConfigOutput": {
      "type": "object",
      "properties": {
        "deploymentConfigInfo": {
          "$ref": "#/definitions/DeploymentConfigInfo",
          "description": "Information about the deployment configuration."
        }
      },
      "description": "Represents the output of a get deployment configuration operation."
    },
    "GetDeploymentGroupInput": {
      "type": "object",
      "required": [
        "applicationName",
        "deploymentGroupName"
      ],
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account."
        },
        "deploymentGroupName": {
          "$ref": "#/definitions/DeploymentGroupName",
          "description": "The name of an existing deployment group for the specified application."
        }
      },
      "description": "Represents the input of a get deployment group operation."
    },
    "GetDeploymentGroupOutput": {
      "type": "object",
      "properties": {
        "deploymentGroupInfo": {
          "$ref": "#/definitions/DeploymentGroupInfo",
          "description": "Information about the deployment group."
        }
      },
      "description": "Represents the output of a get deployment group operation."
    },
    "GetDeploymentInput": {
      "type": "object",
      "required": [
        "deploymentId"
      ],
      "properties": {
        "deploymentId": {
          "$ref": "#/definitions/DeploymentId",
          "description": "A deployment ID associated with the applicable IAM user or AWS account."
        }
      },
      "description": "Represents the input of a get deployment operation."
    },
    "GetDeploymentInstanceInput": {
      "type": "object",
      "required": [
        "deploymentId",
        "instanceId"
      ],
      "properties": {
        "deploymentId": {
          "$ref": "#/definitions/DeploymentId",
          "description": "The unique ID of a deployment."
        },
        "instanceId": {
          "$ref": "#/definitions/InstanceId",
          "description": "The unique ID of an instance in the deployment group."
        }
      },
      "description": "Represents the input of a get deployment instance operation."
    },
    "GetDeploymentInstanceOutput": {
      "type": "object",
      "properties": {
        "instanceSummary": {
          "$ref": "#/definitions/InstanceSummary",
          "description": "Information about the instance."
        }
      },
      "description": "Represents the output of a get deployment instance operation."
    },
    "GetDeploymentOutput": {
      "type": "object",
      "properties": {
        "deploymentInfo": {
          "$ref": "#/definitions/DeploymentInfo",
          "description": "Information about the deployment."
        }
      },
      "description": "Represents the output of a get deployment operation."
    },
    "GetOnPremisesInstanceInput": {
      "type": "object",
      "required": [
        "instanceName"
      ],
      "properties": {
        "instanceName": {
          "$ref": "#/definitions/InstanceName",
          "description": "The name of the on-premises instance about which to get information."
        }
      },
      "description": "Represents the input of a get on-premises instance operation."
    },
    "GetOnPremisesInstanceOutput": {
      "type": "object",
      "properties": {
        "instanceInfo": {
          "$ref": "#/definitions/InstanceInfo",
          "description": "Information about the on-premises instance."
        }
      },
      "description": "Represents the output of a get on-premises instance operation."
    },
    "GitHubLocation": {
      "type": "object",
      "properties": {
        "repository": {
          "$ref": "#/definitions/Repository",
          "description": "<p>The GitHub account and repository pair that stores a reference to the commit that represents the bundled artifacts for the application revision. </p> <p>Specified as account/repository.</p>"
        },
        "commitId": {
          "$ref": "#/definitions/CommitId",
          "description": "The SHA1 commit ID of the GitHub commit that represents the bundled artifacts for the application revision."
        }
      },
      "description": "Information about the location of application artifacts stored in GitHub."
    },
    "IamUserArn": {
      "type": "string"
    },
    "IamUserArnAlreadyRegisteredException": {
      "type": "object",
      "properties": {},
      "description": "The specified IAM user ARN is already registered with an on-premises instance."
    },
    "IamUserArnRequiredException": {
      "type": "object",
      "properties": {},
      "description": "An IAM user ARN was not specified."
    },
    "InstanceArn": {
      "type": "string"
    },
    "InstanceCount": {
      "type": "integer"
    },
    "InstanceDoesNotExistException": {
      "type": "object",
      "properties": {},
      "description": "The specified instance does not exist in the deployment group."
    },
    "InstanceId": {
      "type": "string"
    },
    "InstanceIdRequiredException": {
      "type": "object",
      "properties": {},
      "description": "The instance ID was not specified."
    },
    "InstanceInfo": {
      "type": "object",
      "properties": {
        "instanceName": {
          "$ref": "#/definitions/InstanceName",
          "description": "The name of the on-premises instance."
        },
        "iamUserArn": {
          "$ref": "#/definitions/IamUserArn",
          "description": "The IAM user ARN associated with the on-premises instance."
        },
        "instanceArn": {
          "$ref": "#/definitions/InstanceArn",
          "description": "The ARN of the on-premises instance."
        },
        "registerTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time at which the on-premises instance was registered."
        },
        "deregisterTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "If the on-premises instance was deregistered, the time at which the on-premises instance was deregistered."
        },
        "tags": {
          "$ref": "#/definitions/TagList",
          "description": "The tags currently associated with the on-premises instance."
        }
      },
      "description": "Information about an on-premises instance."
    },
    "InstanceInfoList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceInfo"
      }
    },
    "InstanceLimitExceededException": {
      "type": "object",
      "properties": {},
      "description": "The maximum number of allowed on-premises instances in a single call was exceeded."
    },
    "InstanceName": {
      "type": "string"
    },
    "InstanceNameAlreadyRegisteredException": {
      "type": "object",
      "properties": {},
      "description": "The specified on-premises instance name is already registered."
    },
    "InstanceNameList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceName"
      }
    },
    "InstanceNameRequiredException": {
      "type": "object",
      "properties": {},
      "description": "An on-premises instance name was not specified."
    },
    "InstanceNotRegisteredException": {
      "type": "object",
      "properties": {},
      "description": "The specified on-premises instance is not registered."
    },
    "InstanceStatus": {
      "type": "string",
      "enum": [
        "Pending",
        "InProgress",
        "Succeeded",
        "Failed",
        "Skipped",
        "Unknown"
      ]
    },
    "InstanceStatusList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceStatus"
      }
    },
    "InstanceSummary": {
      "type": "object",
      "properties": {
        "deploymentId": {
          "$ref": "#/definitions/DeploymentId",
          "description": "The deployment ID."
        },
        "instanceId": {
          "$ref": "#/definitions/InstanceId",
          "description": "The instance ID."
        },
        "status": {
          "$ref": "#/definitions/InstanceStatus",
          "description": "<p>The deployment status for this instance:</p> <ul> <li>Pending: The deployment is pending for this instance.</li> <li>In Progress: The deployment is in progress for this instance.</li> <li>Succeeded: The deployment has succeeded for this instance.</li> <li>Failed: The deployment has failed for this instance.</li> <li>Skipped: The deployment has been skipped for this instance.</li> <li>Unknown: The deployment status is unknown for this instance.</li> </ul>"
        },
        "lastUpdatedAt": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp indicating when the instance information was last updated."
        },
        "lifecycleEvents": {
          "$ref": "#/definitions/LifecycleEventList",
          "description": "A list of lifecycle events for this instance."
        }
      },
      "description": "Information about an instance in a deployment."
    },
    "InstanceSummaryList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceSummary"
      }
    },
    "InstancesList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/InstanceId"
      }
    },
    "InvalidApplicationNameException": {
      "type": "object",
      "properties": {},
      "description": "The application name was specified in an invalid format."
    },
    "InvalidAutoScalingGroupException": {
      "type": "object",
      "properties": {},
      "description": "The Auto Scaling group was specified in an invalid format or does not exist."
    },
    "InvalidBucketNameFilterException": {
      "type": "object",
      "properties": {},
      "description": "The bucket name either doesn't exist or was specified in an invalid format."
    },
    "InvalidDeployedStateFilterException": {
      "type": "object",
      "properties": {},
      "description": "The deployed state filter was specified in an invalid format."
    },
    "InvalidDeploymentConfigNameException": {
      "type": "object",
      "properties": {},
      "description": "The deployment configuration name was specified in an invalid format."
    },
    "InvalidDeploymentGroupNameException": {
      "type": "object",
      "properties": {},
      "description": "The deployment group name was specified in an invalid format."
    },
    "InvalidDeploymentIdException": {
      "type": "object",
      "properties": {},
      "description": "At least one of the deployment IDs was specified in an invalid format."
    },
    "InvalidDeploymentStatusException": {
      "type": "object",
      "properties": {},
      "description": "The specified deployment status doesn't exist or cannot be determined."
    },
    "InvalidEC2TagException": {
      "type": "object",
      "properties": {},
      "description": "The tag was specified in an invalid format."
    },
    "InvalidIamUserArnException": {
      "type": "object",
      "properties": {},
      "description": "The IAM user ARN was specified in an invalid format."
    },
    "InvalidInstanceNameException": {
      "type": "object",
      "properties": {},
      "description": "The specified on-premises instance name was specified in an invalid format."
    },
    "InvalidInstanceStatusException": {
      "type": "object",
      "properties": {},
      "description": "The specified instance status does not exist."
    },
    "InvalidKeyPrefixFilterException": {
      "type": "object",
      "properties": {},
      "description": "The specified key prefix filter was specified in an invalid format."
    },
    "InvalidMinimumHealthyHostValueException": {
      "type": "object",
      "properties": {},
      "description": "The minimum healthy instance value was specified in an invalid format."
    },
    "InvalidNextTokenException": {
      "type": "object",
      "properties": {},
      "description": "The next token was specified in an invalid format."
    },
    "InvalidOperationException": {
      "type": "object",
      "properties": {},
      "description": "An invalid operation was detected."
    },
    "InvalidRegistrationStatusException": {
      "type": "object",
      "properties": {},
      "description": "The registration status was specified in an invalid format."
    },
    "InvalidRevisionException": {
      "type": "object",
      "properties": {},
      "description": "The revision was specified in an invalid format."
    },
    "InvalidRoleException": {
      "type": "object",
      "properties": {},
      "description": "The service role ARN was specified in an invalid format. Or, if an Auto Scaling group was specified, the specified service role does not grant the appropriate permissions to Auto Scaling."
    },
    "InvalidSortByException": {
      "type": "object",
      "properties": {},
      "description": "The column name to sort by is either not present or was specified in an invalid format."
    },
    "InvalidSortOrderException": {
      "type": "object",
      "properties": {},
      "description": "The sort order was specified in an invalid format."
    },
    "InvalidTagException": {
      "type": "object",
      "properties": {},
      "description": "The specified tag was specified in an invalid format."
    },
    "InvalidTagFilterException": {
      "type": "object",
      "properties": {},
      "description": "The specified tag filter was specified in an invalid format."
    },
    "InvalidTimeRangeException": {
      "type": "object",
      "properties": {},
      "description": "The specified time range was specified in an invalid format."
    },
    "InvalidTriggerConfigException": {
      "type": "object",
      "properties": {},
      "description": "The trigger was specified in an invalid format."
    },
    "Key": {
      "type": "string"
    },
    "LifecycleErrorCode": {
      "type": "string",
      "enum": [
        "Success",
        "ScriptMissing",
        "ScriptNotExecutable",
        "ScriptTimedOut",
        "ScriptFailed",
        "UnknownError"
      ]
    },
    "LifecycleEvent": {
      "type": "object",
      "properties": {
        "lifecycleEventName": {
          "$ref": "#/definitions/LifecycleEventName",
          "description": "The deployment lifecycle event name, such as ApplicationStop, BeforeInstall, AfterInstall, ApplicationStart, or ValidateService."
        },
        "diagnostics": {
          "$ref": "#/definitions/Diagnostics",
          "description": "Diagnostic information about the deployment lifecycle event."
        },
        "startTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp indicating when the deployment lifecycle event started."
        },
        "endTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp indicating when the deployment lifecycle event ended."
        },
        "status": {
          "$ref": "#/definitions/LifecycleEventStatus",
          "description": "<p>The deployment lifecycle event status:</p> <ul> <li>Pending: The deployment lifecycle event is pending.</li> <li>InProgress: The deployment lifecycle event is in progress.</li> <li>Succeeded: The deployment lifecycle event ran successfully.</li> <li>Failed: The deployment lifecycle event has failed.</li> <li>Skipped: The deployment lifecycle event has been skipped.</li> <li>Unknown: The deployment lifecycle event is unknown.</li> </ul>"
        }
      },
      "description": "Information about a deployment lifecycle event."
    },
    "LifecycleEventList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/LifecycleEvent"
      }
    },
    "LifecycleEventName": {
      "type": "string"
    },
    "LifecycleEventStatus": {
      "type": "string",
      "enum": [
        "Pending",
        "InProgress",
        "Succeeded",
        "Failed",
        "Skipped",
        "Unknown"
      ]
    },
    "LifecycleHookLimitExceededException": {
      "type": "object",
      "properties": {},
      "description": "The limit for lifecycle hooks was exceeded."
    },
    "LifecycleMessage": {
      "type": "string"
    },
    "ListApplicationRevisionsInput": {
      "type": "object",
      "required": [
        "applicationName"
      ],
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account."
        },
        "sortBy": {
          "$ref": "#/definitions/ApplicationRevisionSortBy",
          "description": "<p>The column name to use to sort the list results:</p> <ul> <li>registerTime: Sort by the time the revisions were registered with AWS CodeDeploy.</li> <li>firstUsedTime: Sort by the time the revisions were first used in a deployment.</li> <li>lastUsedTime: Sort by the time the revisions were last used in a deployment.</li> </ul> <p>If not specified or set to null, the results will be returned in an arbitrary order.</p>"
        },
        "sortOrder": {
          "$ref": "#/definitions/SortOrder",
          "description": "<p>The order in which to sort the list results:</p> <ul> <li>ascending: ascending order.</li> <li>descending: descending order.</li> </ul> <p>If not specified, the results will be sorted in ascending order.</p> <p>If set to null, the results will be sorted in an arbitrary order.</p>"
        },
        "s3Bucket": {
          "$ref": "#/definitions/S3Bucket",
          "description": "<p>An Amazon S3 bucket name to limit the search for revisions.</p> <p>If set to null, all of the user's buckets will be searched.</p>"
        },
        "s3KeyPrefix": {
          "$ref": "#/definitions/S3Key",
          "description": "A key prefix for the set of Amazon S3 objects to limit the search for revisions."
        },
        "deployed": {
          "$ref": "#/definitions/ListStateFilterAction",
          "description": "<p>Whether to list revisions based on whether the revision is the target revision of an deployment group:</p> <ul> <li>include: List revisions that are target revisions of a deployment group.</li> <li>exclude: Do not list revisions that are target revisions of a deployment group.</li> <li>ignore: List all revisions.</li> </ul>"
        },
        "nextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An identifier returned from the previous list application revisions call. It can be used to return the next set of applications in the list."
        }
      },
      "description": "Represents the input of a list application revisions operation."
    },
    "ListApplicationRevisionsOutput": {
      "type": "object",
      "properties": {
        "revisions": {
          "$ref": "#/definitions/RevisionLocationList",
          "description": "A list of locations that contain the matching revisions."
        },
        "nextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "If a large amount of information is returned, an identifier will also be returned. It can be used in a subsequent list application revisions call to return the next set of application revisions in the list."
        }
      },
      "description": "Represents the output of a list application revisions operation."
    },
    "ListApplicationsInput": {
      "type": "object",
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An identifier returned from the previous list applications call. It can be used to return the next set of applications in the list."
        }
      },
      "description": "Represents the input of a list applications operation."
    },
    "ListApplicationsOutput": {
      "type": "object",
      "properties": {
        "applications": {
          "$ref": "#/definitions/ApplicationsList",
          "description": "A list of application names."
        },
        "nextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list applications call to return the next set of applications, will also be returned. in the list."
        }
      },
      "description": "Represents the output of a list applications operation."
    },
    "ListDeploymentConfigsInput": {
      "type": "object",
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An identifier returned from the previous list deployment configurations call. It can be used to return the next set of deployment configurations in the list. "
        }
      },
      "description": "Represents the input of a list deployment configurations operation."
    },
    "ListDeploymentConfigsOutput": {
      "type": "object",
      "properties": {
        "deploymentConfigsList": {
          "$ref": "#/definitions/DeploymentConfigsList",
          "description": "A list of deployment configurations, including built-in configurations such as CodeDeployDefault.OneAtATime."
        },
        "nextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment configurations call to return the next set of deployment configurations in the list."
        }
      },
      "description": "Represents the output of a list deployment configurations operation."
    },
    "ListDeploymentGroupsInput": {
      "type": "object",
      "required": [
        "applicationName"
      ],
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account."
        },
        "nextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An identifier returned from the previous list deployment groups call. It can be used to return the next set of deployment groups in the list."
        }
      },
      "description": "Represents the input of a list deployment groups operation."
    },
    "ListDeploymentGroupsOutput": {
      "type": "object",
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The application name."
        },
        "deploymentGroups": {
          "$ref": "#/definitions/DeploymentGroupsList",
          "description": "A list of corresponding deployment group names."
        },
        "nextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment groups call to return the next set of deployment groups in the list."
        }
      },
      "description": "Represents the output of a list deployment groups operation."
    },
    "ListDeploymentInstancesInput": {
      "type": "object",
      "required": [
        "deploymentId"
      ],
      "properties": {
        "deploymentId": {
          "$ref": "#/definitions/DeploymentId",
          "description": "The unique ID of a deployment."
        },
        "nextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An identifier returned from the previous list deployment instances call. It can be used to return the next set of deployment instances in the list."
        },
        "instanceStatusFilter": {
          "$ref": "#/definitions/InstanceStatusList",
          "description": "<p>A subset of instances to list by status:</p> <ul> <li>Pending: Include those instance with pending deployments.</li> <li>InProgress: Include those instance where deployments are still in progress.</li> <li>Succeeded: Include those instances with successful deployments.</li> <li>Failed: Include those instance with failed deployments.</li> <li>Skipped: Include those instance with skipped deployments.</li> <li>Unknown: Include those instance with deployments in an unknown state.</li> </ul>"
        }
      },
      "description": "Represents the input of a list deployment instances operation."
    },
    "ListDeploymentInstancesOutput": {
      "type": "object",
      "properties": {
        "instancesList": {
          "$ref": "#/definitions/InstancesList",
          "description": "A list of instance IDs."
        },
        "nextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployment instances call to return the next set of deployment instances in the list."
        }
      },
      "description": "Represents the output of a list deployment instances operation."
    },
    "ListDeploymentsInput": {
      "type": "object",
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account."
        },
        "deploymentGroupName": {
          "$ref": "#/definitions/DeploymentGroupName",
          "description": "The name of an existing deployment group for the specified application."
        },
        "includeOnlyStatuses": {
          "$ref": "#/definitions/DeploymentStatusList",
          "description": "<p>A subset of deployments to list by status:</p> <ul> <li>Created: Include created deployments in the resulting list.</li> <li>Queued: Include queued deployments in the resulting list.</li> <li>In Progress: Include in-progress deployments in the resulting list.</li> <li>Succeeded: Include successful deployments in the resulting list.</li> <li>Failed: Include failed deployments in the resulting list.</li> <li>Stopped: Include stopped deployments in the resulting list.</li> </ul>"
        },
        "createTimeRange": {
          "$ref": "#/definitions/TimeRange",
          "description": "A time range (start and end) for returning a subset of the list of deployments."
        },
        "nextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An identifier returned from the previous list deployments call. It can be used to return the next set of deployments in the list."
        }
      },
      "description": "Represents the input of a list deployments operation."
    },
    "ListDeploymentsOutput": {
      "type": "object",
      "properties": {
        "deployments": {
          "$ref": "#/definitions/DeploymentsList",
          "description": "A list of deployment IDs."
        },
        "nextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list deployments call to return the next set of deployments in the list."
        }
      },
      "description": "Represents the output of a list deployments operation."
    },
    "ListOnPremisesInstancesInput": {
      "type": "object",
      "properties": {
        "registrationStatus": {
          "$ref": "#/definitions/RegistrationStatus",
          "description": "<p>The registration status of the on-premises instances:</p> <ul> <li>Deregistered: Include deregistered on-premises instances in the resulting list.</li> <li>Registered: Include registered on-premises instances in the resulting list.</li> </ul>"
        },
        "tagFilters": {
          "$ref": "#/definitions/TagFilterList",
          "description": "The on-premises instance tags that will be used to restrict the corresponding on-premises instance names returned."
        },
        "nextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "An identifier returned from the previous list on-premises instances call. It can be used to return the next set of on-premises instances in the list."
        }
      },
      "description": "<p>Represents the input of a list on-premises instances operation.</p>."
    },
    "ListOnPremisesInstancesOutput": {
      "type": "object",
      "properties": {
        "instanceNames": {
          "$ref": "#/definitions/InstanceNameList",
          "description": "The list of matching on-premises instance names."
        },
        "nextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "If a large amount of information is returned, an identifier is also returned. It can be used in a subsequent list on-premises instances call to return the next set of on-premises instances in the list."
        }
      },
      "description": "Represents the output of list on-premises instances operation."
    },
    "ListStateFilterAction": {
      "type": "string",
      "enum": [
        "include",
        "exclude",
        "ignore"
      ]
    },
    "LogTail": {
      "type": "string"
    },
    "Message": {
      "type": "string"
    },
    "MinimumHealthyHosts": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/MinimumHealthyHostsValue",
          "description": "The minimum healthy instance value."
        },
        "type": {
          "$ref": "#/definitions/MinimumHealthyHostsType",
          "description": "<p>The minimum healthy instance type:</p> <ul> <li>HOST_COUNT: The minimum number of healthy instance as an absolute value.</li> <li>FLEET_PERCENT: The minimum number of healthy instance as a percentage of the total number of instance in the deployment.</li> </ul> <p>In an example of nine instance, if a HOST_COUNT of six is specified, deploy to up to three instances at a time. The deployment will be successful if six or more instances are deployed to successfully; otherwise, the deployment fails. If a FLEET_PERCENT of 40 is specified, deploy to up to five instance at a time. The deployment will be successful if four or more instance are deployed to successfully; otherwise, the deployment fails.</p> <note>In a call to the get deployment configuration operation, CodeDeployDefault.OneAtATime will return a minimum healthy instance type of MOST_CONCURRENCY and a value of 1. This means a deployment to only one instance at a time. (You cannot set the type to MOST_CONCURRENCY, only to HOST_COUNT or FLEET_PERCENT.) In addition, with CodeDeployDefault.OneAtATime, AWS CodeDeploy will try to ensure that all instances but one are kept in a healthy state during the deployment. Although this allows one instance at a time to be taken offline for a new deployment, it also means that if the deployment to the last instance fails, the overall deployment still succeeds.</note>"
        }
      },
      "description": "Information about minimum healthy instance."
    },
    "MinimumHealthyHostsType": {
      "type": "string",
      "enum": [
        "HOST_COUNT",
        "FLEET_PERCENT"
      ]
    },
    "MinimumHealthyHostsValue": {
      "type": "integer"
    },
    "NextToken": {
      "type": "string"
    },
    "RegisterApplicationRevisionInput": {
      "type": "object",
      "required": [
        "applicationName",
        "revision"
      ],
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account."
        },
        "description": {
          "$ref": "#/definitions/Description",
          "description": "A comment about the revision."
        },
        "revision": {
          "$ref": "#/definitions/RevisionLocation",
          "description": "Information about the application revision to register, including type and location."
        }
      },
      "description": "Represents the input of a register application revision operation."
    },
    "RegisterOnPremisesInstanceInput": {
      "type": "object",
      "required": [
        "instanceName",
        "iamUserArn"
      ],
      "properties": {
        "instanceName": {
          "$ref": "#/definitions/InstanceName",
          "description": "The name of the on-premises instance to register."
        },
        "iamUserArn": {
          "$ref": "#/definitions/IamUserArn",
          "description": "The ARN of the IAM user to associate with the on-premises instance."
        }
      },
      "description": "Represents the input of the register on-premises instance operation."
    },
    "RegistrationStatus": {
      "type": "string",
      "enum": [
        "Registered",
        "Deregistered"
      ]
    },
    "RemoveTagsFromOnPremisesInstancesInput": {
      "type": "object",
      "required": [
        "tags",
        "instanceNames"
      ],
      "properties": {
        "tags": {
          "$ref": "#/definitions/TagList",
          "description": "The tag key-value pairs to remove from the on-premises instances."
        },
        "instanceNames": {
          "$ref": "#/definitions/InstanceNameList",
          "description": "The names of the on-premises instances from which to remove tags."
        }
      },
      "description": "Represents the input of a remove tags from on-premises instances operation."
    },
    "Repository": {
      "type": "string"
    },
    "RevisionDoesNotExistException": {
      "type": "object",
      "properties": {},
      "description": "The named revision does not exist with the applicable IAM user or AWS account."
    },
    "RevisionInfo": {
      "type": "object",
      "properties": {
        "revisionLocation": {
          "$ref": "#/definitions/RevisionLocation"
        },
        "genericRevisionInfo": {
          "$ref": "#/definitions/GenericRevisionInfo"
        }
      },
      "description": "Information about an application revision."
    },
    "RevisionInfoList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RevisionInfo"
      }
    },
    "RevisionLocation": {
      "type": "object",
      "properties": {
        "revisionType": {
          "$ref": "#/definitions/RevisionLocationType",
          "description": "<p>The type of application revision:</p> <ul> <li>S3: An application revision stored in Amazon S3.</li> <li>GitHub: An application revision stored in GitHub.</li> </ul>"
        },
        "s3Location": {
          "$ref": "#/definitions/S3Location"
        },
        "gitHubLocation": {
          "$ref": "#/definitions/GitHubLocation"
        }
      },
      "description": "Information about the location of an application revision."
    },
    "RevisionLocationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RevisionLocation"
      }
    },
    "RevisionLocationType": {
      "type": "string",
      "enum": [
        "S3",
        "GitHub"
      ]
    },
    "RevisionRequiredException": {
      "type": "object",
      "properties": {},
      "description": "The revision ID was not specified."
    },
    "Role": {
      "type": "string"
    },
    "RoleRequiredException": {
      "type": "object",
      "properties": {},
      "description": "The role ID was not specified."
    },
    "S3Bucket": {
      "type": "string"
    },
    "S3Key": {
      "type": "string"
    },
    "S3Location": {
      "type": "object",
      "properties": {
        "bucket": {
          "$ref": "#/definitions/S3Bucket",
          "description": "The name of the Amazon S3 bucket where the application revision is stored."
        },
        "key": {
          "$ref": "#/definitions/S3Key",
          "description": "The name of the Amazon S3 object that represents the bundled artifacts for the application revision."
        },
        "bundleType": {
          "$ref": "#/definitions/BundleType",
          "description": "<p>The file type of the application revision. Must be one of the following:</p> <ul> <li>tar: A tar archive file.</li> <li>tgz: A compressed tar archive file.</li> <li>zip: A zip archive file.</li> </ul>"
        },
        "version": {
          "$ref": "#/definitions/VersionId",
          "description": "<p>A specific version of the Amazon S3 object that represents the bundled artifacts for the application revision.</p> <p>If the version is not specified, the system will use the most recent version by default.</p>"
        },
        "eTag": {
          "$ref": "#/definitions/ETag",
          "description": "<p>The ETag of the Amazon S3 object that represents the bundled artifacts for the application revision.</p> <p>If the ETag is not specified as an input parameter, ETag validation of the object will be skipped.</p>"
        }
      },
      "description": "Information about the location of application artifacts stored in Amazon S3."
    },
    "ScriptName": {
      "type": "string"
    },
    "SortOrder": {
      "type": "string",
      "enum": [
        "ascending",
        "descending"
      ]
    },
    "StopDeploymentInput": {
      "type": "object",
      "required": [
        "deploymentId"
      ],
      "properties": {
        "deploymentId": {
          "$ref": "#/definitions/DeploymentId",
          "description": "The unique ID of a deployment."
        }
      },
      "description": "Represents the input of a stop deployment operation."
    },
    "StopDeploymentOutput": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/StopStatus",
          "description": "<p>The status of the stop deployment operation:</p> <ul> <li>Pending: The stop operation is pending.</li> <li>Succeeded: The stop operation was successful.</li> </ul>"
        },
        "statusMessage": {
          "$ref": "#/definitions/Message",
          "description": "An accompanying status message."
        }
      },
      "description": "Represents the output of a stop deployment operation."
    },
    "StopStatus": {
      "type": "string",
      "enum": [
        "Pending",
        "Succeeded"
      ]
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/Key",
          "description": "The tag's key."
        },
        "Value": {
          "$ref": "#/definitions/Value",
          "description": "The tag's value."
        }
      },
      "description": "Information about a tag."
    },
    "TagFilter": {
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/Key",
          "description": "The on-premises instance tag filter key."
        },
        "Value": {
          "$ref": "#/definitions/Value",
          "description": "The on-premises instance tag filter value."
        },
        "Type": {
          "$ref": "#/definitions/TagFilterType",
          "description": "<p>The on-premises instance tag filter type:</p> <ul> <li>KEY_ONLY: Key only.</li> <li>VALUE_ONLY: Value only.</li> <li>KEY_AND_VALUE: Key and value.</li> </ul>"
        }
      },
      "description": "Information about an on-premises instance tag filter."
    },
    "TagFilterList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TagFilter"
      }
    },
    "TagFilterType": {
      "type": "string",
      "enum": [
        "KEY_ONLY",
        "VALUE_ONLY",
        "KEY_AND_VALUE"
      ]
    },
    "TagLimitExceededException": {
      "type": "object",
      "properties": {},
      "description": "The maximum allowed number of tags was exceeded."
    },
    "TagList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      }
    },
    "TagRequiredException": {
      "type": "object",
      "properties": {},
      "description": "A tag was not specified."
    },
    "TimeRange": {
      "type": "object",
      "properties": {
        "start": {
          "$ref": "#/definitions/Timestamp",
          "description": "<p>The start time of the time range.</p> <note>Specify null to leave the start time open-ended.</note>"
        },
        "end": {
          "$ref": "#/definitions/Timestamp",
          "description": "<p>The end time of the time range.</p> <note>Specify null to leave the end time open-ended.</note>"
        }
      },
      "description": "Information about a time range."
    },
    "Timestamp": {
      "type": "string",
      "format": "date-time"
    },
    "TriggerConfig": {
      "type": "object",
      "properties": {
        "triggerName": {
          "$ref": "#/definitions/TriggerName",
          "description": "The name of the notification trigger."
        },
        "triggerTargetArn": {
          "$ref": "#/definitions/TriggerTargetArn",
          "description": "The ARN of the Amazon Simple Notification Service topic through which notifications about deployment or instance events are sent."
        },
        "triggerEvents": {
          "$ref": "#/definitions/TriggerEventTypeList",
          "description": "<p>The event type or types for which notifications are triggered.</p> <p>The following event type values are supported:</p> <ul> <li>DEPLOYMENT_START</li> <li>DEPLOYMENT_SUCCESS</li> <li>DEPLOYMENT_FAILURE</li> <li>DEPLOYMENT_STOP</li> <li>INSTANCE_START</li> <li>INSTANCE_SUCCESS</li> <li>INSTANCE_FAILURE</li> </ul>"
        }
      },
      "description": "Information about notification triggers for the deployment group."
    },
    "TriggerConfigList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TriggerConfig"
      }
    },
    "TriggerEventType": {
      "type": "string",
      "enum": [
        "DeploymentStart",
        "DeploymentSuccess",
        "DeploymentFailure",
        "DeploymentStop",
        "InstanceStart",
        "InstanceSuccess",
        "InstanceFailure"
      ]
    },
    "TriggerEventTypeList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TriggerEventType"
      }
    },
    "TriggerName": {
      "type": "string"
    },
    "TriggerTargetArn": {
      "type": "string"
    },
    "TriggerTargetsLimitExceededException": {
      "type": "object",
      "properties": {},
      "description": "The maximum allowed number of triggers was exceeded."
    },
    "UpdateApplicationInput": {
      "type": "object",
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The current name of the application you want to change."
        },
        "newApplicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The new name to give the application."
        }
      },
      "description": "Represents the input of an update application operation."
    },
    "UpdateDeploymentGroupInput": {
      "type": "object",
      "required": [
        "applicationName",
        "currentDeploymentGroupName"
      ],
      "properties": {
        "applicationName": {
          "$ref": "#/definitions/ApplicationName",
          "description": "The application name corresponding to the deployment group to update."
        },
        "currentDeploymentGroupName": {
          "$ref": "#/definitions/DeploymentGroupName",
          "description": "The current name of the deployment group."
        },
        "newDeploymentGroupName": {
          "$ref": "#/definitions/DeploymentGroupName",
          "description": "The new name of the deployment group, if you want to change it."
        },
        "deploymentConfigName": {
          "$ref": "#/definitions/DeploymentConfigName",
          "description": "The replacement deployment configuration name to use, if you want to change it."
        },
        "ec2TagFilters": {
          "$ref": "#/definitions/EC2TagFilterList",
          "description": "The replacement set of Amazon EC2 tags on which to filter, if you want to change them. To keep the existing tags, enter their names. To remove tags, do not enter any tag names."
        },
        "onPremisesInstanceTagFilters": {
          "$ref": "#/definitions/TagFilterList",
          "description": "The replacement set of on-premises instance tags on which to filter, if you want to change them. To keep the existing tags, enter their names. To remove tags, do not enter any tag names."
        },
        "autoScalingGroups": {
          "$ref": "#/definitions/AutoScalingGroupNameList",
          "description": "The replacement list of Auto Scaling groups to be included in the deployment group, if you want to change them. To keep the Auto Scaling groups, enter their names. To remove Auto Scaling groups, do not enter any Auto Scaling group names."
        },
        "serviceRoleArn": {
          "$ref": "#/definitions/Role",
          "description": "A replacement ARN for the service role, if you want to change it."
        },
        "triggerConfigurations": {
          "$ref": "#/definitions/TriggerConfigList",
          "description": "Information about triggers to change when the deployment group is updated."
        }
      },
      "description": "Represents the input of an update deployment group operation."
    },
    "UpdateDeploymentGroupOutput": {
      "type": "object",
      "properties": {
        "hooksNotCleanedUp": {
          "$ref": "#/definitions/AutoScalingGroupList",
          "description": "If the output contains no data, and the corresponding deployment group contained at least one Auto Scaling group, AWS CodeDeploy successfully removed all corresponding Auto Scaling lifecycle event hooks from the AWS account. If the output contains data, AWS CodeDeploy could not remove some Auto Scaling lifecycle event hooks from the AWS account."
        }
      },
      "description": "Represents the output of an update deployment group operation."
    },
    "Value": {
      "type": "string"
    },
    "VersionId": {
      "type": "string"
    }
  }
}