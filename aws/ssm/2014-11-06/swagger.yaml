swagger: '2.0'
info:
  version: '2014-11-06'
  x-release: v4
  title: Amazon Simple Systems Manager (SSM)
  description: '<p>Amazon EC2 Systems Manager is a collection of capabilities that helps you automate management tasks such as collecting system inventory, applying operating system (OS) patches, automating the creation of Amazon Machine Images (AMIs), and configuring operating systems (OSs) and applications at scale. Systems Manager works with managed instances: Amazon EC2 instances and servers or virtual machines (VMs) in your on-premises environment that are configured for Systems Manager. </p> <p>This references is intended to be used with the EC2 Systems Manager User Guide (<a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/systems-manager.html">Linux</a>) (<a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/systems-manager.html">Windows</a>).</p> <p>To get started, verify prerequisites and configure managed instances (<a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/systems-manager-prereqs.html">Linux</a>) (<a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/systems-manager-prereqs.html">Windows</a>).</p>'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: aws.amazon.com
  x-serviceName: ssm
  x-origin:
    format: swagger
    version: '2.0'
    url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ssm-2014-11-06.normal.json'
    converter:
      url: 'https://github.com/mermade/aws2openapi'
      version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
x-logo:
  url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
  backgroundColor: '#FFFFFF'
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/ssm/'
host: ssm.amazonaws.com
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: AddTagsToResource
      description: '<p>Adds or overwrites one or more tags for the specified resource. Tags are metadata that you assign to your managed instances. Tags enable you to categorize your managed instances in different ways, for example, by purpose, owner, or environment. Each tag consists of a key and an optional value, both of which you define. For example, you could define a set of tags for your account''s managed instances that helps you track each instance''s owner and stack level. For example: Key=Owner and Value=DbAdmin, SysAdmin, or Dev. Or Key=Stack and Value=Production, Pre-Production, or Test. Each resource can have a maximum of 10 tags. </p> <p>We recommend that you devise a set of tag keys that meets your needs for each resource type. Using a consistent set of tag keys makes it easier for you to manage your resources. You can search and filter the resources based on the tags you add. Tags don''t have any semantic meaning to Amazon EC2 and are interpreted strictly as a string of characters. </p> <p>For more information about tags, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Amazon EC2 Resources</a> in the Amazon EC2 User Guide. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddTagsToResourceResult'
        '480':
          description: InvalidResourceType
          schema:
            $ref: '#/definitions/InvalidResourceType'
        '481':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: TooManyTagsError
          schema:
            $ref: '#/definitions/TooManyTagsError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddTagsToResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CancelCommand':
    post:
      operationId: CancelCommand
      description: Attempts to cancel the command specified by the Command ID. There is no guarantee that the command will be terminated and the underlying process stopped.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelCommandResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidCommandId
          schema:
            $ref: '#/definitions/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '483':
          description: DuplicateInstanceId
          schema:
            $ref: '#/definitions/DuplicateInstanceId'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CancelCommandRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateActivation':
    post:
      operationId: CreateActivation
      description: 'Registers your on-premises server or virtual machine with Amazon EC2 so that you can manage these resources using Run Command. An on-premises server or virtual machine that has been registered with EC2 is called a managed instance. For more information about activations, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/managed-instances.html">Setting Up Managed Instances (Linux)</a> or <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/managed-instances.html">Setting Up Managed Instances (Windows)</a> in the Amazon EC2 User Guide. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateActivationResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateActivationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateAssociation':
    post:
      operationId: CreateAssociation
      description: '<p>Associates the specified SSM document with the specified instances or targets.</p> <p>When you associate an SSM document with one or more instances using instance IDs or tags, the SSM agent running on the instance processes the document and configures the instance as specified.</p> <p>If you associate a document with an instance that already has an associated document, the system throws the AssociationAlreadyExists exception.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAssociationResult'
        '480':
          description: AssociationAlreadyExists
          schema:
            $ref: '#/definitions/AssociationAlreadyExists'
        '481':
          description: AssociationLimitExceeded
          schema:
            $ref: '#/definitions/AssociationLimitExceeded'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '484':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '485':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '486':
          description: UnsupportedPlatformType
          schema:
            $ref: '#/definitions/UnsupportedPlatformType'
        '487':
          description: InvalidOutputLocation
          schema:
            $ref: '#/definitions/InvalidOutputLocation'
        '488':
          description: InvalidParameters
          schema:
            $ref: '#/definitions/InvalidParameters'
        '489':
          description: InvalidTarget
          schema:
            $ref: '#/definitions/InvalidTarget'
        '490':
          description: InvalidSchedule
          schema:
            $ref: '#/definitions/InvalidSchedule'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAssociationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateAssociationBatch':
    post:
      operationId: CreateAssociationBatch
      description: '<p>Associates the specified SSM document with the specified instances or targets.</p> <p>When you associate an SSM document with one or more instances using instance IDs or tags, the SSM agent running on the instance processes the document and configures the instance as specified.</p> <p>If you associate a document with an instance that already has an associated document, the system throws the AssociationAlreadyExists exception.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAssociationBatchResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '483':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '484':
          description: InvalidParameters
          schema:
            $ref: '#/definitions/InvalidParameters'
        '485':
          description: DuplicateInstanceId
          schema:
            $ref: '#/definitions/DuplicateInstanceId'
        '486':
          description: AssociationLimitExceeded
          schema:
            $ref: '#/definitions/AssociationLimitExceeded'
        '487':
          description: UnsupportedPlatformType
          schema:
            $ref: '#/definitions/UnsupportedPlatformType'
        '488':
          description: InvalidOutputLocation
          schema:
            $ref: '#/definitions/InvalidOutputLocation'
        '489':
          description: InvalidTarget
          schema:
            $ref: '#/definitions/InvalidTarget'
        '490':
          description: InvalidSchedule
          schema:
            $ref: '#/definitions/InvalidSchedule'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAssociationBatchRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateDocument':
    post:
      operationId: CreateDocument
      description: '<p>Creates an SSM document.</p> <p>After you create an SSM document, you can use CreateAssociation to associate it with one or more running instances.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDocumentResult'
        '480':
          description: DocumentAlreadyExists
          schema:
            $ref: '#/definitions/DocumentAlreadyExists'
        '481':
          description: MaxDocumentSizeExceeded
          schema:
            $ref: '#/definitions/MaxDocumentSizeExceeded'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: InvalidDocumentContent
          schema:
            $ref: '#/definitions/InvalidDocumentContent'
        '484':
          description: DocumentLimitExceeded
          schema:
            $ref: '#/definitions/DocumentLimitExceeded'
        '485':
          description: InvalidDocumentSchemaVersion
          schema:
            $ref: '#/definitions/InvalidDocumentSchemaVersion'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDocumentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateMaintenanceWindow':
    post:
      operationId: CreateMaintenanceWindow
      description: Creates a new Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMaintenanceWindowResult'
        '480':
          description: IdempotentParameterMismatch
          schema:
            $ref: '#/definitions/IdempotentParameterMismatch'
        '481':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreatePatchBaseline':
    post:
      operationId: CreatePatchBaseline
      description: Creates a patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePatchBaselineResult'
        '480':
          description: IdempotentParameterMismatch
          schema:
            $ref: '#/definitions/IdempotentParameterMismatch'
        '481':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteActivation':
    post:
      operationId: DeleteActivation
      description: 'Deletes an activation. You are not required to delete an activation. If you delete an activation, you can no longer use it to register additional managed instances. Deleting an activation does not de-register managed instances. You must manually de-register managed instances.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteActivationResult'
        '480':
          description: InvalidActivationId
          schema:
            $ref: '#/definitions/InvalidActivationId'
        '481':
          description: InvalidActivation
          schema:
            $ref: '#/definitions/InvalidActivation'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteActivationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteAssociation':
    post:
      operationId: DeleteAssociation
      description: '<p>Disassociates the specified SSM document from the specified instance.</p> <p>When you disassociate an SSM document from an instance, it does not change the configuration of the instance. To change the configuration state of an instance after you disassociate a document, you must create a new document with the desired configuration and associate it with the instance.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAssociationResult'
        '480':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '483':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '484':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAssociationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteDocument':
    post:
      operationId: DeleteDocument
      description: '<p>Deletes the SSM document and all instance associations to the document.</p> <p>Before you delete the SSM document, we recommend that you use DeleteAssociation to disassociate all instances that are associated with the document.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDocumentResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidDocumentOperation
          schema:
            $ref: '#/definitions/InvalidDocumentOperation'
        '483':
          description: AssociatedInstances
          schema:
            $ref: '#/definitions/AssociatedInstances'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDocumentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteMaintenanceWindow':
    post:
      operationId: DeleteMaintenanceWindow
      description: Deletes a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteMaintenanceWindowResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteParameter':
    post:
      operationId: DeleteParameter
      description: Delete a parameter from the system.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteParameterResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: ParameterNotFound
          schema:
            $ref: '#/definitions/ParameterNotFound'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteParameterRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeletePatchBaseline':
    post:
      operationId: DeletePatchBaseline
      description: Deletes a patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeletePatchBaselineResult'
        '480':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeletePatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeregisterManagedInstance':
    post:
      operationId: DeregisterManagedInstance
      description: 'Removes the server or virtual machine from the list of registered servers. You can reregister the instance again at any time. If you don’t plan to use Run Command on the server, we suggest uninstalling the SSM agent first.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterManagedInstanceResult'
        '480':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterManagedInstanceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeregisterPatchBaselineForPatchGroup':
    post:
      operationId: DeregisterPatchBaselineForPatchGroup
      description: Removes a patch group from a patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterPatchBaselineForPatchGroupResult'
        '480':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterPatchBaselineForPatchGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeregisterTargetFromMaintenanceWindow':
    post:
      operationId: DeregisterTargetFromMaintenanceWindow
      description: Removes a target from a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterTargetFromMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterTargetFromMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeregisterTaskFromMaintenanceWindow':
    post:
      operationId: DeregisterTaskFromMaintenanceWindow
      description: Removes a task from a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterTaskFromMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterTaskFromMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeActivations':
    post:
      operationId: DescribeActivations
      description: 'Details about the activation, including: the date and time the activation was created, the expiration date, the IAM role assigned to the instances in the activation, and the number of instances activated by this registration.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeActivationsResult'
        '480':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeActivationsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAssociation':
    post:
      operationId: DescribeAssociation
      description: Describes the associations for the specified SSM document or instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAssociationResult'
        '480':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '483':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAssociationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAutomationExecutions':
    post:
      operationId: DescribeAutomationExecutions
      description: Provides details about all active and terminated Automation executions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAutomationExecutionsResult'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAutomationExecutionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAvailablePatches':
    post:
      operationId: DescribeAvailablePatches
      description: Lists all patches that could possibly be included in a patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAvailablePatchesResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAvailablePatchesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeDocument':
    post:
      operationId: DescribeDocument
      description: Describes the specified SSM document.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDocumentResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDocumentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeDocumentPermission':
    post:
      operationId: DescribeDocumentPermission
      description: 'Describes the permissions for an SSM document. If you created the document, you are the owner. If a document is shared, it can either be shared privately (by specifying a user’s AWS account ID) or publicly (<i>All</i>). '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDocumentPermissionResponse'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidPermissionType
          schema:
            $ref: '#/definitions/InvalidPermissionType'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDocumentPermissionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEffectiveInstanceAssociations':
    post:
      operationId: DescribeEffectiveInstanceAssociations
      description: All associations for the instance(s).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEffectiveInstanceAssociationsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEffectiveInstanceAssociationsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEffectivePatchesForPatchBaseline':
    post:
      operationId: DescribeEffectivePatchesForPatchBaseline
      description: Retrieves the current effective patches (the patch and the approval state) for the specified patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEffectivePatchesForPatchBaselineResult'
        '480':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEffectivePatchesForPatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstanceAssociationsStatus':
    post:
      operationId: DescribeInstanceAssociationsStatus
      description: The status of the associations for the instance(s).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstanceAssociationsStatusResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstanceAssociationsStatusRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstanceInformation':
    post:
      operationId: DescribeInstanceInformation
      description: 'Describes one or more of your instances. You can use this to get information about instances like the operating system platform, the SSM agent version (Linux), status etc. If you specify one or more instance IDs, it returns information for those instances. If you do not specify instance IDs, it returns information for all your instances. If you specify an instance ID that is not valid or an instance that you do not own, you receive an error. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstanceInformationResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '483':
          description: InvalidInstanceInformationFilterValue
          schema:
            $ref: '#/definitions/InvalidInstanceInformationFilterValue'
        '484':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstanceInformationRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstancePatchStates':
    post:
      operationId: DescribeInstancePatchStates
      description: Retrieves the high-level patch state of one or more instances.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstancePatchStatesResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstancePatchStatesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstancePatchStatesForPatchGroup':
    post:
      operationId: DescribeInstancePatchStatesForPatchGroup
      description: Retrieves the high-level patch state for the instances in the specified patch group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstancePatchStatesForPatchGroupResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstancePatchStatesForPatchGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstancePatches':
    post:
      operationId: DescribeInstancePatches
      description: Retrieves information about the patches on the specified instance and their state relative to the patch baseline being used for the instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstancePatchesResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '483':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstancePatchesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowExecutionTaskInvocations':
    post:
      operationId: DescribeMaintenanceWindowExecutionTaskInvocations
      description: Retrieves the individual task executions (one per target) for a particular task executed as part of a Maintenance Window execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionTaskInvocationsResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionTaskInvocationsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowExecutionTasks':
    post:
      operationId: DescribeMaintenanceWindowExecutionTasks
      description: 'For a given Maintenance Window execution, lists the tasks that were executed.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionTasksResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionTasksRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowExecutions':
    post:
      operationId: DescribeMaintenanceWindowExecutions
      description: 'Lists the executions of a Maintenance Window (meaning, information about when the Maintenance Window was scheduled to be active and information about tasks registered and run with the Maintenance Window).'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowExecutionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowTargets':
    post:
      operationId: DescribeMaintenanceWindowTargets
      description: Lists the targets registered with the Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowTargetsResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowTargetsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindowTasks':
    post:
      operationId: DescribeMaintenanceWindowTasks
      description: Lists the tasks in a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowTasksResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowTasksRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeMaintenanceWindows':
    post:
      operationId: DescribeMaintenanceWindows
      description: Retrieves the Maintenance Windows in an AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeMaintenanceWindowsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeParameters':
    post:
      operationId: DescribeParameters
      description: Get information about a parameter.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeParametersResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidFilterValue
          schema:
            $ref: '#/definitions/InvalidFilterValue'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeParametersRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribePatchBaselines':
    post:
      operationId: DescribePatchBaselines
      description: Lists the patch baselines in your AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePatchBaselinesResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribePatchBaselinesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribePatchGroupState':
    post:
      operationId: DescribePatchGroupState
      description: Returns high-level aggregated patch compliance state for a patch group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePatchGroupStateResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribePatchGroupStateRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribePatchGroups':
    post:
      operationId: DescribePatchGroups
      description: Lists all patch groups that have been registered with patch baselines.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePatchGroupsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribePatchGroupsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetAutomationExecution':
    post:
      operationId: GetAutomationExecution
      description: Get detailed information about a particular Automation execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetAutomationExecutionResult'
        '480':
          description: AutomationExecutionNotFoundException
          schema:
            $ref: '#/definitions/AutomationExecutionNotFoundException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetAutomationExecutionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetCommandInvocation':
    post:
      operationId: GetCommandInvocation
      description: 'Returns detailed information about command execution for an invocation or plugin. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCommandInvocationResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidCommandId
          schema:
            $ref: '#/definitions/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '483':
          description: InvalidPluginName
          schema:
            $ref: '#/definitions/InvalidPluginName'
        '484':
          description: InvocationDoesNotExist
          schema:
            $ref: '#/definitions/InvocationDoesNotExist'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetCommandInvocationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDefaultPatchBaseline':
    post:
      operationId: GetDefaultPatchBaseline
      description: Retrieves the default patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDefaultPatchBaselineResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDefaultPatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDeployablePatchSnapshotForInstance':
    post:
      operationId: GetDeployablePatchSnapshotForInstance
      description: 'Retrieves the current snapshot for the patch baseline the instance uses. This API is primarily used by the AWS-ApplyPatchBaseline Systems Manager document. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDeployablePatchSnapshotForInstanceResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDeployablePatchSnapshotForInstanceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetDocument':
    post:
      operationId: GetDocument
      description: Gets the contents of the specified SSM document.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDocumentResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDocumentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInventory':
    post:
      operationId: GetInventory
      description: Query inventory information.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInventoryResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '483':
          description: InvalidTypeNameException
          schema:
            $ref: '#/definitions/InvalidTypeNameException'
        '484':
          description: InvalidResultAttributeException
          schema:
            $ref: '#/definitions/InvalidResultAttributeException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInventoryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInventorySchema':
    post:
      operationId: GetInventorySchema
      description: 'Return a list of inventory type names for the account, or return a list of attribute names for a specific Inventory item type. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInventorySchemaResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidTypeNameException
          schema:
            $ref: '#/definitions/InvalidTypeNameException'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInventorySchemaRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindow':
    post:
      operationId: GetMaintenanceWindow
      description: Retrieves a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindowExecution':
    post:
      operationId: GetMaintenanceWindowExecution
      description: Retrieves details about a specific task executed as part of a Maintenance Window execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetMaintenanceWindowExecutionTask':
    post:
      operationId: GetMaintenanceWindowExecutionTask
      description: Retrieves the details about a specific task executed as part of a Maintenance Window execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionTaskResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetMaintenanceWindowExecutionTaskRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetParameterHistory':
    post:
      operationId: GetParameterHistory
      description: Query a list of all parameters used by the AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetParameterHistoryResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: ParameterNotFound
          schema:
            $ref: '#/definitions/ParameterNotFound'
        '482':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetParameterHistoryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetParameters':
    post:
      operationId: GetParameters
      description: Get a list of parameters used by the AWS account.&gt;
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetParametersResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetParametersRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetPatchBaseline':
    post:
      operationId: GetPatchBaseline
      description: Retrieves information about a patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPatchBaselineResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetPatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetPatchBaselineForPatchGroup':
    post:
      operationId: GetPatchBaselineForPatchGroup
      description: Retrieves the patch baseline that should be used for the specified patch group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPatchBaselineForPatchGroupResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetPatchBaselineForPatchGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAssociations':
    post:
      operationId: ListAssociations
      description: Lists the associations for the specified SSM document or instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAssociationsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAssociationsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListCommandInvocations':
    post:
      operationId: ListCommandInvocations
      description: 'An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. ListCommandInvocations provide status about command execution.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCommandInvocationsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidCommandId
          schema:
            $ref: '#/definitions/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '483':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '484':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCommandInvocationsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListCommands':
    post:
      operationId: ListCommands
      description: Lists the commands requested by users of the AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCommandsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidCommandId
          schema:
            $ref: '#/definitions/InvalidCommandId'
        '482':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '483':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
        '484':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCommandsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListDocumentVersions':
    post:
      operationId: ListDocumentVersions
      description: List all versions for a document.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDocumentVersionsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDocumentVersionsRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListDocuments':
    post:
      operationId: ListDocuments
      description: Describes one or more of your SSM documents.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDocumentsResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '482':
          description: InvalidFilterKey
          schema:
            $ref: '#/definitions/InvalidFilterKey'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDocumentsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListInventoryEntries':
    post:
      operationId: ListInventoryEntries
      description: A list of inventory items returned by the request.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListInventoryEntriesResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidTypeNameException
          schema:
            $ref: '#/definitions/InvalidTypeNameException'
        '483':
          description: InvalidFilter
          schema:
            $ref: '#/definitions/InvalidFilter'
        '484':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListInventoryEntriesRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: Returns a list of the tags assigned to the specified resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResult'
        '480':
          description: InvalidResourceType
          schema:
            $ref: '#/definitions/InvalidResourceType'
        '481':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ModifyDocumentPermission':
    post:
      operationId: ModifyDocumentPermission
      description: 'Share a document publicly or privately. If you share a document privately, you must specify the AWS user account IDs for those people who can use the document. If you share a document publicly, you must specify <i>All</i> as the account ID.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyDocumentPermissionResponse'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidPermissionType
          schema:
            $ref: '#/definitions/InvalidPermissionType'
        '483':
          description: DocumentPermissionLimit
          schema:
            $ref: '#/definitions/DocumentPermissionLimit'
        '484':
          description: DocumentLimitExceeded
          schema:
            $ref: '#/definitions/DocumentLimitExceeded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ModifyDocumentPermissionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutInventory':
    post:
      operationId: PutInventory
      description: 'Bulk update custom inventory items on one more instance. The request adds an inventory item, if it doesn''t already exist, or updates an inventory item, if it does exist.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutInventoryResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidTypeNameException
          schema:
            $ref: '#/definitions/InvalidTypeNameException'
        '483':
          description: InvalidItemContentException
          schema:
            $ref: '#/definitions/InvalidItemContentException'
        '484':
          description: TotalSizeLimitExceededException
          schema:
            $ref: '#/definitions/TotalSizeLimitExceededException'
        '485':
          description: ItemSizeLimitExceededException
          schema:
            $ref: '#/definitions/ItemSizeLimitExceededException'
        '486':
          description: ItemContentMismatchException
          schema:
            $ref: '#/definitions/ItemContentMismatchException'
        '487':
          description: CustomSchemaCountLimitExceededException
          schema:
            $ref: '#/definitions/CustomSchemaCountLimitExceededException'
        '488':
          description: UnsupportedInventorySchemaVersionException
          schema:
            $ref: '#/definitions/UnsupportedInventorySchemaVersionException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutInventoryRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutParameter':
    post:
      operationId: PutParameter
      description: Add one or more paramaters to the system.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutParameterResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidKeyId
          schema:
            $ref: '#/definitions/InvalidKeyId'
        '482':
          description: ParameterLimitExceeded
          schema:
            $ref: '#/definitions/ParameterLimitExceeded'
        '483':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
        '484':
          description: ParameterAlreadyExists
          schema:
            $ref: '#/definitions/ParameterAlreadyExists'
        '485':
          description: UnsupportedParameterType
          schema:
            $ref: '#/definitions/UnsupportedParameterType'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutParameterRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RegisterDefaultPatchBaseline':
    post:
      operationId: RegisterDefaultPatchBaseline
      description: Defines the default patch baseline.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterDefaultPatchBaselineResult'
        '480':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterDefaultPatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RegisterPatchBaselineForPatchGroup':
    post:
      operationId: RegisterPatchBaselineForPatchGroup
      description: Registers a patch baseline for a patch group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterPatchBaselineForPatchGroupResult'
        '480':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '482':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '483':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '484':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterPatchBaselineForPatchGroupRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RegisterTargetWithMaintenanceWindow':
    post:
      operationId: RegisterTargetWithMaintenanceWindow
      description: Registers a target with a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterTargetWithMaintenanceWindowResult'
        '480':
          description: IdempotentParameterMismatch
          schema:
            $ref: '#/definitions/IdempotentParameterMismatch'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '482':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '483':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterTargetWithMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RegisterTaskWithMaintenanceWindow':
    post:
      operationId: RegisterTaskWithMaintenanceWindow
      description: Adds a new task to a Maintenance Window.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterTaskWithMaintenanceWindowResult'
        '480':
          description: IdempotentParameterMismatch
          schema:
            $ref: '#/definitions/IdempotentParameterMismatch'
        '481':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '482':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '483':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterTaskWithMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RemoveTagsFromResource':
    post:
      operationId: RemoveTagsFromResource
      description: Removes all tags from the specified resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveTagsFromResourceResult'
        '480':
          description: InvalidResourceType
          schema:
            $ref: '#/definitions/InvalidResourceType'
        '481':
          description: InvalidResourceId
          schema:
            $ref: '#/definitions/InvalidResourceId'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveTagsFromResourceRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SendCommand':
    post:
      operationId: SendCommand
      description: Executes commands on one or more remote instances.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SendCommandResult'
        '480':
          description: DuplicateInstanceId
          schema:
            $ref: '#/definitions/DuplicateInstanceId'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '482':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '483':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '484':
          description: InvalidOutputFolder
          schema:
            $ref: '#/definitions/InvalidOutputFolder'
        '485':
          description: InvalidParameters
          schema:
            $ref: '#/definitions/InvalidParameters'
        '486':
          description: UnsupportedPlatformType
          schema:
            $ref: '#/definitions/UnsupportedPlatformType'
        '487':
          description: MaxDocumentSizeExceeded
          schema:
            $ref: '#/definitions/MaxDocumentSizeExceeded'
        '488':
          description: InvalidRole
          schema:
            $ref: '#/definitions/InvalidRole'
        '489':
          description: InvalidNotificationConfig
          schema:
            $ref: '#/definitions/InvalidNotificationConfig'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SendCommandRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartAutomationExecution':
    post:
      operationId: StartAutomationExecution
      description: Initiates execution of an Automation document.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartAutomationExecutionResult'
        '480':
          description: AutomationDefinitionNotFoundException
          schema:
            $ref: '#/definitions/AutomationDefinitionNotFoundException'
        '481':
          description: InvalidAutomationExecutionParametersException
          schema:
            $ref: '#/definitions/InvalidAutomationExecutionParametersException'
        '482':
          description: AutomationExecutionLimitExceededException
          schema:
            $ref: '#/definitions/AutomationExecutionLimitExceededException'
        '483':
          description: AutomationDefinitionVersionNotFoundException
          schema:
            $ref: '#/definitions/AutomationDefinitionVersionNotFoundException'
        '484':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartAutomationExecutionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopAutomationExecution':
    post:
      operationId: StopAutomationExecution
      description: Stop an Automation that is currently executing.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopAutomationExecutionResult'
        '480':
          description: AutomationExecutionNotFoundException
          schema:
            $ref: '#/definitions/AutomationExecutionNotFoundException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopAutomationExecutionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateAssociation':
    post:
      operationId: UpdateAssociation
      description: 'Updates an association. You can only update the document version, schedule, parameters, and Amazon S3 output of an association.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateAssociationResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidSchedule
          schema:
            $ref: '#/definitions/InvalidSchedule'
        '482':
          description: InvalidParameters
          schema:
            $ref: '#/definitions/InvalidParameters'
        '483':
          description: InvalidOutputLocation
          schema:
            $ref: '#/definitions/InvalidOutputLocation'
        '484':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '485':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '486':
          description: InvalidUpdate
          schema:
            $ref: '#/definitions/InvalidUpdate'
        '487':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAssociationRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateAssociationStatus':
    post:
      operationId: UpdateAssociationStatus
      description: Updates the status of the SSM document associated with the specified instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateAssociationStatusResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '482':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '483':
          description: AssociationDoesNotExist
          schema:
            $ref: '#/definitions/AssociationDoesNotExist'
        '484':
          description: StatusUnchanged
          schema:
            $ref: '#/definitions/StatusUnchanged'
        '485':
          description: TooManyUpdates
          schema:
            $ref: '#/definitions/TooManyUpdates'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAssociationStatusRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateDocument':
    post:
      operationId: UpdateDocument
      description: The document you want to update.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDocumentResult'
        '480':
          description: MaxDocumentSizeExceeded
          schema:
            $ref: '#/definitions/MaxDocumentSizeExceeded'
        '481':
          description: DocumentVersionLimitExceeded
          schema:
            $ref: '#/definitions/DocumentVersionLimitExceeded'
        '482':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '483':
          description: DuplicateDocumentContent
          schema:
            $ref: '#/definitions/DuplicateDocumentContent'
        '484':
          description: InvalidDocumentContent
          schema:
            $ref: '#/definitions/InvalidDocumentContent'
        '485':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '486':
          description: InvalidDocumentSchemaVersion
          schema:
            $ref: '#/definitions/InvalidDocumentSchemaVersion'
        '487':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDocumentRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateDocumentDefaultVersion':
    post:
      operationId: UpdateDocumentDefaultVersion
      description: 'Set the default version of a document. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDocumentDefaultVersionResult'
        '480':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
        '481':
          description: InvalidDocument
          schema:
            $ref: '#/definitions/InvalidDocument'
        '482':
          description: InvalidDocumentVersion
          schema:
            $ref: '#/definitions/InvalidDocumentVersion'
        '483':
          description: InvalidDocumentSchemaVersion
          schema:
            $ref: '#/definitions/InvalidDocumentSchemaVersion'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDocumentDefaultVersionRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateMaintenanceWindow':
    post:
      operationId: UpdateMaintenanceWindow
      description: Updates an existing Maintenance Window. Only specified parameters are modified.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateMaintenanceWindowResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMaintenanceWindowRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateManagedInstanceRole':
    post:
      operationId: UpdateManagedInstanceRole
      description: Assigns or changes an Amazon Identity and Access Management (IAM) role to the managed instance.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateManagedInstanceRoleResult'
        '480':
          description: InvalidInstanceId
          schema:
            $ref: '#/definitions/InvalidInstanceId'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateManagedInstanceRoleRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdatePatchBaseline':
    post:
      operationId: UpdatePatchBaseline
      description: Modifies an existing patch baseline. Fields not specified in the request are left unchanged.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdatePatchBaselineResult'
        '480':
          description: DoesNotExistException
          schema:
            $ref: '#/definitions/DoesNotExistException'
        '481':
          description: InternalServerError
          schema:
            $ref: '#/definitions/InternalServerError'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePatchBaselineRequest'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AccountId:
    type: string
    pattern: '\(\?i\)all\|[0-9]\{12\}'
  AccountIdList:
    type: array
    items:
      $ref: '#/definitions/AccountId'
    maxItems: 20
  Activation:
    type: object
    properties:
      ActivationId:
        $ref: '#/definitions/ActivationId'
        description: The ID created by Systems Manager when you submitted the activation.
      Description:
        $ref: '#/definitions/ActivationDescription'
        description: A user defined description of the activation.
      DefaultInstanceName:
        $ref: '#/definitions/DefaultInstanceName'
        description: A name for the managed instance when it is created.
      IamRole:
        $ref: '#/definitions/IamRole'
        description: The Amazon Identity and Access Management (IAM) role to assign to the managed instance.
      RegistrationLimit:
        $ref: '#/definitions/RegistrationLimit'
        description: The maximum number of managed instances that can be registered using this activation.
      RegistrationsCount:
        $ref: '#/definitions/RegistrationsCount'
        description: The number of managed instances already registered with this activation.
      ExpirationDate:
        $ref: '#/definitions/ExpirationDate'
        description: The date when this activation can no longer be used to register managed instances.
      Expired:
        $ref: '#/definitions/Boolean'
        description: Whether or not the activation is expired.
      CreatedDate:
        $ref: '#/definitions/CreatedDate'
        description: The date the activation was created.
    description: An activation registers one or more on-premises servers or virtual machines (VMs) with AWS so that you can configure those servers or VMs using Run Command. A server or VM that has been registered with AWS is called a managed instance.
  ActivationCode:
    type: string
    minLength: 20
    maxLength: 250
  ActivationDescription:
    type: string
    minLength: 0
    maxLength: 256
  ActivationId:
    type: string
    pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
  ActivationList:
    type: array
    items:
      $ref: '#/definitions/Activation'
  AddTagsToResourceRequest:
    type: object
    required:
      - ResourceType
      - ResourceId
      - Tags
    properties:
      ResourceType:
        $ref: '#/definitions/ResourceTypeForTagging'
        description: Specifies the type of resource you are tagging.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The resource ID you want to tag.
      Tags:
        $ref: '#/definitions/TagList'
        description: ' One or more tags. The value parameter is required, but if you don''t want the tag to have a value, specify the parameter with no value, and we set the value to an empty string. '
  AddTagsToResourceResult:
    type: object
    properties: {}
  AgentErrorCode:
    type: string
    maxLength: 10
  AlreadyExistsException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: Error returned if an attempt is made to register a patch group with a patch baseline that is already registered with a different patch baseline.
  ApproveAfterDays:
    type: integer
    minimum: 0
    maximum: 100
  AssociatedInstances:
    type: object
    properties: {}
    description: You must disassociate an SSM document from all instances before you can delete it.
  Association:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the SSM document.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the instance.
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The ID created by the system when you create an association. An association is a binding between a document and a set of targets with a schedule.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The version of the document used in the association.
      Targets:
        $ref: '#/definitions/Targets'
        description: 'The instances targeted by the request to create an association. '
      LastExecutionDate:
        $ref: '#/definitions/DateTime'
        description: The date on which the association was last run.
      Overview:
        $ref: '#/definitions/AssociationOverview'
        description: Information about the association.
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: A cron expression that specifies a schedule when the association runs.
    description: Describes an association of an SSM document and an instance.
  AssociationAlreadyExists:
    type: object
    properties: {}
    description: The specified association already exists.
  AssociationDescription:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the SSM document.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the instance.
      Date:
        $ref: '#/definitions/DateTime'
        description: The date when the association was made.
      LastUpdateAssociationDate:
        $ref: '#/definitions/DateTime'
        description: The date when the association was last updated.
      Status:
        $ref: '#/definitions/AssociationStatus'
        description: The association status.
      Overview:
        $ref: '#/definitions/AssociationOverview'
        description: Information about the association.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version.
      Parameters:
        $ref: '#/definitions/Parameters'
        description: 'A description of the parameters for a document. '
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The association ID.
      Targets:
        $ref: '#/definitions/Targets'
        description: 'The instances targeted by the request. '
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: A cron expression that specifies a schedule when the association runs.
      OutputLocation:
        $ref: '#/definitions/InstanceAssociationOutputLocation'
        description: An Amazon S3 bucket where you want to store the output details of the request.
      LastExecutionDate:
        $ref: '#/definitions/DateTime'
        description: The date on which the association was last run.
      LastSuccessfulExecutionDate:
        $ref: '#/definitions/DateTime'
        description: The last date on which the association was successfully run.
    description: Describes the parameters for a document.
  AssociationDescriptionList:
    type: array
    items:
      $ref: '#/definitions/AssociationDescription'
  AssociationDoesNotExist:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The specified association does not exist.
  AssociationFilter:
    type: object
    required:
      - key
      - value
    properties:
      key:
        $ref: '#/definitions/AssociationFilterKey'
        description: The name of the filter.
      value:
        $ref: '#/definitions/AssociationFilterValue'
        description: The filter value.
    description: Describes a filter.
  AssociationFilterKey:
    type: string
    enum:
      - InstanceId
      - Name
      - AssociationId
      - AssociationStatusName
      - LastExecutedBefore
      - LastExecutedAfter
  AssociationFilterList:
    type: array
    items:
      $ref: '#/definitions/AssociationFilter'
    minItems: 1
  AssociationFilterValue:
    type: string
    minLength: 1
  AssociationId:
    type: string
    pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
  AssociationLimitExceeded:
    type: object
    properties: {}
    description: 'You can have at most 2,000 active associations.'
  AssociationList:
    type: array
    items:
      $ref: '#/definitions/Association'
  AssociationOverview:
    type: object
    properties:
      Status:
        $ref: '#/definitions/StatusName'
        description: 'The status of the association. Status can be: <code>Pending</code>, <code>Success</code>, or <code>Failed</code>.'
      DetailedStatus:
        $ref: '#/definitions/StatusName'
        description: A detailed status of the association.
      AssociationStatusAggregatedCount:
        $ref: '#/definitions/AssociationStatusAggregatedCount'
        description: 'Returns the number of targets for the association status. For example, if you created an association with two instances, and one of them was successful, this would return the count of instances by status.'
    description: Information about the association.
  AssociationStatus:
    type: object
    required:
      - Date
      - Name
      - Message
    properties:
      Date:
        $ref: '#/definitions/DateTime'
        description: The date when the status changed.
      Name:
        $ref: '#/definitions/AssociationStatusName'
        description: The status.
      Message:
        $ref: '#/definitions/StatusMessage'
        description: The reason for the status.
      AdditionalInfo:
        $ref: '#/definitions/StatusAdditionalInfo'
        description: A user-defined string.
    description: Describes an association status.
  AssociationStatusAggregatedCount:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/StatusName'
        value:
          $ref: '#/definitions/InstanceCount'
  AssociationStatusName:
    type: string
    enum:
      - Pending
      - Success
      - Failed
  AttributeName:
    type: string
    minLength: 1
    maxLength: 64
  AttributeValue:
    type: string
    minLength: 0
    maxLength: 1024
  AutomationActionName:
    type: string
    pattern: '^aws:[a-zA-Z]{3,25}$'
  AutomationDefinitionNotFoundException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: An Automation document with the specified name could not be found.
  AutomationDefinitionVersionNotFoundException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: An Automation document with the specified name and version could not be found.
  AutomationExecution:
    type: object
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/AutomationExecutionId'
        description: The execution ID.
      DocumentName:
        $ref: '#/definitions/DocumentName'
        description: The name of the Automation document used during the execution.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The version of the document to use during execution.
      ExecutionStartTime:
        $ref: '#/definitions/DateTime'
        description: The time the execution started.
      ExecutionEndTime:
        $ref: '#/definitions/DateTime'
        description: The time the execution finished.
      AutomationExecutionStatus:
        $ref: '#/definitions/AutomationExecutionStatus'
        description: The execution status of the Automation.
      StepExecutions:
        $ref: '#/definitions/StepExecutionList'
        description: A list of details about the current state of all steps that comprise an execution. An Automation document contains a list of steps that are executed in order.
      Parameters:
        $ref: '#/definitions/AutomationParameterMap'
        description: 'The key-value map of execution parameters, which were supplied when calling <code>StartAutomationExecution</code>.'
      Outputs:
        $ref: '#/definitions/AutomationParameterMap'
        description: The list of execution outputs as defined in the automation document.
      FailureMessage:
        $ref: '#/definitions/String'
        description: 'A message describing why an execution has failed, if the status is set to Failed.'
    description: Detailed information about the current state of an individual Automation execution.
  AutomationExecutionFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/AutomationExecutionFilterKey'
        description: The aspect of the Automation execution information that should be limited.
      Values:
        $ref: '#/definitions/AutomationExecutionFilterValueList'
        description: The values used to limit the execution information associated with the filter's key.
    description: A filter used to match specific automation executions. This is used to limit the scope of Automation execution information returned.
  AutomationExecutionFilterKey:
    type: string
    enum:
      - DocumentNamePrefix
      - ExecutionStatus
  AutomationExecutionFilterList:
    type: array
    items:
      $ref: '#/definitions/AutomationExecutionFilter'
    minItems: 1
    maxItems: 10
  AutomationExecutionFilterValue:
    type: string
    minLength: 1
    maxLength: 150
  AutomationExecutionFilterValueList:
    type: array
    items:
      $ref: '#/definitions/AutomationExecutionFilterValue'
    minItems: 1
    maxItems: 10
  AutomationExecutionId:
    type: string
    minLength: 36
    maxLength: 36
  AutomationExecutionLimitExceededException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The number of simultaneously running Automation executions exceeded the allowable limit.
  AutomationExecutionMetadata:
    type: object
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/AutomationExecutionId'
        description: The execution ID.
      DocumentName:
        $ref: '#/definitions/DocumentName'
        description: The name of the Automation document used during execution.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version used during the execution.
      AutomationExecutionStatus:
        $ref: '#/definitions/AutomationExecutionStatus'
        description: 'The status of the execution. Valid values include: Running, Succeeded, Failed, Timed out, or Cancelled.'
      ExecutionStartTime:
        $ref: '#/definitions/DateTime'
        description: The time the execution started.&gt;
      ExecutionEndTime:
        $ref: '#/definitions/DateTime'
        description: The time the execution finished. This is not populated if the execution is still in progress.
      ExecutedBy:
        $ref: '#/definitions/String'
        description: The IAM role ARN of the user who executed the Automation.
      LogFile:
        $ref: '#/definitions/String'
        description: An Amazon S3 bucket where execution information is stored.
      Outputs:
        $ref: '#/definitions/AutomationParameterMap'
        description: The list of execution outputs as defined in the Automation document.
    description: Details about a specific Automation execution.
  AutomationExecutionMetadataList:
    type: array
    items:
      $ref: '#/definitions/AutomationExecutionMetadata'
    minItems: 0
    maxItems: 50
  AutomationExecutionNotFoundException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: There is no automation execution information for the requested automation execution ID.
  AutomationExecutionStatus:
    type: string
    enum:
      - Pending
      - InProgress
      - Success
      - TimedOut
      - Cancelled
      - Failed
  AutomationParameterKey:
    type: string
    minLength: 1
    maxLength: 30
  AutomationParameterMap:
    type: array
    minItems: 1
    maxItems: 200
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AutomationParameterKey'
        value:
          $ref: '#/definitions/AutomationParameterValueList'
  AutomationParameterValue:
    type: string
    minLength: 1
    maxLength: 512
  AutomationParameterValueList:
    type: array
    items:
      $ref: '#/definitions/AutomationParameterValue'
    minItems: 0
    maxItems: 10
  BaselineDescription:
    type: string
    minLength: 1
    maxLength: 1024
  BaselineId:
    type: string
    pattern: '^[a-zA-Z0-9_\-:/]{20,128}$'
    minLength: 20
    maxLength: 128
  BaselineName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]{3,128}$'
    minLength: 3
    maxLength: 128
  BatchErrorMessage:
    type: string
  Boolean:
    type: boolean
  CancelCommandRequest:
    type: object
    required:
      - CommandId
    properties:
      CommandId:
        $ref: '#/definitions/CommandId'
        description: The ID of the command you want to cancel.
      InstanceIds:
        $ref: '#/definitions/InstanceIdList'
        description: '(Optional) A list of instance IDs on which you want to cancel the command. If not provided, the command is canceled on every instance on which it was requested.'
    description: <p/>
  CancelCommandResult:
    type: object
    properties: {}
    description: Whether or not the command was successfully canceled. There is no guarantee that a request can be canceled.
  ClientToken:
    type: string
    minLength: 1
    maxLength: 64
  Command:
    type: object
    properties:
      CommandId:
        $ref: '#/definitions/CommandId'
        description: A unique identifier for this command.
      DocumentName:
        $ref: '#/definitions/DocumentName'
        description: The name of the SSM document requested for execution.
      Comment:
        $ref: '#/definitions/Comment'
        description: 'User-specified information about the command, such as a brief description of what the command should do.'
      ExpiresAfter:
        $ref: '#/definitions/DateTime'
        description: 'If this time is reached and the command has not already started executing, it will not execute. Calculated based on the ExpiresAfter user input provided as part of the SendCommand API.'
      Parameters:
        $ref: '#/definitions/Parameters'
        description: The parameter values to be inserted in the SSM document when executing the command.
      InstanceIds:
        $ref: '#/definitions/InstanceIdList'
        description: The instance IDs against which this command was requested.
      Targets:
        $ref: '#/definitions/Targets'
        description: An array of search criteria that targets instances using a <code>Key</code>;<code>Value</code> combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.
      RequestedDateTime:
        $ref: '#/definitions/DateTime'
        description: The date and time the command was requested.
      Status:
        $ref: '#/definitions/CommandStatus'
        description: The status of the command.
      StatusDetails:
        $ref: '#/definitions/StatusDetails'
        description: '<p>A detailed status of the command execution. <code>StatusDetails</code> includes more information than <code>Status</code> because it includes states resulting from error and concurrency control parameters. <code>StatusDetails</code> can show different results than <code>Status</code>. For more information about these statuses, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitor-commands.html">Monitor Commands</a> (Linux) or <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/monitor-commands.html">Monitor Commands</a> (Windows). <code>StatusDetails</code> can be one of the following values:</p> <ul> <li> <p>Pending – The command has not been sent to any instances.</p> </li> <li> <p>In Progress – The command has been sent to at least one instance but has not reached a final state on all instances.</p> </li> <li> <p>Success – The command successfully executed on all invocations. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out – The value of <code>MaxErrors</code> or more command invocations shows a status of <code>Delivery Timed Out</code>. This is a terminal state.</p> </li> <li> <p>Execution Timed Out – The value of <code>MaxErrors</code> or more command invocations shows a status of <code>Execution Timed Out</code>. This is a terminal state.</p> </li> <li> <p>Failed – The value of <code>MaxErrors</code> or more command invocations shows a status of <code>Failed</code>. This is a terminal state.</p> </li> <li> <p>Incomplete – The command was attempted on all instances and one or more invocations does not have a value of <code>Success</code> but not enough invocations failed for the status to be <code>Failed</code>. This is a terminal state.</p> </li> <li> <p>Canceled – The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Rate Exceeded – The number of instances targeted by the command exceeded the account limit for pending invocations. The system has canceled the command before executing it on any instance. This is a terminal state.</p> </li> </ul>'
      OutputS3Region:
        $ref: '#/definitions/S3Region'
        description: The region where the Amazon Simple Storage Service (Amazon S3) output bucket is located. The default value is the region where Run Command is being called.
      OutputS3BucketName:
        $ref: '#/definitions/S3BucketName'
        description: The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command.
      OutputS3KeyPrefix:
        $ref: '#/definitions/S3KeyPrefix'
        description: The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command.
      MaxConcurrency:
        $ref: '#/definitions/VelocityConstraint'
        description: 'The maximum number of instances that are allowed to execute the command at the same time. You can specify a number of instances, such as 10, or a percentage of instances, such as 10%. The default value is 50. For more information about how to use <code>MaxConcurrency</code>, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/run-command.html">Executing a Command Using Amazon EC2 Run Command</a> (Linux) or <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/run-command.html">Executing a Command Using Amazon EC2 Run Command</a> (Windows). '
      MaxErrors:
        $ref: '#/definitions/VelocityConstraint'
        description: 'The maximum number of errors allowed before the system stops sending the command to additional targets. You can specify a number of errors, such as 10, or a percentage or errors, such as 10%. The default value is 50. For more information about how to use <code>MaxErrors</code>, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/run-command.html">Executing a Command Using Amazon EC2 Run Command</a> (Linux) or <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/run-command.html">Executing a Command Using Amazon EC2 Run Command</a> (Windows).'
      TargetCount:
        $ref: '#/definitions/TargetCount'
        description: The number of targets for the command.
      CompletedCount:
        $ref: '#/definitions/CompletedCount'
        description: 'The number of targets for which the command invocation reached a terminal state. Terminal states include the following: <code>Success</code>, <code>Failed</code>, <code>Execution Timed Out</code>, <code>Delivery Timed Out</code>, <code>Canceled</code>, <code>Terminated</code>, or <code>Undeliverable</code>.'
      ErrorCount:
        $ref: '#/definitions/ErrorCount'
        description: The number of targets for which the status is <code>Failed</code> or <code>Execution Timed Out</code>.
      ServiceRole:
        $ref: '#/definitions/ServiceRole'
        description: 'The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes. '
      NotificationConfig:
        $ref: '#/definitions/NotificationConfig'
        description: 'Configurations for sending notifications about command status changes. '
    description: Describes a command request.
  CommandFilter:
    type: object
    required:
      - key
      - value
    properties:
      key:
        $ref: '#/definitions/CommandFilterKey'
        description: 'The name of the filter. For example, requested date and time.'
      value:
        $ref: '#/definitions/CommandFilterValue'
        description: 'The filter value. For example: June 30, 2015.'
    description: Describes a command filter.
  CommandFilterKey:
    type: string
    enum:
      - InvokedAfter
      - InvokedBefore
      - Status
  CommandFilterList:
    type: array
    items:
      $ref: '#/definitions/CommandFilter'
    minItems: 1
    maxItems: 3
  CommandFilterValue:
    type: string
    minLength: 1
  CommandId:
    type: string
    minLength: 36
    maxLength: 36
  CommandInvocation:
    type: object
    properties:
      CommandId:
        $ref: '#/definitions/CommandId'
        description: The command against which this invocation was requested.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID in which this invocation was requested.
      InstanceName:
        $ref: '#/definitions/InstanceTagName'
        description: 'The name of the invocation target. For Amazon EC2 instances this is the value for the <code>aws:Name</code> tag. For on-premises instances, this is the name of the instance.'
      Comment:
        $ref: '#/definitions/Comment'
        description: 'User-specified information about the command, such as a brief description of what the command should do.'
      DocumentName:
        $ref: '#/definitions/DocumentName'
        description: The document name that was requested for execution.
      RequestedDateTime:
        $ref: '#/definitions/DateTime'
        description: The time and date the request was sent to this instance.
      Status:
        $ref: '#/definitions/CommandInvocationStatus'
        description: 'Whether or not the invocation succeeded, failed, or is pending.'
      StatusDetails:
        $ref: '#/definitions/StatusDetails'
        description: '<p>A detailed status of the command execution for each invocation (each instance targeted by the command). <code>StatusDetails</code> includes more information than <code>Status</code> because it includes states resulting from error and concurrency control parameters. <code>StatusDetails</code> can show different results than <code>Status</code>. For more information about these statuses, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitor-commands.html">Monitor Commands</a> (Linux) or <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/monitor-commands.html">Monitor Commands</a> (Windows). <code>StatusDetails</code> can be one of the following values: </p> <ul> <li> <p>Pending – The command has not been sent to the instance.</p> </li> <li> <p>In Progress – The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success – The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out – The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command’s <code>MaxErrors</code> limit, but they do contribute to whether the parent command status is <code>Success</code> or <code>Incomplete</code>. This is a terminal state.</p> </li> <li> <p>Execution Timed Out – Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the <code>MaxErrors</code> limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed – The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the <code>MaxErrors</code> limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled – The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable – The command can''t be delivered to the instance. The instance might not exist or might not be responding. Undeliverable invocations don''t count against the parent command’s <code>MaxErrors</code> limit and don''t contribute to whether the parent command status is <code>Success</code> or <code>Incomplete</code>. This is a terminal state.</p> </li> <li> <p>Terminated – The parent command exceeded its <code>MaxErrors</code> limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>'
      TraceOutput:
        $ref: '#/definitions/InvocationTraceOutput'
        description: ' Gets the trace output sent by the agent. '
      StandardOutputUrl:
        $ref: '#/definitions/Url'
        description: 'The URL to the plugin’s StdOut file in Amazon S3, if the Amazon S3 bucket was defined for the parent command. For an invocation, <code>StandardOutputUrl</code> is populated if there is just one plugin defined for the command, and the Amazon S3 bucket was defined for the command.'
      StandardErrorUrl:
        $ref: '#/definitions/Url'
        description: 'The URL to the plugin’s StdErr file in Amazon S3, if the Amazon S3 bucket was defined for the parent command. For an invocation, <code>StandardErrorUrl</code> is populated if there is just one plugin defined for the command, and the Amazon S3 bucket was defined for the command.'
      CommandPlugins:
        $ref: '#/definitions/CommandPluginList'
      ServiceRole:
        $ref: '#/definitions/ServiceRole'
        description: The IAM service role that Run Command uses to act on your behalf when sending notifications about command status changes on a per instance basis.
      NotificationConfig:
        $ref: '#/definitions/NotificationConfig'
        description: Configurations for sending notifications about command status changes on a per instance basis.
    description: 'An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user executes SendCommand against three instances, then a command invocation is created for each requested instance ID. A command invocation returns status and detail information about a command you executed. '
  CommandInvocationList:
    type: array
    items:
      $ref: '#/definitions/CommandInvocation'
  CommandInvocationStatus:
    type: string
    enum:
      - Pending
      - InProgress
      - Delayed
      - Success
      - Cancelled
      - TimedOut
      - Failed
      - Cancelling
  CommandList:
    type: array
    items:
      $ref: '#/definitions/Command'
  CommandMaxResults:
    type: integer
    minimum: 1
    maximum: 50
  CommandPlugin:
    type: object
    properties:
      Name:
        $ref: '#/definitions/CommandPluginName'
        description: 'The name of the plugin. Must be one of the following: aws:updateAgent, aws:domainjoin, aws:applications, aws:runPowerShellScript, aws:psmodule, aws:cloudWatch, aws:runShellScript, or aws:updateSSMAgent. '
      Status:
        $ref: '#/definitions/CommandPluginStatus'
        description: The status of this plugin. You can execute a document with multiple plugins.
      StatusDetails:
        $ref: '#/definitions/StatusDetails'
        description: '<p>A detailed status of the plugin execution. <code>StatusDetails</code> includes more information than <code>Status</code> because it includes states resulting from error and concurrency control parameters. <code>StatusDetails</code> can show different results than <code>Status</code>. For more information about these statuses, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitor-commands.html">Monitor Commands</a> (Linux) or <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/monitor-commands.html">Monitor Commands</a> (Windows). <code>StatusDetails</code> can be one of the following values:</p> <ul> <li> <p>Pending – The command has not been sent to the instance.</p> </li> <li> <p>In Progress – The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Success – The execution of the command or plugin was successfully completed. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out – The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command’s <code>MaxErrors</code> limit, but they do contribute to whether the parent command status is <code>Success</code> or <code>Incomplete</code>. This is a terminal state.</p> </li> <li> <p>Execution Timed Out – Command execution started on the instance, but the execution was not complete before the execution timeout expired. Execution timeouts count against the <code>MaxErrors</code> limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed – The command was not successful on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the <code>MaxErrors</code> limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled – The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable – The command can''t be delivered to the instance. The instance might not exist, or it might not be responding. Undeliverable invocations don''t count against the parent command’s <code>MaxErrors</code> limit, and they don''t contribute to whether the parent command status is <code>Success</code> or <code>Incomplete</code>. This is a terminal state.</p> </li> <li> <p>Terminated – The parent command exceeded its <code>MaxErrors</code> limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>'
      ResponseCode:
        $ref: '#/definitions/ResponseCode'
        description: 'A numeric response code generated after executing the plugin. '
      ResponseStartDateTime:
        $ref: '#/definitions/DateTime'
        description: 'The time the plugin started executing. '
      ResponseFinishDateTime:
        $ref: '#/definitions/DateTime'
        description: 'The time the plugin stopped executing. Could stop prematurely if, for example, a cancel command was sent. '
      Output:
        $ref: '#/definitions/CommandPluginOutput'
        description: Output of the plugin execution.
      StandardOutputUrl:
        $ref: '#/definitions/Url'
        description: 'The URL for the complete text written by the plugin to stdout in Amazon S3. If the Amazon S3 bucket for the command was not specified, then this string is empty.'
      StandardErrorUrl:
        $ref: '#/definitions/Url'
        description: 'The URL for the complete text written by the plugin to stderr. If execution is not yet complete, then this string is empty.'
      OutputS3Region:
        $ref: '#/definitions/S3Region'
        description: The name of the region where the output is stored in Amazon S3.
      OutputS3BucketName:
        $ref: '#/definitions/S3BucketName'
        description: '<p>The S3 bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> <code>test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript</code> </p> <p> <code>test_folder</code> is the name of the Amazon S3 bucket;</p> <p> <code>ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix</code> is the name of the S3 prefix;</p> <p> <code>i-1234567876543</code> is the instance ID;</p> <p> <code>awsrunShellScript</code> is the name of the plugin.</p>'
      OutputS3KeyPrefix:
        $ref: '#/definitions/S3KeyPrefix'
        description: '<p>The S3 directory path inside the bucket where the responses to the command executions should be stored. This was requested when issuing the command. For example, in the following response:</p> <p> <code>test_folder/ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix/i-1234567876543/awsrunShellScript</code> </p> <p> <code>test_folder</code> is the name of the Amazon S3 bucket;</p> <p> <code>ab19cb99-a030-46dd-9dfc-8eSAMPLEPre-Fix</code> is the name of the S3 prefix;</p> <p> <code>i-1234567876543</code> is the instance ID;</p> <p> <code>awsrunShellScript</code> is the name of the plugin.</p>'
    description: Describes plugin details.
  CommandPluginList:
    type: array
    items:
      $ref: '#/definitions/CommandPlugin'
  CommandPluginName:
    type: string
    minLength: 4
  CommandPluginOutput:
    type: string
    maxLength: 2500
  CommandPluginStatus:
    type: string
    enum:
      - Pending
      - InProgress
      - Success
      - TimedOut
      - Cancelled
      - Failed
  CommandStatus:
    type: string
    enum:
      - Pending
      - InProgress
      - Success
      - Cancelled
      - Failed
      - TimedOut
      - Cancelling
  Comment:
    type: string
    maxLength: 100
  CompletedCount:
    type: integer
  ComputerName:
    type: string
    minLength: 1
    maxLength: 255
  CreateActivationRequest:
    type: object
    required:
      - IamRole
    properties:
      Description:
        $ref: '#/definitions/ActivationDescription'
        description: 'A user-defined description of the resource that you want to register with Amazon EC2. '
      DefaultInstanceName:
        $ref: '#/definitions/DefaultInstanceName'
        description: 'The name of the registered, managed instance as it will appear in the Amazon EC2 console or when you use the AWS command line tools to list EC2 resources.'
      IamRole:
        $ref: '#/definitions/IamRole'
        description: 'The Amazon Identity and Access Management (IAM) role that you want to assign to the managed instance. '
      RegistrationLimit:
        $ref: '#/definitions/RegistrationLimit'
        description: Specify the maximum number of managed instances you want to register. The default value is 1 instance.
      ExpirationDate:
        $ref: '#/definitions/ExpirationDate'
        description: The date by which this activation request should expire. The default value is 24 hours.
  CreateActivationResult:
    type: object
    properties:
      ActivationId:
        $ref: '#/definitions/ActivationId'
        description: The ID number generated by the system when it processed the activation. The activation ID functions like a user name.
      ActivationCode:
        $ref: '#/definitions/ActivationCode'
        description: 'The code the system generates when it processes the activation. The activation code functions like a password to validate the activation ID. '
  CreateAssociationBatchRequest:
    type: object
    required:
      - Entries
    properties:
      Entries:
        $ref: '#/definitions/CreateAssociationBatchRequestEntries'
        description: One or more associations.
  CreateAssociationBatchRequestEntries:
    type: array
    items:
      $ref: '#/definitions/CreateAssociationBatchRequestEntry'
    minItems: 1
  CreateAssociationBatchRequestEntry:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: ' The name of the configuration document. '
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: ' The ID of the instance. '
      Parameters:
        $ref: '#/definitions/Parameters'
        description: 'A description of the parameters for a document. '
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version.
      Targets:
        $ref: '#/definitions/Targets'
        description: The instances targeted by the request.
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: A cron expression that specifies a schedule when the association runs.
      OutputLocation:
        $ref: '#/definitions/InstanceAssociationOutputLocation'
        description: An Amazon S3 bucket where you want to store the results of this request.
    description: ' Describes the association of an SSM document and an instance. '
  CreateAssociationBatchResult:
    type: object
    properties:
      Successful:
        $ref: '#/definitions/AssociationDescriptionList'
        description: Information about the associations that succeeded.
      Failed:
        $ref: '#/definitions/FailedCreateAssociationList'
        description: Information about the associations that failed.
  CreateAssociationRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the SSM document.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version you want to associate with the target(s). Can be a specific version or the default version.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID.
      Parameters:
        $ref: '#/definitions/Parameters'
        description: 'The parameters for the documents runtime configuration. '
      Targets:
        $ref: '#/definitions/Targets'
        description: 'The targets (either instances or tags) for the association. Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.'
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: 'A cron expression when the association will be applied to the target(s). Supported expressions are every half, 1, 2, 4, 8 or 12 hour(s); every specified day and time of the week. For example: cron(0 0/30 * 1/1 * ? *) to run every thirty minutes; cron(0 0 0/4 1/1 * ? *) to run every four hours; and cron(0 0 10 ? * SUN *) to run every Sunday at 10 a.m.'
      OutputLocation:
        $ref: '#/definitions/InstanceAssociationOutputLocation'
        description: '<p>An Amazon S3 bucket where you want to store the output details of the request. For example:</p> <p> <code>"{ \"S3Location\": { \"OutputS3Region\": \"&lt;region&gt;\", \"OutputS3BucketName\": \"bucket name\", \"OutputS3KeyPrefix\": \"folder name\" } }"</code> </p>'
  CreateAssociationResult:
    type: object
    properties:
      AssociationDescription:
        $ref: '#/definitions/AssociationDescription'
        description: Information about the association.
  CreateDocumentRequest:
    type: object
    required:
      - Content
      - Name
    properties:
      Content:
        $ref: '#/definitions/DocumentContent'
        description: A valid JSON string.
      Name:
        $ref: '#/definitions/DocumentName'
        description: A name for the SSM document.
      DocumentType:
        $ref: '#/definitions/DocumentType'
        description: 'The type of document to create. Valid document types include: Policy, Automation, and Command.'
  CreateDocumentResult:
    type: object
    properties:
      DocumentDescription:
        $ref: '#/definitions/DocumentDescription'
        description: Information about the SSM document.
  CreateMaintenanceWindowRequest:
    type: object
    required:
      - Name
      - Schedule
      - Duration
      - Cutoff
      - AllowUnassociatedTargets
    properties:
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The name of the Maintenance Window.
      Schedule:
        $ref: '#/definitions/MaintenanceWindowSchedule'
        description: The schedule of the Maintenance Window in the form of a cron or rate expression.
      Duration:
        $ref: '#/definitions/MaintenanceWindowDurationHours'
        description: The duration of the Maintenance Window in hours.
      Cutoff:
        $ref: '#/definitions/MaintenanceWindowCutoff'
        description: The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
      AllowUnassociatedTargets:
        $ref: '#/definitions/MaintenanceWindowAllowUnassociatedTargets'
        description: Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: User-provided idempotency token.
  CreateMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the created Maintenance Window.
  CreatePatchBaselineRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/BaselineName'
        description: The name of the patch baseline.
      GlobalFilters:
        $ref: '#/definitions/PatchFilterGroup'
        description: A set of global filters used to exclude patches from the baseline.
      ApprovalRules:
        $ref: '#/definitions/PatchRuleGroup'
        description: A set of rules used to include patches in the baseline.
      ApprovedPatches:
        $ref: '#/definitions/PatchIdList'
        description: A list of explicitly approved patches for the baseline.
      RejectedPatches:
        $ref: '#/definitions/PatchIdList'
        description: A list of explicitly rejected patches for the baseline.
      Description:
        $ref: '#/definitions/BaselineDescription'
        description: A description of the patch baseline.
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: Caller-provided idempotency token.
  CreatePatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the created patch baseline.
  CreatedDate:
    type: string
    format: date-time
  CustomSchemaCountLimitExceededException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: You have exceeded the limit for custom schemas. Delete one or more custom schemas and try again.
  DateTime:
    type: string
    format: date-time
  DefaultBaseline:
    type: boolean
  DefaultInstanceName:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 0
    maxLength: 256
  DeleteActivationRequest:
    type: object
    required:
      - ActivationId
    properties:
      ActivationId:
        $ref: '#/definitions/ActivationId'
        description: The ID of the activation that you want to delete.
  DeleteActivationResult:
    type: object
    properties: {}
  DeleteAssociationRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the SSM document.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the instance.
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The association ID that you want to delete.
  DeleteAssociationResult:
    type: object
    properties: {}
  DeleteDocumentRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the SSM document.
  DeleteDocumentResult:
    type: object
    properties: {}
  DeleteMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window to delete.
  DeleteMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the deleted Maintenance Window.
  DeleteParameterRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/PSParameterName'
        description: The name of the parameter to delete.
  DeleteParameterResult:
    type: object
    properties: {}
  DeletePatchBaselineRequest:
    type: object
    required:
      - BaselineId
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline to delete.
  DeletePatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the deleted patch baseline.
  DeregisterManagedInstanceRequest:
    type: object
    required:
      - InstanceId
    properties:
      InstanceId:
        $ref: '#/definitions/ManagedInstanceId'
        description: 'The ID assigned to the managed instance when you registered it using the activation process. '
  DeregisterManagedInstanceResult:
    type: object
    properties: {}
  DeregisterPatchBaselineForPatchGroupRequest:
    type: object
    required:
      - BaselineId
      - PatchGroup
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline to deregister the patch group from.
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group that should be deregistered from the patch baseline.
  DeregisterPatchBaselineForPatchGroupResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline the patch group was deregistered from.
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group deregistered from the patch baseline.
  DeregisterTargetFromMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
      - WindowTargetId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window the target should be removed from.
      WindowTargetId:
        $ref: '#/definitions/MaintenanceWindowTargetId'
        description: The ID of the target definition to remove.
  DeregisterTargetFromMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window the target was removed from.
      WindowTargetId:
        $ref: '#/definitions/MaintenanceWindowTargetId'
        description: The ID of the removed target definition.
  DeregisterTaskFromMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
      - WindowTaskId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window the task should be removed from.
      WindowTaskId:
        $ref: '#/definitions/MaintenanceWindowTaskId'
        description: The ID of the task to remove from the Maintenance Window.
  DeregisterTaskFromMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window the task was removed from.
      WindowTaskId:
        $ref: '#/definitions/MaintenanceWindowTaskId'
        description: The ID of the task removed from the Maintenance Window.
  DescribeActivationsFilter:
    type: object
    properties:
      FilterKey:
        $ref: '#/definitions/DescribeActivationsFilterKeys'
        description: The name of the filter.
      FilterValues:
        $ref: '#/definitions/StringList'
        description: The filter values.
    description: Filter for the DescribeActivation API.
  DescribeActivationsFilterKeys:
    type: string
    enum:
      - ActivationIds
      - DefaultInstanceName
      - IamRole
  DescribeActivationsFilterList:
    type: array
    items:
      $ref: '#/definitions/DescribeActivationsFilter'
  DescribeActivationsRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/DescribeActivationsFilterList'
        description: A filter to view information about your activations.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token to start the list. Use this token to get the next set of results. '
  DescribeActivationsResult:
    type: object
    properties:
      ActivationList:
        $ref: '#/definitions/ActivationList'
        description: A list of activations for your AWS account.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: ' The token for the next set of items to return. Use this token to get the next set of results. '
  DescribeAssociationRequest:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the SSM document.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID.
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The association ID for which you want information.
  DescribeAssociationResult:
    type: object
    properties:
      AssociationDescription:
        $ref: '#/definitions/AssociationDescription'
        description: Information about the association.
  DescribeAutomationExecutionsRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/AutomationExecutionFilterList'
        description: Filters used to limit the scope of executions that are requested.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeAutomationExecutionsResult:
    type: object
    properties:
      AutomationExecutionMetadataList:
        $ref: '#/definitions/AutomationExecutionMetadataList'
        description: 'The list of details about each automation execution which has occurred which matches the filter specification, if any.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeAvailablePatchesRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/PatchOrchestratorFilterList'
        description: Filters used to scope down the returned patches.
      MaxResults:
        $ref: '#/definitions/PatchBaselineMaxResults'
        description: The maximum number of patches to return (per page).
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeAvailablePatchesResult:
    type: object
    properties:
      Patches:
        $ref: '#/definitions/PatchList'
        description: An array of patches. Each entry in the array is a patch structure.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeDocumentPermissionRequest:
    type: object
    required:
      - Name
      - PermissionType
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the document for which you are the owner.
      PermissionType:
        $ref: '#/definitions/DocumentPermissionType'
        description: The permission type for the document. The permission type can be <i>Share</i>.
  DescribeDocumentPermissionResponse:
    type: object
    properties:
      AccountIds:
        $ref: '#/definitions/AccountIdList'
        description: The account IDs that have permission to use this document. The ID can be either an AWS account or <i>All</i>.
  DescribeDocumentRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/DocumentARN'
        description: The name of the SSM document.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version for which you want information. Can be a specific version or the default version.
  DescribeDocumentResult:
    type: object
    properties:
      Document:
        $ref: '#/definitions/DocumentDescription'
        description: Information about the SSM document.
  DescribeEffectiveInstanceAssociationsRequest:
    type: object
    required:
      - InstanceId
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID for which you want to view all associations.
      MaxResults:
        $ref: '#/definitions/EffectiveInstanceAssociationMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeEffectiveInstanceAssociationsResult:
    type: object
    properties:
      Associations:
        $ref: '#/definitions/InstanceAssociationList'
        description: The associations for the requested instance.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeEffectivePatchesForPatchBaselineRequest:
    type: object
    required:
      - BaselineId
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline to retrieve the effective patches for.
      MaxResults:
        $ref: '#/definitions/PatchBaselineMaxResults'
        description: The maximum number of patches to return (per page).
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeEffectivePatchesForPatchBaselineResult:
    type: object
    properties:
      EffectivePatches:
        $ref: '#/definitions/EffectivePatchList'
        description: An array of patches and patch status.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeInstanceAssociationsStatusRequest:
    type: object
    required:
      - InstanceId
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance IDs for which you want association status information.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeInstanceAssociationsStatusResult:
    type: object
    properties:
      InstanceAssociationStatusInfos:
        $ref: '#/definitions/InstanceAssociationStatusInfos'
        description: Status information about the association.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeInstanceInformationRequest:
    type: object
    properties:
      InstanceInformationFilterList:
        $ref: '#/definitions/InstanceInformationFilterList'
        description: One or more filters. Use a filter to return a more specific list of instances.
      Filters:
        $ref: '#/definitions/InstanceInformationStringFilterList'
        description: One or more filters. Use a filter to return a more specific list of instances.
      MaxResults:
        $ref: '#/definitions/MaxResultsEC2Compatible'
        description: 'The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeInstanceInformationResult:
    type: object
    properties:
      InstanceInformationList:
        $ref: '#/definitions/InstanceInformationList'
        description: The instance information list.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty. '
  DescribeInstancePatchStatesForPatchGroupRequest:
    type: object
    required:
      - PatchGroup
    properties:
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group for which the patch state information should be retrieved.
      Filters:
        $ref: '#/definitions/InstancePatchStateFilterList'
        description: '<p>Each entry in the array is a structure containing:</p> <p>Key (string 1 ≤ length ≤ 200)</p> <p> Values (array containing a single string)</p> <p> Type (string “Equal”, “NotEqual”, “LessThan”, “GreaterThan”)</p>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/PatchComplianceMaxResults'
        description: The maximum number of patches to return (per page).
  DescribeInstancePatchStatesForPatchGroupResult:
    type: object
    properties:
      InstancePatchStates:
        $ref: '#/definitions/InstancePatchStatesList'
        description: 'The high-level patch state for the requested instances. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeInstancePatchStatesRequest:
    type: object
    required:
      - InstanceIds
    properties:
      InstanceIds:
        $ref: '#/definitions/InstanceIdList'
        description: The ID of the instance whose patch state information should be retrieved.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/PatchComplianceMaxResults'
        description: The maximum number of instances to return (per page).
  DescribeInstancePatchStatesResult:
    type: object
    properties:
      InstancePatchStates:
        $ref: '#/definitions/InstancePatchStateList'
        description: The high-level patch state for the requested instances.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeInstancePatchesRequest:
    type: object
    required:
      - InstanceId
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the instance whose patch state information should be retrieved.
      Filters:
        $ref: '#/definitions/PatchOrchestratorFilterList'
        description: '<p>Each entry in the array is a structure containing:</p> <p>Key (string, 1 ≤ length ≤ 128)</p> <p>Values (array of strings 1 ≤ length ≤ 256)</p>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/PatchComplianceMaxResults'
        description: The maximum number of patches to return (per page).
  DescribeInstancePatchesResult:
    type: object
    properties:
      Patches:
        $ref: '#/definitions/PatchComplianceDataList'
        description: '<p>Each entry in the array is a structure containing:</p> <p>Title (string)</p> <p>KBId (string)</p> <p>Classification (string)</p> <p>Severity (string)</p> <p>State (string – “INSTALLED”, “INSTALLED_OTHER”, “MISSING”, “NOT_APPLICABLE”, “FAILED”)</p> <p>InstalledTime (DateTime)</p> <p>InstalledBy (string)</p>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowExecutionTaskInvocationsRequest:
    type: object
    required:
      - WindowExecutionId
      - TaskId
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution the task is part of.
      TaskId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskId'
        description: The ID of the specific task in the Maintenance Window task that should be retrieved.
      Filters:
        $ref: '#/definitions/MaintenanceWindowFilterList'
        description: 'Optional filters used to scope down the returned task invocations. The supported filter key is STATUS with the corresponding values PENDING, IN_PROGRESS, SUCCESS, FAILED, TIMED_OUT, CANCELLING, and CANCELLED.'
      MaxResults:
        $ref: '#/definitions/MaintenanceWindowMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowExecutionTaskInvocationsResult:
    type: object
    properties:
      WindowExecutionTaskInvocationIdentities:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskInvocationIdentityList'
        description: Information about the task invocation results per invocation.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowExecutionTasksRequest:
    type: object
    required:
      - WindowExecutionId
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution whose task executions should be retrieved.
      Filters:
        $ref: '#/definitions/MaintenanceWindowFilterList'
        description: 'Optional filters used to scope down the returned tasks. The supported filter key is STATUS with the corresponding values PENDING, IN_PROGRESS, SUCCESS, FAILED, TIMED_OUT, CANCELLING, and CANCELLED. '
      MaxResults:
        $ref: '#/definitions/MaintenanceWindowMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowExecutionTasksResult:
    type: object
    properties:
      WindowExecutionTaskIdentities:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskIdentityList'
        description: Information about the task executions.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowExecutionsRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window whose executions should be retrieved.
      Filters:
        $ref: '#/definitions/MaintenanceWindowFilterList'
        description: '<p>Each entry in the array is a structure containing:</p> <p>Key (string, 1 ≤ length ≤ 128)</p> <p>Values (array of strings 1 ≤ length ≤ 256)</p> <p>The supported Keys are <code>ExecutedBefore</code> and <code>ExecutedAfter</code> with the value being a date/time string such as 2016-11-04T05:00:00Z.</p>'
      MaxResults:
        $ref: '#/definitions/MaintenanceWindowMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowExecutionsResult:
    type: object
    properties:
      WindowExecutions:
        $ref: '#/definitions/MaintenanceWindowExecutionList'
        description: Information about the Maintenance Windows execution.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowTargetsRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window whose targets should be retrieved.
      Filters:
        $ref: '#/definitions/MaintenanceWindowFilterList'
        description: 'Optional filters that can be used to narrow down the scope of the returned window targets. The supported filter keys are <code>Type</code>, <code>WindowTargetId</code> and <code>OwnerInformation</code>.'
      MaxResults:
        $ref: '#/definitions/MaintenanceWindowMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowTargetsResult:
    type: object
    properties:
      Targets:
        $ref: '#/definitions/MaintenanceWindowTargetList'
        description: Information about the targets in the Maintenance Window.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowTasksRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window whose tasks should be retrieved.
      Filters:
        $ref: '#/definitions/MaintenanceWindowFilterList'
        description: 'Optional filters used to narrow down the scope of the returned tasks. The supported filter keys are <code>WindowTaskId</code>, <code>TaskArn</code>, <code>Priority</code>, and <code>TaskType</code>.'
      MaxResults:
        $ref: '#/definitions/MaintenanceWindowMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowTasksResult:
    type: object
    properties:
      Tasks:
        $ref: '#/definitions/MaintenanceWindowTaskList'
        description: Information about the tasks in the Maintenance Window.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeMaintenanceWindowsRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/MaintenanceWindowFilterList'
        description: Optional filters used to narrow down the scope of the returned Maintenance Windows. Supported filter keys are <code>Name</code> and <code>Enabled</code>.
      MaxResults:
        $ref: '#/definitions/MaintenanceWindowMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeMaintenanceWindowsResult:
    type: object
    properties:
      WindowIdentities:
        $ref: '#/definitions/MaintenanceWindowIdentityList'
        description: Information about the Maintenance Windows.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribeParametersRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/ParametersFilterList'
        description: One or more filters. Use a filter to return a more specific list of results.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribeParametersResult:
    type: object
    properties:
      Parameters:
        $ref: '#/definitions/ParameterMetadataList'
        description: Parameters returned by the request.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribePatchBaselinesRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/PatchOrchestratorFilterList'
        description: '<p>Each element in the array is a structure containing: </p> <p>Key: (string, “NAME_PREFIX” or “OWNER”)</p> <p>Value: (array of strings, exactly 1 entry, 1 ≤ length ≤ 255)</p>'
      MaxResults:
        $ref: '#/definitions/PatchBaselineMaxResults'
        description: The maximum number of patch baselines to return (per page).
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribePatchBaselinesResult:
    type: object
    properties:
      BaselineIdentities:
        $ref: '#/definitions/PatchBaselineIdentityList'
        description: An array of PatchBaselineIdentity elements.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescribePatchGroupStateRequest:
    type: object
    required:
      - PatchGroup
    properties:
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group whose patch snapshot should be retrieved.
  DescribePatchGroupStateResult:
    type: object
    properties:
      Instances:
        $ref: '#/definitions/Integer'
        description: The number of instances in the patch group.
      InstancesWithInstalledPatches:
        $ref: '#/definitions/Integer'
        description: The number of instances with installed patches.
      InstancesWithInstalledOtherPatches:
        $ref: '#/definitions/Integer'
        description: The number of instances with patches installed that aren’t defined in the patch baseline.
      InstancesWithMissingPatches:
        $ref: '#/definitions/Integer'
        description: The number of instances with missing patches from the patch baseline.
      InstancesWithFailedPatches:
        $ref: '#/definitions/Integer'
        description: The number of instances with patches from the patch baseline that failed to install.
      InstancesWithNotApplicablePatches:
        $ref: '#/definitions/Integer'
        description: The number of instances with patches that aren’t applicable.
  DescribePatchGroupsRequest:
    type: object
    properties:
      MaxResults:
        $ref: '#/definitions/PatchBaselineMaxResults'
        description: The maximum number of patch groups to return (per page).
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  DescribePatchGroupsResult:
    type: object
    properties:
      Mappings:
        $ref: '#/definitions/PatchGroupPatchBaselineMappingList'
        description: '<p>Each entry in the array contains:</p> <p>PatchGroup: string (1 ≤ length ≤ 256, Regex: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$)</p> <p>PatchBaselineIdentity: A PatchBaselineIdentity element. </p>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  DescriptionInDocument:
    type: string
  DocumentARN:
    type: string
    pattern: '^[a-zA-Z0-9_\-.:/]{3,128}$'
  DocumentAlreadyExists:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The specified SSM document already exists.
  DocumentContent:
    type: string
    minLength: 1
  DocumentDefaultVersionDescription:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the document.
      DefaultVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The default version of the document.
    description: A default version of a document.
  DocumentDescription:
    type: object
    properties:
      Sha1:
        $ref: '#/definitions/DocumentSha1'
        description: 'The SHA1 hash of the document, which you can use for verification purposes.'
      Hash:
        $ref: '#/definitions/DocumentHash'
        description: <p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      HashType:
        $ref: '#/definitions/DocumentHashType'
        description: <p>Sha256 or Sha1.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      Name:
        $ref: '#/definitions/DocumentARN'
        description: The name of the SSM document.
      Owner:
        $ref: '#/definitions/DocumentOwner'
        description: The AWS user account of the person who created the document.
      CreatedDate:
        $ref: '#/definitions/DateTime'
        description: ' The date when the SSM document was created. '
      Status:
        $ref: '#/definitions/DocumentStatus'
        description: The status of the SSM document.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version.
      Description:
        $ref: '#/definitions/DescriptionInDocument'
        description: ' A description of the document. '
      Parameters:
        $ref: '#/definitions/DocumentParameterList'
        description: A description of the parameters for a document.
      PlatformTypes:
        $ref: '#/definitions/PlatformTypeList'
        description: 'The list of OS platforms compatible with this SSM document. '
      DocumentType:
        $ref: '#/definitions/DocumentType'
        description: 'The type of document. '
      SchemaVersion:
        $ref: '#/definitions/DocumentSchemaVersion'
        description: The schema version.
      LatestVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The latest version of the document.
      DefaultVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The default version.
    description: ' Describes an SSM document. '
  DocumentFilter:
    type: object
    required:
      - key
      - value
    properties:
      key:
        $ref: '#/definitions/DocumentFilterKey'
        description: The name of the filter.
      value:
        $ref: '#/definitions/DocumentFilterValue'
        description: The value of the filter.
    description: Describes a filter.
  DocumentFilterKey:
    type: string
    enum:
      - Name
      - Owner
      - PlatformTypes
      - DocumentType
  DocumentFilterList:
    type: array
    items:
      $ref: '#/definitions/DocumentFilter'
    minItems: 1
  DocumentFilterValue:
    type: string
    minLength: 1
  DocumentHash:
    type: string
    maxLength: 256
  DocumentHashType:
    type: string
    enum:
      - Sha256
      - Sha1
  DocumentIdentifier:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentARN'
        description: The name of the SSM document.
      Owner:
        $ref: '#/definitions/DocumentOwner'
        description: The AWS user account of the person who created the document.
      PlatformTypes:
        $ref: '#/definitions/PlatformTypeList'
        description: 'The operating system platform. '
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version.
      DocumentType:
        $ref: '#/definitions/DocumentType'
        description: The document type.
      SchemaVersion:
        $ref: '#/definitions/DocumentSchemaVersion'
        description: The schema version.
    description: Describes the name of an SSM document.
  DocumentIdentifierList:
    type: array
    items:
      $ref: '#/definitions/DocumentIdentifier'
  DocumentLimitExceeded:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: You can have at most 200 active SSM documents.
  DocumentName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]{3,128}$'
  DocumentOwner:
    type: string
  DocumentParameter:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentParameterName'
        description: The name of the parameter.
      Type:
        $ref: '#/definitions/DocumentParameterType'
        description: The type of parameter. The type can be either “String” or “StringList”.
      Description:
        $ref: '#/definitions/DocumentParameterDescrption'
        description: 'A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.'
      DefaultValue:
        $ref: '#/definitions/DocumentParameterDefaultValue'
        description: 'If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.'
    description: 'Parameters specified in the SSM document that execute on the server when the command is run. '
  DocumentParameterDefaultValue:
    type: string
  DocumentParameterDescrption:
    type: string
  DocumentParameterList:
    type: array
    items:
      $ref: '#/definitions/DocumentParameter'
  DocumentParameterName:
    type: string
  DocumentParameterType:
    type: string
    enum:
      - String
      - StringList
  DocumentPermissionLimit:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: 'The document cannot be shared with more AWS user accounts. You can share a document with a maximum of 20 accounts. You can publicly share up to five documents. If you need to increase this limit, contact AWS Support.'
  DocumentPermissionType:
    type: string
    enum:
      - Share
  DocumentSchemaVersion:
    type: string
    pattern: '([0-9]+)\.([0-9]+)'
  DocumentSha1:
    type: string
  DocumentStatus:
    type: string
    enum:
      - Creating
      - Active
      - Updating
      - Deleting
  DocumentType:
    type: string
    enum:
      - Command
      - Policy
      - Automation
  DocumentVersion:
    type: string
    pattern: '([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)'
  DocumentVersionInfo:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The document name.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version.
      CreatedDate:
        $ref: '#/definitions/DateTime'
        description: The date the document was created.
      IsDefaultVersion:
        $ref: '#/definitions/Boolean'
        description: An identifier for the default version of the document.
    description: Version information about the document.
  DocumentVersionLimitExceeded:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The document has too many versions. Delete one or more document versions and try again.
  DocumentVersionList:
    type: array
    items:
      $ref: '#/definitions/DocumentVersionInfo'
    minItems: 1
  DocumentVersionNumber:
    type: string
    pattern: '(^[1-9][0-9]*$)'
  DoesNotExistException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: Error returned when the ID specified for a resource (e.g. a Maintenance Window) doesn’t exist.
  DuplicateDocumentContent:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The content of the association document matches another document. Change the content of the document and try again.
  DuplicateInstanceId:
    type: object
    properties: {}
    description: You cannot specify an instance ID in more than one association.
  EffectiveInstanceAssociationMaxResults:
    type: integer
    minimum: 1
    maximum: 5
  EffectivePatch:
    type: object
    properties:
      Patch:
        $ref: '#/definitions/Patch'
        description: 'Provides metadata for a patch, including information such as the KB ID, severity, classification and a URL for where more information can be obtained about the patch.'
      PatchStatus:
        $ref: '#/definitions/PatchStatus'
        description: 'The status of the patch in a patch baseline. This includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.'
    description: 'The EffectivePatch structure defines metadata about a patch along with the approval state of the patch in a particular patch baseline. The approval state includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.'
  EffectivePatchList:
    type: array
    items:
      $ref: '#/definitions/EffectivePatch'
  ErrorCount:
    type: integer
  ExpirationDate:
    type: string
    format: date-time
  FailedCreateAssociation:
    type: object
    properties:
      Entry:
        $ref: '#/definitions/CreateAssociationBatchRequestEntry'
        description: The association.
      Message:
        $ref: '#/definitions/BatchErrorMessage'
        description: A description of the failure.
      Fault:
        $ref: '#/definitions/Fault'
        description: The source of the failure.
    description: Describes a failed association.
  FailedCreateAssociationList:
    type: array
    items:
      $ref: '#/definitions/FailedCreateAssociation'
  Fault:
    type: string
    enum:
      - Client
      - Server
      - Unknown
  GetAutomationExecutionRequest:
    type: object
    required:
      - AutomationExecutionId
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/AutomationExecutionId'
        description: The unique identifier for an existing automation execution to examine. The execution ID is returned by <code>StartAutomationExecution</code> when the execution of an Automation document is initiated.
  GetAutomationExecutionResult:
    type: object
    properties:
      AutomationExecution:
        $ref: '#/definitions/AutomationExecution'
        description: Detailed information about the current state of an automation execution.
  GetCommandInvocationRequest:
    type: object
    required:
      - CommandId
      - InstanceId
    properties:
      CommandId:
        $ref: '#/definitions/CommandId'
        description: (Required) The parent command ID of the invocation plugin.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: (Required) The ID of the managed instance targeted by the command. A managed instance can be an Amazon EC2 instance or an instance in your hybrid environment that is configured for Systems Manager.
      PluginName:
        $ref: '#/definitions/CommandPluginName'
        description: '(Optional) The name of the plugin for which you want detailed results. If the SSM document contains only one plugin, the name can be omitted and the details will be returned.'
  GetCommandInvocationResult:
    type: object
    properties:
      CommandId:
        $ref: '#/definitions/CommandId'
        description: The parent command ID of the invocation plugin.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the managed instance targeted by the command. A managed instance can be an Amazon EC2 instance or an instance in your hybrid environment that is configured for Systems Manager.
      Comment:
        $ref: '#/definitions/Comment'
        description: The comment text for the command.
      DocumentName:
        $ref: '#/definitions/DocumentName'
        description: 'The name of the SSM document that was executed. For example, AWS-RunShellScript is an SSM document.'
      PluginName:
        $ref: '#/definitions/CommandPluginName'
        description: 'The name of the plugin for which you want detailed results. For example, aws:RunShellScript is a plugin.'
      ResponseCode:
        $ref: '#/definitions/ResponseCode'
        description: 'The error level response code for the plugin script. If the response code is <code>-1</code>, then the command has not started executing on the instance, or it was not received by the instance.'
      ExecutionStartDateTime:
        $ref: '#/definitions/StringDateTime'
        description: 'The date and time the plugin started executing. Date and time are written in ISO 8601 format. For example, August 28, 2016 is represented as 2016-08-28. If the plugin has not started to execute, the string is empty.'
      ExecutionElapsedTime:
        $ref: '#/definitions/StringDateTime'
        description: Duration since <code>ExecutionStartDateTime</code>.
      ExecutionEndDateTime:
        $ref: '#/definitions/StringDateTime'
        description: 'The date and time the plugin was finished executing. Date and time are written in ISO 8601 format. For example, August 28, 2016 is represented as 2016-08-28. If the plugin has not started to execute, the string is empty.'
      Status:
        $ref: '#/definitions/CommandInvocationStatus'
        description: The status of the parent command for this invocation. This status can be different than <code>StatusDetails</code>.
      StatusDetails:
        $ref: '#/definitions/StatusDetails'
        description: '<p>A detailed status of the command execution for an invocation. <code>StatusDetails</code> includes more information than <code>Status</code> because it includes states resulting from error and concurrency control parameters. <code>StatusDetails</code> can show different results than <code>Status</code>. For more information about these statuses, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitor-commands.html">Monitor Commands</a> (Linux) or <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/monitor-commands.html">Monitor Commands</a> (Windows). <code>StatusDetails</code> can be one of the following values: </p> <ul> <li> <p>Pending – The command has not been sent to the instance.</p> </li> <li> <p>In Progress – The command has been sent to the instance but has not reached a terminal state.</p> </li> <li> <p>Delayed – The system attempted to send the command to the target, but the target was not available. The instance might not be available because of network issues, the instance was stopped, etc. The system will try to deliver the command again.</p> </li> <li> <p>Success – The command or plugin was executed successfully. This is a terminal state.</p> </li> <li> <p>Delivery Timed Out – The command was not delivered to the instance before the delivery timeout expired. Delivery timeouts do not count against the parent command’s <code>MaxErrors</code> limit, but they do contribute to whether the parent command status is <code>Success</code> or <code>Incomplete</code>. This is a terminal state.</p> </li> <li> <p>Execution Timed Out – The command started to execute on the instance, but the execution was not complete before the timeout expired. Execution timeouts count against the <code>MaxErrors</code> limit of the parent command. This is a terminal state.</p> </li> <li> <p>Failed – The command wasn''t executed successfully on the instance. For a plugin, this indicates that the result code was not zero. For a command invocation, this indicates that the result code for one or more plugins was not zero. Invocation failures count against the <code>MaxErrors</code> limit of the parent command. This is a terminal state.</p> </li> <li> <p>Canceled – The command was terminated before it was completed. This is a terminal state.</p> </li> <li> <p>Undeliverable – The command can''t be delivered to the instance. The instance might not exist or might not be responding. Undeliverable invocations don''t count against the parent command’s <code>MaxErrors</code> limit and don''t contribute to whether the parent command status is <code>Success</code> or <code>Incomplete</code>. This is a terminal state.</p> </li> <li> <p>Terminated – The parent command exceeded its <code>MaxErrors</code> limit and subsequent command invocations were canceled by the system. This is a terminal state.</p> </li> </ul>'
      StandardOutputContent:
        $ref: '#/definitions/StandardOutputContent'
        description: 'The first 24,000 characters written by the plugin to stdout. If the command has not finished executing, if <code>ExecutionStatus</code> is neither <code>Succeeded</code> nor <code>Failed</code>, then this string is empty.'
      StandardOutputUrl:
        $ref: '#/definitions/Url'
        description: 'The URL for the complete text written by the plugin to stdout in Amazon S3. If an Amazon S3 bucket was not specified, then this string is empty.'
      StandardErrorContent:
        $ref: '#/definitions/StandardErrorContent'
        description: 'The first 8,000 characters written by the plugin to stderr. If the command has not finished executing, then this string is empty.'
      StandardErrorUrl:
        $ref: '#/definitions/Url'
        description: 'The URL for the complete text written by the plugin to stderr. If the command has not finished executing, then this string is empty.'
  GetDefaultPatchBaselineRequest:
    type: object
    properties: {}
  GetDefaultPatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the default patch baseline.
  GetDeployablePatchSnapshotForInstanceRequest:
    type: object
    required:
      - InstanceId
      - SnapshotId
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the instance for which the appropriate patch snapshot should be retrieved.
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The user-defined snapshot ID.
  GetDeployablePatchSnapshotForInstanceResult:
    type: object
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the instance.
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The user-defined snapshot ID.
      SnapshotDownloadUrl:
        $ref: '#/definitions/SnapshotDownloadUrl'
        description: A pre-signed Amazon S3 URL that can be used to download the patch snapshot.
  GetDocumentRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/DocumentARN'
        description: The name of the SSM document.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version for which you want information.
  GetDocumentResult:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DocumentARN'
        description: The name of the SSM document.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The document version.
      Content:
        $ref: '#/definitions/DocumentContent'
        description: The contents of the SSM document.
      DocumentType:
        $ref: '#/definitions/DocumentType'
        description: The document type.
  GetInventoryRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/InventoryFilterList'
        description: One or more filters. Use a filter to return a more specific list of results.
      ResultAttributes:
        $ref: '#/definitions/ResultAttributeList'
        description: The list of inventory item types to return.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
  GetInventoryResult:
    type: object
    properties:
      Entities:
        $ref: '#/definitions/InventoryResultEntityList'
        description: 'Collection of inventory entities such as a collection of instance inventory. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  GetInventorySchemaMaxResults:
    type: integer
    minimum: 50
    maximum: 200
  GetInventorySchemaRequest:
    type: object
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeNameFilter'
        description: The type of inventory item to return.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/GetInventorySchemaMaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
  GetInventorySchemaResult:
    type: object
    properties:
      Schemas:
        $ref: '#/definitions/InventoryItemSchemaResultList'
        description: Inventory schemas returned by the request.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  GetMaintenanceWindowExecutionRequest:
    type: object
    required:
      - WindowExecutionId
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution that includes the task.
  GetMaintenanceWindowExecutionResult:
    type: object
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution.
      TaskIds:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskIdList'
        description: The ID of the task executions from the Maintenance Window execution.
      Status:
        $ref: '#/definitions/MaintenanceWindowExecutionStatus'
        description: The status of the Maintenance Window execution.
      StatusDetails:
        $ref: '#/definitions/MaintenanceWindowExecutionStatusDetails'
        description: The details explaining the Status. Only available for certain status values.
      StartTime:
        $ref: '#/definitions/DateTime'
        description: The time the Maintenance Window started executing.
      EndTime:
        $ref: '#/definitions/DateTime'
        description: The time the Maintenance Window finished executing.
  GetMaintenanceWindowExecutionTaskRequest:
    type: object
    required:
      - WindowExecutionId
      - TaskId
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution that includes the task.
      TaskId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskId'
        description: The ID of the specific task execution in the Maintenance Window task that should be retrieved.
  GetMaintenanceWindowExecutionTaskResult:
    type: object
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution that includes the task.
      TaskExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskId'
        description: The ID of the specific task execution in the Maintenance Window task that was retrieved.
      TaskArn:
        $ref: '#/definitions/MaintenanceWindowTaskArn'
        description: The ARN of the executed task.
      ServiceRole:
        $ref: '#/definitions/ServiceRole'
        description: The role that was assumed when executing the task.
      Type:
        $ref: '#/definitions/MaintenanceWindowTaskType'
        description: The type of task executed.
      TaskParameters:
        $ref: '#/definitions/MaintenanceWindowTaskParametersList'
        description: '<p>The parameters passed to the task when it was executed. The map has the following format:</p> <p>Key: string, 1 ≤ length ≤ 255</p> <p>Value: an array of strings where each string 1 ≤ length ≤ 255</p>'
      Priority:
        $ref: '#/definitions/MaintenanceWindowTaskPriority'
        description: The priority of the task.
      MaxConcurrency:
        $ref: '#/definitions/VelocityConstraint'
        description: The defined maximum number of task executions that could be run in parallel.
      MaxErrors:
        $ref: '#/definitions/VelocityConstraint'
        description: The defined maximum number of task execution errors allowed before scheduling of the task execution would have been stopped.
      Status:
        $ref: '#/definitions/MaintenanceWindowExecutionStatus'
        description: The status of the task.
      StatusDetails:
        $ref: '#/definitions/MaintenanceWindowExecutionStatusDetails'
        description: The details explaining the Status. Only available for certain status values.
      StartTime:
        $ref: '#/definitions/DateTime'
        description: The time the task execution started.
      EndTime:
        $ref: '#/definitions/DateTime'
        description: The time the task execution completed.
  GetMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the desired Maintenance Window.
  GetMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the created Maintenance Window.
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The name of the Maintenance Window.
      Schedule:
        $ref: '#/definitions/MaintenanceWindowSchedule'
        description: The schedule of the Maintenance Window in the form of a cron or rate expression.
      Duration:
        $ref: '#/definitions/MaintenanceWindowDurationHours'
        description: The duration of the Maintenance Window in hours.
      Cutoff:
        $ref: '#/definitions/MaintenanceWindowCutoff'
        description: The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
      AllowUnassociatedTargets:
        $ref: '#/definitions/MaintenanceWindowAllowUnassociatedTargets'
        description: Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.
      Enabled:
        $ref: '#/definitions/MaintenanceWindowEnabled'
        description: Whether the Maintenance Windows is enabled.
      CreatedDate:
        $ref: '#/definitions/DateTime'
        description: The date the Maintenance Window was created.
      ModifiedDate:
        $ref: '#/definitions/DateTime'
        description: The date the Maintenance Window was last modified.
  GetParameterHistoryRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/PSParameterName'
        description: The name of a parameter you want to query.
      WithDecryption:
        $ref: '#/definitions/Boolean'
        description: Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  GetParameterHistoryResult:
    type: object
    properties:
      Parameters:
        $ref: '#/definitions/ParameterHistoryList'
        description: A list of parameters returned by the request.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  GetParametersRequest:
    type: object
    required:
      - Names
    properties:
      Names:
        $ref: '#/definitions/ParameterNameList'
        description: Names of the parameters for which you want to query information.
      WithDecryption:
        $ref: '#/definitions/Boolean'
        description: Return decrypted secure string value. Return decrypted values for secure string parameters. This flag is ignored for String and StringList parameter types.
  GetParametersResult:
    type: object
    properties:
      Parameters:
        $ref: '#/definitions/ParameterList'
        description: A list of parameters used by the AWS account.
      InvalidParameters:
        $ref: '#/definitions/ParameterNameList'
        description: A list of parameters that are not formatted correctly or do not run when executed.
  GetPatchBaselineForPatchGroupRequest:
    type: object
    required:
      - PatchGroup
    properties:
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group whose patch baseline should be retrieved.
  GetPatchBaselineForPatchGroupResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline that should be used for the patch group.
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group.
  GetPatchBaselineRequest:
    type: object
    required:
      - BaselineId
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline to retrieve.
  GetPatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the retrieved patch baseline.
      Name:
        $ref: '#/definitions/BaselineName'
        description: The name of the patch baseline.
      GlobalFilters:
        $ref: '#/definitions/PatchFilterGroup'
        description: A set of global filters used to exclude patches from the baseline.
      ApprovalRules:
        $ref: '#/definitions/PatchRuleGroup'
        description: A set of rules used to include patches in the baseline.
      ApprovedPatches:
        $ref: '#/definitions/PatchIdList'
        description: A list of explicitly approved patches for the baseline.
      RejectedPatches:
        $ref: '#/definitions/PatchIdList'
        description: A list of explicitly rejected patches for the baseline.
      PatchGroups:
        $ref: '#/definitions/PatchGroupList'
        description: Patch groups included in the patch baseline.
      CreatedDate:
        $ref: '#/definitions/DateTime'
        description: The date the patch baseline was created.
      ModifiedDate:
        $ref: '#/definitions/DateTime'
        description: The date the patch baseline was last modified.
      Description:
        $ref: '#/definitions/BaselineDescription'
        description: A description of the patch baseline.
  IPAddress:
    type: string
    minLength: 1
    maxLength: 46
  IamRole:
    type: string
    maxLength: 64
  IdempotentParameterMismatch:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: 'Error returned when an idempotent operation is retried and the parameters don’t match the original call to the API with the same idempotency token. '
  InstanceAggregatedAssociationOverview:
    type: object
    properties:
      DetailedStatus:
        $ref: '#/definitions/StatusName'
        description: Detailed status information about the aggregated associations.
      InstanceAssociationStatusAggregatedCount:
        $ref: '#/definitions/InstanceAssociationStatusAggregatedCount'
        description: The number of associations for the instance(s).
    description: Status information about the aggregated associations.
  InstanceAssociation:
    type: object
    properties:
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The association ID.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID.
      Content:
        $ref: '#/definitions/DocumentContent'
        description: The content of the association document for the instance(s).
    description: 'One or more association documents on the instance. '
  InstanceAssociationExecutionSummary:
    type: string
    minLength: 1
    maxLength: 512
  InstanceAssociationList:
    type: array
    items:
      $ref: '#/definitions/InstanceAssociation'
  InstanceAssociationOutputLocation:
    type: object
    properties:
      S3Location:
        $ref: '#/definitions/S3OutputLocation'
        description: An Amazon S3 bucket where you want to store the results of this request.
    description: An Amazon S3 bucket where you want to store the results of this request.
  InstanceAssociationOutputUrl:
    type: object
    properties:
      S3OutputUrl:
        $ref: '#/definitions/S3OutputUrl'
        description: The URL of Amazon S3 bucket where you want to store the results of this request.
    description: The URL of Amazon S3 bucket where you want to store the results of this request.
  InstanceAssociationStatusAggregatedCount:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/StatusName'
        value:
          $ref: '#/definitions/InstanceCount'
  InstanceAssociationStatusInfo:
    type: object
    properties:
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: The association ID.
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the association.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The association document verions.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID where the association was created.
      ExecutionDate:
        $ref: '#/definitions/DateTime'
        description: 'The date the instance association executed. '
      Status:
        $ref: '#/definitions/StatusName'
        description: Status information about the instance association.
      DetailedStatus:
        $ref: '#/definitions/StatusName'
        description: Detailed status information about the instance association.
      ExecutionSummary:
        $ref: '#/definitions/InstanceAssociationExecutionSummary'
        description: Summary information about association execution.
      ErrorCode:
        $ref: '#/definitions/AgentErrorCode'
        description: An error code returned by the request to create the association.
      OutputUrl:
        $ref: '#/definitions/InstanceAssociationOutputUrl'
        description: A URL for an Amazon S3 bucket where you want to store the results of this request.
    description: Status information about the instance association.
  InstanceAssociationStatusInfos:
    type: array
    items:
      $ref: '#/definitions/InstanceAssociationStatusInfo'
  InstanceCount:
    type: integer
  InstanceId:
    type: string
    pattern: '(^i-(\w{8}|\w{17})$)|(^mi-\w{17}$)'
  InstanceIdList:
    type: array
    items:
      $ref: '#/definitions/InstanceId'
    minItems: 0
    maxItems: 50
  InstanceInformation:
    type: object
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: 'The instance ID. '
      PingStatus:
        $ref: '#/definitions/PingStatus'
        description: 'Connection status of the SSM agent. '
      LastPingDateTime:
        $ref: '#/definitions/DateTime'
        description: 'The date and time when agent last pinged Systems Manager service. '
      AgentVersion:
        $ref: '#/definitions/Version'
        description: 'The version of the SSM agent running on your Linux instance. '
      IsLatestVersion:
        $ref: '#/definitions/Boolean'
        description: 'Indicates whether latest version of the SSM agent is running on your instance. '
      PlatformType:
        $ref: '#/definitions/PlatformType'
        description: 'The operating system platform type. '
      PlatformName:
        $ref: '#/definitions/String'
        description: 'The name of the operating system platform running on your instance. '
      PlatformVersion:
        $ref: '#/definitions/String'
        description: 'The version of the OS platform running on your instance. '
      ActivationId:
        $ref: '#/definitions/ActivationId'
        description: The activation ID created by Systems Manager when the server or VM was registered.
      IamRole:
        $ref: '#/definitions/IamRole'
        description: 'The Amazon Identity and Access Management (IAM) role assigned to EC2 instances or managed instances. '
      RegistrationDate:
        $ref: '#/definitions/DateTime'
        description: The date the server or VM was registered with AWS as a managed instance.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The type of instance. Instances are either EC2 instances or managed instances. '
      Name:
        $ref: '#/definitions/String'
        description: The name of the managed instance.
      IPAddress:
        $ref: '#/definitions/IPAddress'
        description: The IP address of the managed instance.
      ComputerName:
        $ref: '#/definitions/ComputerName'
        description: The fully qualified host name of the managed instance.
      AssociationStatus:
        $ref: '#/definitions/StatusName'
        description: The status of the association.
      LastAssociationExecutionDate:
        $ref: '#/definitions/DateTime'
        description: The date the association was last executed.
      LastSuccessfulAssociationExecutionDate:
        $ref: '#/definitions/DateTime'
        description: The last date the association was successfully run.
      AssociationOverview:
        $ref: '#/definitions/InstanceAggregatedAssociationOverview'
        description: Information about the association.
    description: 'Describes a filter for a specific list of instances. '
  InstanceInformationFilter:
    type: object
    required:
      - key
      - valueSet
    properties:
      key:
        $ref: '#/definitions/InstanceInformationFilterKey'
        description: 'The name of the filter. '
      valueSet:
        $ref: '#/definitions/InstanceInformationFilterValueSet'
        description: The filter values.
    description: 'Describes a filter for a specific list of instances. '
  InstanceInformationFilterKey:
    type: string
    enum:
      - InstanceIds
      - AgentVersion
      - PingStatus
      - PlatformTypes
      - ActivationIds
      - IamRole
      - ResourceType
      - AssociationStatus
  InstanceInformationFilterList:
    type: array
    items:
      $ref: '#/definitions/InstanceInformationFilter'
    minItems: 0
  InstanceInformationFilterValue:
    type: string
    minLength: 1
  InstanceInformationFilterValueSet:
    type: array
    items:
      $ref: '#/definitions/InstanceInformationFilterValue'
    minItems: 1
    maxItems: 100
  InstanceInformationList:
    type: array
    items:
      $ref: '#/definitions/InstanceInformation'
  InstanceInformationStringFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/InstanceInformationStringFilterKey'
        description: '<p>The filter key name to describe your instances. For example:</p> <p>"InstanceIds"|"AgentVersion"|"PingStatus"|"PlatformTypes"|"ActivationIds"|"IamRole"|"ResourceType"|”AssociationStatus”|”Tag Key”</p>'
      Values:
        $ref: '#/definitions/InstanceInformationFilterValueSet'
        description: The filter values.
    description: The filters to describe or get information about your managed instances.
  InstanceInformationStringFilterKey:
    type: string
    minLength: 1
  InstanceInformationStringFilterList:
    type: array
    items:
      $ref: '#/definitions/InstanceInformationStringFilter'
    minItems: 0
  InstancePatchState:
    type: object
    required:
      - InstanceId
      - PatchGroup
      - BaselineId
      - OperationStartTime
      - OperationEndTime
      - Operation
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the managed instance the high-level patch compliance information was collected for.
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group the managed instance belongs to.
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline used to patch the instance.
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The ID of the patch baseline snapshot used during the patching operation when this compliance data was collected.
      OwnerInformation:
        $ref: '#/definitions/OwnerInformation'
        description: 'Placeholder information, this field will always be empty in the current release of the service.'
      InstalledCount:
        $ref: '#/definitions/PatchInstalledCount'
        description: The number of patches from the patch baseline that are installed on the instance.
      InstalledOtherCount:
        $ref: '#/definitions/PatchInstalledOtherCount'
        description: The number of patches not specified in the patch baseline that are installed on the instance.
      MissingCount:
        $ref: '#/definitions/PatchMissingCount'
        description: The number of patches from the patch baseline that are applicable for the instance but aren’t currently installed.
      FailedCount:
        $ref: '#/definitions/PatchFailedCount'
        description: 'The number of patches from the patch baseline that were attempted to be installed during the last patching operation, but failed to install.'
      NotApplicableCount:
        $ref: '#/definitions/PatchNotApplicableCount'
        description: The number of patches from the patch baseline that aren’t applicable for the instance and hence aren’t installed on the instance.
      OperationStartTime:
        $ref: '#/definitions/PatchOperationStartTime'
        description: The time the most recent patching operation was started on the instance.
      OperationEndTime:
        $ref: '#/definitions/PatchOperationEndTime'
        description: The time the most recent patching operation completed on the instance.
      Operation:
        $ref: '#/definitions/PatchOperationType'
        description: 'The type of patching operation that was performed: SCAN (assess patch compliance state) or INSTALL (install missing patches).'
    description: 'Defines the high-level patch compliance state for a managed instance, providing information about the number of installed, missing, not applicable, and failed patches along with metadata about the operation when this information was gathered for the instance.'
  InstancePatchStateFilter:
    type: object
    required:
      - Key
      - Values
      - Type
    properties:
      Key:
        $ref: '#/definitions/InstancePatchStateFilterKey'
        description: 'The key for the filter. Supported values are FailedCount, InstalledCount, InstalledOtherCount, MissingCount and NotApplicableCount.'
      Values:
        $ref: '#/definitions/InstancePatchStateFilterValues'
        description: 'The value for the filter, must be an integer greater than or equal to 0.'
      Type:
        $ref: '#/definitions/InstancePatchStateOperatorType'
        description: 'The type of comparison that should be performed for the value: Equal, NotEqual, LessThan or GreaterThan.'
    description: Defines a filter used in DescribeInstancePatchStatesForPatchGroup used to scope down the information returned by the API.
  InstancePatchStateFilterKey:
    type: string
    minLength: 1
    maxLength: 200
  InstancePatchStateFilterList:
    type: array
    items:
      $ref: '#/definitions/InstancePatchStateFilter'
    minItems: 0
    maxItems: 4
  InstancePatchStateFilterValue:
    type: string
  InstancePatchStateFilterValues:
    type: array
    items:
      $ref: '#/definitions/InstancePatchStateFilterValue'
    minItems: 1
    maxItems: 1
  InstancePatchStateList:
    type: array
    items:
      $ref: '#/definitions/InstancePatchState'
  InstancePatchStateOperatorType:
    type: string
    enum:
      - Equal
      - NotEqual
      - LessThan
      - GreaterThan
  InstancePatchStatesList:
    type: array
    items:
      $ref: '#/definitions/InstancePatchState'
    minItems: 1
    maxItems: 5
  InstanceTagName:
    type: string
    maxLength: 255
  Integer:
    type: integer
  InternalServerError:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: An error occurred on the server side.
  InvalidActivation:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: 'The activation is not valid. The activation might have been deleted, or the ActivationId and the ActivationCode do not match.'
  InvalidActivationId:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The activation ID is not valid. Verify the you entered the correct ActivationId or ActivationCode and try again.
  InvalidAutomationExecutionParametersException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: 'The supplied parameters for invoking the specified Automation document are incorrect. For example, they may not match the set of parameters permitted for the specified Automation document.'
  InvalidCommandId:
    type: object
    properties: {}
  InvalidDocument:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
        description: 'The SSM document does not exist or the document is not available to the user. This exception can be issued by CreateAssociation, CreateAssociationBatch, DeleteAssociation, DeleteDocument, DescribeAssociation, DescribeDocument, GetDocument, SendCommand, or UpdateAssociationStatus. '
    description: The specified document does not exist.
  InvalidDocumentContent:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
        description: A description of the validation error.
    description: The content for the SSM document is not valid.
  InvalidDocumentOperation:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: You attempted to delete a document while it is still shared. You must stop sharing the document before you can delete it.
  InvalidDocumentSchemaVersion:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The version of the document schema is not supported.
  InvalidDocumentVersion:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The document version is not valid or does not exist.
  InvalidFilter:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The filter name is not valid. Verify the you entered the correct name and try again.
  InvalidFilterKey:
    type: object
    properties: {}
    description: The specified key is not valid.
  InvalidFilterValue:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The filter value is not valid. Verify the value and try again.
  InvalidInstanceId:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: '<p>The following problems can cause this exception:</p> <p>You do not have permission to access the instance.</p> <p>The SSM agent is not running. On managed instances and Linux instances, verify that the SSM agent is running. On EC2 Windows instances, verify that the EC2Config service is running.</p> <p>The SSM agent or EC2Config service is not registered to the SSM endpoint. Try reinstalling the SSM agent or EC2Config service.</p> <p>The instance is not in valid state. Valid states are: Running, Pending, Stopped, Stopping. Invalid states are: Shutting-down and Terminated.</p>'
  InvalidInstanceInformationFilterValue:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: The specified filter value is not valid.
  InvalidItemContentException:
    type: object
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
      Message:
        $ref: '#/definitions/String'
    description: One or more content items is not valid.
  InvalidKeyId:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: The query key ID is not valid.
  InvalidNextToken:
    type: object
    properties: {}
    description: The specified token is not valid.
  InvalidNotificationConfig:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: One or more configuration items is not valid. Verify that a valid Amazon Resource Name (ARN) was provided for an Amazon SNS topic.
  InvalidOutputFolder:
    type: object
    properties: {}
    description: The S3 bucket does not exist.
  InvalidOutputLocation:
    type: object
    properties: {}
    description: The output location is not valid or does not exist.
  InvalidParameters:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: You must specify values for all required parameters in the SSM document. You can only supply values to parameters defined in the SSM document.
  InvalidPermissionType:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The permission type is not supported. <i>Share</i> is the only supported permission type.
  InvalidPluginName:
    type: object
    properties: {}
    description: The plugin name is not valid.
  InvalidResourceId:
    type: object
    properties: {}
    description: The resource ID is not valid. Verify that you entered the correct ID and try again.
  InvalidResourceType:
    type: object
    properties: {}
    description: 'The resource type is not valid. If you are attempting to tag an instance, the instance must be a registered, managed instance.'
  InvalidResultAttributeException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The specified inventory item result attribute is not valid.
  InvalidRole:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: 'The role name can''t contain invalid characters. Also verify that you specified an IAM role for notifications that includes the required trust policy. For information about configuring the IAM role for Run Command notifications, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/rc-sns.html">Getting Amazon SNS Notifications When a Command Changes Status</a> in the <i>Amazon Elastic Compute Cloud User Guide </i>.'
  InvalidSchedule:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The schedule is invalid. Verify your cron or rate expression and try again.
  InvalidTarget:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The target is not valid or does not exist. It might not be configured for EC2 Systems Manager or you might not have permission to perform the operation.
  InvalidTypeNameException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The parameter type name is not valid.
  InvalidUpdate:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The update is not valid.
  InventoryAttributeDataType:
    type: string
    enum:
      - string
      - number
  InventoryFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/InventoryFilterKey'
        description: The name of the filter key.
      Values:
        $ref: '#/definitions/InventoryFilterValueList'
        description: 'Inventory filter values. Example: inventory filter where instance IDs are specified as values Key=AWS:InstanceInformation.InstanceId,Values= i-a12b3c4d5e6g, i-1a2b3c4d5e6,Type=Equal '
      Type:
        $ref: '#/definitions/InventoryQueryOperatorType'
        description: 'The type of filter. Valid values include the following: "Equal"|"NotEqual"|"BeginWith"|"LessThan"|"GreaterThan"'
    description: One or more filters. Use a filter to return a more specific list of results.
  InventoryFilterKey:
    type: string
    minLength: 1
    maxLength: 200
  InventoryFilterList:
    type: array
    items:
      $ref: '#/definitions/InventoryFilter'
    minItems: 1
    maxItems: 5
  InventoryFilterValue:
    type: string
  InventoryFilterValueList:
    type: array
    items:
      $ref: '#/definitions/InventoryFilterValue'
    minItems: 1
    maxItems: 20
  InventoryItem:
    type: object
    required:
      - TypeName
      - SchemaVersion
      - CaptureTime
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
        description: 'The name of the inventory type. Default inventory item type names start with <code>AWS</code>. Custom inventory type names will start with <code>Custom</code>. Default inventory item types include the following: <code>AWS:AWSComponent</code>, <code>AWS:Application</code>, <code>AWS:InstanceInformation</code>, <code>AWS:Network</code>, and <code>AWS:WindowsUpdate</code>.'
      SchemaVersion:
        $ref: '#/definitions/InventoryItemSchemaVersion'
        description: The schema version for the inventory item.
      CaptureTime:
        $ref: '#/definitions/InventoryItemCaptureTime'
        description: The time the inventory information was collected.
      ContentHash:
        $ref: '#/definitions/InventoryItemContentHash'
        description: 'MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The <code>PutInventory</code> API does not update the inventory item type contents if the MD5 hash has not changed since last update. '
      Content:
        $ref: '#/definitions/InventoryItemEntryList'
        description: The inventory data of the inventory type.
    description: Information collected from managed instances based on your inventory policy document
  InventoryItemAttribute:
    type: object
    required:
      - Name
      - DataType
    properties:
      Name:
        $ref: '#/definitions/InventoryItemAttributeName'
        description: Name of the inventory item attribute.
      DataType:
        $ref: '#/definitions/InventoryAttributeDataType'
        description: 'The data type of the inventory item attribute. '
    description: Attributes are the entries within the inventory item content. It contains name and value.
  InventoryItemAttributeList:
    type: array
    items:
      $ref: '#/definitions/InventoryItemAttribute'
    minItems: 1
    maxItems: 50
  InventoryItemAttributeName:
    type: string
  InventoryItemCaptureTime:
    type: string
    pattern: '^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$'
  InventoryItemContentHash:
    type: string
    maxLength: 256
  InventoryItemEntry:
    type: array
    minItems: 0
    maxItems: 50
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/AttributeName'
        value:
          $ref: '#/definitions/AttributeValue'
  InventoryItemEntryList:
    type: array
    items:
      $ref: '#/definitions/InventoryItemEntry'
    minItems: 0
    maxItems: 10000
  InventoryItemList:
    type: array
    items:
      $ref: '#/definitions/InventoryItem'
    minItems: 1
    maxItems: 30
  InventoryItemSchema:
    type: object
    required:
      - TypeName
      - Attributes
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
        description: 'The name of the inventory type. Default inventory item type names start with <code>AWS</code>. Custom inventory type names will start with <code>Custom</code>. Default inventory item types include the following: <code>AWS:AWSComponent</code>, <code>AWS:Application</code>, <code>AWS:InstanceInformation</code>, <code>AWS:Network</code>, and <code>AWS:WindowsUpdate</code>.'
      Version:
        $ref: '#/definitions/InventoryItemSchemaVersion'
        description: The schema version for the inventory item.
      Attributes:
        $ref: '#/definitions/InventoryItemAttributeList'
        description: The schema attributes for inventory. This contains data type and attribute name.
    description: The inventory item schema definition. Users can use this to compose inventory query filters.
  InventoryItemSchemaResultList:
    type: array
    items:
      $ref: '#/definitions/InventoryItemSchema'
  InventoryItemSchemaVersion:
    type: string
    pattern: '^([0-9]{1,6})(\.[0-9]{1,6})$'
  InventoryItemTypeName:
    type: string
    pattern: '^(AWS|Custom):.*$'
    minLength: 1
    maxLength: 100
  InventoryItemTypeNameFilter:
    type: string
    minLength: 0
    maxLength: 100
  InventoryQueryOperatorType:
    type: string
    enum:
      - Equal
      - NotEqual
      - BeginWith
      - LessThan
      - GreaterThan
  InventoryResultEntity:
    type: object
    properties:
      Id:
        $ref: '#/definitions/InventoryResultEntityId'
        description: 'ID of the inventory result entity. For example, for managed instance inventory the result will be the managed instance ID. For EC2 instance inventory, the result will be the instance ID. '
      Data:
        $ref: '#/definitions/InventoryResultItemMap'
        description: The data section in the inventory result entity json.
    description: Inventory query results.
  InventoryResultEntityId:
    type: string
  InventoryResultEntityList:
    type: array
    items:
      $ref: '#/definitions/InventoryResultEntity'
  InventoryResultItem:
    type: object
    required:
      - TypeName
      - SchemaVersion
      - Content
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
        description: The name of the inventory result item type.
      SchemaVersion:
        $ref: '#/definitions/InventoryItemSchemaVersion'
        description: The schema version for the inventory result item/
      CaptureTime:
        $ref: '#/definitions/InventoryItemCaptureTime'
        description: The time inventory item data was captured.
      ContentHash:
        $ref: '#/definitions/InventoryItemContentHash'
        description: 'MD5 hash of the inventory item type contents. The content hash is used to determine whether to update inventory information. The <code>PutInventory</code> API does not update the inventory item type contents if the MD5 hash has not changed since last update. '
      Content:
        $ref: '#/definitions/InventoryItemEntryList'
        description: 'Contains all the inventory data of the item type. Results include attribute names and values. '
    description: The inventory result item.
  InventoryResultItemKey:
    type: string
  InventoryResultItemMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/InventoryResultItemKey'
        value:
          $ref: '#/definitions/InventoryResultItem'
  InvocationDoesNotExist:
    type: object
    properties: {}
    description: 'The command ID and instance ID you specified did not match any invocations. Verify the command ID adn the instance ID and try again. '
  InvocationTraceOutput:
    type: string
    maxLength: 2500
  ItemContentMismatchException:
    type: object
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
      Message:
        $ref: '#/definitions/String'
    description: 'The inventory item has invalid content. '
  ItemSizeLimitExceededException:
    type: object
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
      Message:
        $ref: '#/definitions/String'
    description: The inventory item size has exceeded the size limit.
  KeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
  ListAssociationsRequest:
    type: object
    properties:
      AssociationFilterList:
        $ref: '#/definitions/AssociationFilterList'
        description: One or more filters. Use a filter to return a more specific list of results.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  ListAssociationsResult:
    type: object
    properties:
      Associations:
        $ref: '#/definitions/AssociationList'
        description: The associations.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  ListCommandInvocationsRequest:
    type: object
    properties:
      CommandId:
        $ref: '#/definitions/CommandId'
        description: (Optional) The invocations for a specific command ID.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: (Optional) The command execution details for a specific instance ID.
      MaxResults:
        $ref: '#/definitions/CommandMaxResults'
        description: (Optional) The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: (Optional) The token for the next set of items to return. (You received this token from a previous call.)
      Filters:
        $ref: '#/definitions/CommandFilterList'
        description: (Optional) One or more filters. Use a filter to return a more specific list of results.
      Details:
        $ref: '#/definitions/Boolean'
        description: '(Optional) If set this returns the response of the command executions and any command output. By default this is set to False. '
  ListCommandInvocationsResult:
    type: object
    properties:
      CommandInvocations:
        $ref: '#/definitions/CommandInvocationList'
        description: '(Optional) A list of all invocations. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: (Optional) The token for the next set of items to return. (You received this token from a previous call.)
  ListCommandsRequest:
    type: object
    properties:
      CommandId:
        $ref: '#/definitions/CommandId'
        description: '(Optional) If provided, lists only the specified command.'
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: (Optional) Lists commands issued against this instance ID.
      MaxResults:
        $ref: '#/definitions/CommandMaxResults'
        description: (Optional) The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: (Optional) The token for the next set of items to return. (You received this token from a previous call.)
      Filters:
        $ref: '#/definitions/CommandFilterList'
        description: '(Optional) One or more filters. Use a filter to return a more specific list of results. '
  ListCommandsResult:
    type: object
    properties:
      Commands:
        $ref: '#/definitions/CommandList'
        description: '(Optional) The list of commands requested by the user. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: (Optional) The token for the next set of items to return. (You received this token from a previous call.)
  ListDocumentVersionsRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the document about which you want version information.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  ListDocumentVersionsResult:
    type: object
    properties:
      DocumentVersions:
        $ref: '#/definitions/DocumentVersionList'
        description: The document versions.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  ListDocumentsRequest:
    type: object
    properties:
      DocumentFilterList:
        $ref: '#/definitions/DocumentFilterList'
        description: One or more filters. Use a filter to return a more specific list of results.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
  ListDocumentsResult:
    type: object
    properties:
      DocumentIdentifiers:
        $ref: '#/definitions/DocumentIdentifierList'
        description: The names of the SSM documents.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  ListInventoryEntriesRequest:
    type: object
    required:
      - InstanceId
      - TypeName
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID for which you want inventory information.
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
        description: The type of inventory item for which you want information.
      Filters:
        $ref: '#/definitions/InventoryFilterList'
        description: One or more filters. Use a filter to return a more specific list of results.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return. (You received this token from a previous call.)
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.
  ListInventoryEntriesResult:
    type: object
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
        description: The type of inventory item returned by the request.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The instance ID targeted by the request to query inventory information.
      SchemaVersion:
        $ref: '#/definitions/InventoryItemSchemaVersion'
        description: The inventory schema version used by the instance(s).
      CaptureTime:
        $ref: '#/definitions/InventoryItemCaptureTime'
        description: The time that inventory information was collected for the instance(s).
      Entries:
        $ref: '#/definitions/InventoryItemEntryList'
        description: A list of inventory items on the instance(s).
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.'
  ListTagsForResourceRequest:
    type: object
    required:
      - ResourceType
      - ResourceId
    properties:
      ResourceType:
        $ref: '#/definitions/ResourceTypeForTagging'
        description: Returns a list of tags for a specific resource type.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The resource ID for which you want to see a list of tags.
  ListTagsForResourceResult:
    type: object
    properties:
      TagList:
        $ref: '#/definitions/TagList'
        description: A list of tags.
  LoggingInfo:
    type: object
    required:
      - S3BucketName
      - S3Region
    properties:
      S3BucketName:
        $ref: '#/definitions/S3BucketName'
        description: The name of an Amazon S3 bucket where execution logs are stored .
      S3KeyPrefix:
        $ref: '#/definitions/S3KeyPrefix'
        description: '(Optional) The Amazon S3 bucket subfolder. '
      S3Region:
        $ref: '#/definitions/S3Region'
        description: The region where the Amazon S3 bucket is located.
    description: Information about an Amazon S3 bucket to write instance-level logs to.
  MaintenanceWindowAllowUnassociatedTargets:
    type: boolean
  MaintenanceWindowCutoff:
    type: integer
    minimum: 0
    maximum: 23
  MaintenanceWindowDurationHours:
    type: integer
    minimum: 1
    maximum: 24
  MaintenanceWindowEnabled:
    type: boolean
  MaintenanceWindowExecution:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window.
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution.
      Status:
        $ref: '#/definitions/MaintenanceWindowExecutionStatus'
        description: The status of the execution.
      StatusDetails:
        $ref: '#/definitions/MaintenanceWindowExecutionStatusDetails'
        description: The details explaining the Status. Only available for certain status values.
      StartTime:
        $ref: '#/definitions/DateTime'
        description: The time the execution started.
      EndTime:
        $ref: '#/definitions/DateTime'
        description: The time the execution finished.
    description: 'Describes the information about an execution of a Maintenance Window. '
  MaintenanceWindowExecutionId:
    type: string
    pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  MaintenanceWindowExecutionList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowExecution'
  MaintenanceWindowExecutionStatus:
    type: string
    enum:
      - PENDING
      - IN_PROGRESS
      - SUCCESS
      - FAILED
      - TIMED_OUT
      - CANCELLING
      - CANCELLED
      - SKIPPED_OVERLAPPING
  MaintenanceWindowExecutionStatusDetails:
    type: string
    minLength: 0
    maxLength: 250
  MaintenanceWindowExecutionTaskExecutionId:
    type: string
  MaintenanceWindowExecutionTaskId:
    type: string
    pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  MaintenanceWindowExecutionTaskIdList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowExecutionTaskId'
  MaintenanceWindowExecutionTaskIdentity:
    type: object
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution that ran the task.
      TaskExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskId'
        description: The ID of the specific task execution in the Maintenance Window execution.
      Status:
        $ref: '#/definitions/MaintenanceWindowExecutionStatus'
        description: The status of the task execution.
      StatusDetails:
        $ref: '#/definitions/MaintenanceWindowExecutionStatusDetails'
        description: The details explaining the status of the task execution. Only available for certain status values.
      StartTime:
        $ref: '#/definitions/DateTime'
        description: The time the task execution started.
      EndTime:
        $ref: '#/definitions/DateTime'
        description: The time the task execution finished.
      TaskArn:
        $ref: '#/definitions/MaintenanceWindowTaskArn'
        description: The ARN of the executed task.
      TaskType:
        $ref: '#/definitions/MaintenanceWindowTaskType'
        description: The type of executed task.
    description: Information about a task execution performed as part of a Maintenance Window execution.
  MaintenanceWindowExecutionTaskIdentityList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowExecutionTaskIdentity'
  MaintenanceWindowExecutionTaskInvocationId:
    type: string
    pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  MaintenanceWindowExecutionTaskInvocationIdentity:
    type: object
    properties:
      WindowExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionId'
        description: The ID of the Maintenance Window execution that ran the task.
      TaskExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskId'
        description: The ID of the specific task execution in the Maintenance Window execution.
      InvocationId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskInvocationId'
        description: The ID of the task invocation.
      ExecutionId:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskExecutionId'
        description: 'The ID of the action performed in the service that actually handled the task invocation. If the task type is RUN_COMMAND, this value is the command ID.'
      Parameters:
        $ref: '#/definitions/MaintenanceWindowExecutionTaskInvocationParameters'
        description: The parameters that were provided for the invocation when it was executed.
      Status:
        $ref: '#/definitions/MaintenanceWindowExecutionStatus'
        description: The status of the task invocation.
      StatusDetails:
        $ref: '#/definitions/MaintenanceWindowExecutionStatusDetails'
        description: 'The details explaining the status of the task invocation. Only available for certain Status values. '
      StartTime:
        $ref: '#/definitions/DateTime'
        description: The time the invocation started.
      EndTime:
        $ref: '#/definitions/DateTime'
        description: The time the invocation finished.
      OwnerInformation:
        $ref: '#/definitions/OwnerInformation'
        description: User-provided value that was specified when the target was registered with the Maintenance Window. This was also included in any CloudWatch events raised during the task invocation.
      WindowTargetId:
        $ref: '#/definitions/MaintenanceWindowTaskTargetId'
        description: The ID of the target definition in this Maintenance Window the invocation was performed for.
    description: Describes the information about a task invocation for a particular target as part of a task execution performed as part of a Maintenance Window execution.
  MaintenanceWindowExecutionTaskInvocationIdentityList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowExecutionTaskInvocationIdentity'
  MaintenanceWindowExecutionTaskInvocationParameters:
    type: string
    format: password
  MaintenanceWindowFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/MaintenanceWindowFilterKey'
        description: The name of the filter.
      Values:
        $ref: '#/definitions/MaintenanceWindowFilterValues'
        description: The filter values.
    description: Filter used in the request.
  MaintenanceWindowFilterKey:
    type: string
    minLength: 1
    maxLength: 128
  MaintenanceWindowFilterList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowFilter'
    minItems: 0
    maxItems: 5
  MaintenanceWindowFilterValue:
    type: string
    minLength: 1
    maxLength: 256
  MaintenanceWindowFilterValues:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowFilterValue'
  MaintenanceWindowId:
    type: string
    pattern: '^mw-[0-9a-f]{17}$'
    minLength: 20
    maxLength: 20
  MaintenanceWindowIdentity:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window.
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The name of the Maintenance Window.
      Enabled:
        $ref: '#/definitions/MaintenanceWindowEnabled'
        description: Whether the Maintenance Window is enabled.
      Duration:
        $ref: '#/definitions/MaintenanceWindowDurationHours'
        description: The duration of the Maintenance Window in hours.
      Cutoff:
        $ref: '#/definitions/MaintenanceWindowCutoff'
        description: The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
    description: Information about the Maintenance Window.
  MaintenanceWindowIdentityList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowIdentity'
  MaintenanceWindowMaxResults:
    type: integer
    minimum: 10
    maximum: 100
  MaintenanceWindowName:
    type: string
    pattern: '^[a-zA-Z0-9_\-.]{3,128}$'
    minLength: 3
    maxLength: 128
  MaintenanceWindowResourceType:
    type: string
    enum:
      - INSTANCE
  MaintenanceWindowSchedule:
    type: string
    minLength: 1
    maxLength: 256
  MaintenanceWindowTarget:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The Maintenance Window ID where the target is registered.
      WindowTargetId:
        $ref: '#/definitions/MaintenanceWindowTargetId'
        description: The ID of the target.
      ResourceType:
        $ref: '#/definitions/MaintenanceWindowResourceType'
        description: The type of target.
      Targets:
        $ref: '#/definitions/Targets'
        description: 'The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.'
      OwnerInformation:
        $ref: '#/definitions/OwnerInformation'
        description: User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
    description: The target registered with the Maintenance Window.
  MaintenanceWindowTargetId:
    type: string
    pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  MaintenanceWindowTargetList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowTarget'
  MaintenanceWindowTask:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The Maintenance Window ID where the task is registered.
      WindowTaskId:
        $ref: '#/definitions/MaintenanceWindowTaskId'
        description: The task ID.
      TaskArn:
        $ref: '#/definitions/MaintenanceWindowTaskArn'
        description: The ARN of the task to execute.
      Type:
        $ref: '#/definitions/MaintenanceWindowTaskType'
        description: The type of task.
      Targets:
        $ref: '#/definitions/Targets'
        description: 'The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.'
      TaskParameters:
        $ref: '#/definitions/MaintenanceWindowTaskParameters'
        description: The parameters that should be passed to the task when it is executed.
      Priority:
        $ref: '#/definitions/MaintenanceWindowTaskPriority'
        description: 'The priority of the task in the Maintenance Window, the lower the number the higher the priority. Tasks in a Maintenance Window are scheduled in priority order with tasks that have the same priority scheduled in parallel.'
      LoggingInfo:
        $ref: '#/definitions/LoggingInfo'
        description: Information about an Amazon S3 bucket to write task-level logs to.
      ServiceRoleArn:
        $ref: '#/definitions/ServiceRole'
        description: The role that should be assumed when executing the task
      MaxConcurrency:
        $ref: '#/definitions/VelocityConstraint'
        description: The maximum number of targets this task can be run for in parallel.
      MaxErrors:
        $ref: '#/definitions/VelocityConstraint'
        description: The maximum number of errors allowed before this task stops being scheduled.
    description: Information about a task defined for a Maintenance Window.
  MaintenanceWindowTaskArn:
    type: string
    minLength: 1
    maxLength: 1600
  MaintenanceWindowTaskId:
    type: string
    pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  MaintenanceWindowTaskList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowTask'
  MaintenanceWindowTaskParameterName:
    type: string
    minLength: 1
    maxLength: 255
  MaintenanceWindowTaskParameterValue:
    type: string
    minLength: 1
    maxLength: 255
    format: password
  MaintenanceWindowTaskParameterValueExpression:
    type: object
    properties:
      Values:
        $ref: '#/definitions/MaintenanceWindowTaskParameterValueList'
        description: 'This field contains an array of 0 or more strings, each 1 to 255 characters in length.'
    description: Defines the values for a task parameter.
  MaintenanceWindowTaskParameterValueList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowTaskParameterValue'
  MaintenanceWindowTaskParameters:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/MaintenanceWindowTaskParameterName'
        value:
          $ref: '#/definitions/MaintenanceWindowTaskParameterValueExpression'
  MaintenanceWindowTaskParametersList:
    type: array
    items:
      $ref: '#/definitions/MaintenanceWindowTaskParameters'
  MaintenanceWindowTaskPriority:
    type: integer
    minimum: 0
  MaintenanceWindowTaskTargetId:
    type: string
    maxLength: 36
  MaintenanceWindowTaskType:
    type: string
    enum:
      - RUN_COMMAND
  ManagedInstanceId:
    type: string
    pattern: '^mi-[0-9a-f]{17}$'
  MaxDocumentSizeExceeded:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The size limit of an SSM document is 64 KB.
  MaxResults:
    type: integer
    minimum: 1
    maximum: 50
  MaxResultsEC2Compatible:
    type: integer
    minimum: 5
    maximum: 50
  ModifyDocumentPermissionRequest:
    type: object
    required:
      - Name
      - PermissionType
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the document that you want to share.
      PermissionType:
        $ref: '#/definitions/DocumentPermissionType'
        description: The permission type for the document. The permission type can be <i>Share</i>.
      AccountIdsToAdd:
        $ref: '#/definitions/AccountIdList'
        description: The AWS user accounts that should have access to the document. The account IDs can either be a group of account IDs or <i>All</i>.
      AccountIdsToRemove:
        $ref: '#/definitions/AccountIdList'
        description: 'The AWS user accounts that should no longer have access to the document. The AWS user account can either be a group of account IDs or <i>All</i>. This action has a higher priority than <i>AccountIdsToAdd</i>. If you specify an account ID to add and the same ID to remove, the system removes access to the document.'
  ModifyDocumentPermissionResponse:
    type: object
    properties: {}
  NextToken:
    type: string
  NormalStringMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/String'
        value:
          $ref: '#/definitions/String'
  NotificationArn:
    type: string
  NotificationConfig:
    type: object
    properties:
      NotificationArn:
        $ref: '#/definitions/NotificationArn'
        description: An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.
      NotificationEvents:
        $ref: '#/definitions/NotificationEventList'
        description: 'The different events for which you can receive notifications. These events include the following: All (events), InProgress, Success, TimedOut, Cancelled, Failed. To learn more about these events, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitor-commands.html">Monitoring Commands</a> in the <i>Amazon Elastic Compute Cloud User Guide </i>.'
      NotificationType:
        $ref: '#/definitions/NotificationType'
        description: 'Command: Receive notification when the status of a command changes. Invocation: For commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. '
    description: Configurations for sending notifications.
  NotificationEvent:
    type: string
    enum:
      - All
      - InProgress
      - Success
      - TimedOut
      - Cancelled
      - Failed
  NotificationEventList:
    type: array
    items:
      $ref: '#/definitions/NotificationEvent'
  NotificationType:
    type: string
    enum:
      - Command
      - Invocation
  OwnerInformation:
    type: string
    minLength: 1
    maxLength: 128
    format: password
  PSParameterName:
    type: string
    pattern: '^(?!^([aA][wW][sS]|[sS][sS][mM]))(?=^[a-zA-Z0-9_.-]*$).*$'
    minLength: 1
    maxLength: 1024
  PSParameterValue:
    type: string
    pattern: '^(?:(?!(\{\{.*\}\})).)*$'
    minLength: 1
    maxLength: 1024
  Parameter:
    type: object
    properties:
      Name:
        $ref: '#/definitions/PSParameterName'
        description: The name of the parameter.
      Type:
        $ref: '#/definitions/ParameterType'
        description: 'The type of parameter. Valid values include the following: String, String list, Secure string.'
      Value:
        $ref: '#/definitions/PSParameterValue'
        description: The parameter value.
    description: An Amazon EC2 Systems Manager parameter in Parameter Store.
  ParameterAlreadyExists:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: The parameter already exists. You can't create duplicate parameters.
  ParameterDescription:
    type: string
    minLength: 1
    maxLength: 1024
  ParameterHistory:
    type: object
    properties:
      Name:
        $ref: '#/definitions/PSParameterName'
        description: The name of the parameter.
      Type:
        $ref: '#/definitions/ParameterType'
        description: The type of parameter used.
      KeyId:
        $ref: '#/definitions/ParameterKeyId'
        description: The ID of the query key used for this parameter.
      LastModifiedDate:
        $ref: '#/definitions/DateTime'
        description: Date the parameter was last changed or updated.
      LastModifiedUser:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the AWS user who last changed the parameter.
      Description:
        $ref: '#/definitions/ParameterDescription'
        description: Information about the parameter.
      Value:
        $ref: '#/definitions/PSParameterValue'
        description: The parameter value.
    description: Information about parameter usage.
  ParameterHistoryList:
    type: array
    items:
      $ref: '#/definitions/ParameterHistory'
  ParameterKeyId:
    type: string
    pattern: '^([a-zA-Z0-9:/_-]+)$'
    minLength: 1
    maxLength: 256
  ParameterLimitExceeded:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: You have exceeded the number of parameters for this AWS account. Delete one or more parameters and try again.
  ParameterList:
    type: array
    items:
      $ref: '#/definitions/Parameter'
  ParameterMetadata:
    type: object
    properties:
      Name:
        $ref: '#/definitions/PSParameterName'
        description: The parameter name.
      Type:
        $ref: '#/definitions/ParameterType'
        description: 'The type of parameter. Valid parameter types include the following: String, String list, Secure string.'
      KeyId:
        $ref: '#/definitions/ParameterKeyId'
        description: The ID of the query key used for this parameter.
      LastModifiedDate:
        $ref: '#/definitions/DateTime'
        description: Date the parameter was last changed or updated.
      LastModifiedUser:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the AWS user who last changed the parameter.
      Description:
        $ref: '#/definitions/ParameterDescription'
        description: Description of the parameter actions.
    description: Metada includes information like the ARN of the last user and the date/time the parameter was last used.
  ParameterMetadataList:
    type: array
    items:
      $ref: '#/definitions/ParameterMetadata'
  ParameterName:
    type: string
  ParameterNameList:
    type: array
    items:
      $ref: '#/definitions/PSParameterName'
    minItems: 1
    maxItems: 10
  ParameterNotFound:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: The parameter could not be found. Verify the name and try again.
  ParameterType:
    type: string
    enum:
      - String
      - StringList
      - SecureString
  ParameterValue:
    type: string
  ParameterValueList:
    type: array
    items:
      $ref: '#/definitions/ParameterValue'
  Parameters:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/ParameterName'
        value:
          $ref: '#/definitions/ParameterValueList'
  ParametersFilter:
    type: object
    required:
      - Values
    properties:
      Key:
        $ref: '#/definitions/ParametersFilterKey'
        description: The name of the filter.
      Values:
        $ref: '#/definitions/ParametersFilterValueList'
        description: The filter values.
    description: One or more filters. Use a filter to return a more specific list of results.
  ParametersFilterKey:
    type: string
    enum:
      - Name
      - Type
      - KeyId
  ParametersFilterList:
    type: array
    items:
      $ref: '#/definitions/ParametersFilter'
  ParametersFilterValue:
    type: string
    minLength: 1
    maxLength: 100
  ParametersFilterValueList:
    type: array
    items:
      $ref: '#/definitions/ParametersFilterValue'
    minItems: 1
    maxItems: 50
  Patch:
    type: object
    properties:
      Id:
        $ref: '#/definitions/PatchId'
        description: The ID of the patch (this is different than the Microsoft Knowledge Base ID).
      ReleaseDate:
        $ref: '#/definitions/DateTime'
        description: The date the patch was released.
      Title:
        $ref: '#/definitions/PatchTitle'
        description: The title of the patch.
      Description:
        $ref: '#/definitions/PatchDescription'
        description: The description of the patch.
      ContentUrl:
        $ref: '#/definitions/PatchContentUrl'
        description: The URL where more information can be obtained about the patch.
      Vendor:
        $ref: '#/definitions/PatchVendor'
        description: The name of the vendor providing the patch.
      ProductFamily:
        $ref: '#/definitions/PatchProductFamily'
        description: 'The product family the patch is applicable for (for example, Windows).'
      Product:
        $ref: '#/definitions/PatchProduct'
        description: 'The specific product the patch is applicable for (for example, WindowsServer2016).'
      Classification:
        $ref: '#/definitions/PatchClassification'
        description: 'The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).'
      MsrcSeverity:
        $ref: '#/definitions/PatchMsrcSeverity'
        description: 'The severity of the patch (for example Critical, Important, Moderate).'
      KbNumber:
        $ref: '#/definitions/PatchKbNumber'
        description: The Microsoft Knowledge Base ID of the patch.
      MsrcNumber:
        $ref: '#/definitions/PatchMsrcNumber'
        description: The ID of the MSRC bulletin the patch is related to.
      Language:
        $ref: '#/definitions/PatchLanguage'
        description: The language of the patch if it’s language-specific.
    description: Represents metadata about a patch.
  PatchBaselineIdentity:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline.
      BaselineName:
        $ref: '#/definitions/BaselineName'
        description: The name of the patch baseline.
      BaselineDescription:
        $ref: '#/definitions/BaselineDescription'
        description: The description of the patch baseline.
      DefaultBaseline:
        $ref: '#/definitions/DefaultBaseline'
        description: Whether this is the default baseline.
    description: Defines the basic information about a patch baseline.
  PatchBaselineIdentityList:
    type: array
    items:
      $ref: '#/definitions/PatchBaselineIdentity'
  PatchBaselineMaxResults:
    type: integer
    minimum: 1
    maximum: 100
  PatchClassification:
    type: string
  PatchComplianceData:
    type: object
    required:
      - Title
      - KBId
      - Classification
      - Severity
      - State
      - InstalledTime
    properties:
      Title:
        $ref: '#/definitions/PatchTitle'
        description: The title of the patch.
      KBId:
        $ref: '#/definitions/PatchKbNumber'
        description: The Microsoft Knowledge Base ID of the patch.
      Classification:
        $ref: '#/definitions/PatchClassification'
        description: 'The classification of the patch (for example, SecurityUpdates, Updates, CriticalUpdates).'
      Severity:
        $ref: '#/definitions/PatchSeverity'
        description: 'The severity of the patch (for example, Critical, Important, Moderate).'
      State:
        $ref: '#/definitions/PatchComplianceDataState'
        description: 'The state of the patch on the instance (INSTALLED, INSTALLED_OTHER, MISSING, NOT_APPLICABLE or FAILED).'
      InstalledTime:
        $ref: '#/definitions/PatchInstalledTime'
        description: The date/time the patch was installed on the instance.
    description: Information about the state of a patch on a particular instance as it relates to the patch baseline used to patch the instance.
  PatchComplianceDataList:
    type: array
    items:
      $ref: '#/definitions/PatchComplianceData'
  PatchComplianceDataState:
    type: string
    enum:
      - INSTALLED
      - INSTALLED_OTHER
      - MISSING
      - NOT_APPLICABLE
      - FAILED
  PatchComplianceMaxResults:
    type: integer
    minimum: 10
    maximum: 100
  PatchContentUrl:
    type: string
  PatchDeploymentStatus:
    type: string
    enum:
      - APPROVED
      - PENDING_APPROVAL
      - EXPLICIT_APPROVED
      - EXPLICIT_REJECTED
  PatchDescription:
    type: string
  PatchFailedCount:
    type: integer
  PatchFilter:
    type: object
    required:
      - Key
      - Values
    properties:
      Key:
        $ref: '#/definitions/PatchFilterKey'
        description: 'The key for the filter (PRODUCT, CLASSIFICATION, MSRC_SEVERITY, PATCH_ID)'
      Values:
        $ref: '#/definitions/PatchFilterValueList'
        description: The value for the filter key.
    description: Defines a patch filter.
  PatchFilterGroup:
    type: object
    required:
      - PatchFilters
    properties:
      PatchFilters:
        $ref: '#/definitions/PatchFilterList'
        description: The set of patch filters that make up the group.
    description: 'A set of patch filters, typically used for approval rules.'
  PatchFilterKey:
    type: string
    enum:
      - PRODUCT
      - CLASSIFICATION
      - MSRC_SEVERITY
      - PATCH_ID
  PatchFilterList:
    type: array
    items:
      $ref: '#/definitions/PatchFilter'
    minItems: 0
    maxItems: 4
  PatchFilterValue:
    type: string
    minLength: 1
    maxLength: 64
  PatchFilterValueList:
    type: array
    items:
      $ref: '#/definitions/PatchFilterValue'
    minItems: 1
    maxItems: 20
  PatchGroup:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 256
  PatchGroupList:
    type: array
    items:
      $ref: '#/definitions/PatchGroup'
  PatchGroupPatchBaselineMapping:
    type: object
    properties:
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group registered with the patch baseline.
      BaselineIdentity:
        $ref: '#/definitions/PatchBaselineIdentity'
        description: The patch baseline the patch group is registered with.
    description: The mapping between a patch group and the patch baseline the patch group is registered with.
  PatchGroupPatchBaselineMappingList:
    type: array
    items:
      $ref: '#/definitions/PatchGroupPatchBaselineMapping'
  PatchId:
    type: string
    pattern: '(^KB[0-9]{1,7}$)|(^MS[0-9]{2}\-[0-9]{3}$)'
  PatchIdList:
    type: array
    items:
      $ref: '#/definitions/PatchId'
    minItems: 0
    maxItems: 50
  PatchInstalledCount:
    type: integer
  PatchInstalledOtherCount:
    type: integer
  PatchInstalledTime:
    type: string
    format: date-time
  PatchKbNumber:
    type: string
  PatchLanguage:
    type: string
  PatchList:
    type: array
    items:
      $ref: '#/definitions/Patch'
  PatchMissingCount:
    type: integer
  PatchMsrcNumber:
    type: string
  PatchMsrcSeverity:
    type: string
  PatchNotApplicableCount:
    type: integer
  PatchOperationEndTime:
    type: string
    format: date-time
  PatchOperationStartTime:
    type: string
    format: date-time
  PatchOperationType:
    type: string
    enum:
      - Scan
      - Install
  PatchOrchestratorFilter:
    type: object
    properties:
      Key:
        $ref: '#/definitions/PatchOrchestratorFilterKey'
        description: The key for the filter.
      Values:
        $ref: '#/definitions/PatchOrchestratorFilterValues'
        description: The value for the filter.
    description: Defines a filter used in Patch Manager APIs.
  PatchOrchestratorFilterKey:
    type: string
    minLength: 1
    maxLength: 128
  PatchOrchestratorFilterList:
    type: array
    items:
      $ref: '#/definitions/PatchOrchestratorFilter'
    minItems: 0
    maxItems: 5
  PatchOrchestratorFilterValue:
    type: string
    minLength: 1
    maxLength: 256
  PatchOrchestratorFilterValues:
    type: array
    items:
      $ref: '#/definitions/PatchOrchestratorFilterValue'
  PatchProduct:
    type: string
  PatchProductFamily:
    type: string
  PatchRule:
    type: object
    required:
      - PatchFilterGroup
      - ApproveAfterDays
    properties:
      PatchFilterGroup:
        $ref: '#/definitions/PatchFilterGroup'
        description: The patch filter group that defines the criteria for the rule.
      ApproveAfterDays:
        $ref: '#/definitions/ApproveAfterDays'
        description: The number of days after the release date of each patch matched by the rule the patch is marked as approved in the patch baseline.
    description: Defines an approval rule for a patch baseline.
  PatchRuleGroup:
    type: object
    required:
      - PatchRules
    properties:
      PatchRules:
        $ref: '#/definitions/PatchRuleList'
        description: The rules that make up the rule group.
    description: A set of rules defining the approval rules for a patch baseline.
  PatchRuleList:
    type: array
    items:
      $ref: '#/definitions/PatchRule'
    minItems: 0
    maxItems: 10
  PatchSeverity:
    type: string
  PatchStatus:
    type: object
    properties:
      DeploymentStatus:
        $ref: '#/definitions/PatchDeploymentStatus'
        description: 'The approval status of a patch (APPROVED, PENDING_APPROVAL, EXPLICIT_APPROVED, EXPLICIT_REJECTED).'
      ApprovalDate:
        $ref: '#/definitions/DateTime'
        description: The date the patch was approved (or will be approved if the status is PENDING_APPROVAL).
    description: Information about the approval status of a patch.
  PatchTitle:
    type: string
  PatchVendor:
    type: string
  PingStatus:
    type: string
    enum:
      - Online
      - ConnectionLost
      - Inactive
  PlatformType:
    type: string
    enum:
      - Windows
      - Linux
  PlatformTypeList:
    type: array
    items:
      $ref: '#/definitions/PlatformType'
  PutInventoryRequest:
    type: object
    required:
      - InstanceId
      - Items
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: One or more instance IDs where you want to add or update inventory items.
      Items:
        $ref: '#/definitions/InventoryItemList'
        description: The inventory items that you want to add or update on instances.
  PutInventoryResult:
    type: object
    properties: {}
  PutParameterRequest:
    type: object
    required:
      - Name
      - Value
      - Type
    properties:
      Name:
        $ref: '#/definitions/PSParameterName'
        description: The name of the parameter that you want to add to the system.
      Description:
        $ref: '#/definitions/ParameterDescription'
        description: Information about the parameter that you want to add to the system
      Value:
        $ref: '#/definitions/PSParameterValue'
        description: The parameter value that you want to add to the system.
      Type:
        $ref: '#/definitions/ParameterType'
        description: The type of parameter that you want to add to the system.
      KeyId:
        $ref: '#/definitions/ParameterKeyId'
        description: The parameter key ID that you want to add to the system.
      Overwrite:
        $ref: '#/definitions/Boolean'
        description: Overwrite an existing parameter.
  PutParameterResult:
    type: object
    properties: {}
  RegisterDefaultPatchBaselineRequest:
    type: object
    required:
      - BaselineId
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline that should be the default patch baseline.
  RegisterDefaultPatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the default patch baseline.
  RegisterPatchBaselineForPatchGroupRequest:
    type: object
    required:
      - BaselineId
      - PatchGroup
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline to register the patch group with.
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group that should be registered with the patch baseline.
  RegisterPatchBaselineForPatchGroupResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline the patch group was registered with.
      PatchGroup:
        $ref: '#/definitions/PatchGroup'
        description: The name of the patch group registered with the patch baseline.
  RegisterTargetWithMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
      - ResourceType
      - Targets
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window the target should be registered with.
      ResourceType:
        $ref: '#/definitions/MaintenanceWindowResourceType'
        description: The type of target being registered with the Maintenance Window.
      Targets:
        $ref: '#/definitions/Targets'
        description: 'The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.'
      OwnerInformation:
        $ref: '#/definitions/OwnerInformation'
        description: User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: User-provided idempotency token.
  RegisterTargetWithMaintenanceWindowResult:
    type: object
    properties:
      WindowTargetId:
        $ref: '#/definitions/MaintenanceWindowTargetId'
        description: The ID of the target definition in this Maintenance Window.
  RegisterTaskWithMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
      - Targets
      - TaskArn
      - ServiceRoleArn
      - TaskType
      - MaxConcurrency
      - MaxErrors
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The id of the Maintenance Window the task should be added to.
      Targets:
        $ref: '#/definitions/Targets'
        description: 'The targets (either instances or tags). Instances are specified using Key=instanceids,Values=&lt;instanceid1&gt;,&lt;instanceid2&gt;. Tags are specified using Key=&lt;tag name&gt;,Values=&lt;tag value&gt;.'
      TaskArn:
        $ref: '#/definitions/MaintenanceWindowTaskArn'
        description: 'The ARN of the task to execute '
      ServiceRoleArn:
        $ref: '#/definitions/ServiceRole'
        description: The role that should be assumed when executing the task.
      TaskType:
        $ref: '#/definitions/MaintenanceWindowTaskType'
        description: The type of task being registered.
      TaskParameters:
        $ref: '#/definitions/MaintenanceWindowTaskParameters'
        description: The parameters that should be passed to the task when it is executed.
      Priority:
        $ref: '#/definitions/MaintenanceWindowTaskPriority'
        description: 'The priority of the task in the Maintenance Window, the lower the number the higher the priority. Tasks in a Maintenance Window are scheduled in priority order with tasks that have the same priority scheduled in parallel.'
      MaxConcurrency:
        $ref: '#/definitions/VelocityConstraint'
        description: The maximum number of targets this task can be run for in parallel.
      MaxErrors:
        $ref: '#/definitions/VelocityConstraint'
        description: The maximum number of errors allowed before this task stops being scheduled.
      LoggingInfo:
        $ref: '#/definitions/LoggingInfo'
        description: 'A structure containing information about an Amazon S3 bucket to write instance-level logs to. '
      ClientToken:
        $ref: '#/definitions/ClientToken'
        description: User-provided idempotency token.
  RegisterTaskWithMaintenanceWindowResult:
    type: object
    properties:
      WindowTaskId:
        $ref: '#/definitions/MaintenanceWindowTaskId'
        description: The id of the task in the Maintenance Window.
  RegistrationLimit:
    type: integer
    minimum: 1
    maximum: 1000
  RegistrationsCount:
    type: integer
    minimum: 1
    maximum: 1000
  RemoveTagsFromResourceRequest:
    type: object
    required:
      - ResourceType
      - ResourceId
      - TagKeys
    properties:
      ResourceType:
        $ref: '#/definitions/ResourceTypeForTagging'
        description: The type of resource of which you want to remove a tag.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The resource ID for which you want to remove tags.
      TagKeys:
        $ref: '#/definitions/KeyList'
        description: Tag keys that you want to remove from the specified resource.
  RemoveTagsFromResourceResult:
    type: object
    properties: {}
  ResourceId:
    type: string
  ResourceInUseException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: Error returned if an attempt is made to delete a patch baseline that is registered for a patch group.
  ResourceLimitExceededException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: Error returned when the caller has exceeded the default resource limits (e.g. too many Maintenance Windows have been created).
  ResourceType:
    type: string
    enum:
      - ManagedInstance
      - Document
      - EC2Instance
  ResourceTypeForTagging:
    type: string
    enum:
      - ManagedInstance
      - MaintenanceWindow
      - Parameter
  ResponseCode:
    type: integer
  ResultAttribute:
    type: object
    required:
      - TypeName
    properties:
      TypeName:
        $ref: '#/definitions/InventoryItemTypeName'
        description: 'Name of the inventory item type. Valid value: “AWS:InstanceInformation”. Default Value: “AWS:InstanceInformation”.'
    description: The inventory item result attribute.
  ResultAttributeList:
    type: array
    items:
      $ref: '#/definitions/ResultAttribute'
    minItems: 1
    maxItems: 1
  S3BucketName:
    type: string
    minLength: 3
    maxLength: 63
  S3KeyPrefix:
    type: string
    maxLength: 500
  S3OutputLocation:
    type: object
    properties:
      OutputS3Region:
        $ref: '#/definitions/S3Region'
        description: The Amazon S3 region where the association information is stored.
      OutputS3BucketName:
        $ref: '#/definitions/S3BucketName'
        description: The name of the Amazon S3 bucket.
      OutputS3KeyPrefix:
        $ref: '#/definitions/S3KeyPrefix'
        description: The Amazon S3 bucket subfolder.
    description: An Amazon S3 bucket where you want to store the results of this request.
  S3OutputUrl:
    type: object
    properties:
      OutputUrl:
        $ref: '#/definitions/Url'
        description: A URL for an Amazon S3 bucket where you want to store the results of this request.
    description: A URL for the Amazon S3 bucket where you want to store the results of this request.
  S3Region:
    type: string
    minLength: 3
    maxLength: 20
  ScheduleExpression:
    type: string
    minLength: 1
    maxLength: 256
  SendCommandRequest:
    type: object
    required:
      - DocumentName
    properties:
      InstanceIds:
        $ref: '#/definitions/InstanceIdList'
        description: Required. The instance IDs where the command should execute. You can specify a maximum of 50 IDs.
      Targets:
        $ref: '#/definitions/Targets'
        description: '(Optional) An array of search criteria that targets instances using a <code>Key</code>;<code>Value</code> combination that you specify. <code>Targets</code> is required if you don''t provide one or more instance IDs in the call. For more information about how to use <code>Targets</code>, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/run-command.html">Executing a Command Using Amazon EC2 Run Command</a> (Linux) or <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/run-command.html">Executing a Command Using Amazon EC2 Run Command</a> (Windows).'
      DocumentName:
        $ref: '#/definitions/DocumentARN'
        description: Required. The name of the SSM document to execute. This can be an SSM public document or a custom document.
      DocumentHash:
        $ref: '#/definitions/DocumentHash'
        description: <p>The Sha256 or Sha1 hash created by the system when the document was created. </p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      DocumentHashType:
        $ref: '#/definitions/DocumentHashType'
        description: <p>Sha256 or Sha1.</p> <note> <p>Sha1 hashes have been deprecated.</p> </note>
      TimeoutSeconds:
        $ref: '#/definitions/TimeoutSeconds'
        description: 'If this time is reached and the command has not already started executing, it will not execute.'
      Comment:
        $ref: '#/definitions/Comment'
        description: 'User-specified information about the command, such as a brief description of what the command should do.'
      Parameters:
        $ref: '#/definitions/Parameters'
        description: The required and optional parameters specified in the SSM document being executed.
      OutputS3Region:
        $ref: '#/definitions/S3Region'
        description: (Optional) The region where the Amazon Simple Storage Service (Amazon S3) output bucket is located. The default value is the region where Run Command is being called.
      OutputS3BucketName:
        $ref: '#/definitions/S3BucketName'
        description: The name of the S3 bucket where command execution responses should be stored.
      OutputS3KeyPrefix:
        $ref: '#/definitions/S3KeyPrefix'
        description: The directory structure within the S3 bucket where the responses should be stored.
      MaxConcurrency:
        $ref: '#/definitions/VelocityConstraint'
        description: '(Optional) The maximum number of instances that are allowed to execute the command at the same time. You can specify a number such as “10” or a percentage such as “10%”. The default value is 50. For more information about how to use <code>MaxConcurrency</code>, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/run-command.html">Executing a Command Using Amazon EC2 Run Command</a> (Linux) or <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/run-command.html">Executing a Command Using Amazon EC2 Run Command</a> (Windows).'
      MaxErrors:
        $ref: '#/definitions/VelocityConstraint'
        description: 'The maximum number of errors allowed without the command failing. When the command fails one more time beyond the value of <code>MaxErrors</code>, the systems stops sending the command to additional targets. You can specify a number like “10” or a percentage like “10%”. The default value is 50. For more information about how to use <code>MaxErrors</code>, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/run-command.html">Executing a Command Using Amazon EC2 Run Command</a> (Linux) or <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/run-command.html">Executing a Command Using Amazon EC2 Run Command</a> (Windows).'
      ServiceRoleArn:
        $ref: '#/definitions/ServiceRole'
        description: 'The IAM role that Systems Manager uses to send notifications. '
      NotificationConfig:
        $ref: '#/definitions/NotificationConfig'
        description: Configurations for sending notifications.
  SendCommandResult:
    type: object
    properties:
      Command:
        $ref: '#/definitions/Command'
        description: The request as it was received by Systems Manager. Also provides the command ID which can be used future references to this request.
  ServiceRole:
    type: string
  SnapshotDownloadUrl:
    type: string
  SnapshotId:
    type: string
    pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
    minLength: 36
    maxLength: 36
  StandardErrorContent:
    type: string
    maxLength: 8000
  StandardOutputContent:
    type: string
    maxLength: 24000
  StartAutomationExecutionRequest:
    type: object
    required:
      - DocumentName
    properties:
      DocumentName:
        $ref: '#/definitions/DocumentARN'
        description: The name of the Automation document to use for this execution.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The version of the Automation document to use for this execution.
      Parameters:
        $ref: '#/definitions/AutomationParameterMap'
        description: 'A key-value map of execution parameters, which match the declared parameters in the Automation document.'
  StartAutomationExecutionResult:
    type: object
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/AutomationExecutionId'
        description: The unique ID of a newly scheduled automation execution.
  StatusAdditionalInfo:
    type: string
    maxLength: 1024
  StatusDetails:
    type: string
    minLength: 0
    maxLength: 100
  StatusMessage:
    type: string
    minLength: 1
    maxLength: 1024
  StatusName:
    type: string
  StatusUnchanged:
    type: object
    properties: {}
    description: The updated status is the same as the current status.
  StepExecution:
    type: object
    properties:
      StepName:
        $ref: '#/definitions/String'
        description: The name of this execution step.
      Action:
        $ref: '#/definitions/AutomationActionName'
        description: The action this step performs. The action determines the behavior of the step.
      ExecutionStartTime:
        $ref: '#/definitions/DateTime'
        description: 'If a step has begun execution, this contains the time the step started. If the step is in <code>Pending</code> status, this field is not populated.'
      ExecutionEndTime:
        $ref: '#/definitions/DateTime'
        description: 'If a step has finished execution, this contains the time the execution ended. If the step has not yet concluded, this field is not populated.'
      StepStatus:
        $ref: '#/definitions/AutomationExecutionStatus'
        description: 'The execution status for this step. Valid values include: <code>Pending</code>, <code>InProgress</code>, <code>Success</code>, <code>Cancelled</code>, <code>Failed</code>, and <code>TimedOut</code>.'
      ResponseCode:
        $ref: '#/definitions/String'
        description: The response code returned by the execution of the step.
      Inputs:
        $ref: '#/definitions/NormalStringMap'
        description: Fully-resolved values passed into the step before execution.
      Outputs:
        $ref: '#/definitions/AutomationParameterMap'
        description: Returned values from the execution of the step.
      Response:
        $ref: '#/definitions/String'
        description: A message associated with the response code for an execution.
      FailureMessage:
        $ref: '#/definitions/String'
        description: 'If a step failed, this message explains why the execution failed.'
    description: Detailed information about an the execution state of an Automation step.
  StepExecutionList:
    type: array
    items:
      $ref: '#/definitions/StepExecution'
    minItems: 0
    maxItems: 100
  StopAutomationExecutionRequest:
    type: object
    required:
      - AutomationExecutionId
    properties:
      AutomationExecutionId:
        $ref: '#/definitions/AutomationExecutionId'
        description: The execution ID of the Automation to stop.
  StopAutomationExecutionResult:
    type: object
    properties: {}
  String:
    type: string
  StringDateTime:
    type: string
    pattern: '^([\-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d(?!:))?)?(\17[0-5]\d([\.,]\d)?)?([zZ]|([\-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$'
  StringList:
    type: array
    items:
      $ref: '#/definitions/String'
  Tag:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The name of the tag.
      Value:
        $ref: '#/definitions/TagValue'
        description: The value of the tag.
    description: 'Metadata that you assign to your managed instances. Tags enable you to categorize your managed instances in different ways, for example, by purpose, owner, or environment.'
  TagKey:
    type: string
    pattern: '^\(\?!^\(\?i\)aws:\)\(\?=^[\p\{L\}\p\{Z\}\p\{N\}_.:/=\+\-@]*$\).*$'
    minLength: 1
    maxLength: 128
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
  TagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 256
  Target:
    type: object
    properties:
      Key:
        $ref: '#/definitions/TargetKey'
        description: 'User-defined criteria for sending commands that target instances that meet the criteria. <code>Key</code> can be <code>tag:&lt;Amazon EC2 tag&gt;</code> or <code>name:&lt;Amazon EC2 instance ID&gt;</code>. For example, <code>tag:ServerRole</code> or <code>name:0123456789012345</code>. For more information about how to send commands that target instances using <code>Key</code>;<code>Value</code> parameters, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/run-command.html">Executing a Command Using Amazon EC2 Run Command</a> (Linux) or <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/run-command.html">Executing a Command Using Amazon EC2 Run Command</a> (Windows).'
      Values:
        $ref: '#/definitions/TargetValues'
        description: 'User-defined criteria that maps to <code>Key</code>. For example, if you specified <code>tag:ServerRole</code>, you could specify <code>value:WebServer</code> to execute a command on instances that include Amazon EC2 tags of ServerRole;WebServer. For more information about how to send commands that target instances using <code>Key</code>;<code>Value</code> parameters, see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/run-command.html">Executing a Command Using Amazon EC2 Run Command</a> (Linux) or <a href="http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/run-command.html">Executing a Command Using Amazon EC2 Run Command</a> (Windows).'
    description: An array of search criteria that targets instances using a <code>Key</code>;<code>Value</code> combination that you specify. <code>Targets</code> is required if you don't provide one or more instance IDs in the call.
  TargetCount:
    type: integer
  TargetKey:
    type: string
    pattern: '^[\p{L}\p{Z}\p{N}_.:/=\-@]*$'
    minLength: 1
    maxLength: 128
  TargetValue:
    type: string
  TargetValues:
    type: array
    items:
      $ref: '#/definitions/TargetValue'
    minItems: 0
    maxItems: 50
  Targets:
    type: array
    items:
      $ref: '#/definitions/Target'
    minItems: 0
    maxItems: 5
  TimeoutSeconds:
    type: integer
    minimum: 30
    maximum: 2592000
  TooManyTagsError:
    type: object
    properties: {}
    description: The <code>Targets</code> parameter includes too many tags. Remove one or more tags and try the command again.
  TooManyUpdates:
    type: object
    properties: {}
    description: There are concurrent updates for a resource that supports one update at a time.
  TotalSizeLimitExceededException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: The size of inventory data has exceeded the total size limit for the resource.
  UnsupportedInventorySchemaVersionException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: Inventory item type schema version has to match supported versions in the service. Check output of <code>GetInventorySchema</code> to see the available schema version for each type.
  UnsupportedParameterType:
    type: object
    properties:
      message:
        $ref: '#/definitions/String'
    description: The parameter type is not supported.
  UnsupportedPlatformType:
    type: object
    properties:
      Message:
        $ref: '#/definitions/String'
    description: 'The document does not support the platform type of the given instance ID(s). For example, you sent an SSM document for a Windows instance to a Linux instance.'
  UpdateAssociationRequest:
    type: object
    required:
      - AssociationId
    properties:
      AssociationId:
        $ref: '#/definitions/AssociationId'
        description: 'The ID of the association you want to update. '
      Parameters:
        $ref: '#/definitions/Parameters'
        description: 'The parameters you want to update for the association. If you create a parameter using Parameter Store, you can reference the parameter using {{ssm:parameter-name}}'
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: 'The document version you want update for the association. '
      ScheduleExpression:
        $ref: '#/definitions/ScheduleExpression'
        description: 'The cron expression used to schedule the association that you want to update. Supported expressions are every half, 1, 2, 4, 8 or 12 hour(s); every specified day and time of the week. For example: cron(0 0/30 * 1/1 * ? *) to run every thirty minutes; cron(0 0 0/4 1/1 * ? *) to run every four hours; and cron(0 0 10 ? * SUN *) to run every Sunday at 10 a.m.'
      OutputLocation:
        $ref: '#/definitions/InstanceAssociationOutputLocation'
        description: '<p>An Amazon S3 bucket where you want to store the results of this request.</p> <p> <code>"{ \"S3Location\": { \"OutputS3Region\": \"&lt;region&gt;\", \"OutputS3BucketName\": \"bucket name\", \"OutputS3KeyPrefix\": \"folder name\" } }"</code> </p>'
  UpdateAssociationResult:
    type: object
    properties:
      AssociationDescription:
        $ref: '#/definitions/AssociationDescription'
        description: The description of the association that was updated.
  UpdateAssociationStatusRequest:
    type: object
    required:
      - Name
      - InstanceId
      - AssociationStatus
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the SSM document.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: The ID of the instance.
      AssociationStatus:
        $ref: '#/definitions/AssociationStatus'
        description: The association status.
  UpdateAssociationStatusResult:
    type: object
    properties:
      AssociationDescription:
        $ref: '#/definitions/AssociationDescription'
        description: Information about the association.
  UpdateDocumentDefaultVersionRequest:
    type: object
    required:
      - Name
      - DocumentVersion
    properties:
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of a custom document that you want to set as the default version.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersionNumber'
        description: The version of a custom document that you want to set as the default version.
  UpdateDocumentDefaultVersionResult:
    type: object
    properties:
      Description:
        $ref: '#/definitions/DocumentDefaultVersionDescription'
        description: The description of a custom document that you want to set as the default version.
  UpdateDocumentRequest:
    type: object
    required:
      - Content
      - Name
    properties:
      Content:
        $ref: '#/definitions/DocumentContent'
        description: The content in a document that you want to update.
      Name:
        $ref: '#/definitions/DocumentName'
        description: The name of the document that you want to update.
      DocumentVersion:
        $ref: '#/definitions/DocumentVersion'
        description: The version of the document that you want to update.
  UpdateDocumentResult:
    type: object
    properties:
      DocumentDescription:
        $ref: '#/definitions/DocumentDescription'
        description: A description of the document that was updated.
  UpdateMaintenanceWindowRequest:
    type: object
    required:
      - WindowId
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the Maintenance Window to update.
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The name of the Maintenance Window.
      Schedule:
        $ref: '#/definitions/MaintenanceWindowSchedule'
        description: The schedule of the Maintenance Window in the form of a cron or rate expression.
      Duration:
        $ref: '#/definitions/MaintenanceWindowDurationHours'
        description: The duration of the Maintenance Window in hours.
      Cutoff:
        $ref: '#/definitions/MaintenanceWindowCutoff'
        description: The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
      AllowUnassociatedTargets:
        $ref: '#/definitions/MaintenanceWindowAllowUnassociatedTargets'
        description: Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.
      Enabled:
        $ref: '#/definitions/MaintenanceWindowEnabled'
        description: Whether the Maintenance Window is enabled.
  UpdateMaintenanceWindowResult:
    type: object
    properties:
      WindowId:
        $ref: '#/definitions/MaintenanceWindowId'
        description: The ID of the created Maintenance Window.
      Name:
        $ref: '#/definitions/MaintenanceWindowName'
        description: The name of the Maintenance Window.
      Schedule:
        $ref: '#/definitions/MaintenanceWindowSchedule'
        description: The schedule of the Maintenance Window in the form of a cron or rate expression.
      Duration:
        $ref: '#/definitions/MaintenanceWindowDurationHours'
        description: The duration of the Maintenance Window in hours.
      Cutoff:
        $ref: '#/definitions/MaintenanceWindowCutoff'
        description: The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
      AllowUnassociatedTargets:
        $ref: '#/definitions/MaintenanceWindowAllowUnassociatedTargets'
        description: Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.
      Enabled:
        $ref: '#/definitions/MaintenanceWindowEnabled'
        description: Whether the Maintenance Window is enabled.
  UpdateManagedInstanceRoleRequest:
    type: object
    required:
      - InstanceId
      - IamRole
    properties:
      InstanceId:
        $ref: '#/definitions/ManagedInstanceId'
        description: The ID of the managed instance where you want to update the role.
      IamRole:
        $ref: '#/definitions/IamRole'
        description: The IAM role you want to assign or change.
  UpdateManagedInstanceRoleResult:
    type: object
    properties: {}
  UpdatePatchBaselineRequest:
    type: object
    required:
      - BaselineId
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the patch baseline to update.
      Name:
        $ref: '#/definitions/BaselineName'
        description: The name of the patch baseline.
      GlobalFilters:
        $ref: '#/definitions/PatchFilterGroup'
        description: A set of global filters used to exclude patches from the baseline.
      ApprovalRules:
        $ref: '#/definitions/PatchRuleGroup'
        description: A set of rules used to include patches in the baseline.
      ApprovedPatches:
        $ref: '#/definitions/PatchIdList'
        description: A list of explicitly approved patches for the baseline.
      RejectedPatches:
        $ref: '#/definitions/PatchIdList'
        description: A list of explicitly rejected patches for the baseline.
      Description:
        $ref: '#/definitions/BaselineDescription'
        description: A description of the patch baseline.
  UpdatePatchBaselineResult:
    type: object
    properties:
      BaselineId:
        $ref: '#/definitions/BaselineId'
        description: The ID of the deleted patch baseline.
      Name:
        $ref: '#/definitions/BaselineName'
        description: The name of the patch baseline.
      GlobalFilters:
        $ref: '#/definitions/PatchFilterGroup'
        description: A set of global filters used to exclude patches from the baseline.
      ApprovalRules:
        $ref: '#/definitions/PatchRuleGroup'
        description: A set of rules used to include patches in the baseline.
      ApprovedPatches:
        $ref: '#/definitions/PatchIdList'
        description: A list of explicitly approved patches for the baseline.
      RejectedPatches:
        $ref: '#/definitions/PatchIdList'
        description: A list of explicitly rejected patches for the baseline.
      CreatedDate:
        $ref: '#/definitions/DateTime'
        description: The date when the patch baseline was created.
      ModifiedDate:
        $ref: '#/definitions/DateTime'
        description: The date when the patch baseline was last modified.
      Description:
        $ref: '#/definitions/BaselineDescription'
        description: A description of the Patch Baseline.
  Url:
    type: string
  VelocityConstraint:
    type: string
    pattern: '^[1-9]\d*$|[0-9][%]|[1-9][0-9][%]|[1][0][0][%]|[0-9]?'
    minLength: 1
    maxLength: 7
  Version:
    type: string
    pattern: '^[0-9]{1,6}(\.[0-9]{1,6}){2,3}$'
