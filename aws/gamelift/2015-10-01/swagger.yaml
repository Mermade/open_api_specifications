swagger: '2.0'
info:
  version: '2015-10-01'
  x-release: v4
  title: Amazon GameLift
  description: '<fullname>Amazon GameLift Service</fullname> <p> Amazon GameLift is a managed service for developers who need a scalable, dedicated server solution for their multiplayer games. Amazon GameLift provides tools to acquire computing resources and deploy game servers, scale game server capacity to meed player demand, and track in-depth metrics on player usage and server performance.</p> <p>The Amazon GameLift service API includes important functionality to:</p> <ul> <li> <p>Find game sessions and match players to games – Retrieve information on available game sessions; create new game sessions; send player requests to join a game session.</p> </li> <li> <p>Configure and manage game server resources – Manage builds, fleets, queues, and aliases; set autoscaling policies; retrieve logs and metrics.</p> </li> </ul> <p>This reference guide describes the low-level service API for Amazon GameLift. We recommend using either the Amazon Web Services software development kit (<a href="http://aws.amazon.com/tools/#sdk">AWS SDK</a>), available in multiple languages, or the <a href="http://aws.amazon.com/cli/">AWS command-line interface</a> (CLI) tool. Both of these align with the low-level service API. In addition, you can use the <a href="https://console.aws.amazon.com/gamelift/home">AWS Management Console</a> for Amazon GameLift for many administrative actions.</p> <p> <b>MORE RESOURCES</b> </p> <ul> <li> <p> <a href="http://docs.aws.amazon.com/gamelift/latest/developerguide/">Amazon GameLift Developer Guide</a> – Learn more about Amazon GameLift features and how to use them. </p> </li> <li> <p> <a href="https://gamedev.amazon.com/forums/tutorials">Lumberyard and Amazon GameLift Tutorials</a> – Get started fast with walkthroughs and sample projects.</p> </li> <li> <p> <a href="http://aws.amazon.com/blogs/gamedev/">GameDev Blog</a> – Stay up to date with new features and techniques.</p> </li> <li> <p> <a href="https://gamedev.amazon.com/forums/spaces/123/gamelift-discussion.html">GameDev Forums</a> – Connect with the GameDev community.</p> </li> <li> <p> <a href="http://docs.aws.amazon.com/gamelift/latest/developerguide/doc-history.html">Amazon GameLift Document History</a> – See changes to the Amazon GameLift service, SDKs, and documentation, as well as links to release notes. </p> </li> </ul> <p> <b>API SUMMARY</b> </p> <p>This list offers a functional overview of the Amazon GameLift service API.</p> <p> <b>Finding Games and Joining Players</b> </p> <p>You can enable players to connect to game servers on Amazon GameLift from a game client or through a game service (such as a matchmaking service). You can use these operations to discover actively running game or start new games. You can also match players to games, either singly or as a group.</p> <ul> <li> <p> <b>Discover existing game sessions</b> </p> <ul> <li> <p> <a>SearchGameSessions</a> – Get all available game sessions or search for game sessions that match a set of criteria. </p> </li> </ul> </li> <li> <p> <b>Start a new game session</b> </p> <ul> <li> <p>Game session placement – Use a queue to process new game session requests and create game sessions on fleets designated for the queue.</p> <ul> <li> <p> <a>StartGameSessionPlacement</a> – Request a new game session placement and add one or more players to it.</p> </li> <li> <p> <a>DescribeGameSessionPlacement</a> – Get details on a placement request, including status.</p> </li> <li> <p> <a>StopGameSessionPlacement</a> – Cancel a placement request. </p> </li> </ul> </li> <li> <p> <a>CreateGameSession</a> – Start a new game session on a specific fleet.</p> </li> </ul> </li> <li> <p> <b>Manage game session objects</b> </p> <ul> <li> <p> <a>DescribeGameSessionDetails</a> – Retrieve metadata and protection policies associated with one or more game sessions, including length of time active and current player count.</p> </li> <li> <p> <a>UpdateGameSession</a> – Change game session settings, such as maximum player count and join policy.</p> </li> <li> <p> <a>GetGameSessionLogUrl</a> – Get the location of saved logs for a game session.</p> </li> </ul> </li> <li> <p> <b>Manage player sessions objects</b> </p> <ul> <li> <p> <a>CreatePlayerSession</a> – Send a request for a player to join a game session.</p> </li> <li> <p> <a>CreatePlayerSessions</a> – Send a request for multiple players to join a game session.</p> </li> <li> <p> <a>DescribePlayerSessions</a> – Get details on player activity, including status, playing time, and player data. </p> </li> </ul> </li> </ul> <p> <b>Setting Up and Managing Game Servers</b> </p> <p>When setting up Amazon GameLift, first create a game build and upload the files to Amazon GameLift. Then use these operations to set up a fleet of resources to run your game servers. Manage games to scale capacity, adjust configuration settings, access raw utilization data, and more.</p> <ul> <li> <p> <b>Manage game builds</b> </p> <ul> <li> <p> <a>CreateBuild</a> – Create a new build by uploading files stored in an Amazon S3 bucket. (To create a build stored at a local file location, use the AWS CLI command <code>upload-build</code>.)</p> </li> <li> <p> <a>ListBuilds</a> – Get a list of all builds uploaded to a Amazon GameLift region.</p> </li> <li> <p> <a>DescribeBuild</a> – Retrieve information associated with a build.</p> </li> <li> <p> <a>UpdateBuild</a> – Change build metadata, including build name and version.</p> </li> <li> <p> <a>DeleteBuild</a> – Remove a build from Amazon GameLift.</p> </li> </ul> </li> <li> <p> <b>Manage fleets</b> </p> <ul> <li> <p> <a>CreateFleet</a> – Configure and activate a new fleet to run a build''s game servers.</p> </li> <li> <p> <a>DeleteFleet</a> – Terminate a fleet that is no longer running game servers or hosting players.</p> </li> <li> <p>View / update fleet configurations.</p> <ul> <li> <p> <a>ListFleets</a> – Get a list of all fleet IDs in a Amazon GameLift region (all statuses).</p> </li> <li> <p> <a>DescribeFleetAttributes</a> / <a>UpdateFleetAttributes</a> – View or change a fleet''s metadata and settings for game session protection and resource creation limits.</p> </li> <li> <p> <a>DescribeFleetPortSettings</a> / <a>UpdateFleetPortSettings</a> – View or change the inbound permissions (IP address and port setting ranges) allowed for a fleet.</p> </li> <li> <p> <a>DescribeRuntimeConfiguration</a> / <a>UpdateRuntimeConfiguration</a> – View or change what server processes (and how many) to run on each instance in a fleet.</p> </li> <li> <p> <a>DescribeInstances</a> – Get information on each instance in a fleet, including instance ID, IP address, and status.</p> </li> </ul> </li> </ul> </li> <li> <p> <b>Control fleet capacity</b> </p> <ul> <li> <p> <a>DescribeEC2InstanceLimits</a> – Retrieve maximum number of instances allowed for the current AWS account and the current usage level.</p> </li> <li> <p> <a>DescribeFleetCapacity</a> / <a>UpdateFleetCapacity</a> – Retrieve the capacity settings and the current number of instances in a fleet; adjust fleet capacity settings to scale up or down.</p> </li> <li> <p>Autoscale – Manage autoscaling rules and apply them to a fleet.</p> <ul> <li> <p> <a>PutScalingPolicy</a> – Create a new autoscaling policy, or update an existing one.</p> </li> <li> <p> <a>DescribeScalingPolicies</a> – Retrieve an existing autoscaling policy.</p> </li> <li> <p> <a>DeleteScalingPolicy</a> – Delete an autoscaling policy and stop it from affecting a fleet''s capacity.</p> </li> </ul> </li> </ul> </li> <li> <p> <b>Access fleet activity statistics</b> </p> <ul> <li> <p> <a>DescribeFleetUtilization</a> – Get current data on the number of server processes, game sessions, and players currently active on a fleet.</p> </li> <li> <p> <a>DescribeFleetEvents</a> – Get a fleet''s logged events for a specified time span.</p> </li> <li> <p> <a>DescribeGameSessions</a> – Retrieve metadata associated with one or more game sessions, including length of time active and current player count.</p> </li> </ul> </li> <li> <p> <b>Remotely access an instance</b> </p> <ul> <li> <p> <a>GetInstanceAccess</a> – Request access credentials needed to remotely connect to a specified instance on a fleet.</p> </li> </ul> </li> <li> <p> <b>Manage fleet aliases</b> </p> <ul> <li> <p> <a>CreateAlias</a> – Define a new alias and optionally assign it to a fleet.</p> </li> <li> <p> <a>ListAliases</a> – Get all fleet aliases defined in a Amazon GameLift region.</p> </li> <li> <p> <a>DescribeAlias</a> – Retrieve information on an existing alias.</p> </li> <li> <p> <a>UpdateAlias</a> – Change settings for a alias, such as redirecting it from one fleet to another.</p> </li> <li> <p> <a>DeleteAlias</a> – Remove an alias from the region.</p> </li> <li> <p> <a>ResolveAlias</a> – Get the fleet ID that a specified alias points to.</p> </li> </ul> </li> <li> <p> <b>Manage game session queues</b> </p> <ul> <li> <p> <a>CreateGameSessionQueue</a> – Create a queue for processing requests for new game sessions. </p> </li> <li> <p> <a>DescribeGameSessionQueues</a> – Get data on all game session queues defined in a Amazon GameLift region.</p> </li> <li> <p> <a>UpdateGameSessionQueue</a> – Change the configuration of a game session queue.</p> </li> <li> <p> <a>DeleteGameSessionQueue</a> – Remove a game session queue from the region.</p> </li> </ul> </li> </ul>'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: aws.amazon.com
  x-serviceName: gamelift
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/gamelift-2015-10-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
    - format: swagger
      version: '2.0'
      url: 'https://raw.githubusercontent.com/mermade/openapi-definitions/master/aws/gamelift/2015-10-01/swagger.yaml'
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
x-logo:
  url: 'https://media.amazonwebservices.com/blog/2007/big_pbaws_logo_300px.jpg'
  backgroundColor: '#FFFFFF'
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/gamelift/'
host: gamelift.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
parameters:
  Action:
    name: Action
    in: header
    type: string
    required: true
  Version:
    name: Version
    in: header
    type: string
    required: true
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /:
    post:
      operationId: CreateAlias
      description: '<p>Creates an alias and sets a target fleet. A fleet alias can be used in place of a fleet ID, such as when calling <code>CreateGameSession</code> from a game client or game service or adding destinations to a game session queue. By changing an alias''s target fleet, you can switch your players to the new fleet without changing any other component. In production, this feature is particularly useful to redirect your player base seamlessly to the latest game server update. </p> <p>Amazon GameLift supports two types of routing strategies for aliases: simple and terminal. Use a simple alias to point to an active fleet. Use a terminal alias to display a message to incoming traffic instead of routing players to an active fleet. This option is useful when a game server is no longer supported but you want to provide better messaging than a standard 404 error.</p> <p>To create a fleet alias, specify an alias name, routing strategy, and optional description. If successful, a new alias record is returned, including an alias ID, which you can reference when creating a game session. To reassign the alias to another fleet ID, call <a>UpdateAlias</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAliasOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAliasInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateBuild':
    post:
      operationId: CreateBuild
      description: '<p>Creates a new Amazon GameLift build from a set of game server binary files stored in an Amazon Simple Storage Service (Amazon S3) location. When using this API call, you must create a <code>.zip</code> file containing all of the build files and store it in an Amazon S3 bucket under your AWS account. For help on packaging your build files and creating a build, see <a href="http://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-intro.html">Uploading Your Game to Amazon GameLift</a>.</p> <important> <p>Use this API action ONLY if you are storing your game build files in an Amazon S3 bucket in your AWS account. To create a build using files stored in a directory, use the CLI command <a href="http://docs.aws.amazon.com/cli/latest/reference/gamelift/upload-build.html"> <code>upload-build</code> </a>, which uploads the build files from a file location you specify and creates a build.</p> </important> <p>To create a new build using <code>CreateBuild</code>, identify the storage location and operating system of your game build. You also have the option of specifying a build name and version. If successful, this action creates a new build record with an unique build ID and in <code>INITIALIZED</code> status. Use the API call <a>DescribeBuild</a> to check the status of your build. A build must be in <code>READY</code> status before it can be used to create fleets to host your game.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBuildOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateBuildInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateFleet':
    post:
      operationId: CreateFleet
      description: '<p>Creates a new fleet to run your game servers. A fleet is a set of Amazon Elastic Compute Cloud (Amazon EC2) instances, each of which can run multiple server processes to host game sessions. You configure a fleet to create instances with certain hardware specifications (see <a href="http://aws.amazon.com/ec2/instance-types/">Amazon EC2 Instance Types</a> for more information), and deploy a specified game build to each instance. A newly created fleet passes through several statuses; once it reaches the <code>ACTIVE</code> status, it can begin hosting game sessions.</p> <p>To create a new fleet, provide a fleet name, an EC2 instance type, and a build ID of the game build to deploy. You can also configure the new fleet with the following settings: (1) a runtime configuration describing what server processes to run on each instance in the fleet (required to create fleet), (2) access permissions for inbound traffic, (3) fleet-wide game session protection, and (4) the location of default log files for Amazon GameLift to upload and store.</p> <p>If the CreateFleet call is successful, Amazon GameLift performs the following tasks:</p> <ul> <li> <p>Creates a fleet record and sets the status to <code>NEW</code> (followed by other statuses as the fleet is activated).</p> </li> <li> <p>Sets the fleet''s capacity to 1 "desired", which causes Amazon GameLift to start one new EC2 instance.</p> </li> <li> <p>Starts launching server processes on the instance. If the fleet is configured to run multiple server processes per instance, Amazon GameLift staggers each launch by a few seconds.</p> </li> <li> <p>Begins writing events to the fleet event log, which can be accessed in the Amazon GameLift console.</p> </li> <li> <p>Sets the fleet''s status to <code>ACTIVE</code> once one server process in the fleet is ready to host a game session.</p> </li> </ul> <p>After a fleet is created, use the following actions to change fleet properties and configuration:</p> <ul> <li> <p> <a>UpdateFleetAttributes</a> -- Update fleet metadata, including name and description.</p> </li> <li> <p> <a>UpdateFleetCapacity</a> -- Increase or decrease the number of instances you want the fleet to maintain.</p> </li> <li> <p> <a>UpdateFleetPortSettings</a> -- Change the IP address and port ranges that allow access to incoming traffic.</p> </li> <li> <p> <a>UpdateRuntimeConfiguration</a> -- Change how server processes are launched in the fleet, including launch path, launch parameters, and the number of concurrent processes.</p> </li> <li> <p> <a>PutScalingPolicy</a> -- Create or update rules that are used to set the fleet''s capacity (autoscaling).</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFleetOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '485':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateFleetInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateGameSession':
    post:
      operationId: CreateGameSession
      description: '<p>Creates a multiplayer game session for players. This action creates a game session record and assigns an available server process in the specified fleet to host the game session. A fleet must have an <code>ACTIVE</code> status before a game session can be created in it.</p> <p>To create a game session, specify either fleet ID or alias ID, and indicate a maximum number of players to allow in the game session. You can also provide a name and game-specific properties for this game session. If successful, a <a>GameSession</a> object is returned containing session properties, including an IP address. By default, newly created game sessions allow new players to join. Use <a>UpdateGameSession</a> to change the game session''s player session creation policy.</p> <p>When creating a game session on a fleet with a resource limit creation policy, the request should include a creator ID. If none is provided, Amazon GameLift does not evaluate the fleet''s resource limit creation policy.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateGameSessionOutput'
        '480':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InvalidFleetStatusException
          schema:
            $ref: '#/definitions/InvalidFleetStatusException'
        '484':
          description: TerminalRoutingStrategyException
          schema:
            $ref: '#/definitions/TerminalRoutingStrategyException'
        '485':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '486':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '487':
          description: FleetCapacityExceededException
          schema:
            $ref: '#/definitions/FleetCapacityExceededException'
        '488':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '489':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateGameSessionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreateGameSessionQueue':
    post:
      operationId: CreateGameSessionQueue
      description: '<p>Establishes a new queue for processing requests for new game sessions. A queue identifies where new game sessions can be hosted--by specifying a list of fleet destinations--and how long a request can remain in the queue waiting to be placed before timing out. Requests for new game sessions are added to a queue by calling <a>StartGameSessionPlacement</a> and referencing the queue name.</p> <p>When processing a request for a game session, Amazon GameLift tries each destination in order until it finds one with available resources to host the new game session. A queue''s default order is determined by how destinations are listed. This default order can be overridden in a game session placement request.</p> <p>To create a new queue, provide a name, timeout value, and a list of destinations. If successful, a new queue object is returned.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateGameSessionQueueOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateGameSessionQueueInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreatePlayerSession':
    post:
      operationId: CreatePlayerSession
      description: '<p>Adds a player to a game session and creates a player session record. Before a player can be added, a game session must have an <code>ACTIVE</code> status, have a creation policy of <code>ALLOW_ALL</code>, and have an open player slot. To add a group of players to a game session, use <a>CreatePlayerSessions</a>.</p> <p>To create a player session, specify a game session ID, player ID, and optionally a string of player data. If successful, the player is added to the game session and a new <a>PlayerSession</a> object is returned. Player sessions cannot be updated. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePlayerSessionOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InvalidGameSessionStatusException
          schema:
            $ref: '#/definitions/InvalidGameSessionStatusException'
        '483':
          description: GameSessionFullException
          schema:
            $ref: '#/definitions/GameSessionFullException'
        '484':
          description: TerminalRoutingStrategyException
          schema:
            $ref: '#/definitions/TerminalRoutingStrategyException'
        '485':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '486':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePlayerSessionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#CreatePlayerSessions':
    post:
      operationId: CreatePlayerSessions
      description: '<p>Adds a group of players to a game session. This action is useful with a team matching feature. Before players can be added, a game session must have an <code>ACTIVE</code> status, have a creation policy of <code>ALLOW_ALL</code>, and have an open player slot. To add a single player to a game session, use <a>CreatePlayerSession</a>.</p> <p>To create player sessions, specify a game session ID, a list of player IDs, and optionally a set of player data strings. If successful, the players are added to the game session and a set of new <a>PlayerSession</a> objects is returned. Player sessions cannot be updated.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePlayerSessionsOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: InvalidGameSessionStatusException
          schema:
            $ref: '#/definitions/InvalidGameSessionStatusException'
        '483':
          description: GameSessionFullException
          schema:
            $ref: '#/definitions/GameSessionFullException'
        '484':
          description: TerminalRoutingStrategyException
          schema:
            $ref: '#/definitions/TerminalRoutingStrategyException'
        '485':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '486':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreatePlayerSessionsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteAlias':
    post:
      operationId: DeleteAlias
      description: 'Deletes a fleet alias. This action removes all record of the alias. Game clients attempting to access a server process using the deleted alias receive an error. To delete an alias, specify the alias ID to be deleted.'
      responses:
        '200':
          description: Success
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAliasInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteBuild':
    post:
      operationId: DeleteBuild
      description: '<p>Deletes a build. This action permanently deletes the build record and any uploaded build files.</p> <p>To delete a build, specify its ID. Deleting a build does not affect the status of any active fleets using the build, but you can no longer create new fleets with the deleted build.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteBuildInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteFleet':
    post:
      operationId: DeleteFleet
      description: '<p>Deletes everything related to a fleet. Before deleting a fleet, you must set the fleet''s desired capacity to zero. See <a>UpdateFleetCapacity</a>.</p> <p>This action removes the fleet''s resources and the fleet record. Once a fleet is deleted, you can no longer use that fleet.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: InvalidFleetStatusException
          schema:
            $ref: '#/definitions/InvalidFleetStatusException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteFleetInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteGameSessionQueue':
    post:
      operationId: DeleteGameSessionQueue
      description: 'Deletes a game session queue. This action means that any <a>StartGameSessionPlacement</a> requests that reference this queue will fail. To delete a queue, specify the queue name.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteGameSessionQueueOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteGameSessionQueueInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DeleteScalingPolicy':
    post:
      operationId: DeleteScalingPolicy
      description: 'Deletes a fleet scaling policy. This action means that the policy is no longer in force and removes all record of it. To delete a scaling policy, specify both the scaling policy name and the fleet ID it is associated with.'
      responses:
        '200':
          description: Success
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteScalingPolicyInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeAlias':
    post:
      operationId: DescribeAlias
      description: '<p>Retrieves properties for a fleet alias. This operation returns all alias metadata and settings. To get just the fleet ID an alias is currently pointing to, use <a>ResolveAlias</a>. </p> <p>To get alias properties, specify the alias ID. If successful, an <a>Alias</a> object is returned.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAliasOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAliasInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeBuild':
    post:
      operationId: DescribeBuild
      description: 'Retrieves properties for a build. To get a build record, specify a build ID. If successful, an object containing the build properties is returned.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBuildOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeBuildInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeEC2InstanceLimits':
    post:
      operationId: DescribeEC2InstanceLimits
      description: '<p>Retrieves the following information for the specified EC2 instance type:</p> <ul> <li> <p>maximum number of instances allowed per AWS account (service limit)</p> </li> <li> <p>current usage level for the AWS account</p> </li> </ul> <p>Service limits vary depending on region. Available regions for Amazon GameLift can be found in the AWS Management Console for Amazon GameLift (see the drop-down list in the upper right corner).</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEC2InstanceLimitsOutput'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEC2InstanceLimitsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeFleetAttributes':
    post:
      operationId: DescribeFleetAttributes
      description: '<p>Retrieves fleet properties, including metadata, status, and configuration, for one or more fleets. You can request attributes for all fleets, or specify a list of one or more fleet IDs. When requesting multiple fleets, use the pagination parameters to retrieve results as a set of sequential pages. If successful, a <a>FleetAttributes</a> object is returned for each requested fleet ID. When specifying a list of fleet IDs, attribute objects are returned only for fleets that currently exist. </p> <note> <p>Some API actions may limit the number of fleet IDs allowed in one request. If a request exceeds this limit, the request fails and the error message includes the maximum allowed.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFleetAttributesOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeFleetAttributesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeFleetCapacity':
    post:
      operationId: DescribeFleetCapacity
      description: '<p>Retrieves the current status of fleet capacity for one or more fleets. This information includes the number of instances that have been requested for the fleet and the number currently active. You can request capacity for all fleets, or specify a list of one or more fleet IDs. When requesting multiple fleets, use the pagination parameters to retrieve results as a set of sequential pages. If successful, a <a>FleetCapacity</a> object is returned for each requested fleet ID. When specifying a list of fleet IDs, attribute objects are returned only for fleets that currently exist. </p> <note> <p>Some API actions may limit the number of fleet IDs allowed in one request. If a request exceeds this limit, the request fails and the error message includes the maximum allowed.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFleetCapacityOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeFleetCapacityInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeFleetEvents':
    post:
      operationId: DescribeFleetEvents
      description: 'Retrieves entries from the specified fleet''s event log. You can specify a time range to limit the result set. Use the pagination parameters to retrieve results as a set of sequential pages. If successful, a collection of event log entries matching the request are returned.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFleetEventsOutput'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeFleetEventsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeFleetPortSettings':
    post:
      operationId: DescribeFleetPortSettings
      description: 'Retrieves the inbound connection permissions for a fleet. Connection permissions include a range of IP addresses and port settings that incoming traffic can use to access server processes in the fleet. To get a fleet''s inbound connection permissions, specify a fleet ID. If successful, a collection of <a>IpPermission</a> objects is returned for the requested fleet ID. If the requested fleet has been deleted, the result set is empty.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFleetPortSettingsOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeFleetPortSettingsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeFleetUtilization':
    post:
      operationId: DescribeFleetUtilization
      description: '<p>Retrieves utilization statistics for one or more fleets. You can request utilization data for all fleets, or specify a list of one or more fleet IDs. When requesting multiple fleets, use the pagination parameters to retrieve results as a set of sequential pages. If successful, a <a>FleetUtilization</a> object is returned for each requested fleet ID. When specifying a list of fleet IDs, utilization objects are returned only for fleets that currently exist. </p> <note> <p>Some API actions may limit the number of fleet IDs allowed in one request. If a request exceeds this limit, the request fails and the error message includes the maximum allowed.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFleetUtilizationOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeFleetUtilizationInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeGameSessionDetails':
    post:
      operationId: DescribeGameSessionDetails
      description: '<p>Retrieves properties, including the protection policy in force, for one or more game sessions. This action can be used in several ways: (1) provide a <code>GameSessionId</code> to request details for a specific game session; (2) provide either a <code>FleetId</code> or an <code>AliasId</code> to request properties for all game sessions running on a fleet. </p> <p>To get game session record(s), specify just one of the following: game session ID, fleet ID, or alias ID. You can filter this request by game session status. Use the pagination parameters to retrieve results as a set of sequential pages. If successful, a <a>GameSessionDetail</a> object is returned for each session matching the request.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeGameSessionDetailsOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: TerminalRoutingStrategyException
          schema:
            $ref: '#/definitions/TerminalRoutingStrategyException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeGameSessionDetailsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeGameSessionPlacement':
    post:
      operationId: DescribeGameSessionPlacement
      description: 'Retrieves properties and current status of a game session placement request. To get game session placement details, specify the placement ID. If successful, a <a>GameSessionPlacement</a> object is returned.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeGameSessionPlacementOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeGameSessionPlacementInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeGameSessionQueues':
    post:
      operationId: DescribeGameSessionQueues
      description: 'Retrieves the properties for one or more game session queues. When requesting multiple queues, use the pagination parameters to retrieve results as a set of sequential pages. If successful, a <a>GameSessionQueue</a> object is returned for each requested queue. When specifying a list of queues, objects are returned only for queues that currently exist in the region.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeGameSessionQueuesOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeGameSessionQueuesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeGameSessions':
    post:
      operationId: DescribeGameSessions
      description: '<p>Retrieves a set of one or more game sessions. Request a specific game session or request all game sessions on a fleet. Alternatively, use <a>SearchGameSessions</a> to request a set of active game sessions that are filtered by certain criteria. To retrieve protection policy settings for game sessions, use <a>DescribeGameSessionDetails</a>.</p> <p>To get game sessions, specify one of the following: game session ID, fleet ID, or alias ID. You can filter this request by game session status. Use the pagination parameters to retrieve results as a set of sequential pages. If successful, a <a>GameSession</a> object is returned for each game session matching the request.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeGameSessionsOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: TerminalRoutingStrategyException
          schema:
            $ref: '#/definitions/TerminalRoutingStrategyException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeGameSessionsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeInstances':
    post:
      operationId: DescribeInstances
      description: '<p>Retrieves information about a fleet''s instances, including instance IDs. Use this action to get details on all instances in the fleet or get details on one specific instance.</p> <p>To get a specific instance, specify fleet ID and instance ID. To get all instances in a fleet, specify a fleet ID only. Use the pagination parameters to retrieve results as a set of sequential pages. If successful, an <a>Instance</a> object is returned for each result.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInstancesOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeInstancesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribePlayerSessions':
    post:
      operationId: DescribePlayerSessions
      description: '<p>Retrieves properties for one or more player sessions. This action can be used in several ways: (1) provide a <code>PlayerSessionId</code> parameter to request properties for a specific player session; (2) provide a <code>GameSessionId</code> parameter to request properties for all player sessions in the specified game session; (3) provide a <code>PlayerId</code> parameter to request properties for all player sessions of a specified player. </p> <p>To get game session record(s), specify only one of the following: a player session ID, a game session ID, or a player ID. You can filter this request by player session status. Use the pagination parameters to retrieve results as a set of sequential pages. If successful, a <a>PlayerSession</a> object is returned for each session matching the request.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribePlayerSessionsOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribePlayerSessionsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeRuntimeConfiguration':
    post:
      operationId: DescribeRuntimeConfiguration
      description: Retrieves the current runtime configuration for the specified fleet. The runtime configuration tells Amazon GameLift how to launch server processes on instances in the fleet.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRuntimeConfigurationOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRuntimeConfigurationInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#DescribeScalingPolicies':
    post:
      operationId: DescribeScalingPolicies
      description: '<p>Retrieves all scaling policies applied to a fleet.</p> <p>To get a fleet''s scaling policies, specify the fleet ID. You can filter this request by policy status, such as to retrieve only active scaling policies. Use the pagination parameters to retrieve results as a set of sequential pages. If successful, set of <a>ScalingPolicy</a> objects is returned for the fleet.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeScalingPoliciesOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeScalingPoliciesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetGameSessionLogUrl':
    post:
      operationId: GetGameSessionLogUrl
      description: '<p>Retrieves the location of stored game session logs for a specified game session. When a game session is terminated, Amazon GameLift automatically stores the logs in Amazon S3. Use this URL to download the logs.</p> <note> <p>See the <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_gamelift">AWS Service Limits</a> page for maximum log file sizes. Log files that exceed this limit are not saved.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetGameSessionLogUrlOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetGameSessionLogUrlInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#GetInstanceAccess':
    post:
      operationId: GetInstanceAccess
      description: '<p>Requests remote access to a fleet instance. Remote access is useful for debugging, gathering benchmarking data, or watching activity in real time. </p> <p>Access requires credentials that match the operating system of the instance. For a Windows instance, Amazon GameLift returns a user name and password as strings for use with a Windows Remote Desktop client. For a Linux instance, Amazon GameLift returns a user name and RSA private key, also as strings, for use with an SSH client. The private key must be saved in the proper format to a <code>.pem</code> file before using. If you''re making this request using the AWS CLI, saving the secret can be handled as part of the GetInstanceAccess request. (See the example later in this topic). For more information on remote access, see <a href="http://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-remote-access.html">Remotely Accessing an Instance</a>.</p> <p>To request access to a specific instance, specify the IDs of the instance and the fleet it belongs to. If successful, an <a>InstanceAccess</a> object is returned containing the instance''s IP address and a set of credentials.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInstanceAccessOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetInstanceAccessInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListAliases':
    post:
      operationId: ListAliases
      description: <p>Retrieves a collection of alias records for this AWS account. You can filter the result set by alias name and/or routing strategy type. Use the pagination parameters to retrieve results in sequential pages.</p> <note> <p>Aliases are not listed in any particular order.</p> </note>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAliasesOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAliasesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListBuilds':
    post:
      operationId: ListBuilds
      description: <p>Retrieves build records for all builds associated with the AWS account in use. You can limit results to builds that are in a specific status by using the <code>Status</code> parameter. Use the pagination parameters to retrieve results in a set of sequential pages. </p> <note> <p>Build records are not listed in any particular order.</p> </note>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBuildsOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListBuildsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ListFleets':
    post:
      operationId: ListFleets
      description: <p>Retrieves a collection of fleet records for this AWS account. You can filter the result set by build ID. Use the pagination parameters to retrieve results in sequential pages.</p> <note> <p>Fleet records are not listed in any particular order.</p> </note>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFleetsOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListFleetsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#PutScalingPolicy':
    post:
      operationId: PutScalingPolicy
      description: '<p>Creates or updates a scaling policy for a fleet. An active scaling policy prompts Amazon GameLift to track a certain metric for a fleet and automatically change the fleet''s capacity in specific circumstances. Each scaling policy contains one rule statement. Fleets can have multiple scaling policies in force simultaneously.</p> <p>A scaling policy rule statement has the following structure:</p> <p>If <code>[MetricName]</code> is <code>[ComparisonOperator]</code> <code>[Threshold]</code> for <code>[EvaluationPeriods]</code> minutes, then <code>[ScalingAdjustmentType]</code> to/by <code>[ScalingAdjustment]</code>.</p> <p>For example, this policy: "If the number of idle instances exceeds 20 for more than 15 minutes, then reduce the fleet capacity by 10 instances" could be implemented as the following rule statement:</p> <p>If [IdleInstances] is [GreaterThanOrEqualToThreshold] [20] for [15] minutes, then [ChangeInCapacity] by [-10].</p> <p>To create or update a scaling policy, specify a unique combination of name and fleet ID, and set the rule values. All parameters for this action are required. If successful, the policy name is returned. Scaling policies cannot be suspended or made inactive. To stop enforcing a scaling policy, call <a>DeleteScalingPolicy</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutScalingPolicyOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutScalingPolicyInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#RequestUploadCredentials':
    post:
      operationId: RequestUploadCredentials
      description: ' <i>This API call is not currently in use. </i> Retrieves a fresh set of upload credentials and the assigned Amazon S3 storage location for a specific build. Valid credentials are required to upload your game build files to Amazon S3.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RequestUploadCredentialsOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RequestUploadCredentialsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#ResolveAlias':
    post:
      operationId: ResolveAlias
      description: Retrieves the fleet ID that a specified alias is currently pointing to.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResolveAliasOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: TerminalRoutingStrategyException
          schema:
            $ref: '#/definitions/TerminalRoutingStrategyException'
        '484':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ResolveAliasInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#SearchGameSessions':
    post:
      operationId: SearchGameSessions
      description: '<p>Retrieves a set of game sessions that match a set of search criteria and sorts them in a specified order. Currently a game session search is limited to a single fleet. Search results include only game sessions that are in <code>ACTIVE</code> status. If you need to retrieve game sessions with a status other than active, use <a>DescribeGameSessions</a>. If you need to retrieve the protection policy for each game session, use <a>DescribeGameSessionDetails</a>.</p> <p>You can search or sort by the following game session attributes:</p> <ul> <li> <p> <b>gameSessionId</b> -- ID value assigned to a game session. This unique value is returned in a <a>GameSession</a> object when a new game session is created. </p> </li> <li> <p> <b>gameSessionName</b> -- Name assigned to a game session. This value is set when requesting a new game session with <a>CreateGameSession</a> or updating with <a>UpdateGameSession</a>. Game session names do not need to be unique to a game session.</p> </li> <li> <p> <b>creationTimeMillis</b> -- Value indicating when a game session was created. It is expressed in Unix time as milliseconds.</p> </li> <li> <p> <b>playerSessionCount</b> -- Number of players currently connected to a game session. This value changes rapidly as players join the session or drop out.</p> </li> <li> <p> <b>maximumSessions</b> -- Maximum number of player sessions allowed for a game session. This value is set when requesting a new game session with <a>CreateGameSession</a> or updating with <a>UpdateGameSession</a>.</p> </li> <li> <p> <b>hasAvailablePlayerSessions</b> -- Boolean value indicating whether or not a game session has reached its maximum number of players. When searching with this attribute, the search value must be <code>true</code> or <code>false</code>. It is highly recommended that all search requests include this filter attribute to optimize search performance and return only sessions that players can join. </p> </li> </ul> <p>To search or sort, specify either a fleet ID or an alias ID, and provide a search filter expression, a sort expression, or both. Use the pagination parameters to retrieve results as a set of sequential pages. If successful, a collection of <a>GameSession</a> objects matching the request is returned.</p> <note> <p>Returned values for <code>playerSessionCount</code> and <code>hasAvailablePlayerSessions</code> change quickly as players join sessions and others drop out. Results should be considered a snapshot in time. Be sure to refresh search results often, and handle sessions that fill up before a player can join. </p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchGameSessionsOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: TerminalRoutingStrategyException
          schema:
            $ref: '#/definitions/TerminalRoutingStrategyException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SearchGameSessionsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StartGameSessionPlacement':
    post:
      operationId: StartGameSessionPlacement
      description: '<p>Places a request for a new game session in a queue (see <a>CreateGameSessionQueue</a>). When processing a placement request, Amazon GameLift attempts to create a new game session on one of the fleets associated with the queue. If no resources are available, Amazon GameLift tries again with another and so on until resources are found or the placement request times out. A game session placement request can also request player sessions. When a new game session is successfully created, Amazon GameLift creates a player session for each player included in the request.</p> <p>When placing a game session, by default Amazon GameLift tries each fleet in the order they are listed in the queue configuration. Ideally, a queue''s destinations are listed in preference order. Alternatively, when requesting a game session with players, you can also provide latency data for each player in relevant regions. Latency data indicates the performance lag a player experiences when connected to a fleet in the region. Amazon GameLift uses latency data to reorder the list of destinations to place the game session in a region with minimal lag. If latency data is provided for multiple players, Amazon GameLift calculates each region''s average lag for all players and reorders to get the best game play across all players. </p> <p>To place a new game session request, specify the queue name and a set of game session properties and settings. Also provide a unique ID (such as a UUID) for the placement. You''ll use this ID to track the status of the placement request. Optionally, provide a set of IDs and player data for each player you want to join to the new game session. To optimize game play for the players, also provide latency data for all players. If successful, a new game session placement is created. To track the status of a placement request, call <a>DescribeGameSessionPlacement</a> and check the request''s status. If the status is Fulfilled, a new game session has been created and a game session ARN and region are referenced. If the placement request times out, you have the option of resubmitting the request or retrying it with a different queue. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartGameSessionPlacementOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartGameSessionPlacementInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#StopGameSessionPlacement':
    post:
      operationId: StopGameSessionPlacement
      description: 'Cancels a game session placement that is in Pending status. To stop a placement, provide the placement ID values. If successful, the placement is moved to Cancelled status.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopGameSessionPlacementOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopGameSessionPlacementInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateAlias':
    post:
      operationId: UpdateAlias
      description: 'Updates properties for a fleet alias. To update properties, specify the alias ID to be updated and provide the information to be changed. To reassign an alias to another fleet, provide an updated routing strategy. If successful, the updated alias record is returned.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateAliasOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateAliasInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateBuild':
    post:
      operationId: UpdateBuild
      description: 'Updates metadata in a build record, including the build name and version. To update the metadata, specify the build ID to update and provide the new values. If successful, a build object containing the updated metadata is returned.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateBuildOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateBuildInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateFleetAttributes':
    post:
      operationId: UpdateFleetAttributes
      description: 'Updates fleet properties, including name and description, for a fleet. To update metadata, specify the fleet ID and the property values you want to change. If successful, the fleet ID for the updated fleet is returned.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFleetAttributesOutput'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: InvalidFleetStatusException
          schema:
            $ref: '#/definitions/InvalidFleetStatusException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '485':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '486':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFleetAttributesInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateFleetCapacity':
    post:
      operationId: UpdateFleetCapacity
      description: '<p>Updates capacity settings for a fleet. Use this action to specify the number of EC2 instances (hosts) that you want this fleet to contain. Before calling this action, you may want to call <a>DescribeEC2InstanceLimits</a> to get the maximum capacity based on the fleet''s EC2 instance type.</p> <p>If you''re using autoscaling (see <a>PutScalingPolicy</a>), you may want to specify a minimum and/or maximum capacity. If you don''t provide these, autoscaling can set capacity anywhere between zero and the <a href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_gamelift">service limits</a>.</p> <p>To update fleet capacity, specify the fleet ID and the number of instances you want the fleet to host. If successful, Amazon GameLift starts or terminates instances so that the fleet''s active instance count matches the desired instance count. You can view a fleet''s current capacity information by calling <a>DescribeFleetCapacity</a>. If the desired instance count is higher than the instance type''s limit, the "Limit Exceeded" exception occurs.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFleetCapacityOutput'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: InvalidFleetStatusException
          schema:
            $ref: '#/definitions/InvalidFleetStatusException'
        '484':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '485':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '486':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFleetCapacityInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateFleetPortSettings':
    post:
      operationId: UpdateFleetPortSettings
      description: 'Updates port settings for a fleet. To update settings, specify the fleet ID to be updated and list the permissions you want to update. List the permissions you want to add in <code>InboundPermissionAuthorizations</code>, and permissions you want to remove in <code>InboundPermissionRevocations</code>. Permissions to be removed must match existing fleet permissions. If successful, the fleet ID for the updated fleet is returned.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateFleetPortSettingsOutput'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: InvalidFleetStatusException
          schema:
            $ref: '#/definitions/InvalidFleetStatusException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '485':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '486':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateFleetPortSettingsInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateGameSession':
    post:
      operationId: UpdateGameSession
      description: 'Updates game session properties. This includes the session name, maximum player count, protection policy, which controls whether or not an active game session can be terminated during a scale-down event, and the player session creation policy, which controls whether or not new players can join the session. To update a game session, specify the game session ID and the values you want to change. If successful, an updated <a>GameSession</a> object is returned. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateGameSessionOutput'
        '480':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: InvalidGameSessionStatusException
          schema:
            $ref: '#/definitions/InvalidGameSessionStatusException'
        '485':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateGameSessionInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateGameSessionQueue':
    post:
      operationId: UpdateGameSessionQueue
      description: 'Updates settings for a game session queue, which determines how new game session requests in the queue are processed. To update settings, specify the queue name to be updated and provide the new settings. When updating destinations, provide a complete list of destinations.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateGameSessionQueueOutput'
        '480':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateGameSessionQueueInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#UpdateRuntimeConfiguration':
    post:
      operationId: UpdateRuntimeConfiguration
      description: '<p>Updates the current runtime configuration for the specified fleet, which tells Amazon GameLift how to launch server processes on instances in the fleet. You can update a fleet''s runtime configuration at any time after the fleet is created; it does not need to be in an <code>ACTIVE</code> status.</p> <p>To update runtime configuration, specify the fleet ID and provide a <code>RuntimeConfiguration</code> object with the updated collection of server process configurations.</p> <p>Each instance in a Amazon GameLift fleet checks regularly for an updated runtime configuration and changes how it launches server processes to comply with the latest version. Existing server processes are not affected by the update; they continue to run until they end, while Amazon GameLift simply adds new server processes to fit the current runtime configuration. As a result, the runtime configuration changes are applied gradually as existing processes shut down and new processes are launched in Amazon GameLift''s normal process recycling activity.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateRuntimeConfigurationOutput'
        '480':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: InternalServiceException
          schema:
            $ref: '#/definitions/InternalServiceException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidFleetStatusException
          schema:
            $ref: '#/definitions/InvalidFleetStatusException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateRuntimeConfigurationInput'
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  Alias:
    type: object
    properties:
      AliasId:
        $ref: '#/definitions/AliasId'
        description: Unique identifier for an alias; alias IDs are unique within a region.
      Name:
        $ref: '#/definitions/NonBlankAndLengthConstraintString'
        description: Descriptive label that is associated with an alias. Alias names do not need to be unique.
      AliasArn:
        $ref: '#/definitions/ArnStringModel'
        description: Unique identifier for an alias; alias ARNs are unique across all regions.
      Description:
        $ref: '#/definitions/FreeText'
        description: Human-readable description of an alias.
      RoutingStrategy:
        $ref: '#/definitions/RoutingStrategy'
        description: 'Alias configuration for the alias, including routing type and settings.'
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: Time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
      LastUpdatedTime:
        $ref: '#/definitions/Timestamp'
        description: Time stamp indicating when this data object was last modified. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
    description: '<p>Properties describing a fleet alias.</p> <p>Alias-related operations include:</p> <ul> <li> <p> <a>CreateAlias</a> </p> </li> <li> <p> <a>ListAliases</a> </p> </li> <li> <p> <a>DescribeAlias</a> </p> </li> <li> <p> <a>UpdateAlias</a> </p> </li> <li> <p> <a>DeleteAlias</a> </p> </li> </ul>'
  AliasId:
    type: string
    pattern: ^alias-\S+
  AliasList:
    type: array
    items:
      $ref: '#/definitions/Alias'
  ArnStringModel:
    type: string
    pattern: '[a-zA-Z0-9:/-]+'
    minLength: 1
    maxLength: 256
  AwsCredentials:
    type: object
    properties:
      AccessKeyId:
        $ref: '#/definitions/NonEmptyString'
        description: Access key for an AWS account.
      SecretAccessKey:
        $ref: '#/definitions/NonEmptyString'
        description: Secret key for an AWS account.
      SessionToken:
        $ref: '#/definitions/NonEmptyString'
        description: Token specific to a build ID.
    description: 'AWS access credentials sometimes used for uploading game build files to Amazon GameLift. They are valid for a limited time. If they expire before you upload your game build, get a new set by calling <a>RequestUploadCredentials</a>.'
  Build:
    type: object
    properties:
      BuildId:
        $ref: '#/definitions/BuildId'
        description: Unique identifier for a build.
      Name:
        $ref: '#/definitions/FreeText'
        description: Descriptive label that is associated with a build. Build names do not need to be unique. It can be set using <a>CreateBuild</a> or <a>UpdateBuild</a>.
      Version:
        $ref: '#/definitions/FreeText'
        description: Version that is associated with this build. Version strings do not need to be unique. This value can be set using <a>CreateBuild</a> or <a>UpdateBuild</a>.
      Status:
        $ref: '#/definitions/BuildStatus'
        description: '<p>Current status of the build.</p> <p>Possible build statuses include the following:</p> <ul> <li> <p> <b>INITIALIZED</b> – A new build has been defined, but no files have been uploaded. You cannot create fleets for builds that are in this status. When a build is successfully created, the build status is set to this value. </p> </li> <li> <p> <b>READY</b> – The game build has been successfully uploaded. You can now create new fleets for this build.</p> </li> <li> <p> <b>FAILED</b> – The game build upload failed. You cannot create new fleets for this build. </p> </li> </ul>'
      SizeOnDisk:
        $ref: '#/definitions/PositiveLong'
        description: 'File size of the uploaded game build, expressed in bytes. When the build status is <code>INITIALIZED</code>, this value is 0.'
      OperatingSystem:
        $ref: '#/definitions/OperatingSystem'
        description: Operating system that the game server binaries are built to run on. This value determines the type of fleet resources that you can use for this build.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: Time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
    description: '<p>Properties describing a game build.</p> <p>Build-related operations include:</p> <ul> <li> <p> <a>CreateBuild</a> </p> </li> <li> <p> <a>ListBuilds</a> </p> </li> <li> <p> <a>DescribeBuild</a> </p> </li> <li> <p> <a>UpdateBuild</a> </p> </li> <li> <p> <a>DeleteBuild</a> </p> </li> </ul>'
  BuildId:
    type: string
    pattern: ^build-\S+
  BuildList:
    type: array
    items:
      $ref: '#/definitions/Build'
  BuildStatus:
    type: string
    enum:
      - INITIALIZED
      - READY
      - FAILED
  ComparisonOperatorType:
    type: string
    enum:
      - GreaterThanOrEqualToThreshold
      - GreaterThanThreshold
      - LessThanThreshold
      - LessThanOrEqualToThreshold
  ConflictException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/NonEmptyString'
    description: The requested operation would cause a conflict with the current state of a service resource associated with the request. Resolve the conflict before retrying this request.
  CreateAliasInput:
    type: object
    required:
      - Name
      - RoutingStrategy
    properties:
      Name:
        $ref: '#/definitions/NonBlankAndLengthConstraintString'
        description: Descriptive label that is associated with an alias. Alias names do not need to be unique.
      Description:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Human-readable description of an alias.
      RoutingStrategy:
        $ref: '#/definitions/RoutingStrategy'
        description: Object that specifies the fleet and routing type to use for the alias.
    description: Represents the input for a request action.
  CreateAliasOutput:
    type: object
    properties:
      Alias:
        $ref: '#/definitions/Alias'
        description: Object that describes the newly created alias record.
    description: Represents the returned data in response to a request action.
  CreateBuildInput:
    type: object
    properties:
      Name:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Descriptive label that is associated with a build. Build names do not need to be unique. You can use <a>UpdateBuild</a> to change this value later. '
      Version:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Version that is associated with this build. Version strings do not need to be unique. You can use <a>UpdateBuild</a> to change this value later. '
      StorageLocation:
        $ref: '#/definitions/S3Location'
        description: 'Amazon S3 location of the game build files to be uploaded. The S3 bucket must be owned by the same AWS account that you''re using to manage Amazon GameLift. It also must in the same region that you want to create a new build in. Before calling <code>CreateBuild</code> with this location, you must allow Amazon GameLift to access your Amazon S3 bucket (see <a href="http://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-cli-uploading.html#gamelift-build-cli-uploading-create-build">Create a Build with Files in Amazon S3</a>).'
      OperatingSystem:
        $ref: '#/definitions/OperatingSystem'
        description: 'Operating system that the game server binaries are built to run on. This value determines the type of fleet resources that you can use for this build. If your game build contains multiple executables, they all must run on the same operating system.'
    description: Represents the input for a request action.
  CreateBuildOutput:
    type: object
    properties:
      Build:
        $ref: '#/definitions/Build'
        description: 'The newly created build record, including a unique build ID and status. '
      UploadCredentials:
        $ref: '#/definitions/AwsCredentials'
        description: This element is not currently in use.
      StorageLocation:
        $ref: '#/definitions/S3Location'
        description: Amazon S3 location specified in the request.
    description: Represents the returned data in response to a request action.
  CreateFleetInput:
    type: object
    required:
      - Name
      - BuildId
      - EC2InstanceType
    properties:
      Name:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Descriptive label that is associated with a fleet. Fleet names do not need to be unique.
      Description:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Human-readable description of a fleet.
      BuildId:
        $ref: '#/definitions/BuildId'
        description: Unique identifier for a build to be deployed on the new fleet. The build must have been successfully uploaded to Amazon GameLift and be in a <code>READY</code> status. This fleet setting cannot be changed once the fleet is created.
      ServerLaunchPath:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'This parameter is no longer used. Instead, specify a server launch path using the <code>RuntimeConfiguration</code> parameter. (Requests that specify a server launch path and launch parameters instead of a runtime configuration will continue to work.)'
      ServerLaunchParameters:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'This parameter is no longer used. Instead, specify server launch parameters in the <code>RuntimeConfiguration</code> parameter. (Requests that specify a server launch path and launch parameters instead of a runtime configuration will continue to work.)'
      LogPaths:
        $ref: '#/definitions/StringList'
        description: 'This parameter is no longer used. Instead, to specify where Amazon GameLift should store log files once a server process shuts down, use the Amazon GameLift server API <code>ProcessReady()</code> and specify one or more directory paths in <code>logParameters</code>. See more information in the <a href="http://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api-ref.html#gamelift-sdk-server-api-ref-dataypes-process">Server API Reference</a>. '
      EC2InstanceType:
        $ref: '#/definitions/EC2InstanceType'
        description: 'Name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See <a href="http://aws.amazon.com/ec2/instance-types/">Amazon EC2 Instance Types</a> for detailed descriptions.'
      EC2InboundPermissions:
        $ref: '#/definitions/IpPermissionsList'
        description: 'Range of IP addresses and port settings that permit inbound traffic to access server processes running on the fleet. If no inbound permissions are set, including both IP address range and port range, the server processes in the fleet cannot accept connections. You can specify one or more sets of permissions for a fleet.'
      NewGameSessionProtectionPolicy:
        $ref: '#/definitions/ProtectionPolicy'
        description: '<p>Game session protection policy to apply to all instances in this fleet. If this parameter is not set, instances in this fleet default to no protection. You can change a fleet''s protection policy using UpdateFleetAttributes, but this change will only affect sessions created after the policy change. You can also set protection for individual instances using <a>UpdateGameSession</a>.</p> <ul> <li> <p> <b>NoProtection</b> – The game session can be terminated during a scale-down event.</p> </li> <li> <p> <b>FullProtection</b> – If the game session is in an <code>ACTIVE</code> status, it cannot be terminated during a scale-down event.</p> </li> </ul>'
      RuntimeConfiguration:
        $ref: '#/definitions/RuntimeConfiguration'
        description: 'Instructions for launching server processes on each instance in the fleet. The runtime configuration for a fleet has a collection of server process configurations, one for each type of server process to run on an instance. A server process configuration specifies the location of the server executable, launch parameters, and the number of concurrent processes with that configuration to maintain on each instance. A CreateFleet request must include a runtime configuration with at least one server process configuration; otherwise the request will fail with an invalid request exception. (This parameter replaces the parameters <code>ServerLaunchPath</code> and <code>ServerLaunchParameters</code>; requests that contain values for these parameters instead of a runtime configuration will continue to work.) '
      ResourceCreationLimitPolicy:
        $ref: '#/definitions/ResourceCreationLimitPolicy'
        description: Policy that limits the number of game sessions an individual player can create over a span of time for this fleet.
    description: Represents the input for a request action.
  CreateFleetOutput:
    type: object
    properties:
      FleetAttributes:
        $ref: '#/definitions/FleetAttributes'
        description: Properties for the newly created fleet.
    description: Represents the returned data in response to a request action.
  CreateGameSessionInput:
    type: object
    required:
      - MaximumPlayerSessionCount
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: 'Unique identifier for a fleet to create a game session in. Each request must reference either a fleet ID or alias ID, but not both.'
      AliasId:
        $ref: '#/definitions/AliasId'
        description: 'Unique identifier for an alias associated with the fleet to create a game session in. Each request must reference either a fleet ID or alias ID, but not both.'
      MaximumPlayerSessionCount:
        $ref: '#/definitions/WholeNumber'
        description: Maximum number of players that can be connected simultaneously to the game session.
      Name:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Descriptive label that is associated with a game session. Session names do not need to be unique.
      GameProperties:
        $ref: '#/definitions/GamePropertyList'
        description: Set of developer-defined properties for a game session. These properties are passed to the server process hosting the game session.
      CreatorId:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: $player-id; or entity creating the game session. This ID is used to enforce a resource protection policy (if one exists) that limits the number of concurrent active game sessions one player can have.
      GameSessionId:
        $ref: '#/definitions/IdStringModel'
        description: 'Custom string to include in the game session ID, with a maximum length of 48 characters. A game session ID has the following format: "arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet ID&gt;/&lt;game session ID&gt;". If provided, the custom string is used for the game session ID string. This value cannot be updated once a game session is created.'
    description: Represents the input for a request action.
  CreateGameSessionOutput:
    type: object
    properties:
      GameSession:
        $ref: '#/definitions/GameSession'
        description: Object that describes the newly created game session record.
    description: Represents the returned data in response to a request action.
  CreateGameSessionQueueInput:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/GameSessionQueueName'
        description: Descriptive label that is associated with queue. Queue names must be unique within each region.
      TimeoutInSeconds:
        $ref: '#/definitions/WholeNumber'
        description: 'Maximum time, in seconds, that a new game session placement request remains in the queue. When a request exceeds this time, the game session placement changes to a TIMED_OUT status.'
      Destinations:
        $ref: '#/definitions/GameSessionQueueDestinationList'
        description: List of fleets that can be used to fulfill game session placement requests in the queue. Fleets are identified by either a fleet ARN or a fleet alias ARN. Destinations are listed in default preference order.
  CreateGameSessionQueueOutput:
    type: object
    properties:
      GameSessionQueue:
        $ref: '#/definitions/GameSessionQueue'
        description: Object that describes the newly created game session queue.
  CreatePlayerSessionInput:
    type: object
    required:
      - GameSessionId
      - PlayerId
    properties:
      GameSessionId:
        $ref: '#/definitions/ArnStringModel'
        description: Unique identifier for the game session to add a player to.
      PlayerId:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Unique identifier for a player. Player IDs are developer-defined.
      PlayerData:
        $ref: '#/definitions/PlayerData'
        description: 'Developer-defined information related to a player. Amazon GameLift does not use this data, so it can be formatted as needed for use in the game.'
    description: Represents the input for a request action.
  CreatePlayerSessionOutput:
    type: object
    properties:
      PlayerSession:
        $ref: '#/definitions/PlayerSession'
        description: Object that describes the newly created player session record.
    description: Represents the returned data in response to a request action.
  CreatePlayerSessionsInput:
    type: object
    required:
      - GameSessionId
      - PlayerIds
    properties:
      GameSessionId:
        $ref: '#/definitions/ArnStringModel'
        description: Unique identifier for the game session to add players to.
      PlayerIds:
        $ref: '#/definitions/PlayerIdList'
        description: List of unique identifiers for the players to be added.
      PlayerDataMap:
        $ref: '#/definitions/PlayerDataMap'
        description: 'Map of string pairs, each specifying a player ID and a set of developer-defined information related to the player. Amazon GameLift does not use this data, so it can be formatted as needed for use in the game. Player data strings for player IDs not included in the <code>PlayerIds</code> parameter are ignored. '
    description: Represents the input for a request action.
  CreatePlayerSessionsOutput:
    type: object
    properties:
      PlayerSessions:
        $ref: '#/definitions/PlayerSessionList'
        description: Collection of player session objects created for the added players.
    description: Represents the returned data in response to a request action.
  DeleteAliasInput:
    type: object
    required:
      - AliasId
    properties:
      AliasId:
        $ref: '#/definitions/AliasId'
        description: Unique identifier for a fleet alias. Specify the alias you want to delete.
    description: Represents the input for a request action.
  DeleteBuildInput:
    type: object
    required:
      - BuildId
    properties:
      BuildId:
        $ref: '#/definitions/BuildId'
        description: Unique identifier for a build to delete.
    description: Represents the input for a request action.
  DeleteFleetInput:
    type: object
    required:
      - FleetId
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet to be deleted.
    description: Represents the input for a request action.
  DeleteGameSessionQueueInput:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/GameSessionQueueName'
        description: Descriptive label that is associated with queue. Queue names must be unique within each region.
  DeleteGameSessionQueueOutput:
    type: object
    properties: {}
  DeleteScalingPolicyInput:
    type: object
    required:
      - Name
      - FleetId
    properties:
      Name:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Descriptive label that is associated with a scaling policy. Policy names do not need to be unique.
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet to be deleted.
    description: Represents the input for a request action.
  DescribeAliasInput:
    type: object
    required:
      - AliasId
    properties:
      AliasId:
        $ref: '#/definitions/AliasId'
        description: Unique identifier for a fleet alias. Specify the alias you want to retrieve.
    description: Represents the input for a request action.
  DescribeAliasOutput:
    type: object
    properties:
      Alias:
        $ref: '#/definitions/Alias'
        description: Object that contains the requested alias.
    description: Represents the returned data in response to a request action.
  DescribeBuildInput:
    type: object
    required:
      - BuildId
    properties:
      BuildId:
        $ref: '#/definitions/BuildId'
        description: Unique identifier for a build to retrieve properties for.
    description: Represents the input for a request action.
  DescribeBuildOutput:
    type: object
    properties:
      Build:
        $ref: '#/definitions/Build'
        description: Set of properties describing the requested build.
    description: Represents the returned data in response to a request action.
  DescribeEC2InstanceLimitsInput:
    type: object
    properties:
      EC2InstanceType:
        $ref: '#/definitions/EC2InstanceType'
        description: 'Name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See <a href="http://aws.amazon.com/ec2/instance-types/">Amazon EC2 Instance Types</a> for detailed descriptions. Leave this parameter blank to retrieve limits for all types.'
    description: Represents the input for a request action.
  DescribeEC2InstanceLimitsOutput:
    type: object
    properties:
      EC2InstanceLimits:
        $ref: '#/definitions/EC2InstanceLimitList'
        description: Object that contains the maximum number of instances for the specified instance type.
    description: Represents the returned data in response to a request action.
  DescribeFleetAttributesInput:
    type: object
    properties:
      FleetIds:
        $ref: '#/definitions/FleetIdList'
        description: 'Unique identifier for a fleet(s) to retrieve attributes for. To request attributes for all fleets, leave this parameter empty.'
      Limit:
        $ref: '#/definitions/PositiveInteger'
        description: Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages. This parameter is ignored when the request specifies one or a list of fleet IDs.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value. This parameter is ignored when the request specifies one or a list of fleet IDs.'
    description: Represents the input for a request action.
  DescribeFleetAttributesOutput:
    type: object
    properties:
      FleetAttributes:
        $ref: '#/definitions/FleetAttributesList'
        description: Collection of objects containing attribute metadata for each requested fleet ID.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.'
    description: Represents the returned data in response to a request action.
  DescribeFleetCapacityInput:
    type: object
    properties:
      FleetIds:
        $ref: '#/definitions/FleetIdList'
        description: 'Unique identifier for a fleet(s) to retrieve capacity information for. To request capacity information for all fleets, leave this parameter empty.'
      Limit:
        $ref: '#/definitions/PositiveInteger'
        description: Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages. This parameter is ignored when the request specifies one or a list of fleet IDs.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value. This parameter is ignored when the request specifies one or a list of fleet IDs.'
    description: Represents the input for a request action.
  DescribeFleetCapacityOutput:
    type: object
    properties:
      FleetCapacity:
        $ref: '#/definitions/FleetCapacityList'
        description: Collection of objects containing capacity information for each requested fleet ID. Leave this parameter empty to retrieve capacity information for all fleets.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.'
    description: Represents the returned data in response to a request action.
  DescribeFleetEventsInput:
    type: object
    required:
      - FleetId
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet to get event logs for.
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: 'Earliest date to retrieve event logs for. If no start time is specified, this call returns entries starting from when the fleet was created to the specified end time. Format is a number expressed in Unix time as milliseconds (ex: "1469498468.057").'
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: 'Most recent date to retrieve event logs for. If no end time is specified, this call returns entries from the specified start time up to the present. Format is a number expressed in Unix time as milliseconds (ex: "1469498468.057").'
      Limit:
        $ref: '#/definitions/PositiveInteger'
        description: Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.'
    description: Represents the input for a request action.
  DescribeFleetEventsOutput:
    type: object
    properties:
      Events:
        $ref: '#/definitions/EventList'
        description: Collection of objects containing event log entries for the specified fleet.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.'
    description: Represents the returned data in response to a request action.
  DescribeFleetPortSettingsInput:
    type: object
    required:
      - FleetId
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet to retrieve port settings for.
    description: Represents the input for a request action.
  DescribeFleetPortSettingsOutput:
    type: object
    properties:
      InboundPermissions:
        $ref: '#/definitions/IpPermissionsList'
        description: Object that contains port settings for the requested fleet ID.
    description: Represents the returned data in response to a request action.
  DescribeFleetUtilizationInput:
    type: object
    properties:
      FleetIds:
        $ref: '#/definitions/FleetIdList'
        description: 'Unique identifier for a fleet(s) to retrieve utilization data for. To request utilization data for all fleets, leave this parameter empty.'
      Limit:
        $ref: '#/definitions/PositiveInteger'
        description: Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages. This parameter is ignored when the request specifies one or a list of fleet IDs.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value. This parameter is ignored when the request specifies one or a list of fleet IDs.'
    description: Represents the input for a request action.
  DescribeFleetUtilizationOutput:
    type: object
    properties:
      FleetUtilization:
        $ref: '#/definitions/FleetUtilizationList'
        description: Collection of objects containing utilization information for each requested fleet ID.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.'
    description: Represents the returned data in response to a request action.
  DescribeGameSessionDetailsInput:
    type: object
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet to retrieve all game sessions active on the fleet.
      GameSessionId:
        $ref: '#/definitions/ArnStringModel'
        description: Unique identifier for the game session to retrieve.
      AliasId:
        $ref: '#/definitions/AliasId'
        description: Unique identifier for an alias associated with the fleet to retrieve all game sessions for.
      StatusFilter:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Game session status to filter results on. Possible game session statuses include ACTIVE, <code>TERMINATED</code>, <code>ACTIVATING</code> and <code>TERMINATING</code> (the last two are transitory). '
      Limit:
        $ref: '#/definitions/PositiveInteger'
        description: Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.'
    description: Represents the input for a request action.
  DescribeGameSessionDetailsOutput:
    type: object
    properties:
      GameSessionDetails:
        $ref: '#/definitions/GameSessionDetailList'
        description: Collection of objects containing game session properties and the protection policy currently in force for each session matching the request.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.'
    description: Represents the returned data in response to a request action.
  DescribeGameSessionPlacementInput:
    type: object
    required:
      - PlacementId
    properties:
      PlacementId:
        $ref: '#/definitions/IdStringModel'
        description: Unique identifier for a game session placement to retrieve.
  DescribeGameSessionPlacementOutput:
    type: object
    properties:
      GameSessionPlacement:
        $ref: '#/definitions/GameSessionPlacement'
        description: Object that describes the requested game session placement.
  DescribeGameSessionQueuesInput:
    type: object
    properties:
      Names:
        $ref: '#/definitions/GameSessionQueueNameList'
        description: 'List of queue names to retrieve information for. To request settings for all queues, leave this parameter empty.'
      Limit:
        $ref: '#/definitions/PositiveInteger'
        description: Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.'
  DescribeGameSessionQueuesOutput:
    type: object
    properties:
      GameSessionQueues:
        $ref: '#/definitions/GameSessionQueueList'
        description: Collection of objects that describes the requested game session queues.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.'
  DescribeGameSessionsInput:
    type: object
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet to retrieve all game sessions for.
      GameSessionId:
        $ref: '#/definitions/ArnStringModel'
        description: Unique identifier for the game session to retrieve.
      AliasId:
        $ref: '#/definitions/AliasId'
        description: 'Unique identifier for an alias associated with the fleet to retrieve all game sessions for. '
      StatusFilter:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Game session status to filter results on. Possible game session statuses include <code>ACTIVE</code>, <code>TERMINATED</code>, <code>ACTIVATING</code>, and <code>TERMINATING</code> (the last two are transitory). '
      Limit:
        $ref: '#/definitions/PositiveInteger'
        description: Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.'
    description: Represents the input for a request action.
  DescribeGameSessionsOutput:
    type: object
    properties:
      GameSessions:
        $ref: '#/definitions/GameSessionList'
        description: Collection of objects containing game session properties for each session matching the request.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.'
    description: Represents the returned data in response to a request action.
  DescribeInstancesInput:
    type: object
    required:
      - FleetId
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet to retrieve instance information for.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: Unique identifier for an instance to retrieve. Specify an instance ID or leave blank to retrieve all instances in the fleet.
      Limit:
        $ref: '#/definitions/PositiveInteger'
        description: Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.'
    description: Represents the input for a request action.
  DescribeInstancesOutput:
    type: object
    properties:
      Instances:
        $ref: '#/definitions/InstanceList'
        description: Collection of objects containing properties for each instance returned.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.'
    description: Represents the returned data in response to a request action.
  DescribePlayerSessionsInput:
    type: object
    properties:
      GameSessionId:
        $ref: '#/definitions/ArnStringModel'
        description: Unique identifier for the game session to retrieve player sessions for.
      PlayerId:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Unique identifier for a player to retrieve player sessions for.
      PlayerSessionId:
        $ref: '#/definitions/PlayerSessionId'
        description: Unique identifier for a player session to retrieve.
      PlayerSessionStatusFilter:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: '<p>Player session status to filter results on.</p> <p>Possible player session statuses include the following:</p> <ul> <li> <p> <b>RESERVED</b> – The player session request has been received, but the player has not yet connected to the server process and/or been validated. </p> </li> <li> <p> <b>ACTIVE</b> – The player has been validated by the server process and is currently connected.</p> </li> <li> <p> <b>COMPLETED</b> – The player connection has been dropped.</p> </li> <li> <p> <b>TIMEDOUT</b> – A player session request was received, but the player did not connect and/or was not validated within the time-out limit (60 seconds).</p> </li> </ul>'
      Limit:
        $ref: '#/definitions/PositiveInteger'
        description: 'Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages. If a player session ID is specified, this parameter is ignored.'
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value. If a player session ID is specified, this parameter is ignored.'
    description: Represents the input for a request action.
  DescribePlayerSessionsOutput:
    type: object
    properties:
      PlayerSessions:
        $ref: '#/definitions/PlayerSessionList'
        description: Collection of objects containing properties for each player session that matches the request.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.'
    description: Represents the returned data in response to a request action.
  DescribeRuntimeConfigurationInput:
    type: object
    required:
      - FleetId
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet to get the runtime configuration for.
    description: Represents the input for a request action.
  DescribeRuntimeConfigurationOutput:
    type: object
    properties:
      RuntimeConfiguration:
        $ref: '#/definitions/RuntimeConfiguration'
        description: Instructions describing how server processes should be launched and maintained on each instance in the fleet.
    description: Represents the returned data in response to a request action.
  DescribeScalingPoliciesInput:
    type: object
    required:
      - FleetId
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet to retrieve scaling policies for.
      StatusFilter:
        $ref: '#/definitions/ScalingStatusType'
        description: <p>Scaling policy status to filter results on. A scaling policy is only in force when in an <code>ACTIVE</code> status.</p> <ul> <li> <p> <b>ACTIVE</b> – The scaling policy is currently in force.</p> </li> <li> <p> <b>UPDATEREQUESTED</b> – A request to update the scaling policy has been received.</p> </li> <li> <p> <b>UPDATING</b> – A change is being made to the scaling policy.</p> </li> <li> <p> <b>DELETEREQUESTED</b> – A request to delete the scaling policy has been received.</p> </li> <li> <p> <b>DELETING</b> – The scaling policy is being deleted.</p> </li> <li> <p> <b>DELETED</b> – The scaling policy has been deleted.</p> </li> <li> <p> <b>ERROR</b> – An error occurred in creating the policy. It should be removed and recreated.</p> </li> </ul>
      Limit:
        $ref: '#/definitions/PositiveInteger'
        description: Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.'
    description: Represents the input for a request action.
  DescribeScalingPoliciesOutput:
    type: object
    properties:
      ScalingPolicies:
        $ref: '#/definitions/ScalingPolicyList'
        description: Collection of objects containing the scaling policies matching the request.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.'
    description: Represents the returned data in response to a request action.
  DesiredPlayerSession:
    type: object
    properties:
      PlayerId:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Unique identifier for a player to associate with the player session.
      PlayerData:
        $ref: '#/definitions/PlayerData'
        description: 'Developer-defined information related to a player. Amazon GameLift does not use this data, so it can be formatted as needed for use in the game.'
    description: Player information for use when creating player sessions using a game session placement request with <a>StartGameSessionPlacement</a>.
  DesiredPlayerSessionList:
    type: array
    items:
      $ref: '#/definitions/DesiredPlayerSession'
  Double:
    type: number
    format: double
  EC2InstanceCounts:
    type: object
    properties:
      DESIRED:
        $ref: '#/definitions/WholeNumber'
        description: Ideal number of active instances in the fleet.
      MINIMUM:
        $ref: '#/definitions/WholeNumber'
        description: Minimum value allowed for the fleet's instance count.
      MAXIMUM:
        $ref: '#/definitions/WholeNumber'
        description: Maximum value allowed for the fleet's instance count.
      PENDING:
        $ref: '#/definitions/WholeNumber'
        description: Number of instances in the fleet that are starting but not yet active.
      ACTIVE:
        $ref: '#/definitions/WholeNumber'
        description: Actual number of active instances in the fleet.
      IDLE:
        $ref: '#/definitions/WholeNumber'
        description: Number of active instances in the fleet that are not currently hosting a game session.
      TERMINATING:
        $ref: '#/definitions/WholeNumber'
        description: Number of instances in the fleet that are no longer active but haven't yet been terminated.
    description: 'Current status of fleet capacity. The number of active instances should match or be in the process of matching the number of desired instances. Pending and terminating counts are non-zero only if fleet capacity is adjusting to an <a>UpdateFleetCapacity</a> request, or if access to resources is temporarily affected.'
  EC2InstanceLimit:
    type: object
    properties:
      EC2InstanceType:
        $ref: '#/definitions/EC2InstanceType'
        description: 'Name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See <a href="http://aws.amazon.com/ec2/instance-types/">Amazon EC2 Instance Types</a> for detailed descriptions.'
      CurrentInstances:
        $ref: '#/definitions/WholeNumber'
        description: Number of instances of the specified type that are currently in use by this AWS account.
      InstanceLimit:
        $ref: '#/definitions/WholeNumber'
        description: Number of instances allowed.
    description: Maximum number of instances allowed based on the Amazon Elastic Compute Cloud (Amazon EC2) instance type. Instance limits can be retrieved by calling <a>DescribeEC2InstanceLimits</a>.
  EC2InstanceLimitList:
    type: array
    items:
      $ref: '#/definitions/EC2InstanceLimit'
  EC2InstanceType:
    type: string
    enum:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
  Event:
    type: object
    properties:
      EventId:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Unique identifier for a fleet event.
      ResourceId:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Unique identifier for an event resource, such as a fleet ID.'
      EventCode:
        $ref: '#/definitions/EventCode'
        description: 'Type of event being logged. '
      Message:
        $ref: '#/definitions/NonEmptyString'
        description: Additional information related to the event.
      EventTime:
        $ref: '#/definitions/Timestamp'
        description: Time stamp indicating when this event occurred. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
    description: 'Log entry describing an event involving Amazon GameLift resources (such as a fleet). In addition to tracking activity, event codes and messages can provide additional information for troubleshooting and debugging problems.'
  EventCode:
    type: string
    enum:
      - GENERIC_EVENT
      - FLEET_CREATED
      - FLEET_DELETED
      - FLEET_SCALING_EVENT
      - FLEET_STATE_DOWNLOADING
      - FLEET_STATE_VALIDATING
      - FLEET_STATE_BUILDING
      - FLEET_STATE_ACTIVATING
      - FLEET_STATE_ACTIVE
      - FLEET_STATE_ERROR
      - FLEET_INITIALIZATION_FAILED
      - FLEET_BINARY_DOWNLOAD_FAILED
      - FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND
      - FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE
      - FLEET_VALIDATION_TIMED_OUT
      - FLEET_ACTIVATION_FAILED
      - FLEET_ACTIVATION_FAILED_NO_INSTANCES
      - FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED
      - SERVER_PROCESS_INVALID_PATH
      - SERVER_PROCESS_SDK_INITIALIZATION_TIMEOUT
      - SERVER_PROCESS_PROCESS_READY_TIMEOUT
      - SERVER_PROCESS_CRASHED
      - SERVER_PROCESS_TERMINATED_UNHEALTHY
      - SERVER_PROCESS_FORCE_TERMINATED
      - SERVER_PROCESS_PROCESS_EXIT_TIMEOUT
      - GAME_SESSION_ACTIVATION_TIMEOUT
  EventList:
    type: array
    items:
      $ref: '#/definitions/Event'
  FleetAttributes:
    type: object
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet.
      FleetArn:
        $ref: '#/definitions/ArnStringModel'
        description: Identifier for a fleet that is unique across all regions.
      Description:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Human-readable description of the fleet.
      Name:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Descriptive label that is associated with a fleet. Fleet names do not need to be unique.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: Time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
      TerminationTime:
        $ref: '#/definitions/Timestamp'
        description: Time stamp indicating when this data object was terminated. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
      Status:
        $ref: '#/definitions/FleetStatus'
        description: '<p>Current status of the fleet.</p> <p>Possible fleet statuses include the following:</p> <ul> <li> <p> <b>NEW</b> – A new fleet has been defined and desired instances is set to 1. </p> </li> <li> <p> <b>DOWNLOADING/VALIDATING/BUILDING/ACTIVATING</b> – Amazon GameLift is setting up the new fleet, creating new instances with the game build and starting server processes.</p> </li> <li> <p> <b>ACTIVE</b> – Hosts can now accept game sessions.</p> </li> <li> <p> <b>ERROR</b> – An error occurred when downloading, validating, building, or activating the fleet.</p> </li> <li> <p> <b>DELETING</b> – Hosts are responding to a delete fleet request.</p> </li> <li> <p> <b>TERMINATED</b> – The fleet no longer exists.</p> </li> </ul>'
      BuildId:
        $ref: '#/definitions/BuildId'
        description: Unique identifier for a build.
      ServerLaunchPath:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Path to a game server executable in the fleet''s build, specified for fleets created prior to 2016-08-04 (or AWS SDK v. 0.12.16). Server launch paths for fleets created after this date are specified in the fleet''s <a>RuntimeConfiguration</a>.'
      ServerLaunchParameters:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Game server launch parameters specified for fleets created prior to 2016-08-04 (or AWS SDK v. 0.12.16). Server launch parameters for fleets created after this date are specified in the fleet's <a>RuntimeConfiguration</a>.
      LogPaths:
        $ref: '#/definitions/StringList'
        description: 'Location of default log files. When a server process is shut down, Amazon GameLift captures and stores any log files in this location. These logs are in addition to game session logs; see more on game session logs in the <a href="http://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-api-server-code">Amazon GameLift Developer Guide</a>. If no default log path for a fleet is specified, Amazon GameLift will automatically upload logs that are stored on each instance at <code>C:\game\logs</code> (for Windows) or <code>/local/game/logs</code> (for Linux). Use the Amazon GameLift console to access stored logs. '
      NewGameSessionProtectionPolicy:
        $ref: '#/definitions/ProtectionPolicy'
        description: '<p>Type of game session protection to set for all new instances started in the fleet.</p> <ul> <li> <p> <b>NoProtection</b> – The game session can be terminated during a scale-down event.</p> </li> <li> <p> <b>FullProtection</b> – If the game session is in an <code>ACTIVE</code> status, it cannot be terminated during a scale-down event.</p> </li> </ul>'
      OperatingSystem:
        $ref: '#/definitions/OperatingSystem'
        description: Operating system of the fleet's computing resources. A fleet's operating system depends on the OS specified for the build that is deployed on this fleet.
      ResourceCreationLimitPolicy:
        $ref: '#/definitions/ResourceCreationLimitPolicy'
        description: Fleet policy to limit the number of game sessions an individual player can create over a span of time.
    description: General properties describing a fleet.
  FleetAttributesList:
    type: array
    items:
      $ref: '#/definitions/FleetAttributes'
  FleetCapacity:
    type: object
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet.
      InstanceType:
        $ref: '#/definitions/EC2InstanceType'
        description: 'Name of an EC2 instance type that is supported in Amazon GameLift. A fleet instance type determines the computing resources of each instance in the fleet, including CPU, memory, storage, and networking capacity. Amazon GameLift supports the following EC2 instance types. See <a href="http://aws.amazon.com/ec2/instance-types/">Amazon EC2 Instance Types</a> for detailed descriptions.'
      InstanceCounts:
        $ref: '#/definitions/EC2InstanceCounts'
        description: Current status of fleet capacity.
    description: 'Information about the fleet''s capacity. Fleet capacity is measured in EC2 instances. By default, new fleets have a capacity of one instance, but can be updated as needed. The maximum number of instances for a fleet is determined by the fleet''s instance type.'
  FleetCapacityExceededException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/NonEmptyString'
    description: The specified fleet has no available instances to fulfill a <code>CreateGameSession</code> request. Clients can retry such requests immediately or after a waiting period.
  FleetCapacityList:
    type: array
    items:
      $ref: '#/definitions/FleetCapacity'
  FleetId:
    type: string
    pattern: ^fleet-\S+
  FleetIdList:
    type: array
    items:
      $ref: '#/definitions/FleetId'
    minItems: 1
  FleetStatus:
    type: string
    enum:
      - NEW
      - DOWNLOADING
      - VALIDATING
      - BUILDING
      - ACTIVATING
      - ACTIVE
      - DELETING
      - ERROR
      - TERMINATED
  FleetUtilization:
    type: object
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet.
      ActiveServerProcessCount:
        $ref: '#/definitions/WholeNumber'
        description: Number of server processes in an <code>ACTIVE</code> status currently running across all instances in the fleet
      ActiveGameSessionCount:
        $ref: '#/definitions/WholeNumber'
        description: Number of active game sessions currently being hosted on all instances in the fleet.
      CurrentPlayerSessionCount:
        $ref: '#/definitions/WholeNumber'
        description: Number of active player sessions currently being hosted on all instances in the fleet.
      MaximumPlayerSessionCount:
        $ref: '#/definitions/WholeNumber'
        description: Maximum players allowed across all game sessions currently being hosted on all instances in the fleet.
    description: 'Current status of fleet utilization, including the number of game and player sessions being hosted.'
  FleetUtilizationList:
    type: array
    items:
      $ref: '#/definitions/FleetUtilization'
  Float:
    type: number
    format: float
  FreeText:
    type: string
  GameProperty:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/GamePropertyKey'
        description: TBD
      Value:
        $ref: '#/definitions/GamePropertyValue'
        description: TBD
    description: 'Set of key-value pairs containing information a server process requires to set up a game session. This object allows you to pass in any set of data needed for your game. For more information, see the <a href="http://docs.aws.amazon.com/gamelift/latest/developerguide/">Amazon GameLift Developer Guide</a>.'
  GamePropertyKey:
    type: string
    maxLength: 32
  GamePropertyList:
    type: array
    items:
      $ref: '#/definitions/GameProperty'
    maxItems: 16
  GamePropertyValue:
    type: string
    maxLength: 96
  GameSession:
    type: object
    properties:
      GameSessionId:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Unique identifier for the game session. A game session ID has the following format: "arn:aws:gamelift:&lt;region&gt;::gamesession/&lt;fleet ID&gt;/&lt;game session ID&gt;".'
      Name:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Descriptive label that is associated with a game session. Session names do not need to be unique.
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet the game session is running on.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: Time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
      TerminationTime:
        $ref: '#/definitions/Timestamp'
        description: Time stamp indicating when this data object was terminated. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
      CurrentPlayerSessionCount:
        $ref: '#/definitions/WholeNumber'
        description: Number of players currently in the game session.
      MaximumPlayerSessionCount:
        $ref: '#/definitions/WholeNumber'
        description: Maximum number of players that can be connected simultaneously to the game session.
      Status:
        $ref: '#/definitions/GameSessionStatus'
        description: Current status of the game session. A game session must have an <code>ACTIVE</code> status to have player sessions.
      GameProperties:
        $ref: '#/definitions/GamePropertyList'
        description: Set of developer-defined properties for a game session. These properties are passed to the server process hosting the game session.
      IpAddress:
        $ref: '#/definitions/IpAddress'
        description: 'IP address of the game session. To connect to a Amazon GameLift server process, an app needs both the IP address and port number.'
      Port:
        $ref: '#/definitions/PortNumber'
        description: 'Port number for the game session. To connect to a Amazon GameLift server process, an app needs both the IP address and port number.'
      PlayerSessionCreationPolicy:
        $ref: '#/definitions/PlayerSessionCreationPolicy'
        description: Indicates whether or not the game session is accepting new players.
      CreatorId:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Unique identifier for a player. This ID is used to enforce a resource protection policy (if one exists), that limits the number of game sessions a player can create.'
    description: Properties describing a game session.
  GameSessionDetail:
    type: object
    properties:
      GameSession:
        $ref: '#/definitions/GameSession'
        description: Object that describes a game session.
      ProtectionPolicy:
        $ref: '#/definitions/ProtectionPolicy'
        description: '<p>Current status of protection for the game session.</p> <ul> <li> <p> <b>NoProtection</b> – The game session can be terminated during a scale-down event.</p> </li> <li> <p> <b>FullProtection</b> – If the game session is in an <code>ACTIVE</code> status, it cannot be terminated during a scale-down event.</p> </li> </ul>'
    description: A game session's properties plus the protection policy currently in force.
  GameSessionDetailList:
    type: array
    items:
      $ref: '#/definitions/GameSessionDetail'
  GameSessionFullException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/NonEmptyString'
    description: The game instance is currently full and cannot allow the requested player(s) to join. Clients can retry such requests immediately or after a waiting period.
  GameSessionList:
    type: array
    items:
      $ref: '#/definitions/GameSession'
  GameSessionPlacement:
    type: object
    properties:
      PlacementId:
        $ref: '#/definitions/IdStringModel'
        description: Unique identifier for a game session placement.
      GameSessionQueueName:
        $ref: '#/definitions/GameSessionQueueName'
        description: Descriptive label that is associated with queue. Queue names must be unique within each region.
      Status:
        $ref: '#/definitions/GameSessionPlacementState'
        description: <p>Current status of the game session placement request.</p> <ul> <li> <p> <b>PENDING</b> – The placement request is currently in the queue waiting to be processed.</p> </li> <li> <p> <b>FULFILLED</b> – A new game session and player sessions (if requested) have been successfully created. Values for <i>GameSessionArn</i> and <i>GameSessionRegion</i> are available. </p> </li> <li> <p> <b>CANCELLED</b> – The placement request was cancelled with a call to <a>StopGameSessionPlacement</a>.</p> </li> <li> <p> <b>TIMED_OUT</b> – A new game session was not successfully created before the time limit expired. You can resubmit the placement request as needed.</p> </li> </ul>
      GameProperties:
        $ref: '#/definitions/GamePropertyList'
        description: Set of developer-defined properties for a game session. These properties are passed to the server process hosting the game session.
      MaximumPlayerSessionCount:
        $ref: '#/definitions/WholeNumber'
        description: Maximum number of players that can be connected simultaneously to the game session.
      GameSessionName:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Descriptive label that is associated with a game session. Session names do not need to be unique.
      GameSessionArn:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Identifier for the game session created by this placement request. This value exists only if the game session placement status is Completed. This identifier is unique across all regions.
      GameSessionRegion:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Name of the region where the game session created by this placement request is running. This value exists only if the game session placement status is Completed.
      PlayerLatencies:
        $ref: '#/definitions/PlayerLatencyList'
        description: 'Set of values, expressed in milliseconds, indicating the amount of latency that players experience when connected to AWS regions.'
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: Time stamp indicating when this request was placed in the queue. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: 'Time stamp indicating when this request was completed, cancelled, or timed out.'
    description: '<p>Object that describes a <a>StartGameSessionPlacement</a> request. This object includes the full details of the original request plus the current status and start/end time stamps.</p> <p>Game session placement-related operations include:</p> <ul> <li> <p> <a>StartGameSessionPlacement</a> </p> </li> <li> <p> <a>DescribeGameSessionPlacement</a> </p> </li> <li> <p> <a>StopGameSessionPlacement</a> </p> </li> </ul>'
  GameSessionPlacementState:
    type: string
    enum:
      - PENDING
      - FULFILLED
      - CANCELLED
      - TIMED_OUT
  GameSessionQueue:
    type: object
    properties:
      Name:
        $ref: '#/definitions/GameSessionQueueName'
        description: Descriptive label that is associated with queue. Queue names must be unique within each region.
      TimeoutInSeconds:
        $ref: '#/definitions/WholeNumber'
        description: 'Maximum time, in seconds, that a new game session placement request remains in the queue. When a request exceeds this time, the game session placement changes to a TIMED_OUT status.'
      Destinations:
        $ref: '#/definitions/GameSessionQueueDestinationList'
        description: List of fleets that can be used to fulfill game session placement requests in the queue. Fleets are identified by either a fleet ARN or a fleet alias ARN. Destinations are listed in default preference order.
    description: '<p>Configuration of a queue used to process game session placement requests. The queue configuration identifies the fleets that new game session can be placed on, given available resources, and the length of time a request can remain in the queue waiting for placement.</p> <p>Queue-related operations include:</p> <ul> <li> <p> <a>CreateGameSessionQueue</a> </p> </li> <li> <p> <a>DescribeGameSessionQueues</a> </p> </li> <li> <p> <a>UpdateGameSessionQueue</a> </p> </li> <li> <p> <a>DeleteGameSessionQueue</a> </p> </li> </ul>'
  GameSessionQueueDestination:
    type: object
    properties:
      DestinationArn:
        $ref: '#/definitions/ArnStringModel'
        description: 'Amazon Resource Name (ARN) assigned to fleet or fleet alias. ARNs, which include a fleet ID or alias ID and a region name, provide a unique identifier across all regions. '
    description: 'Fleet designated in a game session queue. Requests for new game sessions in the queue are fulfilled by starting a new game session on any destination listed for a queue. '
  GameSessionQueueDestinationList:
    type: array
    items:
      $ref: '#/definitions/GameSessionQueueDestination'
  GameSessionQueueList:
    type: array
    items:
      $ref: '#/definitions/GameSessionQueue'
  GameSessionQueueName:
    type: string
    pattern: '[a-zA-Z0-9-]+'
    minLength: 1
    maxLength: 128
  GameSessionQueueNameList:
    type: array
    items:
      $ref: '#/definitions/GameSessionQueueName'
  GameSessionStatus:
    type: string
    enum:
      - ACTIVE
      - ACTIVATING
      - TERMINATED
      - TERMINATING
      - ERROR
  GetGameSessionLogUrlInput:
    type: object
    required:
      - GameSessionId
    properties:
      GameSessionId:
        $ref: '#/definitions/ArnStringModel'
        description: Unique identifier for the game session to get logs for.
    description: Represents the input for a request action.
  GetGameSessionLogUrlOutput:
    type: object
    properties:
      PreSignedUrl:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Location of the requested game session logs, available for download.'
    description: Represents the returned data in response to a request action.
  GetInstanceAccessInput:
    type: object
    required:
      - FleetId
      - InstanceId
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: 'Unique identifier for a fleet that contains the instance you want access to. The fleet can be in any of the following statuses: <code>ACTIVATING</code>, <code>ACTIVE</code>, or <code>ERROR</code>. Fleets with an <code>ERROR</code> status may be accessible for a short time before they are deleted.'
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: Unique identifier for an instance you want to get access to. You can access an instance in any status.
  GetInstanceAccessOutput:
    type: object
    properties:
      InstanceAccess:
        $ref: '#/definitions/InstanceAccess'
        description: 'Object that contains connection information for a fleet instance, including IP address and access credentials.'
  IdStringModel:
    type: string
    pattern: '[a-zA-Z0-9-]+'
    minLength: 1
    maxLength: 48
  IdempotentParameterMismatchException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/NonEmptyString'
    description: A game session with this custom ID string already exists in this fleet. Resolve this conflict before retrying this request.
  Instance:
    type: object
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet that the instance is in.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: Unique identifier for an instance.
      IpAddress:
        $ref: '#/definitions/IpAddress'
        description: IP address assigned to the instance.
      OperatingSystem:
        $ref: '#/definitions/OperatingSystem'
        description: 'Operating system that is running on this instance. '
      Type:
        $ref: '#/definitions/EC2InstanceType'
        description: 'EC2 instance type that defines the computing resources of this instance. '
      Status:
        $ref: '#/definitions/InstanceStatus'
        description: '<p>Current status of the instance. Possible statuses include the following:</p> <ul> <li> <p> <b>PENDING</b> – The instance is in the process of being created and launching server processes as defined in the fleet''s runtime configuration. </p> </li> <li> <p> <b>ACTIVE</b> – The instance has been successfully created and at least one server process has successfully launched and reported back to Amazon GameLift that it is ready to host a game session. The instance is now considered ready to host game sessions. </p> </li> <li> <p> <b>TERMINATING</b> – The instance is in the process of shutting down. This may happen to reduce capacity during a scaling down event or to recycle resources in the event of a problem.</p> </li> </ul>'
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: Time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
    description: Properties that describe an instance of a virtual computing resource that hosts one or more game servers. A fleet contains zero or more instances.
  InstanceAccess:
    type: object
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet containing the instance being accessed.
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: Unique identifier for an instance being accessed.
      IpAddress:
        $ref: '#/definitions/IpAddress'
        description: IP address assigned to the instance.
      OperatingSystem:
        $ref: '#/definitions/OperatingSystem'
        description: Operating system that is running on the instance.
      Credentials:
        $ref: '#/definitions/InstanceCredentials'
        description: Credentials required to access the instance.
    description: 'Information required to remotely connect to a fleet instance. Access is requested by calling <a>GetInstanceAccess</a>. '
  InstanceCredentials:
    type: object
    properties:
      UserName:
        $ref: '#/definitions/NonEmptyString'
        description: User login string.
      Secret:
        $ref: '#/definitions/NonEmptyString'
        description: 'Secret string. For Windows instances, the secret is a password for use with Windows Remote Desktop. For Linux instances, it is a private key (which must be saved as a <code>.pem</code> file) for use with SSH.'
    description: Set of credentials required to remotely access a fleet instance. Access credentials are requested by calling <a>GetInstanceAccess</a> and returned in an <a>InstanceAccess</a> object.
  InstanceId:
    type: string
    pattern: '[a-zA-Z0-9\.-]+'
  InstanceList:
    type: array
    items:
      $ref: '#/definitions/Instance'
  InstanceStatus:
    type: string
    enum:
      - PENDING
      - ACTIVE
      - TERMINATING
  Integer:
    type: integer
  InternalServiceException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/NonEmptyString'
    description: The service encountered an unrecoverable internal failure while processing the request. Clients can retry such requests immediately or after a waiting period.
  InvalidFleetStatusException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/NonEmptyString'
    description: The requested operation would cause a conflict with the current state of a resource associated with the request and/or the fleet. Resolve the conflict before retrying.
  InvalidGameSessionStatusException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/NonEmptyString'
    description: The requested operation would cause a conflict with the current state of a resource associated with the request and/or the game instance. Resolve the conflict before retrying.
  InvalidRequestException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/NonEmptyString'
    description: One or more parameter values in the request are invalid. Correct the invalid parameter values before retrying.
  IpAddress:
    type: string
  IpPermission:
    type: object
    required:
      - FromPort
      - ToPort
      - IpRange
      - Protocol
    properties:
      FromPort:
        $ref: '#/definitions/PortNumber'
        description: Starting value for a range of allowed port numbers.
      ToPort:
        $ref: '#/definitions/PortNumber'
        description: Ending value for a range of allowed port numbers. Port numbers are end-inclusive. This value must be higher than <code>FromPort</code>.
      IpRange:
        $ref: '#/definitions/NonBlankString'
        description: 'Range of allowed IP addresses. This value must be expressed in CIDR notation. Example: "<code>000.000.000.000/[subnet mask]</code>" or optionally the shortened version "<code>0.0.0.0/[subnet mask]</code>".'
      Protocol:
        $ref: '#/definitions/IpProtocol'
        description: Network communication protocol used by the fleet.
    description: 'A range of IP addresses and port settings that allow inbound traffic to connect to server processes on Amazon GameLift. Each game session hosted on a fleet is assigned a unique combination of IP address and port number, which must fall into the fleet''s allowed ranges. This combination is included in the <a>GameSession</a> object. '
  IpPermissionsList:
    type: array
    items:
      $ref: '#/definitions/IpPermission'
    maxItems: 50
  IpProtocol:
    type: string
    enum:
      - TCP
      - UDP
  LimitExceededException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/NonEmptyString'
    description: The requested operation would cause the resource to exceed the allowed service limit. Resolve the issue before retrying.
  ListAliasesInput:
    type: object
    properties:
      RoutingStrategyType:
        $ref: '#/definitions/RoutingStrategyType'
        description: '<p>Type of routing to filter results on. Use this parameter to retrieve only aliases of a certain type. To retrieve all aliases, leave this parameter empty.</p> <p>Possible routing types include the following:</p> <ul> <li> <p> <b>SIMPLE</b> – The alias resolves to one specific fleet. Use this type when routing to active fleets.</p> </li> <li> <p> <b>TERMINAL</b> – The alias does not resolve to a fleet but instead can be used to display a message to the user. A terminal alias throws a TerminalRoutingStrategyException with the <a>RoutingStrategy</a> message embedded.</p> </li> </ul>'
      Name:
        $ref: '#/definitions/NonEmptyString'
        description: Descriptive label that is associated with an alias. Alias names do not need to be unique.
      Limit:
        $ref: '#/definitions/PositiveInteger'
        description: Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.
      NextToken:
        $ref: '#/definitions/NonEmptyString'
        description: 'Token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.'
    description: Represents the input for a request action.
  ListAliasesOutput:
    type: object
    properties:
      Aliases:
        $ref: '#/definitions/AliasList'
        description: Collection of alias records that match the list request.
      NextToken:
        $ref: '#/definitions/NonEmptyString'
        description: 'Token that indicates where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.'
    description: Represents the returned data in response to a request action.
  ListBuildsInput:
    type: object
    properties:
      Status:
        $ref: '#/definitions/BuildStatus'
        description: '<p>Build status to filter results by. To retrieve all builds, leave this parameter empty.</p> <p>Possible build statuses include the following:</p> <ul> <li> <p> <b>INITIALIZED</b> – A new build has been defined, but no files have been uploaded. You cannot create fleets for builds that are in this status. When a build is successfully created, the build status is set to this value. </p> </li> <li> <p> <b>READY</b> – The game build has been successfully uploaded. You can now create new fleets for this build.</p> </li> <li> <p> <b>FAILED</b> – The game build upload failed. You cannot create new fleets for this build. </p> </li> </ul>'
      Limit:
        $ref: '#/definitions/PositiveInteger'
        description: Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.
      NextToken:
        $ref: '#/definitions/NonEmptyString'
        description: 'Token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.'
    description: Represents the input for a request action.
  ListBuildsOutput:
    type: object
    properties:
      Builds:
        $ref: '#/definitions/BuildList'
        description: Collection of build records that match the request.
      NextToken:
        $ref: '#/definitions/NonEmptyString'
        description: 'Token that indicates where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.'
    description: Represents the returned data in response to a request action.
  ListFleetsInput:
    type: object
    properties:
      BuildId:
        $ref: '#/definitions/BuildId'
        description: 'Unique identifier for a build to return fleets for. Use this parameter to return only fleets using the specified build. To retrieve all fleets, leave this parameter empty.'
      Limit:
        $ref: '#/definitions/PositiveInteger'
        description: Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.'
    description: Represents the input for a request action.
  ListFleetsOutput:
    type: object
    properties:
      FleetIds:
        $ref: '#/definitions/FleetIdList'
        description: 'Set of fleet IDs matching the list request. You can retrieve additional information about all returned fleets by passing this result set to a call to <a>DescribeFleetAttributes</a>, <a>DescribeFleetCapacity</a>, or <a>DescribeFleetUtilization</a>.'
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.'
    description: Represents the returned data in response to a request action.
  MetricName:
    type: string
    enum:
      - ActivatingGameSessions
      - ActiveGameSessions
      - ActiveInstances
      - AvailablePlayerSessions
      - CurrentPlayerSessions
      - IdleInstances
      - QueueDepth
      - WaitTime
  NonBlankAndLengthConstraintString:
    type: string
    pattern: .*\S.*
    minLength: 1
    maxLength: 1024
  NonBlankString:
    type: string
    pattern: '[^\s]+'
  NonEmptyString:
    type: string
    minLength: 1
  NonZeroAndMaxString:
    type: string
    minLength: 1
    maxLength: 1024
  NotFoundException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/NonEmptyString'
    description: A service resource associated with the request could not be found. Clients should not retry such requests.
  OperatingSystem:
    type: string
    enum:
      - WINDOWS_2012
      - AMAZON_LINUX
  PlayerData:
    type: string
    minLength: 1
    maxLength: 2048
  PlayerDataMap:
    type: array
    items:
      type: object
      properties:
        key:
          $ref: '#/definitions/NonZeroAndMaxString'
        value:
          $ref: '#/definitions/PlayerData'
  PlayerIdList:
    type: array
    items:
      $ref: '#/definitions/NonZeroAndMaxString'
    minItems: 1
    maxItems: 25
  PlayerLatency:
    type: object
    properties:
      PlayerId:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Unique identifier for a player associated with the latency data.
      RegionIdentifier:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Name of the region that is associated with the latency value.
      LatencyInMilliseconds:
        $ref: '#/definitions/Float'
        description: Amount of time that represents the time lag experienced by the player when connected to the specified region.
    description: 'Regional latency information for a player, used when requesting a new game session with <a>StartGameSessionPlacement</a>. This value indicates the amount of time lag that exists when the player is connected to a fleet in the specified region. The relative difference between a player''s latency values for multiple regions are used to determine which fleets are best suited to place a new game session for the player. '
  PlayerLatencyList:
    type: array
    items:
      $ref: '#/definitions/PlayerLatency'
  PlayerSession:
    type: object
    properties:
      PlayerSessionId:
        $ref: '#/definitions/PlayerSessionId'
        description: Unique identifier for a player session.
      PlayerId:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Unique identifier for a player that is associated with this player session.
      GameSessionId:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Unique identifier for the game session that the player session is connected to.
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet that the player's game session is running on.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: Time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
      TerminationTime:
        $ref: '#/definitions/Timestamp'
        description: Time stamp indicating when this data object was terminated. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").
      Status:
        $ref: '#/definitions/PlayerSessionStatus'
        description: '<p>Current status of the player session.</p> <p>Possible player session statuses include the following:</p> <ul> <li> <p> <b>RESERVED</b> – The player session request has been received, but the player has not yet connected to the server process and/or been validated. </p> </li> <li> <p> <b>ACTIVE</b> – The player has been validated by the server process and is currently connected.</p> </li> <li> <p> <b>COMPLETED</b> – The player connection has been dropped.</p> </li> <li> <p> <b>TIMEDOUT</b> – A player session request was received, but the player did not connect and/or was not validated within the time-out limit (60 seconds).</p> </li> </ul>'
      IpAddress:
        $ref: '#/definitions/IpAddress'
        description: Game session IP address. All player sessions reference the game session location.
      Port:
        $ref: '#/definitions/PortNumber'
        description: 'Port number for the game session. To connect to a Amazon GameLift server process, an app needs both the IP address and port number.'
      PlayerData:
        $ref: '#/definitions/PlayerData'
        description: 'Developer-defined information related to a player. Amazon GameLift does not use this data, so it can be formatted as needed for use in the game. '
    description: '<p>Properties describing a player session. A player session represents either a player reservation for a game session or actual player activity in a game session. A player session object (including player data) is automatically passed to a game session when the player connects to the game session and is validated.</p> <p>Player session-related operations include:</p> <ul> <li> <p> <a>CreatePlayerSession</a> </p> </li> <li> <p> <a>CreatePlayerSessions</a> </p> </li> <li> <p> <a>DescribePlayerSessions</a> </p> </li> </ul>'
  PlayerSessionCreationPolicy:
    type: string
    enum:
      - ACCEPT_ALL
      - DENY_ALL
  PlayerSessionId:
    type: string
    pattern: ^psess-\S+
  PlayerSessionList:
    type: array
    items:
      $ref: '#/definitions/PlayerSession'
  PlayerSessionStatus:
    type: string
    enum:
      - RESERVED
      - ACTIVE
      - COMPLETED
      - TIMEDOUT
  PortNumber:
    type: integer
    minimum: 1
    maximum: 60000
  PositiveInteger:
    type: integer
    minimum: 1
  PositiveLong:
    type: integer
    minimum: 1
  ProtectionPolicy:
    type: string
    enum:
      - NoProtection
      - FullProtection
  PutScalingPolicyInput:
    type: object
    required:
      - Name
      - FleetId
      - ScalingAdjustment
      - ScalingAdjustmentType
      - Threshold
      - ComparisonOperator
      - EvaluationPeriods
      - MetricName
    properties:
      Name:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Descriptive label that is associated with a scaling policy. Policy names do not need to be unique. A fleet can have only one scaling policy with the same name.
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet to apply this policy to.
      ScalingAdjustment:
        $ref: '#/definitions/Integer'
        description: 'Amount of adjustment to make, based on the scaling adjustment type.'
      ScalingAdjustmentType:
        $ref: '#/definitions/ScalingAdjustmentType'
        description: '<p>Type of adjustment to make to a fleet''s instance count (see <a>FleetCapacity</a>):</p> <ul> <li> <p> <b>ChangeInCapacity</b> – add (or subtract) the scaling adjustment value from the current instance count. Positive values scale up while negative values scale down.</p> </li> <li> <p> <b>ExactCapacity</b> – set the instance count to the scaling adjustment value.</p> </li> <li> <p> <b>PercentChangeInCapacity</b> – increase or reduce the current instance count by the scaling adjustment, read as a percentage. Positive values scale up while negative values scale down; for example, a value of "-10" scales the fleet down by 10%.</p> </li> </ul>'
      Threshold:
        $ref: '#/definitions/Double'
        description: Metric value used to trigger a scaling event.
      ComparisonOperator:
        $ref: '#/definitions/ComparisonOperatorType'
        description: Comparison operator to use when measuring the metric against the threshold value.
      EvaluationPeriods:
        $ref: '#/definitions/PositiveInteger'
        description: Length of time (in minutes) the metric must be at or beyond the threshold before a scaling event is triggered.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: '<p>Name of the Amazon GameLift-defined metric that is used to trigger an adjustment.</p> <ul> <li> <p> <b>ActivatingGameSessions</b> – number of game sessions in the process of being created (game session status = <code>ACTIVATING</code>).</p> </li> <li> <p> <b>ActiveGameSessions</b> – number of game sessions currently running (game session status = <code>ACTIVE</code>).</p> </li> <li> <p> <b>CurrentPlayerSessions</b> – number of active or reserved player sessions (player session status = <code>ACTIVE</code> or <code>RESERVED</code>). </p> </li> <li> <p> <b>AvailablePlayerSessions</b> – number of player session slots currently available in active game sessions across the fleet, calculated by subtracting a game session''s current player session count from its maximum player session count. This number includes game sessions that are not currently accepting players (game session <code>PlayerSessionCreationPolicy</code> = <code>DENY_ALL</code>).</p> </li> <li> <p> <b>ActiveInstances</b> – number of instances currently running a game session.</p> </li> <li> <p> <b>IdleInstances</b> – number of instances not currently running a game session.</p> </li> </ul>'
    description: Represents the input for a request action.
  PutScalingPolicyOutput:
    type: object
    properties:
      Name:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Descriptive label that is associated with a scaling policy. Policy names do not need to be unique.
    description: Represents the returned data in response to a request action.
  RequestUploadCredentialsInput:
    type: object
    required:
      - BuildId
    properties:
      BuildId:
        $ref: '#/definitions/BuildId'
        description: Unique identifier for a build to get credentials for.
    description: Represents the input for a request action.
  RequestUploadCredentialsOutput:
    type: object
    properties:
      UploadCredentials:
        $ref: '#/definitions/AwsCredentials'
        description: AWS credentials required when uploading a game build to the storage location. These credentials have a limited lifespan and are valid only for the build they were issued for.
      StorageLocation:
        $ref: '#/definitions/S3Location'
        description: 'Amazon S3 path and key, identifying where the game build files are stored.'
    description: Represents the returned data in response to a request action.
  ResolveAliasInput:
    type: object
    required:
      - AliasId
    properties:
      AliasId:
        $ref: '#/definitions/AliasId'
        description: Unique identifier for the alias you want to resolve.
    description: Represents the input for a request action.
  ResolveAliasOutput:
    type: object
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Fleet identifier that is associated with the requested alias.
    description: Represents the returned data in response to a request action.
  ResourceCreationLimitPolicy:
    type: object
    properties:
      NewGameSessionsPerCreator:
        $ref: '#/definitions/WholeNumber'
        description: 'Maximum number of game sessions that an individual can create during the policy period. '
      PolicyPeriodInMinutes:
        $ref: '#/definitions/WholeNumber'
        description: 'Time span used in evaluating the resource creation limit policy. '
    description: '<p>Policy that limits the number of game sessions a player can create on the same fleet. This optional policy gives game owners control over how players can consume available game server resources. A resource creation policy makes the following statement: "An individual player can create a maximum number of new game sessions within a specified time period".</p> <p>The policy is evaluated when a player tries to create a new game session. For example, with a policy of 10 new game sessions and a time period of 60 minutes, on receiving a <code>CreateGameSession</code> request, Amazon GameLift checks that the player (identified by <code>CreatorId</code>) has created fewer than 10 game sessions in the past 60 minutes.</p>'
  RoutingStrategy:
    type: object
    properties:
      Type:
        $ref: '#/definitions/RoutingStrategyType'
        description: '<p>Type of routing strategy.</p> <p>Possible routing types include the following:</p> <ul> <li> <p> <b>SIMPLE</b> – The alias resolves to one specific fleet. Use this type when routing to active fleets.</p> </li> <li> <p> <b>TERMINAL</b> – The alias does not resolve to a fleet but instead can be used to display a message to the user. A terminal alias throws a TerminalRoutingStrategyException with the <a>RoutingStrategy</a> message embedded.</p> </li> </ul>'
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet that the alias points to.
      Message:
        $ref: '#/definitions/FreeText'
        description: Message text to be used with a terminal routing strategy.
    description: Routing configuration for a fleet alias.
  RoutingStrategyType:
    type: string
    enum:
      - SIMPLE
      - TERMINAL
  RuntimeConfiguration:
    type: object
    properties:
      ServerProcesses:
        $ref: '#/definitions/ServerProcessList'
        description: Collection of server process configurations describing what server processes to run on each instance in a fleet
    description: '<p>Collection of server process configurations that describe what processes should be run on each instance in a fleet. An instance can launch and maintain multiple server processes based on the runtime configuration; it regularly checks for an updated runtime configuration and starts new server processes to match the latest version.</p> <p>The key purpose of a runtime configuration with multiple server process configurations is to be able to run more than one kind of game server in a single fleet. You can include configurations for more than one server executable in order to run two or more different programs to run on the same instance. This option might be useful, for example, to run more than one version of your game server on the same fleet. Another option is to specify configurations for the same server executable but with different launch parameters.</p> <p>A Amazon GameLift instance is limited to 50 processes running simultaneously. To calculate the total number of processes specified in a runtime configuration, add the values of the <code>ConcurrentExecutions</code> parameter for each <code> <a>ServerProcess</a> </code> object in the runtime configuration.</p>'
  S3Location:
    type: object
    properties:
      Bucket:
        $ref: '#/definitions/NonEmptyString'
        description: Amazon S3 bucket identifier. This is the name of your S3 bucket.
      Key:
        $ref: '#/definitions/NonEmptyString'
        description: 'Name of the zip file containing your build files. '
      RoleArn:
        $ref: '#/definitions/NonEmptyString'
        description: 'Amazon Resource Name (<a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html">ARN</a>) for the access role that allows Amazon GameLift to access your S3 bucket.'
    description: 'Location in Amazon Simple Storage Service (Amazon S3) where build files can be stored for access by Amazon GameLift. This location is specified in a <a>CreateBuild</a> request. For more details, see the <a href="http://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-cli-uploading.html#gamelift-build-cli-uploading-create-build">Create a Build with Files in Amazon S3</a>.'
  ScalingAdjustmentType:
    type: string
    enum:
      - ChangeInCapacity
      - ExactCapacity
      - PercentChangeInCapacity
  ScalingPolicy:
    type: object
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet that is associated with this scaling policy.
      Name:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Descriptive label that is associated with a scaling policy. Policy names do not need to be unique.
      Status:
        $ref: '#/definitions/ScalingStatusType'
        description: <p>Current status of the scaling policy. The scaling policy is only in force when in an <code>ACTIVE</code> status.</p> <ul> <li> <p> <b>ACTIVE</b> – The scaling policy is currently in force.</p> </li> <li> <p> <b>UPDATE_REQUESTED</b> – A request to update the scaling policy has been received.</p> </li> <li> <p> <b>UPDATING</b> – A change is being made to the scaling policy.</p> </li> <li> <p> <b>DELETE_REQUESTED</b> – A request to delete the scaling policy has been received.</p> </li> <li> <p> <b>DELETING</b> – The scaling policy is being deleted.</p> </li> <li> <p> <b>DELETED</b> – The scaling policy has been deleted.</p> </li> <li> <p> <b>ERROR</b> – An error occurred in creating the policy. It should be removed and recreated.</p> </li> </ul>
      ScalingAdjustment:
        $ref: '#/definitions/Integer'
        description: 'Amount of adjustment to make, based on the scaling adjustment type.'
      ScalingAdjustmentType:
        $ref: '#/definitions/ScalingAdjustmentType'
        description: '<p>Type of adjustment to make to a fleet''s instance count (see <a>FleetCapacity</a>):</p> <ul> <li> <p> <b>ChangeInCapacity</b> – add (or subtract) the scaling adjustment value from the current instance count. Positive values scale up while negative values scale down.</p> </li> <li> <p> <b>ExactCapacity</b> – set the instance count to the scaling adjustment value.</p> </li> <li> <p> <b>PercentChangeInCapacity</b> – increase or reduce the current instance count by the scaling adjustment, read as a percentage. Positive values scale up while negative values scale down.</p> </li> </ul>'
      ComparisonOperator:
        $ref: '#/definitions/ComparisonOperatorType'
        description: Comparison operator to use when measuring a metric against the threshold value.
      Threshold:
        $ref: '#/definitions/Double'
        description: Metric value used to trigger a scaling event.
      EvaluationPeriods:
        $ref: '#/definitions/PositiveInteger'
        description: Length of time (in minutes) the metric must be at or beyond the threshold before a scaling event is triggered.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: '<p>Name of the Amazon GameLift-defined metric that is used to trigger an adjustment.</p> <ul> <li> <p> <b>ActivatingGameSessions</b> – number of game sessions in the process of being created (game session status = <code>ACTIVATING</code>).</p> </li> <li> <p> <b>ActiveGameSessions</b> – number of game sessions currently running (game session status = <code>ACTIVE</code>).</p> </li> <li> <p> <b>CurrentPlayerSessions</b> – number of active or reserved player sessions (player session status = <code>ACTIVE</code> or <code>RESERVED</code>). </p> </li> <li> <p> <b>AvailablePlayerSessions</b> – number of player session slots currently available in active game sessions across the fleet, calculated by subtracting a game session''s current player session count from its maximum player session count. This number does include game sessions that are not currently accepting players (game session <code>PlayerSessionCreationPolicy</code> = <code>DENY_ALL</code>).</p> </li> <li> <p> <b>ActiveInstances</b> – number of instances currently running a game session.</p> </li> <li> <p> <b>IdleInstances</b> – number of instances not currently running a game session.</p> </li> </ul>'
    description: Rule that controls how a fleet is scaled. Scaling policies are uniquely identified by the combination of name and fleet ID.
  ScalingPolicyList:
    type: array
    items:
      $ref: '#/definitions/ScalingPolicy'
  ScalingStatusType:
    type: string
    enum:
      - ACTIVE
      - UPDATE_REQUESTED
      - UPDATING
      - DELETE_REQUESTED
      - DELETING
      - DELETED
      - ERROR
  SearchGameSessionsInput:
    type: object
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: 'Unique identifier for a fleet to search for active game sessions. Each request must reference either a fleet ID or alias ID, but not both.'
      AliasId:
        $ref: '#/definitions/AliasId'
        description: 'Unique identifier for an alias associated with the fleet to search for active game sessions. Each request must reference either a fleet ID or alias ID, but not both.'
      FilterExpression:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: '<p>String containing the search criteria for the session search. If no filter expression is included, the request returns results for all game sessions in the fleet that are in <code>ACTIVE</code> status.</p> <p>A filter expression can contain one or multiple conditions. Each condition consists of the following:</p> <ul> <li> <p> <b>Operand</b> -- Name of a game session attribute. Valid values are <code>gameSessionName</code>, <code>gameSessionId</code>, <code>creationTimeMillis</code>, <code>playerSessionCount</code>, <code>maximumSessions</code>, <code>hasAvailablePlayerSessions</code>.</p> </li> <li> <p> <b>Comparator</b> -- Valid comparators are: <code>=</code>, <code>&lt;&gt;</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>. </p> </li> <li> <p> <b>Value</b> -- Value to be searched for. Values can be numbers, boolean values (true/false) or strings. String values are case sensitive, enclosed in single quotes. Special characters must be escaped. Boolean and string values can only be used with the comparators <code>=</code> and <code>&lt;&gt;</code>. For example, the following filter expression searches on <code>gameSessionName</code>: "<code>FilterExpression": "gameSessionName = ''Matt\\''s Awesome Game 1''"</code>. </p> </li> </ul> <p>To chain multiple conditions in a single expression, use the logical keywords <code>AND</code>, <code>OR</code>, and <code>NOT</code> and parentheses as needed. For example: <code>x AND y AND NOT z</code>, <code>NOT (x OR y)</code>.</p> <p>Session search evaluates conditions from left to right using the following precedence rules:</p> <ol> <li> <p> <code>=</code>, <code>&lt;&gt;</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code> </p> </li> <li> <p>Parentheses</p> </li> <li> <p>NOT</p> </li> <li> <p>AND</p> </li> <li> <p>OR</p> </li> </ol> <p>For example, this filter expression retrieves game sessions hosting at least ten players that have an open player slot: <code>"maximumSessions&gt;=10 AND hasAvailablePlayerSessions=true"</code>. </p>'
      SortExpression:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: '<p>Instructions on how to sort the search results. If no sort expression is included, the request returns results in random order. A sort expression consists of the following elements:</p> <ul> <li> <p> <b>Operand</b> -- Name of a game session attribute. Valid values are <code>gameSessionName</code>, <code>gameSessionId</code>, <code>creationTimeMillis</code>, <code>playerSessionCount</code>, <code>maximumSessions</code>, <code>hasAvailablePlayerSessions</code>.</p> </li> <li> <p> <b>Order</b> -- Valid sort orders are <code>ASC</code> (ascending) and <code>DESC</code> (descending).</p> </li> </ul> <p>For example, this sort expression returns the oldest active sessions first: <code>"SortExpression": "creationTimeMillis ASC"</code>. Results with a null value for the sort operand are returned at the end of the list.</p>'
      Limit:
        $ref: '#/definitions/PositiveInteger'
        description: 'Maximum number of results to return. Use this parameter with <code>NextToken</code> to get results as a set of sequential pages. The maximum number of results returned is 20, even if this value is not set or is set higher than 20. '
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To specify the start of the result set, do not specify a value.'
    description: Represents the input for a request action.
  SearchGameSessionsOutput:
    type: object
    properties:
      GameSessions:
        $ref: '#/definitions/GameSessionList'
        description: Collection of objects containing game session properties for each session matching the request.
      NextToken:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Token that indicates where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.'
    description: Represents the returned data in response to a request action.
  ServerProcess:
    type: object
    required:
      - LaunchPath
      - ConcurrentExecutions
    properties:
      LaunchPath:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Location of the server executable in a game build. All game builds are installed on instances at the root : for Windows instances <code>C:\game</code>, and for Linux instances <code>/local/game</code>. A Windows game build with an executable file located at <code>MyGame\latest\server.exe</code> must have a launch path of "<code>C:\game\MyGame\latest\server.exe</code>". A Linux game build with an executable file located at <code>MyGame/latest/server.exe</code> must have a launch path of "<code>/local/game/MyGame/latest/server.exe</code>". '
      Parameters:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Optional list of parameters to pass to the server executable on launch.
      ConcurrentExecutions:
        $ref: '#/definitions/PositiveInteger'
        description: Number of server processes using this configuration to run concurrently on an instance.
    description: 'A set of instructions for launching server processes on each instance in a fleet. Each instruction set identifies the location of the server executable, optional launch parameters, and the number of server processes with this configuration to maintain concurrently on the instance. Server process configurations make up a fleet''s <code> <a>RuntimeConfiguration</a> </code>.'
  ServerProcessList:
    type: array
    items:
      $ref: '#/definitions/ServerProcess'
    minItems: 1
    maxItems: 50
  StartGameSessionPlacementInput:
    type: object
    required:
      - PlacementId
      - GameSessionQueueName
      - MaximumPlayerSessionCount
    properties:
      PlacementId:
        $ref: '#/definitions/IdStringModel'
        description: Unique identifier to assign to the new game session placement. This value is developer-defined. The value must be unique across all regions and cannot be reused unless you are resubmitting a cancelled or timed-out placement request.
      GameSessionQueueName:
        $ref: '#/definitions/GameSessionQueueName'
        description: Name of the queue to use to place the new game session.
      GameProperties:
        $ref: '#/definitions/GamePropertyList'
        description: Set of developer-defined properties for a game session. These properties are passed to the server process hosting the game session.
      MaximumPlayerSessionCount:
        $ref: '#/definitions/WholeNumber'
        description: Maximum number of players that can be connected simultaneously to the game session.
      GameSessionName:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Descriptive label that is associated with a game session. Session names do not need to be unique.
      PlayerLatencies:
        $ref: '#/definitions/PlayerLatencyList'
        description: 'Set of values, expressed in milliseconds, indicating the amount of latency that players experience when connected to AWS regions. This information is relevant when requesting player sessions. Latency information provided for player IDs not included in <i>DesiredPlayerSessions</i> are ignored.'
      DesiredPlayerSessions:
        $ref: '#/definitions/DesiredPlayerSessionList'
        description: Set of information on each player to create a player session for.
  StartGameSessionPlacementOutput:
    type: object
    properties:
      GameSessionPlacement:
        $ref: '#/definitions/GameSessionPlacement'
        description: 'Object that describes the newly created game session placement. This object includes all the information provided in the request, as well as start/end time stamps and placement status. '
  StopGameSessionPlacementInput:
    type: object
    required:
      - PlacementId
    properties:
      PlacementId:
        $ref: '#/definitions/IdStringModel'
        description: Unique identifier for a game session placement to cancel.
  StopGameSessionPlacementOutput:
    type: object
    properties:
      GameSessionPlacement:
        $ref: '#/definitions/GameSessionPlacement'
        description: 'Object that describes the cancelled game session placement, with cancelled status and an end time stamp. '
  StringList:
    type: array
    items:
      $ref: '#/definitions/NonZeroAndMaxString'
  TerminalRoutingStrategyException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/NonEmptyString'
    description: 'The service is unable to resolve the routing for a particular alias because it has a terminal <a>RoutingStrategy</a> associated with it. The message returned in this exception is the message defined in the routing strategy itself. Such requests should only be retried if the routing strategy for the specified alias is modified. '
  Timestamp:
    type: string
    format: date-time
  UnauthorizedException:
    type: object
    properties:
      Message:
        $ref: '#/definitions/NonEmptyString'
    description: The client failed authentication. Clients should not retry such requests.
  UpdateAliasInput:
    type: object
    required:
      - AliasId
    properties:
      AliasId:
        $ref: '#/definitions/AliasId'
        description: Unique identifier for a fleet alias. Specify the alias you want to update.
      Name:
        $ref: '#/definitions/NonBlankAndLengthConstraintString'
        description: Descriptive label that is associated with an alias. Alias names do not need to be unique.
      Description:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Human-readable description of an alias.
      RoutingStrategy:
        $ref: '#/definitions/RoutingStrategy'
        description: Object that specifies the fleet and routing type to use for the alias.
    description: Represents the input for a request action.
  UpdateAliasOutput:
    type: object
    properties:
      Alias:
        $ref: '#/definitions/Alias'
        description: Object that contains the updated alias configuration.
    description: Represents the returned data in response to a request action.
  UpdateBuildInput:
    type: object
    required:
      - BuildId
    properties:
      BuildId:
        $ref: '#/definitions/BuildId'
        description: Unique identifier for a build to update.
      Name:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: 'Descriptive label that is associated with a build. Build names do not need to be unique. '
      Version:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Version that is associated with this build. Version strings do not need to be unique.
    description: Represents the input for a request action.
  UpdateBuildOutput:
    type: object
    properties:
      Build:
        $ref: '#/definitions/Build'
        description: Object that contains the updated build record.
    description: Represents the returned data in response to a request action.
  UpdateFleetAttributesInput:
    type: object
    required:
      - FleetId
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet to update attribute metadata for.
      Name:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Descriptive label that is associated with a fleet. Fleet names do not need to be unique.
      Description:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Human-readable description of a fleet.
      NewGameSessionProtectionPolicy:
        $ref: '#/definitions/ProtectionPolicy'
        description: '<p>Game session protection policy to apply to all new instances created in this fleet. Instances that already exist are not affected. You can set protection for individual instances using <a>UpdateGameSession</a>.</p> <ul> <li> <p> <b>NoProtection</b> – The game session can be terminated during a scale-down event.</p> </li> <li> <p> <b>FullProtection</b> – If the game session is in an <code>ACTIVE</code> status, it cannot be terminated during a scale-down event.</p> </li> </ul>'
      ResourceCreationLimitPolicy:
        $ref: '#/definitions/ResourceCreationLimitPolicy'
        description: 'Policy that limits the number of game sessions an individual player can create over a span of time. '
    description: Represents the input for a request action.
  UpdateFleetAttributesOutput:
    type: object
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet that was updated.
    description: Represents the returned data in response to a request action.
  UpdateFleetCapacityInput:
    type: object
    required:
      - FleetId
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet to update capacity for.
      DesiredInstances:
        $ref: '#/definitions/WholeNumber'
        description: Number of EC2 instances you want this fleet to host.
      MinSize:
        $ref: '#/definitions/WholeNumber'
        description: Minimum value allowed for the fleet's instance count. Default if not set is 0.
      MaxSize:
        $ref: '#/definitions/WholeNumber'
        description: Maximum value allowed for the fleet's instance count. Default if not set is 1.
    description: Represents the input for a request action.
  UpdateFleetCapacityOutput:
    type: object
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet that was updated.
    description: Represents the returned data in response to a request action.
  UpdateFleetPortSettingsInput:
    type: object
    required:
      - FleetId
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet to update port settings for.
      InboundPermissionAuthorizations:
        $ref: '#/definitions/IpPermissionsList'
        description: Collection of port settings to be added to the fleet record.
      InboundPermissionRevocations:
        $ref: '#/definitions/IpPermissionsList'
        description: Collection of port settings to be removed from the fleet record.
    description: Represents the input for a request action.
  UpdateFleetPortSettingsOutput:
    type: object
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet that was updated.
    description: Represents the returned data in response to a request action.
  UpdateGameSessionInput:
    type: object
    required:
      - GameSessionId
    properties:
      GameSessionId:
        $ref: '#/definitions/ArnStringModel'
        description: Unique identifier for the game session to update.
      MaximumPlayerSessionCount:
        $ref: '#/definitions/WholeNumber'
        description: Maximum number of players that can be connected simultaneously to the game session.
      Name:
        $ref: '#/definitions/NonZeroAndMaxString'
        description: Descriptive label that is associated with a game session. Session names do not need to be unique.
      PlayerSessionCreationPolicy:
        $ref: '#/definitions/PlayerSessionCreationPolicy'
        description: Policy determining whether or not the game session accepts new players.
      ProtectionPolicy:
        $ref: '#/definitions/ProtectionPolicy'
        description: '<p>Game session protection policy to apply to this game session only.</p> <ul> <li> <p> <b>NoProtection</b> – The game session can be terminated during a scale-down event.</p> </li> <li> <p> <b>FullProtection</b> – If the game session is in an <code>ACTIVE</code> status, it cannot be terminated during a scale-down event.</p> </li> </ul>'
    description: Represents the input for a request action.
  UpdateGameSessionOutput:
    type: object
    properties:
      GameSession:
        $ref: '#/definitions/GameSession'
        description: Object that contains the updated game session metadata.
    description: Represents the returned data in response to a request action.
  UpdateGameSessionQueueInput:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/GameSessionQueueName'
        description: Descriptive label that is associated with queue. Queue names must be unique within each region.
      TimeoutInSeconds:
        $ref: '#/definitions/WholeNumber'
        description: 'Maximum time, in seconds, that a new game session placement request remains in the queue. When a request exceeds this time, the game session placement changes to a TIMED_OUT status.'
      Destinations:
        $ref: '#/definitions/GameSessionQueueDestinationList'
        description: List of fleets that can be used to fulfill game session placement requests in the queue. Fleets are identified by either a fleet ARN or a fleet alias ARN. Destinations are listed in default preference order.
  UpdateGameSessionQueueOutput:
    type: object
    properties:
      GameSessionQueue:
        $ref: '#/definitions/GameSessionQueue'
        description: Object that describes the newly updated game session queue.
  UpdateRuntimeConfigurationInput:
    type: object
    required:
      - FleetId
      - RuntimeConfiguration
    properties:
      FleetId:
        $ref: '#/definitions/FleetId'
        description: Unique identifier for a fleet to update runtime configuration for.
      RuntimeConfiguration:
        $ref: '#/definitions/RuntimeConfiguration'
        description: 'Instructions for launching server processes on each instance in the fleet. The runtime configuration for a fleet has a collection of server process configurations, one for each type of server process to run on an instance. A server process configuration specifies the location of the server executable, launch parameters, and the number of concurrent processes with that configuration to maintain on each instance.'
    description: Represents the input for a request action.
  UpdateRuntimeConfigurationOutput:
    type: object
    properties:
      RuntimeConfiguration:
        $ref: '#/definitions/RuntimeConfiguration'
        description: 'The runtime configuration currently in force. If the update was successful, this object matches the one in the request.'
    description: Represents the returned data in response to a request action.
  WholeNumber:
    type: integer
    minimum: 0
