{
  "endpoints": [
    {
      "name": "Module: User Profile",
      "methods": [
        {
          "MethodName": "Login",
          "Synopsis": "This method allows you to login",
          "HTTPMethod": "POST",
          "URI": "/:appid/profile/:mode/:userid/login",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id for login"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Logout",
          "Synopsis": "This method allows you to logout",
          "HTTPMethod": "POST",
          "URI": "/:appid/profile/:mode/:userid/logout",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id to logout"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Create New Profile",
          "Synopsis": "Create a new user profile",
          "HTTPMethod": "POST",
          "URI": "/:appid/profile/:mode/:userid/new",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id for which to create new profile"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            },
            {
              "Name": "attrib:first_name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Custom attribute (first name)"
            },
            {
              "Name": "attrib:last_name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Custom attribute (last name)"
            },
            {
              "Name": "attrib:email",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Custom attribute (email ID)"
            }
          ]
        },
        {
          "MethodName": "Update Profile",
          "Synopsis": "Update user profile attributes",
          "HTTPMethod": "POST",
          "URI": "/:appid/profile/:mode/:userid",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id for which to update attributes"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            },
            {
              "Name": "attrib:first_name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Custom attribute (first name)"
            },
            {
              "Name": "attrib:last_name",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Custom attribute (last name)"
            },
            {
              "Name": "attrib:email",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Custom attribute (email ID)"
            }
          ]
        },
        {
          "MethodName": "Delete Profile",
          "Synopsis": "Delete user profile (soft-delete only)",
          "HTTPMethod": "POST",
          "URI": "/:appid/profile/:mode/:userid/delete",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id for profile deletion"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            },
            {
              "Name": "confirm",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Confirmation for deletion"
            }
          ]
        },
        {
          "MethodName": "Get Profile",
          "Synopsis": "Get Profile Details",
          "HTTPMethod": "GET",
          "URI": "/:appid/profile/:mode/:userid",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id for which to retrieve profile details"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Module: Sessions",
      "methods": [
        {
          "MethodName": "Create New Session",
          "Synopsis": "Create a new game session",
          "HTTPMethod": "POST",
          "URI": "/:appid/session/:mode/:userid/new",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id for which to create new session"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Delete Session",
          "Synopsis": "Delete an existing session",
          "HTTPMethod": "POST",
          "URI": "/:appid/session/:sessid/:mode/:userid/delete",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "sessid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The session ID to be deleted"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id who initiates delete of the session"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Create new challenge",
          "Synopsis": "For games with type \"beat-the-scores\", this API allows you to submit the score as a challenge to the specified opponent.<br /><br /><strong>NOTE: Custom attribs cannot be handled in the console right now.<br />Please refer to the API docs for details on custom challenge attributes.</strong>",
          "HTTPMethod": "POST",
          "URI": "/:appid/session/challenge/:mode/:userid/new",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id who is sending the challenge (sender)"
            },
            {
              "Name": "score",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The score to be submitted as a challenge to the opponent"
            },
            {
              "Name": "oppn:mode",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The mode to identify opponent - same rules as mode for user-id"
            },
            {
              "Name": "oppn:id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The id of opponent - same rules as user-id"
            },
            {
              "Name": "send_notification",
              "Required": "N",
              "Default": "0",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Whether the system should generate and send the notification to the opponent"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Reply challenge",
          "Synopsis": "For games with type \"beat-the-scores\", this API allows you to submit the score as a reply to a challenge.<br /><br /><strong>NOTE: Custom attribs cannot be handled in the console right now.<br />Please refer to the API docs for details on custom challenge attributes.</strong>",
          "HTTPMethod": "POST",
          "URI": "/:appid/session/challenge/:sessid/:mode/:userid/reply",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "sessid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The session ID to be replied"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id who is replying the challenge"
            },
            {
              "Name": "score",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The score to be submitted as a challenge to the opponent"
            },
            {
              "Name": "send_notification",
              "Required": "N",
              "Default": "0",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Whether the system should generate and send the notification to the opponent"
            },
            {
              "Name": "auto_rollover",
              "Required": "N",
              "Default": "0",
              "Type": "boot (integer - 0/1)",
              "Location": "POST Data",
              "Description": "Whether the rounds should be automatically closed after generating the result and new rounds should be started."
            },
            {
              "Name": "force_open_states",
              "Required": "N",
              "Default": "1",
              "Type": "bool (integer - 0/1)",
              "Location": "POST Data",
              "Description": "Whether the states of the users should be left open - i.e. 'play' - so that any user can initiate the next challenge and not necessarily the one who replied."
            },
            {
              "Name": "finished",
              "Required": "N",
              "Default": "0",
              "Type": "bool (integer - 0/1)",
              "Location": "POST Data",
              "Description": "Whether the session should be terminated after generating the results. NOTE: the current round scores are still visible for the app to display the results. Both the sides need to explicitly call the 'Flush/Delete Session' API to acknowledge the results and clear the session from memory."
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Check possibility of challenge",
          "Synopsis": "This API can be used <strong>before</strong> starting a new challenge - to check if a challenge between the given two players can be started.<br /><br />It uses the following criteria: <strong><ol><li>1. check if there is an on-going session between the two players - if yes, return \"can_challenge=true\" along with the session id.</li><li>2. check if the CALLING user has active sessions &lt;= some threshold</li><li>3. check if the OPPONENT has active sessions &lt;= threshold</li></ol></strong>",
          "HTTPMethod": "POST",
          "URI": "/:appid/session/challenge/:mode/:userid/check",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id who wants to check the possibility of challenge against given opponent"
            },
            {
              "Name": "oppn:mode",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The mode to identify opponent - same rules as mode for user-id"
            },
            {
              "Name": "oppn:id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The id of opponent - same rules as user-id"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Module: Social Graph",
      "methods": [
        {
          "MethodName": "Set access token",
          "Synopsis": "Set Access Token issued by the social network platform (like FB, G+)",
          "HTTPMethod": "POST",
          "URI": "/:appid/social/graph/:mode/:userid/token",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id for which to set the token"
            },
            {
              "Name": "token",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The access token issued by the social network platform for the given user id"
            },
            {
              "Name": "expires",
              "Required": "N",
              "Default": "",
              "Type": "Numeric",
              "Location": "POST Data",
              "Description": "The expiry time (in seconds or unix timestamp - as FB returns). NOTE: The app id and app secret need to be configured in Playblazer for it to figure out the token expiry time automatically"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Get friend-list (social graph) of the user",
          "Synopsis": "Get the social graph of the given user",
          "HTTPMethod": "GET",
          "URI": "/:appid/social/graph/:mode/:userid",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id who initiates delete of the session"
            },
            {
              "Name": "show",
              "Required": "N",
              "Default": "all",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "Filter what kind of (registered/unregistered) profiles to return",
              "EnumeratedList": [
                "all",
                "registered",
                "unregistered"
              ]
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Module: Social Publish",
      "description": "Depends on Social Graph (mainly, the access token being available)",
      "methods": [
        {
          "MethodName": "Post messages/events on the social media platform",
          "Synopsis": "",
          "HTTPMethod": "POST",
          "URI": "/:appid/social/publish/:mode/:userid/post",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id for the user who is trying to post a message"
            },
            {
              "Name": "to:mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for the target/receiver user-id interpretation"
            },
            {
              "Name": "to:id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The user-id for the target/receiver user"
            },
            {
              "Name": "message",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The message that should be posted - required for every template."
            },
            {
              "Name": "picture",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The URL of the picture to be posted in the pic-description template - required for pic-description template."
            },
            {
              "Name": "description",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The description of the picture to be posted in the pic-description template - required for pic-description template."
            },
            {
              "Name": "template",
              "Required": "N",
              "Default": "single-line",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Template for the message (more coming in near future)",
              "EnumeratedList": [
                "single-line",
                "pic-description"
              ]
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Module: Matchmaking/Lobby",
      "methods": [
        {
          "MethodName": "Get lobby for user",
          "Synopsis": "This API returns a list of possible matches for the calling user according to the given criteria",
          "HTTPMethod": "POST",
          "URI": "/:appid/lobby/:mode/:userid",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id requesting the lobby"
            },
            {
              "Name": "compare",
              "Required": "N",
              "Default": "level",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Use this parameter for comparison of profile scores for matchmaking",
              "EnumeratedList": [
                "level",
                "rp"
              ]
            },
            {
              "Name": "delta",
              "Required": "N",
              "Default": "3",
              "Type": "Number",
              "Location": "POST Data",
              "Description": "The range of values for comparison - i.e. profiles within [-delta, delta) neighbourhood of user's own profile value"
            },
            {
              "Name": "start",
              "Required": "N",
              "Default": "0",
              "Type": "Number",
              "Location": "POST Data",
              "Description": "Pagination start"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "10",
              "Type": "Number",
              "Location": "POST Data",
              "Description": "Pagination limit (i.e. no. of records to return in one call)"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Get RANDOM lobby for user",
          "Synopsis": "This API returns a list of possible random (i.e. not related to the calling user in any way) matches for the calling user according to the given criteria. <br /><strong>NOTE: This API call returns fixed no. of profiles (5)</strong>",
          "HTTPMethod": "POST",
          "URI": "/:appid/lobby/:mode/:userid/random",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id requesting the lobby"
            },
            {
              "Name": "compare",
              "Required": "N",
              "Default": "level",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Use this parameter for comparison of profile scores for matchmaking",
              "EnumeratedList": [
                "level",
                "rp"
              ]
            },
            {
              "Name": "delta",
              "Required": "N",
              "Default": "3",
              "Type": "Number",
              "Location": "POST Data",
              "Description": "The range of values for comparison - i.e. profiles within [-delta, delta) neighbourhood of user's own profile value"
            },
            {
              "Name": "epsilon",
              "Required": "N",
              "Default": "7",
              "Type": "Number",
              "Location": "POST Data",
              "Description": "The increment in the delta value - if enough proflies are not found within the delta-neighbourhood. Please check API ref. document for more details."
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Module: Notifications",
      "methods": [
        {
          "MethodName": "Get notifications for user",
          "Synopsis": "This API returns a list of in-app notification messages queued up for the given user",
          "HTTPMethod": "GET",
          "URI": "/:appid/notifications/:mode/:userid",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id requesting the lobby"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Register device token for push notifications",
          "Synopsis": "<strong>NOTE:<br />Device tokens/identifiers as returned by GCM and APNS are different. It needs to be in a normalized form for this API call.<br />For android, pass on the value returned by GCM server as it is; while for iOS, you need to strip out the spaces and angular brackets from the value returned by the APNS server.</strong>",
          "HTTPMethod": "POST",
          "URI": "/:appid/notifications/push/:mode/:userid/register",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id requesting the lobby"
            },
            {
              "Name": "os",
              "Required": "Y",
              "Default": "android",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "The OS running on the target device",
              "EnumeratedList": [
                "android",
                "ios"
              ]
            },
            {
              "Name": "device_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The device token issued by the notification service - APNS for iOS and GCM for Android devices. "
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Un-Register device token - push notifications",
          "Synopsis": "Using this API, you can un-register a device token - so that it does not receive push notifications anymore.",
          "HTTPMethod": "POST",
          "URI": "/:appid/notifications/push/:mode/:userid/unregister",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id requesting the lobby"
            },
            {
              "Name": "os",
              "Required": "Y",
              "Default": "android",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "The OS running on the target device",
              "EnumeratedList": [
                "android",
                "ios"
              ]
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Post Notification Message",
          "Synopsis": "Using this API, you can post a notification message to a user. The message gets added to the in-app notifications queue for the user and also sent as push notification if the user is offline (or with \"push=1\" parameter below).<br /><br />The \"push\" parameter below can take 3 possible values:<strong><ol><li>1. push=-1 - do NOT use the push notification channel for this message.</li><li>2. push=0 (default) - try to send a push notification only if user is offline.</li><li>3. push=1 - force a push notification even if the user is currently online.</li></ol><br />NOTE 2:<br />Custom attributes cannot be handled in the console as of now.<br />NOTE 3:<br />Please see the API ref. document for more details on support for structured messages.</strong>",
          "HTTPMethod": "POST",
          "URI": "/:appid/notifications/:mode/:userid/post",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id requesting the lobby"
            },
            {
              "Name": "msg",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The message to be posted to the user"
            },
            {
              "Name": "badge",
              "Required": "N",
              "Default": "",
              "Type": "Number",
              "Location": "POST Data",
              "Description": "The badge no. (cumulative count of messages) (only used on iOS)"
            },
            {
              "Name": "sound",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The sound to be played on receiving the push notification (only used on iOS)"
            },
            {
              "Name": "push",
              "Required": "N",
              "Default": "",
              "Type": "Number",
              "Location": "POST Data",
              "Description": "Control the push notification channel. Possible values: 0/1"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Module: Scoring",
      "description": "Test Description",
      "methods": [
        {
          "MethodName": "Get profile score",
          "Synopsis": "This API returns the profile score of the user",
          "HTTPMethod": "GET",
          "URI": "/:appid/scores/profile/:mode/:userid",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id whose profile scores are requested"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Set profile scores",
          "Synopsis": "This API allows for setting of different components in the profile score.<br />There are following components editable: <ol><li>1. level</li><li>2. xp (experience points)</li><li>3. hp (health points)</li><li>4. rp (respect points)</li></ol><br />This API supports values in both difference form (as +/- values) as well as absolute form.<br />You can either set the individual component values or combine them in a single API call.",
          "HTTPMethod": "POST",
          "URI": "/:appid/scores/profile/:mode/:userid/set",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id whose profile scores need to be updated"
            },
            {
              "Name": "level",
              "Required": "N",
              "Default": "",
              "Type": "Number",
              "Location": "POST Data",
              "Description": "Level value to be set (either as +/- value or absolute value)"
            },
            {
              "Name": "xp",
              "Required": "N",
              "Default": "",
              "Type": "Number (float)",
              "Location": "POST Data",
              "Description": "XP value to be set (either as +/- value or absolute value)"
            },
            {
              "Name": "hp",
              "Required": "N",
              "Default": "",
              "Type": "Number (float)",
              "Location": "POST Data",
              "Description": "HP value to be set (either as +/- value or absolute value)"
            },
            {
              "Name": "rp",
              "Required": "N",
              "Default": "",
              "Type": "Number (float)",
              "Location": "POST Data",
              "Description": "RP value to be set (either as +/- value or absolute value)"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Get session score",
          "Synopsis": "This API returns the scores tracked in the specified session",
          "HTTPMethod": "GET",
          "URI": "/:appid/scores/:sessid",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "sessid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The session id"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Set session scores",
          "Synopsis": "Set the session score for the given user",
          "HTTPMethod": "POST",
          "URI": "/:appid/scores/:sessid/:mode/:userid/session",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "sessid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The session id"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id whose session score is to be updated"
            },
            {
              "Name": "score",
              "Required": "Y",
              "Default": "",
              "Type": "Number (float)",
              "Location": "POST Data",
              "Description": "Session score to be set (either as +/- value or absolute value)"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Set round scores",
          "Synopsis": "Set the round score for the given user in the given session",
          "HTTPMethod": "POST",
          "URI": "/:appid/scores/:sessid/:mode/:userid/round",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "sessid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The session id"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id whose session score is to be updated"
            },
            {
              "Name": "score",
              "Required": "Y",
              "Default": "",
              "Type": "Number (float)",
              "Location": "POST Data",
              "Description": "Round score to be set (either as +/- value or absolute value)"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Module: Leaderboards",
      "methods": [
        {
          "MethodName": "Get overall leaderboards",
          "Synopsis": "This API returns list of users sorted based on the requested parameter - 'type'",
          "HTTPMethod": "GET",
          "URI": "/:appid/leaderboards",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "type",
              "Required": "N",
              "Default": "wins",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "The type of leaderboard - i.e. sorting parameter on which to rank the users",
              "EnumeratedList": [
                "wins",
                "played",
                "level",
                "ratio",
                "rp",
                "xp",
                "hp"
              ]
            },
            {
              "Name": "start",
              "Required": "N",
              "Default": "0",
              "Type": "string",
              "Location": "Query String",
              "Description": "Start of pagination (default 0)"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "10",
              "Type": "string",
              "Location": "Query String",
              "Description": "Pagination length - i.e. no. of entries to return (default 10)"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Get user's leaderboards",
          "Synopsis": "This API returns list of users sorted based on the requested parameter - 'type'. This API also includes user's \"friends\" - whoever is playing the game.",
          "HTTPMethod": "GET",
          "URI": "/:appid/leaderboards/user/:mode/:userid",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id for whome leaderboards are requested"
            },
            {
              "Name": "type",
              "Required": "N",
              "Default": "wins",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "The type of leaderboard - i.e. sorting parameter on which to rank the users",
              "EnumeratedList": [
                "wins",
                "played",
                "level",
                "ratio",
                "rp",
                "xp",
                "hp"
              ]
            },
            {
              "Name": "start",
              "Required": "N",
              "Default": "0",
              "Type": "string",
              "Location": "Query String",
              "Description": "Start of pagination (default 0)"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "10",
              "Type": "string",
              "Location": "Query String",
              "Description": "Pagination length - i.e. no. of entries to return (default 10)"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Module: Timers",
      "methods": [
        {
          "MethodName": "Get current time",
          "Synopsis": "This API returns the current system time as both UNIX timestamp and a formatted string value",
          "HTTPMethod": "GET",
          "URI": "/:appid/timer/current_time",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Add timer",
          "Synopsis": "With this API, the application can add timer for the current user.<br />There are 2 types of timers supported:<br /><ol><li>1. one-shot timer (specified with the \"timeout\" parameter)</li><li>2. periodic timer (specified with the \"period\" parameter)</li></ol><br /><strong>NOTE:<br />Only one of \"timeout\" or \"period\" should be passed - not both.<br />If both are passed, \"period\" overrides and resulting timer will be a periodic timer.</strong>",
          "HTTPMethod": "POST",
          "URI": "/:appid/timer/:mode/:userid/add",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id for whome the timer is to be added"
            },
            {
              "Name": "timeout",
              "Required": "N",
              "Default": "",
              "Type": "Number (integer)",
              "Location": "POST Data",
              "Description": "The timeout for the one-shot timer (in seconds)"
            },
            {
              "Name": "period",
              "Required": "N",
              "Default": "",
              "Type": "Number (integer)",
              "Location": "POST Data",
              "Description": "The period for the periodic timer (in seconds)"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Cancel timer",
          "Synopsis": "Cancel the given timer",
          "HTTPMethod": "POST",
          "URI": "/:appid/timer/:timerid/cancel",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "timerid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The ID string of the timer to be cancelled"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Module: Energy Gifting",
      "description": "Provides a way for gifting and redemption of gifts of energy (hp) between friends.",
      "methods": [
        {
          "MethodName": "Ask for energy from a friend",
          "Synopsis": "Useful when you're low on energy - you can ask a friend to gift you some energy.<br />Generates a notification to the friend - \"energy_request\"",
          "HTTPMethod": "POST",
          "URI": "/:appid/energy/:mode/:userid/ask",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id of the friend whome you're asking energy from"
            },
            {
              "Name": "from:mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Your mode - the mode for user-id interpretation"
            },
            {
              "Name": "from:userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Your user-id"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Gift energy to a friend",
          "Synopsis": "Gift fixed amount of energy to a friend.<br />Subject to following conditions (for now):<ol><li>1. The maximum no. of gifts a user can send per day is fixed - 50.</li><li>2. You can send only 1 gift per day to a friend.</li></ol><br />Generates a notification to the receiver - \"energy_gifted\"",
          "HTTPMethod": "POST",
          "URI": "/:appid/energy/:mode/:userid/gift",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation of SENDER"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id who is trying to send the gift - YOU"
            },
            {
              "Name": "to:mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The mode for user-id interpretation of RECEIVER"
            },
            {
              "Name": "to:id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The user-id who is to receive the gift - YOUR FRIEND (RECEIVER)"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "List energy requests for redemption",
          "Synopsis": "Lists the energy gift requests for the given user",
          "HTTPMethod": "POST",
          "URI": "/:appid/energy/:mode/:userid/list",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id (receiver) whose gift requests are to be listed"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Redeem energy gifts",
          "Synopsis": "Redeem the energy gifted to the user",
          "HTTPMethod": "POST",
          "URI": "/:appid/energy/:mode/:userid/redeem",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id (receiver) whose gift requests are to be listed"
            },
            {
              "Name": "requests",
              "Required": "Y",
              "Default": "",
              "Type": "JSON Array",
              "Location": "POST Data",
              "Description": "The request IDs (possibly, multiple) formatted as JSON array that should be redeemed"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Get Time-To-Regeneration (TTR) of energy unit",
          "Synopsis": "Some games may want to re-generate energy cells for users automatically when the HP falls below certain threshold. Generally, it is tied to some timer. This API allows the UI to display this timer as time remaining for re-generation (in seconds) of the energy unit.",
          "HTTPMethod": "GET",
          "URI": "/:appid/energy/:mode/:userid/ttr",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id (receiver) whose gift requests are to be listed"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Module: Leagues",
      "description": "Provides time-bound free-form tournament (league) structure",
      "methods": [
        {
          "MethodName": "Get remaining time in the current league",
          "Synopsis": "Returns the time remaining in the on-going league",
          "HTTPMethod": "GET",
          "URI": "/:appid/leagues/current/time_remaining",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Get results for the previous league period",
          "Synopsis": "Returns the consolidated results for the given user for the previous league period",
          "HTTPMethod": "GET",
          "URI": "/:appid/leagues/last/results/:mode/:userid",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id whose results for the last league period are requested"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Module: Wallet",
      "description": "Provides per-user wallet to hold virtual currency",
      "methods": [
        {
          "MethodName": "Get user's wallet",
          "Synopsis": "Returns the current state of the wallet (i.e. how much currency does the user currently possesses)",
          "HTTPMethod": "GET",
          "URI": "/:appid/wallet/:mode/:userid",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id whose wallet is requested"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Credit currency to user's wallet",
          "Synopsis": "Allows currency to be added/credited to the user's wallet",
          "HTTPMethod": "POST",
          "URI": "/:appid/wallet/:mode/:userid/credit",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id whose wallet is to be credited"
            },
            {
              "Name": "amount",
              "Required": "Y",
              "Default": "",
              "Type": "Number (float)",
              "Location": "POST Data",
              "Description": "Amount of currency to be credited/added to the user's wallet"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Debit currency from user's wallet",
          "Synopsis": "Allows currency to be debited/deducted from the user's wallet",
          "HTTPMethod": "POST",
          "URI": "/:appid/wallet/:mode/:userid/debit",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id whose wallet is to be debited"
            },
            {
              "Name": "amount",
              "Required": "Y",
              "Default": "",
              "Type": "Number (float)",
              "Location": "POST Data",
              "Description": "Amount of currency to be debited/deducted from the user's wallet"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Module: Gifts",
      "description": "Allows users to request/send gifts among friends",
      "methods": [
        {
          "MethodName": "Request for gifts from friends",
          "Synopsis": "Users can send requests for gifts to their friends for items that they may be in short supply of.",
          "HTTPMethod": "POST",
          "URI": "/:appid/gifts/:mode/:userid/request/new",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id who is requesting for gifts"
            },
            {
              "Name": "expiry",
              "Required": "N",
              "Default": "86400",
              "Type": "Numeric",
              "Location": "POST Data",
              "Description": "The expiry time for the gift request - in seconds. Default value is 24hrs - (24 * 3600 = 86400)s"
            },
            {
              "Name": "custom:attr1",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Sample custom attribute - Please check API ref. docs for more details"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "List gift requests",
          "Synopsis": "Lists the gift requests sent by your friends",
          "HTTPMethod": "GET",
          "URI": "/:appid/gifts/:mode/:userid/list",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The requester user-id for whom we need to generate the request list"
            },
            {
              "Name": "start",
              "Required": "N",
              "Default": "0",
              "Type": "Number",
              "Location": "Query string",
              "Description": "Start of pagination - defaults to 0"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "10",
              "Type": "Number",
              "Location": "Query string",
              "Description": "No. of entries to return in output - used for pagination"
            },
            {
              "Name": "sort",
              "Required": "N",
              "Default": "asc",
              "Type": "enumerated",
              "Location": "Query string",
              "Description": "The sorting direction based on expiry time of the request",
              "EnumeratedList": [
                "asc",
                "desc"
              ]
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "Query string",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Reply to gift request / Send a gift to friend",
          "Synopsis": "Be nice to your friend and send him a gift :-)",
          "HTTPMethod": "POST",
          "URI": "/:appid/gifts/:mode/:userid/request/reply",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id whose wallet is to be debited"
            },
            {
              "Name": "request_id",
              "Required": "Y",
              "Default": "",
              "Type": "Alpha-numeric",
              "Location": "POST Data",
              "Description": "The gift request id against which we're sending a reply"
            },
            {
              "Name": "resp",
              "Required": "N",
              "Default": "accept",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Response type - whether the request was accepted or denied",
              "EnumeratedList": [
                "accept",
                "deny"
              ]
            },
            {
              "Name": "custom:attr1",
              "Required": "N",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Sample custom attribute - Please check API ref. docs for more details"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Module: Chat",
      "description": "Provides a very simple chatting mechanism.",
      "methods": [
        {
          "MethodName": "Retrieve all chat messages for the given user",
          "Synopsis": "Returns all chat messages from the 3 segments: 1. P2P, 2. session, 3. broadcast",
          "HTTPMethod": "GET",
          "URI": "/:appid/chat/:mode/:userid",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The receiving user-id whose message listing is requested"
            },
            {
              "Name": "since",
              "Required": "N",
              "Default": "",
              "Type": "Numeric",
              "Location": "Query string",
              "Description": "The UNIX timestamp when the last update was fetched. Please refer to the API ref. doc for more details on how this works"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "10",
              "Type": "Numeric",
              "Location": "Query string",
              "Description": "The no. of message to retrieve. This is applicable to all segments in the output. For the 'sess' segment, it's applicable to each individual session output."
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "Query String",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Post a peer-to-peer chat message to given user",
          "Synopsis": "",
          "HTTPMethod": "POST",
          "URI": "/:appid/chat/user/:mode/:userid/post",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The RECEIVING user-id"
            },
            {
              "Name": "sender:mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The mode for user-id interpretation of SENDER"
            },
            {
              "Name": "sender:id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The SENDER user-id"
            },
            {
              "Name": "msg",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Actual message text - should be URL-Encoded. NOTE: This tool will automatically URL-encode it for you - so, don't paste the URL-encoded text in this field here."
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Post session chat message to given session",
          "Synopsis": "",
          "HTTPMethod": "POST",
          "URI": "/:appid/chat/session/:session_id/post",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "session_id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The session id to which the message should be posted"
            },
            {
              "Name": "sender:mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The mode for user-id interpretation of SENDER"
            },
            {
              "Name": "sender:id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The SENDER user-id"
            },
            {
              "Name": "msg",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Actual message text - should be URL-Encoded. NOTE: This tool will automatically URL-encode it for you - so, don't paste the URL-encoded text in this field here."
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Post broadcast chat message",
          "Synopsis": "",
          "HTTPMethod": "POST",
          "URI": "/:appid/chat/broadcast/post",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "sender:mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The mode for user-id interpretation of SENDER"
            },
            {
              "Name": "sender:id",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The SENDER user-id"
            },
            {
              "Name": "msg",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "Actual message text - should be URL-Encoded. NOTE: This tool will automatically URL-encode it for you - so, don't paste the URL-encoded text in this field here."
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Module: Activity Stream",
      "description": "Stream of activities by users in the application.</br>The activities are always listed in reverse-chronological (i.e. latest-at-top) order.</br>The module uses concepts <b>inbox</b> and <b>outbox</b> from the email system with the same meaning as in the email system.</br>The activities can be posted with specific scopes: app, friends, user and all (default).</br>With 'app' scope, the activity gets posted to the application's inbox; with 'friends', it gets shared with all the friends from social graphs; with 'user', it gets posted to user's own OUTBOX and 'all' is the combination of all.",
      "methods": [
        {
          "MethodName": "List app activities (application inbox)",
          "Synopsis": "Fetch application-level activity stream - which includes all activities posted by all users of the app",
          "HTTPMethod": "GET",
          "URI": "/:appid/activity",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "start",
              "Required": "N",
              "Default": "0",
              "Type": "Number",
              "Location": "Query string",
              "Description": "The starting index (from the top)"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "50",
              "Type": "Number",
              "Location": "Query string",
              "Description": "The no. of entries to return in the output"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "List incoming activities for given user (user's inbox)",
          "Synopsis": "Fetch friends-level (scope=friends) activity stream - i.e. activities posted by user's friends",
          "HTTPMethod": "GET",
          "URI": "/:appid/activity/:mode/:userid/inbox",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id"
            },
            {
              "Name": "start",
              "Required": "N",
              "Default": "0",
              "Type": "Number",
              "Location": "Query string",
              "Description": "The starting index (from the top)"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "50",
              "Type": "Number",
              "Location": "Query string",
              "Description": "The no. of entries to return in the output"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "List outgoing activities from given user (user's outbox)",
          "Synopsis": "Fetch user-level (scope=user) activity stream - i.e. activities posted by user himself",
          "HTTPMethod": "GET",
          "URI": "/:appid/activity/:mode/:userid/outbox",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id"
            },
            {
              "Name": "start",
              "Required": "N",
              "Default": "0",
              "Type": "Number",
              "Location": "Query string",
              "Description": "The starting index (from the top)"
            },
            {
              "Name": "limit",
              "Required": "N",
              "Default": "50",
              "Type": "Number",
              "Location": "Query string",
              "Description": "The no. of entries to return in the output"
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        },
        {
          "MethodName": "Post custom activity for given user",
          "Synopsis": "Post an activity for the given user",
          "HTTPMethod": "POST",
          "URI": "/:appid/activity/:mode/:userid/post",
          "RequiresOAuth": "N",
          "parameters": [
            {
              "Name": "appid",
              "Required": "Y",
              "Default": "::appid",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The Application ID issued by Playblazer platform"
            },
            {
              "Name": "mode",
              "Required": "Y",
              "Default": "fb",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The mode for user-id interpretation"
            },
            {
              "Name": "userid",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "URL Fragment",
              "Description": "The user-id"
            },
            {
              "Name": "activity_type",
              "Required": "Y",
              "Default": "",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The symbolic name of the activity - like 'LOG_RIDE', 'INVITE_USER', 'NEW_CHALLENGE' etc."
            },
            {
              "Name": "extra_data",
              "Required": "N",
              "Default": "",
              "Type": "JSON object (whatever the application wants to store with the activity)",
              "Location": "POST Data",
              "Description": "Any additional custom data that the app wants to store with the activity"
            },
            {
              "Name": "scopes",
              "Required": "N",
              "Default": "all",
              "Type": "string",
              "Location": "POST Data",
              "Description": "The scope for posting the activity - possible values: 'app', 'friends', 'user', 'all' (default) - can be combined into a comma-separated string - like \"app,friends\""
            },
            {
              "Name": "format",
              "Required": "N",
              "Default": "json",
              "Type": "enumerated",
              "Location": "POST Data",
              "Description": "Output format as JSON or XML",
              "EnumeratedList": [
                "json",
                "xml"
              ]
            }
          ]
        }
      ]
    }
  ]
}