{
  "swagger": "2.0",
  "info": {
    "title": "Central Index API",
    "version": "1",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/mashery2openapi"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "description": "Test our API services using I/O Docs. Central Index Interactive Documentation. Log in and get API responses within seconds!",
    "x-mashery-id": "408"
  },
  "schemes": [
    "http"
  ],
  "host": "api.centralindex.com",
  "basePath": "/v1",
  "externalDocs": {
    "description": "You can also view our written documentation.",
    "url": "http://developer.centralindex.com/io-docs/docs"
  },
  "consumes": [],
  "produces": [],
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "apikey",
      "in": "query"
    }
  },
  "security": [
    {
      "key": []
    }
  ],
  "tags": [
    {
      "name": "Production API"
    }
  ],
  "paths": {
    "/entity": {
      "get": {
        "operationId": "GettinganentitybyidProductionAPI",
        "summary": "Allows a whole entity to be pulled from the datast...",
        "description": "Allows a whole entity to be pulled from the datastore by its unique id",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "entity_id",
            "type": "string",
            "description": "The unique entity ID",
            "in": "query",
            "required": true,
            "default": "379236608286720"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/entity/search/what/bylocation": {
      "get": {
        "operationId": "EntityWhat/WhereSearchbyLocationProductionAPI",
        "summary": "Search for matching entities",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "what",
            "type": "string",
            "description": "What to get results for. E.g. Plumber",
            "in": "query",
            "required": true,
            "default": "plumber"
          },
          {
            "name": "where",
            "type": "string",
            "description": "The location to get results for. E.g. Dublin",
            "in": "query",
            "required": true,
            "default": "Dublin"
          },
          {
            "name": "per_page",
            "type": "string",
            "description": "Number of results returned per page",
            "in": "query",
            "required": false
          },
          {
            "name": "page",
            "type": "string",
            "description": "Which page number to retrieve",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Which country to return results for. An ISO compatible country code, E.g. ie",
            "in": "query",
            "required": true,
            "default": "ie"
          },
          {
            "name": "language",
            "type": "string",
            "description": "An ISO compatible language code, E.g. en",
            "in": "query",
            "required": false
          },
          {
            "name": "latitude",
            "type": "string",
            "description": "The decimal latitude of the search context (optional)",
            "in": "query",
            "required": false
          },
          {
            "name": "longitude",
            "type": "string",
            "description": "The decimal longitude of the search context (optional)",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/entity/search/what/byboundingbox": {
      "get": {
        "operationId": "EntityWhat/WhereSearchbyBoundingBoxProductionAPI",
        "summary": "Search for matching entities",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "what",
            "type": "string",
            "description": "What to get results for. E.g. Plumber",
            "in": "query",
            "required": true,
            "default": "plumber"
          },
          {
            "name": "latitude_1",
            "type": "string",
            "description": "Latitude of first point in bounding box",
            "in": "query",
            "required": true,
            "default": "53.396842"
          },
          {
            "name": "longitude_1",
            "type": "string",
            "description": "Longitude of first point in bounding box",
            "in": "query",
            "required": true,
            "default": "-6.37619"
          },
          {
            "name": "latitude_2",
            "type": "string",
            "description": "Latitude of second point in bounding box",
            "in": "query",
            "required": true,
            "default": "53.290463"
          },
          {
            "name": "longitude_2",
            "type": "string",
            "description": "Longitude of second point in bounding box",
            "in": "query",
            "required": true,
            "default": "-6.207275"
          },
          {
            "name": "per_page",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false
          },
          {
            "name": "page",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "A valid ISO 3166 country code",
            "in": "query",
            "required": true,
            "default": "ie"
          },
          {
            "name": "language",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/entity/search/what": {
      "get": {
        "operationId": "EntityWhatSearchProductionAPI",
        "summary": "Search for matching entities",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "what",
            "type": "string",
            "description": "What to get results for. E.g. Plumber",
            "in": "query",
            "required": true,
            "default": "plumber"
          },
          {
            "name": "per_page",
            "type": "string",
            "description": "Number of results returned per page",
            "in": "query",
            "required": false
          },
          {
            "name": "page",
            "type": "string",
            "description": "The page number to retrieve",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Which country to return results for. An ISO compatible country code, E.g. ie",
            "in": "query",
            "required": true,
            "default": "ie"
          },
          {
            "name": "language",
            "type": "string",
            "description": "An ISO compatible language code, E.g. en",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/entity/search/who/byboundingbox": {
      "get": {
        "operationId": "EntityWho/WhereSearchbyBoundingBoxProductionAPI",
        "summary": "Search for matching entities",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "who",
            "type": "string",
            "description": "",
            "in": "query",
            "required": true
          },
          {
            "name": "latitude_1",
            "type": "string",
            "description": "",
            "in": "query",
            "required": true
          },
          {
            "name": "longitude_1",
            "type": "string",
            "description": "",
            "in": "query",
            "required": true
          },
          {
            "name": "latitude_2",
            "type": "string",
            "description": "",
            "in": "query",
            "required": true
          },
          {
            "name": "longitude_2",
            "type": "string",
            "description": "",
            "in": "query",
            "required": true
          },
          {
            "name": "per_page",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false
          },
          {
            "name": "page",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/entity/search/who/bylocation": {
      "get": {
        "operationId": "EntityWho/WhereSearchbyLocationProductionAPI",
        "summary": "Search for matching entities",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "who",
            "type": "string",
            "description": "Company Name",
            "in": "query",
            "required": true,
            "default": "Starbucks"
          },
          {
            "name": "where",
            "type": "string",
            "description": "The location to get results for. E.g. Dublin",
            "in": "query",
            "required": true,
            "default": "Dublin"
          },
          {
            "name": "per_page",
            "type": "string",
            "description": "Number of results returned per page",
            "in": "query",
            "required": false
          },
          {
            "name": "page",
            "type": "string",
            "description": "Which page number to retrieve",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Which country to return results for. An ISO compatible country code, E.g. ie",
            "in": "query",
            "required": true,
            "default": "ie"
          },
          {
            "name": "latitude",
            "type": "string",
            "description": "The decimal latitude of the search context (optional)",
            "in": "query",
            "required": false
          },
          {
            "name": "longitude",
            "type": "string",
            "description": "The decimal longitude of the search context (optional)",
            "in": "query",
            "required": false
          },
          {
            "name": "language",
            "type": "string",
            "description": "An ISO compatible language code, E.g. en",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/entity/search/who": {
      "get": {
        "operationId": "EntityWhoSearchProductionAPI",
        "summary": "Search for matching entities",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "who",
            "type": "string",
            "description": "Company name",
            "in": "query",
            "required": true,
            "default": "Starbucks"
          },
          {
            "name": "per_page",
            "type": "string",
            "description": "How many results per page",
            "in": "query",
            "required": false
          },
          {
            "name": "page",
            "type": "string",
            "description": "What page number to retrieve",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Which country to return results for. An ISO compatible country code, E.g. ie",
            "in": "query",
            "required": true,
            "default": "ie"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/entity/advertisers": {
      "get": {
        "operationId": "AdvertiserEntitySearchProductionAPI",
        "summary": "Search for matching entities that are advertisers ...",
        "description": "Search for matching entities that are advertisers and return a random selection upto the limit requested",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "tag",
            "type": "string",
            "description": "The word or words the advertiser is to appear for in searches",
            "in": "query",
            "required": false
          },
          {
            "name": "where",
            "type": "string",
            "description": "The location to get results for. E.g. Dublin",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "string",
            "description": "The number of advertisers that are to be returned",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Which country to return results for. An ISO compatible country code, E.g. ie",
            "in": "query",
            "required": true,
            "default": "ie"
          },
          {
            "name": "language",
            "type": "string",
            "description": "An ISO compatible language code, E.g. en",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/token/report": {
      "get": {
        "operationId": "GetatokenisedURLtoreportincorrectinformationonanentityProductionAPI",
        "summary": "Allows an application to identify the correct URL ...",
        "description": "Allows an application to identify the correct URL to proceed to to report an issue",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "entity_id",
            "type": "string",
            "description": "The unique Entity ID",
            "in": "query",
            "required": true,
            "default": "379236608286720"
          },
          {
            "name": "portal_name",
            "type": "string",
            "description": "The name of the portal that the user is coming from",
            "in": "query",
            "required": true,
            "default": "YourLocal"
          },
          {
            "name": "language",
            "type": "string",
            "description": "An ISO compatible language code, E.g en",
            "in": "query",
            "required": false,
            "default": "en"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/token/add": {
      "get": {
        "operationId": "GetatokenisedURLtoaddanentityProductionAPI",
        "summary": "Provides a personalised URL to redirect a user to ...",
        "description": "Provides a personalised URL to redirect a user to add an entity to Central Index",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "language",
            "type": "string",
            "description": "The language to use to render the add path",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "portal_name",
            "type": "string",
            "description": "The name of the website that data is to be added on",
            "in": "query",
            "required": true,
            "default": "YourLocal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/entity/claim": {
      "get": {
        "operationId": "GetatokenisedURLtoclaimanentityProductionAPI",
        "summary": "Provides a personalised URL to redirect a user to ...",
        "description": "Provides a personalised URL to redirect a user to claim an entity on Central Index",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "entity_id",
            "type": "string",
            "description": "Entity ID to be claimed",
            "in": "query",
            "required": true,
            "default": "380348266819584"
          },
          {
            "name": "language",
            "type": "string",
            "description": "The language to use to render the claim path",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "portal_name",
            "type": "string",
            "description": "The name of the website that the entity is being claimed on",
            "in": "query",
            "required": true,
            "default": "YourLocal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/token/message": {
      "get": {
        "operationId": "GetatokenisedURLformessaginganentityProductionAPI",
        "summary": "Fetch token for messaging path",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "entity_id",
            "type": "string",
            "description": "The id of the entity being messaged",
            "in": "query",
            "required": true
          },
          {
            "name": "portal_name",
            "type": "string",
            "description": "The name of the application that has initiated the email process, example: 'Your Local'",
            "in": "query",
            "required": true
          },
          {
            "name": "language",
            "type": "string",
            "description": "The language for the app",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/publisher/by_masheryid": {
      "get": {
        "operationId": "ReturnapublisherbymasheryidProductionAPI",
        "summary": "Returns a publisher that has the specified mashery...",
        "description": "Returns a publisher that has the specified masheryid",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "publisher_masheryid",
            "type": "string",
            "description": "",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/autocomplete/keyword": {
      "get": {
        "operationId": "SearchforakeywordusinganautocompletemethodProductionAPI",
        "summary": "The search matches a category name or synonym on a...",
        "description": "The search matches a category name or synonym on a given string and language.",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "str",
            "type": "string",
            "description": "A string to search against, E.g. Plumbers",
            "in": "query",
            "required": true,
            "default": "but"
          },
          {
            "name": "language",
            "type": "string",
            "description": "An ISO compatible language code, E.g. en",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "use_cache",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/autocomplete/category": {
      "get": {
        "operationId": "SearchforacategoryusinganautocompletemethodProductionAPI",
        "summary": "The search matches a category name on a given stri...",
        "description": "The search matches a category name on a given string and language.",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "str",
            "type": "string",
            "description": "A string to search against, E.g. Plumbers",
            "in": "query",
            "required": true,
            "default": "but"
          },
          {
            "name": "language",
            "type": "string",
            "description": "An ISO compatible language code, E.g. en",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "use_cache",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/autocomplete/location": {
      "get": {
        "operationId": "SearchforalocationusinganautocompletemethodProductionAPI",
        "summary": "The search matches a location name or synonym on a...",
        "description": "The search matches a location name or synonym on a given string and language.",
        "tags": [
          "Production API"
        ],
        "parameters": [
          {
            "name": "str",
            "type": "string",
            "description": "A string to search against, E.g. Dub",
            "in": "query",
            "required": true,
            "default": "dub"
          },
          {
            "name": "country",
            "type": "string",
            "description": "Which country to return results for. An ISO compatible country code, E.g. ie",
            "in": "query",
            "required": false,
            "default": "ie"
          },
          {
            "name": "use_cache",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {}
}