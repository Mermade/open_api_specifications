{
  "swagger": "2.0",
  "info": {
    "title": "KLM Travel API",
    "version": "1.0.0",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/mashery2openapi"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "x-origin": [
      {
        "url": "https://developer.airfranceklm.com/io-docs",
        "format": "io_docs"
      }
    ],
    "description": "A great place to start playing with the APIs. KLM Travel API",
    "x-mashery-id": "5373"
  },
  "schemes": [
    "http"
  ],
  "host": "api.airfranceklm.com",
  "basePath": "/",
  "externalDocs": {
    "description": "You can also view our written documentation.",
    "url": "https://developer.airfranceklm.com/io-docs"
  },
  "consumes": [],
  "produces": [],
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "password",
      "tokenUrl": "/",
      "scopes": {}
    }
  },
  "security": [
    {
      "oauth2": []
    }
  ],
  "tags": [
    {
      "name": "Contact Informations"
    },
    {
      "name": "Locations"
    },
    {
      "name": "Flight Offers"
    },
    {
      "name": "AncilliaryShops"
    },
    {
      "name": "Ratings"
    },
    {
      "name": "Lounge"
    },
    {
      "name": "Flight Status"
    },
    {
      "name": "Check-in API"
    },
    {
      "name": "Customers"
    },
    {
      "name": "Reservations"
    },
    {
      "name": "Inspire API"
    }
  ],
  "paths": {
    "/contactinformations": {
      "get": {
        "operationId": "GetlistofcontactinformationContactInformations",
        "summary": "",
        "tags": [
          "Contact Informations"
        ],
        "parameters": [
          {
            "name": "country.code",
            "type": "string",
            "description": "CountryCode",
            "in": "query",
            "required": true,
            "default": "NL"
          },
          {
            "name": "expand",
            "type": "string",
            "description": "provide expand=subCategories when applicable",
            "in": "query",
            "required": false,
            "default": "subCategories"
          },
          {
            "name": "city.code",
            "type": "string",
            "description": "City code",
            "in": "query",
            "required": false,
            "default": "AMS"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/locations/cities": {
      "get": {
        "operationId": "citiesLocations",
        "summary": "",
        "tags": [
          "Locations"
        ],
        "parameters": [
          {
            "name": "country",
            "type": "string",
            "description": "optional country of origin",
            "in": "query",
            "required": false,
            "default": "NL"
          },
          {
            "name": "minDuration",
            "type": "string",
            "description": "optional minimum duration - default 3 days",
            "in": "query",
            "required": false,
            "default": "3"
          },
          {
            "name": "maxBudget",
            "type": "string",
            "description": "optional minimum budget - default 100000",
            "in": "query",
            "required": false,
            "default": "100000"
          },
          {
            "name": "pageSize",
            "type": "integer",
            "description": "optional - select the size of the resultset, no restriction, when the complete result set is required set this value to 2147483647 for example",
            "in": "query",
            "required": false,
            "default": 20
          },
          {
            "name": "minDepartureDate",
            "type": "string",
            "format": "date",
            "description": "optional minimum departure date",
            "in": "query",
            "required": false
          },
          {
            "name": "maxDepartureDate",
            "type": "string",
            "format": "date",
            "description": "optional maximum departure date",
            "in": "query",
            "required": false
          },
          {
            "name": "q",
            "type": "string",
            "description": "optional magical q parameter! Support for a custom filter DSL which is a the moment quite limited in functionality and supports only a single field, but its functionality will be expanded in future versions. For now it can be used as a filter to search for partial strings. Sample: /some/api/url?q=name.contains(dam) This will search the response for a field called name (nested fields can be selected by point navigation, for example airport.name). If no such field can be found the service will respond with a HTTP 400 Bad Request instead of ignoring the invalid filter. When it locates the field it will restrict the retrieved result set based on the provided query, so .contains(dam) does exactly what it suggests, it will filter the result set and return only elements that have a name field that contain dam.",
            "in": "query",
            "required": false
          },
          {
            "name": "themes",
            "type": "string",
            "description": "optional list of comma separated theme codes",
            "in": "query",
            "required": false
          },
          {
            "name": "expand",
            "type": "string",
            "description": "optional comma separated expansions (currently supports only lowest-fare)",
            "in": "query",
            "required": false,
            "default": "lowest-fare"
          },
          {
            "name": "sortOrder",
            "type": "string",
            "description": "optional - select the ordering, possible values are 'DESC' or 'ASC'",
            "in": "query",
            "required": false,
            "default": "DESC"
          },
          {
            "name": "sortField",
            "type": "string",
            "description": "optional field to be sorted, can only be string or numeric numeric",
            "in": "query",
            "required": false,
            "default": "code"
          },
          {
            "name": "origins",
            "type": "string",
            "description": "optional comma separated list of origin airport codes",
            "in": "query",
            "required": false,
            "default": "AMS"
          },
          {
            "name": "currentPage",
            "type": "integer",
            "description": "optional - select an available page",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "lang",
            "type": "string",
            "description": "optional language parameter for i18n",
            "in": "query",
            "required": false,
            "default": "nl_NL"
          },
          {
            "name": "minBudget",
            "type": "string",
            "description": "optional minimum budget - default 0",
            "in": "query",
            "required": false,
            "default": "0"
          },
          {
            "name": "maxDuration",
            "type": "string",
            "description": "optional maximum duration - default 20 days",
            "in": "query",
            "required": false,
            "default": "20"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/locations/v2/cities/{code}/weather": {
      "get": {
        "operationId": "weatherLocations",
        "summary": "",
        "tags": [
          "Locations"
        ],
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "description": "ISO city code",
            "in": "path",
            "required": true,
            "default": "AMS"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/locations/cities/{code}/hotspots": {
      "get": {
        "operationId": "hotspotsLocations",
        "summary": "",
        "tags": [
          "Locations"
        ],
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "description": "ISO city code",
            "in": "path",
            "required": true,
            "default": "AMS"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/locations/cities/{code}/practical-info": {
      "get": {
        "operationId": "practical-infoLocations",
        "summary": "",
        "tags": [
          "Locations"
        ],
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "description": "ISO city code",
            "in": "path",
            "required": true,
            "default": "AMS"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/locations/cities/{code}/accommodations": {
      "get": {
        "operationId": "accommodationsLocations",
        "summary": "",
        "tags": [
          "Locations"
        ],
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "description": "ISO city code",
            "in": "path",
            "required": true,
            "default": "AMS"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/locations/countries/{code}/currencies": {
      "get": {
        "operationId": "currencyLocations",
        "summary": "",
        "tags": [
          "Locations"
        ],
        "parameters": [
          {
            "name": "code",
            "type": "string",
            "description": "Country code",
            "in": "path",
            "required": true,
            "default": "NL"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/locations/countries": {
      "get": {
        "operationId": "countriesLocations",
        "summary": "",
        "tags": [
          "Locations"
        ],
        "parameters": [
          {
            "name": "q",
            "type": "string",
            "description": "optional magical q parameter! Support for a custom filter DSL which is a the moment quite limited in functionality and supports only a single field, but its functionality will be expanded in future versions. For now it can be used as a filter to search for partial strings. Sample: /some/api/url?q=name.contains(dam) This will search the response for a field called name (nested fields can be selected by point navigation, for example airport.name). If no such field can be found the service will respond with a HTTP 400 Bad Request instead of ignoring the invalid filter. When it locates the field it will restrict the retrieved result set based on the provided query, so .contains(dam) does exactly what it suggests, it will filter the result set and return only elements that have a name field that contain dam.",
            "in": "query",
            "required": false
          },
          {
            "name": "sortOrder",
            "type": "string",
            "description": "optional - select the ordering, possible values are 'DESC' or 'ASC'",
            "in": "query",
            "required": false,
            "default": "DESC"
          },
          {
            "name": "sortField",
            "type": "string",
            "description": "optional field to be sorted, can only be string or numeric numeric",
            "in": "query",
            "required": false,
            "default": "code"
          },
          {
            "name": "pageSize",
            "type": "integer",
            "description": "optional - select the size of the resultset, no restriction, when the complete result set is required set this value to 2147483647 for example",
            "in": "query",
            "required": false,
            "default": 20
          },
          {
            "name": "currentPage",
            "type": "integer",
            "description": "optional - select an available page",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "lang",
            "type": "string",
            "description": "optional language parameter for i18n",
            "in": "query",
            "required": false,
            "default": "nl_NL"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/flightoffers/available-offers": {
      "post": {
        "operationId": "AvailableOffersFlightOffers",
        "summary": "",
        "tags": [
          "Flight Offers"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Country",
            "type": "string",
            "description": "Please use country code. E.g. NL (overrides Accept-Language country)",
            "in": "header",
            "required": true,
            "default": "NL"
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Please use 'application/hal+json;profile=com.afklm.b2c.flightoffers.available-offers.v1;charset=utf8'",
            "in": "header",
            "required": true,
            "default": "application/hal+json;profile=com.afklm.b2c.flightoffers.available-offers.v1;charset=utf8"
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Please use 'KL' or 'AF'.",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "Indicates the response language and country expected. e.g. nl-NL indicates language=nl (Dutch) &amp; country=NL (Netherlands)",
            "in": "header",
            "required": true,
            "default": "en-US"
          },
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Please use 'application/json'.",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AvailableOffers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "CreateAvailableOffersFlightOffers",
        "summary": "",
        "tags": [
          "Flight Offers"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Country",
            "type": "string",
            "description": "Specifies the country of end-user the consumer is requesting for",
            "in": "header",
            "required": true,
            "default": "NL"
          },
          {
            "name": "d",
            "type": "string",
            "description": "Encrypted Flight product ID. To get the value either call POST Available offers/lowest fare offers",
            "in": "query",
            "required": true
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use 'Accept: application/hal+json or Accept:  */*'",
            "in": "header",
            "required": true,
            "default": "application/hal+json"
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either 'AF' (AirFrance) or 'KL' (KLM)",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "Indicates the response language and country expected. e.g. nl-NL indicates language=nl (Dutch) &amp; country=NL (Netherlands)",
            "in": "header",
            "required": true,
            "default": "EN-en"
          },
          {
            "name": "minimumAccuracy",
            "type": "string",
            "description": "Specifies the minimum requested accuracy. Will override the default minimum accuracy. Low minimum accuracy will enforce TripPlanner GetDayData to be used instead of FareFlexPricerUpsell",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/flightoffers/lowest-fare-offers": {
      "post": {
        "operationId": "LowestFareOffersFlightOffers",
        "summary": "",
        "tags": [
          "Flight Offers"
        ],
        "parameters": [
          {
            "name": "expand-suggested-flights",
            "type": "string",
            "description": "Boolean value either 'true' or 'false' (For True: Detailed suggested flight details will be displyed in response; For false, Less flight details will be displayed in response).",
            "in": "query",
            "required": true,
            "default": "false"
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Accepts tells the server what formats it is allowed to send back to you. e.g. 'Accept: application/hal+json or Accept:  */*'",
            "in": "header",
            "required": true,
            "default": "application/hal+json"
          },
          {
            "name": "AFKL-TRAVEL-Country",
            "type": "string",
            "description": "Specifies the country of end-user the consumer is requesting for",
            "in": "header",
            "required": true,
            "default": "NL"
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either 'AF' (AirFrance) or 'KL' (KLM)",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "Indicates the response language and country expected. e.g. nl-NL indicates language=nl (Dutch) &amp; country=NL (Netherlands)",
            "in": "header",
            "required": true,
            "default": "EN-en"
          },
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Please use 'application/json'.",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LowestFareOffers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "CreateLowestFareOffersFlightOffers",
        "summary": "",
        "tags": [
          "Flight Offers"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Country",
            "type": "string",
            "description": "Specifies the country of end-user the consumer is requesting for",
            "in": "header",
            "required": true,
            "default": "NL"
          },
          {
            "name": "d",
            "type": "string",
            "description": "Encrypted Flight product ID. To get the value either call POST Available offers/lowest fare offers",
            "in": "query",
            "required": true
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either 'AF' (AirFrance) or 'KL' (KLM)",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use 'Accept: application/hal+json or Accept:  */*'",
            "in": "header",
            "required": true,
            "default": "application/hal+json"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "Indicates the response language and country expected. e.g. nl-NL indicates language=nl (Dutch) &amp; country=NL (Netherlands)",
            "in": "header",
            "required": true,
            "default": "en-US"
          },
          {
            "name": "dateInterval",
            "type": "string",
            "description": "Format: YYYY-MM-DD/YYYY-MM-DD NB Currently only support for one dateInterval, so for RETURN offers only. Maximum 60 days interval interval if Type is 'Day'",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/flightoffers/reference-data": {
      "get": {
        "operationId": "ReferenceDataFlightOffers",
        "summary": "",
        "tags": [
          "Flight Offers"
        ],
        "parameters": [
          {
            "name": "country",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false,
            "default": "NL"
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use 'Accept: application/hal+json or Accept: */*'",
            "in": "header",
            "required": true,
            "default": "application/hal+json"
          },
          {
            "name": "AFKL-TRAVEL-Country",
            "type": "string",
            "description": "Specifies the country of end-user the consumer is requesting for",
            "in": "header",
            "required": true,
            "default": "NL"
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either 'AF' (AirFrance) or 'KL' (KLM)",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "station",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false
          },
          {
            "name": "host",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "Indicates the response language and country expected. e.g. nl-NL indicates language=nl (Dutch) &amp; country=NL (Netherlands)",
            "in": "header",
            "required": true,
            "default": "en-US"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/flightoffers/flight-products/{id}/tax-breakdown": {
      "get": {
        "operationId": "FP/TaxBreakdownFlightOffers",
        "summary": "",
        "tags": [
          "Flight Offers"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Country",
            "type": "string",
            "description": "Specifies the country of end-user the consumer is requesting for",
            "in": "header",
            "required": true,
            "default": "NL"
          },
          {
            "name": "id",
            "type": "string",
            "description": "Encrypted Flight product ID. To get the value either call POST Available offers/lowest fare offers",
            "in": "path",
            "required": true
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either 'AF' (AirFrance) or 'KL' (KLM)",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use 'Accept: application/hal+json or Accept: */*'",
            "in": "header",
            "required": true,
            "default": "application/hal+json"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "Indicates the response language and country expected. e.g. nl-NL indicates language=nl (Dutch) &amp; country=NL (Netherlands)",
            "in": "header",
            "required": true,
            "default": "en-US"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/flightoffers/flight-products/{id}/upsell-offers": {
      "get": {
        "operationId": "FP/UpsellOffersFlightOffers",
        "summary": "",
        "tags": [
          "Flight Offers"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Country",
            "type": "string",
            "description": "Specifies the country of end-user the consumer is requesting for",
            "in": "header",
            "required": true,
            "default": "NL"
          },
          {
            "name": "id",
            "type": "string",
            "description": "Encrypted Flight product ID. To get the value either call POST Available offers/lowest fare offers",
            "in": "path",
            "required": true
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either 'AF' (AirFrance) or 'KL' (KLM)",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use 'Accept: application/hal+json or Accept:  */*'",
            "in": "header",
            "required": true,
            "default": "application/hal+json"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "Indicates the response language and country expected. e.g. nl-NL indicates language=nl (Dutch) &amp; country=NL (Netherlands)",
            "in": "header",
            "required": true,
            "default": "en-US"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/flightoffers/upsell-offers": {
      "post": {
        "operationId": "UpsellOffersFlightOffers",
        "summary": "",
        "tags": [
          "Flight Offers"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either 'AF' (AirFrance) or 'KL' (KLM)",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use 'Accept: application/hal+json or Accept: */*'",
            "in": "header",
            "required": true,
            "default": "application/hal+json"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "Indicates the response country and language expected. e.g. nl-NL indicates language=nl (Ducth) &amp; country=NL (Netherlands)",
            "in": "header",
            "required": true,
            "default": "en-US"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpsellOffers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/flightoffers/flight-products/{id}/ticket-conditions": {
      "get": {
        "operationId": "FP/TicketConditionsFlightOffers",
        "summary": "",
        "tags": [
          "Flight Offers"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Country",
            "type": "string",
            "description": "Specifies the country of end-user the consumer is requesting for",
            "in": "header",
            "required": true,
            "default": "NL"
          },
          {
            "name": "id",
            "type": "string",
            "description": "Encrypted Flight product ID. To get the value either call POST Available offers/lowest fare offers",
            "in": "path",
            "required": true
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either 'AF' (AirFrance) or 'KL' (KLM)",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use 'Accept: application/hal+json or Accept:  */*'",
            "in": "header",
            "required": true,
            "default": "application/hal+json"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "Indicates the response country and language expected. e.g. nl-NL indicates language=nl (Ducth) &amp; country=NL (Netherlands)",
            "in": "header",
            "required": true,
            "default": "en-US"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/flightoffers/ticket-conditions/{tripIdentifier}": {
      "get": {
        "operationId": "TicketConditions(trip)FlightOffers",
        "summary": "",
        "tags": [
          "Flight Offers"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Country",
            "type": "string",
            "description": "Specifies the country of end-user the consumer is requesting for",
            "in": "header",
            "required": true,
            "default": "NL"
          },
          {
            "name": "tripIdentifier",
            "type": "string",
            "description": "Provide the information in this format, origin:departuredate@time:flightnumber:selligclass>destination Eg., AMS:20150130@1630:KL1234:Y>BCN",
            "in": "path",
            "required": true
          },
          {
            "name": "discountCode",
            "type": "string",
            "description": "Internet discount code",
            "in": "query",
            "required": false
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either'AF' (AirFrance) or 'KL' (KLM)",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use 'Accept: application/hal+json or Accept: */*'",
            "in": "header",
            "required": true,
            "default": "application/hal+json"
          },
          {
            "name": "ticketedDate",
            "type": "string",
            "description": "Date of ticketing when requesting conditions for reservation.",
            "in": "query",
            "required": false
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "Indicates the response country and language expected. e.g. nl-NL indicates language=nl (Ducth) &amp; country=NL (Netherlands)",
            "in": "header",
            "required": true,
            "default": "en-US"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/flightoffers/ticket-conditions": {
      "get": {
        "operationId": "TicketConditions(shop)FlightOffers",
        "summary": "",
        "tags": [
          "Flight Offers"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Country",
            "type": "string",
            "description": "Specifies the country of end-user the consumer is requesting for",
            "in": "header",
            "required": true,
            "default": "NL"
          },
          {
            "name": "reservationId",
            "type": "string",
            "description": "Id of the conversation state where the selected Flight Product is stored in.",
            "in": "query",
            "required": true
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use 'Accept: application/hal+json or Accept: */*'",
            "in": "header",
            "required": true,
            "default": "application/hal+json"
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either 'AF' (AirFrance) or 'KL' (KLM)",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "Indicates the response country and language expected. e.g. nl-NL indicates language=nl (Ducth) &amp; country=NL (Netherlands)",
            "in": "header",
            "required": true,
            "default": "en-US"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/flightoffers/flight-products/{id}/related-products": {
      "get": {
        "operationId": "FP/RelatedProductsFlightOffers",
        "summary": "",
        "tags": [
          "Flight Offers"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Country",
            "type": "string",
            "description": "Specifies the country of end-user the consumer is requesting for",
            "in": "header",
            "required": true,
            "default": "NL"
          },
          {
            "name": "id",
            "type": "string",
            "description": "Encrypted Flight product ID. To get the value either call POST Available offers/lowest fare offers",
            "in": "path",
            "required": true
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either 'AF' (AirFrance) or 'KL' (KLM)",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use 'Accept: application/hal+json or Accept:  */*'",
            "in": "header",
            "required": true,
            "default": "application/hal+json"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "Indicates the response country and language expected. e.g. nl-NL indicates language=nl (Ducth) &amp; country=NL (Netherlands)",
            "in": "header",
            "required": true,
            "default": "en-US"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ancillaryshops/{shopId}": {
      "get": {
        "operationId": "AncillaryShopAncilliaryShops",
        "summary": "",
        "tags": [
          "AncilliaryShops"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;profile=com.klm.api.ancillaryShop.v1_1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;profile=com.klm.api.ancillaryShop.v1_1"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "2 letter languagecode (for instance nl)",
            "in": "header",
            "required": true,
            "default": "nl"
          },
          {
            "name": "shopId",
            "type": "string",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ancillaryshops/{shopId}/carts/0/products": {
      "post": {
        "operationId": "AddproducttoCartAncilliaryShops",
        "summary": "<b><u>Cart Integrity</u></b>  It has to be prevent...",
        "description": "<b><u>Cart Integrity</u></b>  It has to be prevented that duplicate products are added to the cart. Error PRDS 0014 is returned for:  <ul>  <li>Product with productClass 'seat', 'meal' or 'lounge' when Product with same productClass already in cart for: - same Passenger and for: - same Segment</li> </ul> <ul>  <li>Product with productClass 'luggage' when Product with same productClass already in cart for: - same Passenger and for: - same Connection</li> </ul> <ul>  <li>Product with productClass 'environmental' when Product with same productClass already in cart for: - same Passenger</li>  <li>Product with productClass 'FlexibilityProduct' or 'InsuranceProduct'  when Product with same productClass already in cart.</li> </ul> <ul>  <li>Product with productClass 'MissedFlightCoverProduct' when Product with same productClass already in cart for: - same Connection</li> </ul> <ul>  <li>Product with same productName for productClass 'Connectivity' already in cart for: - same Passenger and for: - same Segment </li> </ul> <b>Seating:</b> It also has to be prevented that not-available seats are added to the cart. Only seats with status FREE can be added to the cart. Error PRDS 0015 is returned (cart update failed).  <b>Connectivity:</b> Multiple of the same product for a passenger/segment can be added to the cart. The maximum is set to 100, when it it exceeds 100 return error PRDS 0017 - <i>Maximum number of same products for a passenger/segment in cart is 100. </i>",
        "tags": [
          "AncilliaryShops"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;profile=com.klm.api.ancillaryShop.v1_1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;profile=com.klm.api.ancillaryShop.v1_1"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddproducttoCart"
            }
          },
          {
            "name": "shopId",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "operationId": "DeleteproductfromCartAncilliaryShops",
        "summary": "",
        "tags": [
          "AncilliaryShops"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;profile=com.klm.api.ancillaryShop.v1_1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;profile=com.klm.api.ancillaryShop.v1_1"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "2-letter languagecode",
            "in": "header",
            "required": true,
            "default": "en"
          },
          {
            "name": "shopId",
            "type": "string",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/AncillaryShop": {
      "get": {
        "operationId": "SelectedProductsAncilliaryShops",
        "summary": "",
        "tags": [
          "AncilliaryShops"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;profile=com.klm.api.ancillaryShop.v1_1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;profile=com.klm.api.ancillaryShop.v1_1"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "2-letter languagecode",
            "in": "header",
            "required": true,
            "default": "en"
          },
          {
            "name": "shopId",
            "type": "string",
            "description": "",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ancillaryshops/{shopId}/offers?productClass=baggage": {
      "get": {
        "operationId": "OfferedProducts-BaggageAncilliaryShops",
        "summary": "",
        "tags": [
          "AncilliaryShops"
        ],
        "parameters": [
          {
            "name": "filter",
            "type": "string",
            "description": "the required productClass",
            "in": "query",
            "required": false
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;profile=com.klm.api.ancillaryShop.v1_1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;profile=com.klm.api.ancillaryShop.v1_1"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "2-letter language code",
            "in": "header",
            "required": true,
            "default": "en"
          },
          {
            "name": "shopId",
            "type": "string",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ancillaryshops/{shopId}/offers?productClass=Connectivity": {
      "get": {
        "operationId": "OfferedProducts-ConnectivityAncilliaryShops",
        "summary": "",
        "tags": [
          "AncilliaryShops"
        ],
        "parameters": [
          {
            "name": "filter",
            "type": "string",
            "description": "the required productClass",
            "in": "query",
            "required": false
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;profile=com.klm.api.ancillaryShop.v1_1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;profile=com.klm.api.ancillaryShop.v1_1"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "2-letter language code",
            "in": "header",
            "required": true,
            "default": "en"
          },
          {
            "name": "shopId",
            "type": "string",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ancillaryshops/{shopId}/offers?productClass=environmental": {
      "get": {
        "operationId": "OfferedProducts-EnvironmentalAncilliaryShops",
        "summary": "",
        "tags": [
          "AncilliaryShops"
        ],
        "parameters": [
          {
            "name": "filter",
            "type": "string",
            "description": "the required productClass",
            "in": "query",
            "required": false
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;profile=com.klm.api.ancillaryShop.v1_1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;profile=com.klm.api.ancillaryShop.v1_1"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "2-letter language code",
            "in": "header",
            "required": true,
            "default": "en"
          },
          {
            "name": "shopId",
            "type": "string",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ancillaryshops/{shopId}/offers?productClass=flexibility": {
      "get": {
        "operationId": "OfferedProducts-FlexibilityAncilliaryShops",
        "summary": "",
        "tags": [
          "AncilliaryShops"
        ],
        "parameters": [
          {
            "name": "filter",
            "type": "string",
            "description": "the required productClass",
            "in": "query",
            "required": false
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;profile=com.klm.api.ancillaryShop.v1_1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;profile=com.klm.api.ancillaryShop.v1_1"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "2-letter language code",
            "in": "header",
            "required": true,
            "default": "en"
          },
          {
            "name": "shopId",
            "type": "string",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ancillaryshops/{shopId}/offers?productClass=mfc": {
      "get": {
        "operationId": "OfferedProducts-MissedFlightCoverAncilliaryShops",
        "summary": "",
        "tags": [
          "AncilliaryShops"
        ],
        "parameters": [
          {
            "name": "filter",
            "type": "string",
            "description": "the required productClass",
            "in": "query",
            "required": false
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;profile=com.klm.api.ancillaryShop.v1_1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;profile=com.klm.api.ancillaryShop.v1_1"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "2-letter languagecode",
            "in": "header",
            "required": true,
            "default": "en"
          },
          {
            "name": "shopId",
            "type": "string",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ancillaryshops/{shopId}/offers?productClass=InsuranceProduct": {
      "get": {
        "operationId": "OfferedProducts-InsuranceAncilliaryShops",
        "summary": "",
        "tags": [
          "AncilliaryShops"
        ],
        "parameters": [
          {
            "name": "filter",
            "type": "string",
            "description": "the required productClass",
            "in": "query",
            "required": false
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;profile=com.klm.api.ancillaryShop.v1_1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;profile=com.klm.api.ancillaryShop.v1_1"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "2-letter languagecode",
            "in": "header",
            "required": true,
            "default": "en"
          },
          {
            "name": "shopId",
            "type": "string",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ancillaryshops/{shopId}/offers?productClass=lounge": {
      "get": {
        "operationId": "OfferedProducts-LoungeAncilliaryShops",
        "summary": "",
        "tags": [
          "AncilliaryShops"
        ],
        "parameters": [
          {
            "name": "filter",
            "type": "string",
            "description": "the required productClass",
            "in": "query",
            "required": false
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;profile=com.klm.api.ancillaryShop.v1_1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;profile=com.klm.api.ancillaryShop.v1_1"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "2-letter languagecode",
            "in": "header",
            "required": true,
            "default": "en"
          },
          {
            "name": "shopId",
            "type": "string",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ancillaryshops/{shopId}/offers?productClass=meal&productSubClass=aLaCarte": {
      "get": {
        "operationId": "OfferedProducts-Meal-(Special-ALC)AncilliaryShops",
        "summary": "",
        "tags": [
          "AncilliaryShops"
        ],
        "parameters": [
          {
            "name": "filter",
            "type": "string",
            "description": "the required productClass",
            "in": "query",
            "required": false
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;profile=com.klm.api.ancillaryShop.v1_1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;profile=com.klm.api.ancillaryShop.v1_1"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "2-letter languagecode",
            "in": "header",
            "required": true,
            "default": "en"
          },
          {
            "name": "shopId",
            "type": "string",
            "description": "",
            "in": "path",
            "required": true
          },
          {
            "name": "subFilter",
            "type": "string",
            "description": "<ul>  <li>special</li> </ul> or <ul>  <li>aLaCarte</li> </ul>",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ancillaryshops/{shopId}/offers?productClass=seat&segmentId=110&passengerId=1000": {
      "get": {
        "operationId": "OfferedProducts-SeatAncilliaryShops",
        "summary": "Seat offer is only provided when eligibility opera...",
        "description": "Seat offer is only provided when eligibility operator CHOOSESEAT is true from LAP",
        "tags": [
          "AncilliaryShops"
        ],
        "parameters": [
          {
            "name": "filter",
            "type": "string",
            "description": "the required productClass",
            "in": "query",
            "required": false
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;profile=com.klm.api.ancillaryShop.v1_1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;profile=com.klm.api.ancillaryShop.v1_1"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "2-letter languagecode",
            "in": "header",
            "required": true,
            "default": "en"
          },
          {
            "name": "shopId",
            "type": "string",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ancillaryshops/{shopId}/offers?productClass=ssr": {
      "get": {
        "operationId": "OfferedProducts-SSRAncilliaryShops",
        "summary": "SSR Offer is only provided when: <ul>  <li>There i...",
        "description": "SSR Offer is only provided when: <ul>  <li>There is at least one KL operated flight in the itinerary of the reservation</li>  <li>All flight segments in the itinerary have a confirmed status (HK)</li> </ul>",
        "tags": [
          "AncilliaryShops"
        ],
        "parameters": [
          {
            "name": "filter",
            "type": "string",
            "description": "the required productClass",
            "in": "query",
            "required": false
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;profile=com.klm.api.ancillaryShop.v1_1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;profile=com.klm.api.ancillaryShop.v1_1"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "2-letter languagecode",
            "in": "header",
            "required": true,
            "default": "en"
          },
          {
            "name": "shopId",
            "type": "string",
            "description": "",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/ratings": {
      "post": {
        "operationId": "CreateNewRatingRatings",
        "summary": "",
        "tags": [
          "Ratings"
        ],
        "parameters": [
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "",
            "in": "header",
            "required": true,
            "default": "en"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateNewRating"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/lounges/{id}/accesses": {
      "post": {
        "operationId": "CreateAccessfortheLoungeLounge",
        "summary": "",
        "tags": [
          "Lounge"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either KL or AF",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "AFKL-TRAVEL-Client-Id",
            "type": "string",
            "description": "The unique Device Id of the consuming application. Applicable Check-In Kiosks.",
            "in": "header",
            "required": false
          },
          {
            "name": "X-Mashery-Oauth-User-Context",
            "type": "string",
            "description": "This context is provided by Mashery. As long as the provided token remains valid, Mashery will inject the session scoped headers into the request before passing it on to the target API. This functionality is currently fairly limited, but it provides a way to propagate the Customer's information to propagate over all API's.  The value of this header is determined and set by the AuthServ4Cust for B2C, and B2EAuthServer for B2E, at the moment of initial request of an OAuth2 Access Token. See example on Confluence https://confluence.eden.klm.com/display/KLMAPI/Context+Parameters",
            "in": "header",
            "required": false
          },
          {
            "name": "TouchPoint",
            "type": "string",
            "description": "",
            "in": "header",
            "required": false
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "In case requested language in not supported (see Get/lounges for supported languages), by default, system will return response in 'English'",
            "in": "header",
            "required": true,
            "default": "EN"
          },
          {
            "name": "AFKL-TRAVEL-Channel",
            "type": "string",
            "description": "The consuming channel - Internet Checkin/Kiosk/Mobile et..  The channel is also required for executing business rules, and Printing Boarding and other documents.  Business rules and database settings are channel specific. And also in the formats of the printed documents are different for each channel.",
            "in": "header",
            "required": false
          },
          {
            "name": "X-Mashery-Oauth-Scope",
            "type": "string",
            "description": "This context is provided by Mashery. As long as the provided token remains valid, Mashery will inject the session scoped headers into the request before passing it on to the target API. The value of this header is determined and set by the AuthServ4Cust for B2C, and B2EAuthServer for B2E, at the moment of initial request of an OAuth2 Access Token. See example on Confluence https://confluence.eden.klm.com/display/KLMAPI/Context+Parameters",
            "in": "header",
            "required": false
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateAccessfortheLounge"
            }
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/lounges": {
      "get": {
        "operationId": "GetLoungesLounge",
        "summary": "",
        "tags": [
          "Lounge"
        ],
        "parameters": [
          {
            "name": "Lounge.name",
            "type": "string",
            "description": "",
            "in": "query",
            "required": true
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either KL or AF",
            "in": "header",
            "required": false,
            "default": "KL"
          },
          {
            "name": "AFKL-TRAVEL-Client-Id",
            "type": "string",
            "description": "The unique Device Id of the consuming application. Applicable Check-In Kiosks.",
            "in": "header",
            "required": false
          },
          {
            "name": "X-Mashery-Oauth-User-Context",
            "type": "string",
            "description": "This context is provided by Mashery. As long as the provided token remains valid, Mashery will inject the session scoped headers into the request before passing it on to the target API. This functionality is currently fairly limited, but it provides a way to propagate the Customer's information to propagate over all API's.  The value of this header is determined and set by the AuthServ4Cust for B2C, and B2EAuthServer for B2E, at the moment of initial request of an OAuth2 Access Token. See example on Confluence https://confluence.eden.klm.com/display/KLMAPI/Context+Parameters",
            "in": "header",
            "required": false
          },
          {
            "name": "TouchPoint",
            "type": "string",
            "description": "",
            "in": "header",
            "required": false
          },
          {
            "name": "Location.iataCode",
            "type": "string",
            "description": "",
            "in": "query",
            "required": true
          },
          {
            "name": "AFKL-TRAVEL-Channel",
            "type": "string",
            "description": "The consuming channel - Internet Checkin/Kiosk/Mobile et..  The channel is also required for executing business rules, and Printing Boarding and other documents.  Business rules and database settings are channel specific. And also in the formats of the printed documents are different for each channel.",
            "in": "header",
            "required": false
          },
          {
            "name": "ServicePoint.id",
            "type": "string",
            "description": "",
            "in": "query",
            "required": true
          },
          {
            "name": "X-Mashery-Oauth-Scope",
            "type": "string",
            "description": "This context is provided by Mashery. As long as the provided token remains valid, Mashery will inject the session scoped headers into the request before passing it on to the target API. The value of this header is determined and set by the AuthServ4Cust for B2C, and B2EAuthServer for B2E, at the moment of initial request of an OAuth2 Access Token. See example on Confluence https://confluence.eden.klm.com/display/KLMAPI/Context+Parameters",
            "in": "header",
            "required": false
          },
          {
            "name": "LoungeDevice.id",
            "type": "string",
            "description": "",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/lounges/{id}/accesses/{id2}": {
      "patch": {
        "operationId": "UpdateLoungeAccessResourceLounge",
        "summary": "",
        "tags": [
          "Lounge"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either KL or AF",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "AFKL-TRAVEL-Client-Id",
            "type": "string",
            "description": "The unique Device Id of the consuming application. Applicable Check-In Kiosks.",
            "in": "header",
            "required": false
          },
          {
            "name": "X-Mashery-Oauth-User-Context",
            "type": "string",
            "description": "This context is provided by Mashery. As long as the provided token remains valid, Mashery will inject the session scoped headers into the request before passing it on to the target API. This functionality is currently fairly limited, but it provides a way to propagate the Customer's information to propagate over all API's.  The value of this header is determined and set by the AuthServ4Cust for B2C, and B2EAuthServer for B2E, at the moment of initial request of an OAuth2 Access Token. See example on Confluence https://confluence.eden.klm.com/display/KLMAPI/Context+Parameters",
            "in": "header",
            "required": false
          },
          {
            "name": "TouchPoint",
            "type": "string",
            "description": "",
            "in": "header",
            "required": false
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "In case requested language in not supported (see Get/lounges for supported languages), by default, system will return response in 'English'",
            "in": "header",
            "required": true,
            "default": "EN"
          },
          {
            "name": "AFKL-TRAVEL-Channel",
            "type": "string",
            "description": "The consuming channel - Internet Checkin/Kiosk/Mobile et..  The channel is also required for executing business rules, and Printing Boarding and other documents.  Business rules and database settings are channel specific. And also in the formats of the printed documents are different for each channel.",
            "in": "header",
            "required": false
          },
          {
            "name": "X-Mashery-Oauth-Scope",
            "type": "string",
            "description": "This context is provided by Mashery. As long as the provided token remains valid, Mashery will inject the session scoped headers into the request before passing it on to the target API. The value of this header is determined and set by the AuthServ4Cust for B2C, and B2EAuthServer for B2E, at the moment of initial request of an OAuth2 Access Token. See example on Confluence https://confluence.eden.klm.com/display/KLMAPI/Context+Parameters",
            "in": "header",
            "required": false
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "id2",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/lounges/{id}/accesses/registrations": {
      "post": {
        "operationId": "CreateAccessandRegistrationfortheloungeLounge",
        "summary": "",
        "tags": [
          "Lounge"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either KL or AF",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "AFKL-TRAVEL-Client-Id",
            "type": "string",
            "description": "The unique Device Id of the consuming application. Applicable Check-In Kiosks.",
            "in": "header",
            "required": false
          },
          {
            "name": "X-Mashery-Oauth-User-Context",
            "type": "string",
            "description": "This context is provided by Mashery. As long as the provided token remains valid, Mashery will inject the session scoped headers into the request before passing it on to the target API. This functionality is currently fairly limited, but it provides a way to propagate the Customer's information to propagate over all API's.  The value of this header is determined and set by the AuthServ4Cust for B2C, and B2EAuthServer for B2E, at the moment of initial request of an OAuth2 Access Token. See example on Confluence https://confluence.eden.klm.com/display/KLMAPI/Context+Parameters",
            "in": "header",
            "required": false
          },
          {
            "name": "TouchPoint",
            "type": "string",
            "description": "",
            "in": "header",
            "required": false
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "In case requested language in not supported (see Get/lounges for supported languages), by default, system will return response in 'English'",
            "in": "header",
            "required": true,
            "default": "EN"
          },
          {
            "name": "AFKL-TRAVEL-Channel",
            "type": "string",
            "description": "The consuming channel - Internet Checkin/Kiosk/Mobile et..  The channel is also required for executing business rules, and Printing Boarding and other documents.  Business rules and database settings are channel specific. And also in the formats of the printed documents are different for each channel.",
            "in": "header",
            "required": false
          },
          {
            "name": "X-Mashery-Oauth-Scope",
            "type": "string",
            "description": "This context is provided by Mashery. As long as the provided token remains valid, Mashery will inject the session scoped headers into the request before passing it on to the target API. The value of this header is determined and set by the AuthServ4Cust for B2C, and B2EAuthServer for B2E, at the moment of initial request of an OAuth2 Access Token. See example on Confluence https://confluence.eden.klm.com/display/KLMAPI/Context+Parameters",
            "in": "header",
            "required": false
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateAccessandRegistrationforthelounge"
            }
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/lounges/{id}/registrations": {
      "post": {
        "operationId": "CreateRegistrationfortheloungeLounge",
        "summary": "",
        "tags": [
          "Lounge"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either KL or AF",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "AFKL-TRAVEL-Client-Id",
            "type": "string",
            "description": "The unique Device Id of the consuming application. Applicable Check-In Kiosks.",
            "in": "header",
            "required": false
          },
          {
            "name": "X-Mashery-Oauth-User-Context",
            "type": "string",
            "description": "This context is provided by Mashery. As long as the provided token remains valid, Mashery will inject the session scoped headers into the request before passing it on to the target API. This functionality is currently fairly limited, but it provides a way to propagate the Customer's information to propagate over all API's.  The value of this header is determined and set by the AuthServ4Cust for B2C, and B2EAuthServer for B2E, at the moment of initial request of an OAuth2 Access Token. See example on Confluence https://confluence.eden.klm.com/display/KLMAPI/Context+Parameters",
            "in": "header",
            "required": false
          },
          {
            "name": "TouchPoint",
            "type": "string",
            "description": "",
            "in": "header",
            "required": false
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "In case requested language in not supported (see Get/lounges for supported languages), by default, system will return response in 'English'",
            "in": "header",
            "required": true,
            "default": "EN"
          },
          {
            "name": "AFKL-TRAVEL-Channel",
            "type": "string",
            "description": "The consuming channel - Internet Checkin/Kiosk/Mobile et..  The channel is also required for executing business rules, and Printing Boarding and other documents.  Business rules and database settings are channel specific. And also in the formats of the printed documents are different for each channel.",
            "in": "header",
            "required": false
          },
          {
            "name": "X-Mashery-Oauth-Scope",
            "type": "string",
            "description": "This context is provided by Mashery. As long as the provided token remains valid, Mashery will inject the session scoped headers into the request before passing it on to the target API. The value of this header is determined and set by the AuthServ4Cust for B2C, and B2EAuthServer for B2E, at the moment of initial request of an OAuth2 Access Token. See example on Confluence https://confluence.eden.klm.com/display/KLMAPI/Context+Parameters",
            "in": "header",
            "required": false
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateRegistrationforthelounge"
            }
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/flightstatus/{flightId}": {
      "get": {
        "operationId": "FlightStatusFlightStatus",
        "summary": "Return flight status for the given {flightId}",
        "tags": [
          "Flight Status"
        ],
        "parameters": [
          {
            "name": "flightId",
            "type": "string",
            "description": "The ID of the flight. Example: KL0641+2016-10-14",
            "in": "path",
            "required": true
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;version=com.afkl.operationalflight.v1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;version=com.afkl.operationalflight.v1"
          },
          {
            "name": "origin",
            "type": "string",
            "description": "Flight departing from IATA station code. Example: AMS",
            "in": "header",
            "required": false,
            "default": "AMS"
          },
          {
            "name": "expand",
            "type": "string",
            "description": "Trajectory information is returned for the given {flightId}. Supported string values: trajectory",
            "in": "header",
            "required": false,
            "default": "trajectory"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/flightstatus": {
      "get": {
        "operationId": "FlightsFlightStatus",
        "summary": "Return a list of flights matching the given parame...",
        "description": "Return a list of flights matching the given parameters",
        "tags": [
          "Flight Status"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Use application/hal+json;version=com.afkl.operationalflight.v1",
            "in": "header",
            "required": true,
            "default": "application/hal+json;version=com.afkl.operationalflight.v1"
          },
          {
            "name": "carrierCode",
            "type": "string",
            "description": "The carrier code. Example for Air France: AF",
            "in": "header",
            "required": false,
            "default": "AF"
          },
          {
            "name": "flightNumber",
            "type": "string",
            "description": "The flight number which is four digits long, when smaller prefix with zero. Example: 0641",
            "in": "header",
            "required": false
          },
          {
            "name": "operationalSuffix",
            "type": "string",
            "description": "This parameter is currently not operational, the operational suffix. Values can be: A, D.",
            "in": "header",
            "required": false
          },
          {
            "name": "origin",
            "type": "string",
            "description": "Flights departing from IATA station code. Example: AMS",
            "in": "header",
            "required": false
          },
          {
            "name": "destination",
            "type": "string",
            "description": "Flights arriving at IATA station code. Example: JFK",
            "in": "header",
            "required": false
          },
          {
            "name": "startRange",
            "type": "string",
            "description": "The start range using pattern: yyyy-MM-dd'T'HH:mm:ssZ",
            "in": "header",
            "required": false
          },
          {
            "name": "endRange",
            "type": "string",
            "description": "The end range using pattern: yyyy-MM-dd'T'HH:mm:ssZ",
            "in": "header",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/checkingroups/{id}": {
      "post": {
        "operationId": "AddPassengertoCheckinGroupCheck-inAPI",
        "summary": "",
        "tags": [
          "Check-in API"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either AF or KL",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "AFKL-TRAVEL-Client-Id",
            "type": "string",
            "description": "The unique Device Id of the consuming application.",
            "in": "header",
            "required": false
          },
          {
            "name": "AFKL-TRAVEL-Channel",
            "type": "string",
            "description": "The consuming channel - Internet Checkin/Kiosk/Mobile et..  The channel is also required for executing business rules, and Printing Boarding and other documents.  Business rules and database settings are channel specific. And also in the formats of the printed documents are different for each channel.",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddPassengertoCheckinGroup"
            }
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "operationId": "UpdatePassengerinformationCheck-inAPI",
        "summary": "",
        "tags": [
          "Check-in API"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either KL or AF",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "AFKL-TRAVEL-Client-Id",
            "type": "string",
            "description": "The unique Device Id of the consuming application. Applicable Check-In Kiosks.",
            "in": "header",
            "required": false
          },
          {
            "name": "AFKL-TRAVEL-Channel",
            "type": "string",
            "description": "The consuming channel - Internet Checkin/Kiosk/Mobile et..  The channel is also required for executing business rules, and Printing Boarding and other documents.  Business rules and database settings are channel specific. And also in the formats of the printed documents are different for each channel.",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "RetrieveAlternativeflightsforSSCOPCheck-inAPI",
        "summary": "",
        "tags": [
          "Check-in API"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either KL or AF",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "AFKL-TRAVEL-Client-Id",
            "type": "string",
            "description": "The unique Device Id of the consuming application. Applicable Check-In Kiosks.",
            "in": "header",
            "required": false
          },
          {
            "name": "AFKL-TRAVEL-Channel",
            "type": "string",
            "description": "The consuming channel - Internet Checkin/Kiosk/Mobile et..  The channel is also required for executing business rules, and Printing Boarding and other documents.  Business rules and database settings are channel specific. And also in the formats of the printed documents are different for each channel.",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/checkingroups/{id}/checkindocuments": {
      "get": {
        "operationId": "CheckinDocumentsOptionsCheck-inAPI",
        "summary": "",
        "tags": [
          "Check-in API"
        ],
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "description": "if only specific checkindocuments are required, specify the required documents. Without the include/exclude parameter all available/eligible checkin documents will be returned.",
            "in": "query",
            "required": false
          },
          {
            "name": "view",
            "type": "string",
            "description": "",
            "in": "query",
            "required": true,
            "default": "checkindocuments"
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either KL or AF",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "AFKL-TRAVEL-Client-Id",
            "type": "string",
            "description": "The unique Device Id of the consuming application. Applicable Check-In Kiosks.",
            "in": "header",
            "required": false
          },
          {
            "name": "exclude",
            "type": "string",
            "description": "if specific checkindocuments are not required, specify the not required documents. Without the include/exclude parameter all available/eligible checkin documents will be returned.",
            "in": "query",
            "required": false
          },
          {
            "name": "AFKL-TRAVEL-Channel",
            "type": "string",
            "description": "The consuming channel - Internet Checkin/Kiosk/Mobile et..  The channel is also required for executing business rules, and Printing Boarding and other documents.  Business rules and database settings are channel specific. And also in the formats of the printed documents are different for each channel.",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "operationId": "SendOutCheckinDocumentsCheck-inAPI",
        "summary": "",
        "tags": [
          "Check-in API"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either KL or AF",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "AFKL-TRAVEL-Client-Id",
            "type": "string",
            "description": "The unique Device Id of the consuming application. Applicable Check-In Kiosks.",
            "in": "header",
            "required": false
          },
          {
            "name": "AFKL-TRAVEL-Channel",
            "type": "string",
            "description": "The consuming channel - Internet Checkin/Kiosk/Mobile et..  The channel is also required for executing business rules, and Printing Boarding and other documents.  Business rules and database settings are channel specific. And also in the formats of the printed documents are different for each channel.",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SendOutCheckinDocuments"
            }
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/checkingroups": {
      "post": {
        "operationId": "IdentifyPassengerbyReservationCheck-inAPI",
        "summary": "",
        "tags": [
          "Check-in API"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either AF or KL",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "AFKL-TRAVEL-Client-Id",
            "type": "string",
            "description": "The unique Device Id of the consuming application. Applicable Check-In Kiosks.",
            "in": "header",
            "required": false
          },
          {
            "name": "skip",
            "type": "string",
            "description": "This optional parameter is to be set when the Create Shop flow needs to be avoided.  This will save altea calls and improve performance. Without the shop link, consumers will not be able to do seat change/buy products.  when this parameter is not passed, default behavior is that shop will be created when applicable(after checkin).",
            "in": "query",
            "required": false,
            "default": "shop"
          },
          {
            "name": "AFKL-TRAVEL-Channel",
            "type": "string",
            "description": "The consuming channel - Internet Checkin/Kiosk/Mobile et..  The channel is also required for executing business rules, and Printing Boarding and other documents.  Business rules and database settings are channel specific. And also in the formats of the printed documents are different for each channel.",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/IdentifyPassengerbyReservation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "RetrieveReferenceDataCheck-inAPI",
        "summary": "",
        "tags": [
          "Check-in API"
        ],
        "parameters": [
          {
            "name": "view",
            "type": "string",
            "description": "",
            "in": "query",
            "required": true,
            "default": "referencedata"
          },
          {
            "name": "ReferenceData.role",
            "type": "string",
            "description": "view=referencedata can be extended by a specific type of reference data if not all are required. Example view=referencedata&amp;type=Title",
            "in": "query",
            "required": false,
            "default": "<specific type>"
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either KL or AF",
            "in": "header",
            "required": true
          },
          {
            "name": "AFKL-TRAVEL-Client-Id",
            "type": "string",
            "description": "The unique Device Id of the consuming application. Applicable Check-In Kiosks.",
            "in": "header",
            "required": false
          },
          {
            "name": "AFKL-TRAVEL-Channel",
            "type": "string",
            "description": "The consuming channel - Internet Checkin/Kiosk/Mobile et..  The channel is also required for executing business rules, and Printing Boarding and other documents.  Business rules and database settings are channel specific. And also in the formats of the printed documents are different for each channel.",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/checkingroups/{id}/checkindocuments/{id2}/boardingpasses/{id3}": {
      "get": {
        "operationId": "PassbookBoardingpassCheck-inAPI",
        "summary": "",
        "tags": [
          "Check-in API"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Accept header for passbook",
            "in": "header",
            "required": true,
            "default": "application/vnd.apple.pkpass"
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Either AF OR KL",
            "in": "header",
            "required": true,
            "default": "KL"
          },
          {
            "name": "AFKL-TRAVEL-Client-Id",
            "type": "string",
            "description": "The unique Device Id of the consuming application. Applicable Check-In Kiosks.",
            "in": "header",
            "required": false
          },
          {
            "name": "AFKL-TRAVEL-Channel",
            "type": "string",
            "description": "The consuming channel - Internet Checkin/Kiosk/Mobile et..  The channel is also required for executing business rules, and Printing Boarding and other documents.  Business rules and database settings are channel specific. And also in the formats of the printed documents are different for each channel.",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "id2",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "id3",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/customers/{customerId}/flight-reservations": {
      "get": {
        "operationId": "FlightReservationsCustomers",
        "summary": "",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "customerId",
            "type": "string",
            "description": "",
            "in": "path",
            "required": true
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "",
            "in": "header",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/reservations": {
      "get": {
        "operationId": "QueryingforareservationReservations",
        "summary": "",
        "tags": [
          "Reservations"
        ],
        "parameters": [
          {
            "name": "lastName",
            "type": "string",
            "description": "The last name of one of the passengers in the reservation.",
            "in": "query",
            "required": true
          },
          {
            "name": "firstName",
            "type": "string",
            "description": "The first name associated with the passenger.  Used to uniquely identify a passenger in the special reservation type 'group reservation'.",
            "in": "query",
            "required": false
          },
          {
            "name": "ticketNumber",
            "type": "string",
            "description": "The ticket number associated with the passenger.   Used to uniquely identify a passenger in the special reservation type 'group reservation'.",
            "in": "query",
            "required": false
          },
          {
            "name": "Accept-version",
            "type": "string",
            "description": "",
            "in": "header",
            "required": false
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "",
            "in": "header",
            "required": true
          },
          {
            "name": "bookingCode",
            "type": "string",
            "description": "The code uniquely identifying a reservation within the reservation system. Note that bookingCodes tend to get re-used for other reservations some time after the last segment in it has been flown.",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/RequestInvoice": {
      "post": {
        "operationId": "RequestinganInvoiceReservations",
        "summary": "",
        "tags": [
          "Reservations"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RequestinganInvoice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/reservations/{reservationid}/itinerary?action=rebookingeligibility": {
      "get": {
        "operationId": "RetrievingeligibilityforrebookingReservations",
        "summary": "",
        "tags": [
          "Reservations"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "To specify the version of the reservation API to use. The API will use a default version when not specified.   E.g. to use v2 pass this blurb: <i>application/hal+json;profile=com.afklm.reservation.v</i>2",
            "in": "header",
            "required": false
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "ISO language - localizes content in the response. When not specified will assume 'en'.  Sample values: en-GB, nl, ru-RU",
            "in": "header",
            "required": true
          },
          {
            "name": "reservationid",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/AdvancePassengerInformation": {
      "post": {
        "operationId": "UpdatingAPISReservations",
        "summary": "",
        "tags": [
          "Reservations"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdatingAPIS"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/": {
      "post": {
        "operationId": "UpdatingcontactdetailsReservations",
        "summary": "",
        "tags": [
          "Reservations"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "RetrievingalistofreservationsReservations",
        "summary": "",
        "tags": [
          "Reservations"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/Membership": {
      "post": {
        "operationId": "UpdatingloyaltymembershipsReservations",
        "summary": "",
        "tags": [
          "Reservations"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Updatingloyaltymemberships"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/amenities": {
      "get": {
        "operationId": "getAmenitiesUsingGETInspireAPI",
        "summary": "Return the list of amenities (label, pictogram, ca...",
        "description": "Return the list of amenities (label, pictogram, category) for one or multiple ACV. If you target one cabin class you can specify it; otherwise, the response will contain amenities for all cabin classes. To have a shorter response, you can use the 'limit' parameter.",
        "tags": [
          "Inspire API"
        ],
        "parameters": [
          {
            "name": "cabinClass",
            "type": "string",
            "description": "Cabin class, 1 letter (Y: Economy, W: Premium Economy, J: Business, P: La Premiere)",
            "in": "query",
            "required": false
          },
          {
            "name": "acv",
            "type": "string",
            "description": "Aicraft Configuration Version, 3 alphanumeric characters",
            "in": "query",
            "required": true
          },
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Host calling the API (AF or KL)",
            "in": "query",
            "required": true,
            "default": "AF"
          },
          {
            "name": "AFKL-TRAVEL-Market",
            "type": "string",
            "description": "The market code on 2 chars; if false, will use the locale' country",
            "in": "query",
            "required": false,
            "default": "FR"
          },
          {
            "name": "limit",
            "type": "string",
            "description": "Limit (>= 0)",
            "in": "query",
            "required": false
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "The locale",
            "in": "query",
            "required": true,
            "default": "fr-FR"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/about": {
      "get": {
        "operationId": "getAboutUsingGETInspireAPI",
        "summary": "",
        "tags": [
          "Inspire API"
        ],
        "parameters": [
          {
            "name": "AFKL-TRAVEL-Host",
            "type": "string",
            "description": "Host calling the API (AF or KL)",
            "in": "query",
            "required": true,
            "default": "AF"
          },
          {
            "name": "AFKL-TRAVEL-Market",
            "type": "string",
            "description": "The market code on 2 chars; if false, will use the locale' country",
            "in": "query",
            "required": false,
            "default": "FR"
          },
          {
            "name": "Accept-Language",
            "type": "string",
            "description": "The locale",
            "in": "query",
            "required": true,
            "default": "fr-FR"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "cities": {
      "type": "object",
      "properties": {}
    },
    "countries": {
      "type": "object",
      "properties": {}
    },
    "ShoppingCarts": {
      "type": "object",
      "properties": {}
    },
    "ReferenceData": {
      "type": "object",
      "properties": {}
    },
    "TaxBreakdown": {
      "type": "object",
      "properties": {}
    },
    "FP/UpsellOffers": {
      "type": "object",
      "properties": {}
    },
    "TicketConditions": {
      "type": "object",
      "properties": {}
    },
    "Customers": {
      "type": "object",
      "properties": {}
    },
    "FO/LowestFareOffers": {
      "type": "object",
      "properties": {}
    },
    "LowestFareOffers": {
      "description": "Lowest-fare-offers request the lowest available fare offers for the given details.",
      "type": "object",
      "properties": {
        "cabinClass": {
          "description": "Code for cabin class. ",
          "type": "string",
          "enum": [
            "ECONOMY",
            "BUSINESS"
          ]
        },
        "discountCode": {
          "description": "code for IDC discount.",
          "type": "string"
        },
        "passengerCount": {
          "description": "Describes the number of passengers.  Total number of passengers of type ADULT &amp; CHILD must be between 1 and maximumNumberOfSeats. Number of INFANTS must be &lt;= number of ADULTS.",
          "type": "object",
          "properties": {
            "YOUNG_ADULT": {
              "description": "Number of young adults. 12-15 years. ",
              "type": "integer",
              "default": 0
            },
            "INFANT": {
              "description": "Number of infants. Under 2 years.",
              "type": "integer",
              "default": 0
            },
            "CHILD": {
              "description": "Number of children. 2-11 years.",
              "type": "integer",
              "default": 0
            },
            "ADULT": {
              "description": "Number of adults. 16 years and older.",
              "type": "integer",
              "default": 1
            }
          },
          "required": [
            "YOUNG_ADULT",
            "INFANT",
            "CHILD",
            "ADULT"
          ]
        },
        "currency": {
          "description": "Indicates the currency to be used for prices in response.  Three letter currency code according to ISO 4217.",
          "type": "string",
          "default": "EUR"
        },
        "minimumAccuracy": {
          "description": "Threshold for accuracy. Overrides default threshold. When accuracy is below supplied threshold, backend will switch to more accurate source.  NB Currently TripPlanner GetBudgetSearch is fast, less accurate source and TripPlanner GetData is more accurate source.",
          "type": "integer"
        },
        "type": {
          "description": "Indicates the type of request being fired. See LowestFareType.",
          "type": "string",
          "enum": [
            "OVERALL",
            "MONTH",
            "DAY"
          ]
        },
        "requestedConnections": {
          "maxItems": 6,
          "type": "array",
          "items": {
            "description": "Specification of a connection as part of request. Connection is specified by EITHER origin and destination (any flight) OR ordered list of segments (selected flight).",
            "type": "object",
            "properties": {
              "maxDaysOfStay": {
                "description": "Maximum days of stay at the destination of the Connection.",
                "type": "integer"
              },
              "minDaysOfStay": {
                "description": "Minimum days of stay at the destination of the Connection.",
                "type": "integer"
              },
              "dateInterval": {
                "description": "Format is: 'YYYY-MM[-DD]/YYYY-MM[-DD]'.  Date interval describes the range of dates that should be used to find lowest fares/flights for the Connection. Maximum 60 days interval if Type is 'Day'",
                "type": "string"
              },
              "origin": {
                "description": "StationView is helper object. StationView is specified by EITHER City OR Airport.",
                "type": "object",
                "properties": {
                  "airport": {
                    "description": "Airport is an IATA defined location. Airport can actually be a location of type: 1 - Off-Line Point 2 - Metropolitan Area 3 - Airport 4 - Bus Station 5 - Railway Station 6 - Heliport 7 - Ferry Port ",
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "IATA location code.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "code"
                    ]
                  }
                }
              },
              "destination": {
                "description": "StationView is helper object. StationView is specified by EITHER City OR Airport.",
                "type": "object",
                "properties": {
                  "airport": {
                    "description": "Airport is an IATA defined location. Airport can actually be a location of type: 1 - Off-Line Point 2 - Metropolitan Area 3 - Airport 4 - Bus Station 5 - Railway Station 6 - Heliport 7 - Ferry Port ",
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "IATA location code.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "code"
                    ]
                  }
                }
              },
              "segments": {
                "type": "array",
                "items": {
                  "description": "Segment is a single flight from its origin to its destination with possibly stops in between.",
                  "type": "object",
                  "properties": {
                    "farebase": {
                      "description": "A <b>fare basis code</b> or <b>FBC</b> specifies the rules of an airline's fare. Fare codes starts with a single letter, called a booking code, representing the type of ticket and fare, followed by optional letters and digits, representing a specific set of fare rules, for instance how many days in advance the ticket needs to be booked, corporate discounts, or other special promotional elements (<a href='http://en.wikipedia.org/wiki/Fare_basis_code'><font color='#0000ff'><u>http://en.wikipedia.org/wiki/Fare_basis_code</u></font></a>)",
                      "type": "object"
                    },
                    "origin": {
                      "description": "Airport is an IATA defined location. Airport can actually be a location of type: 1 - Off-Line Point 2 - Metropolitan Area 3 - Airport 4 - Bus Station 5 - Railway Station 6 - Heliport 7 - Ferry Port ",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "IATA location code.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "code"
                      ]
                    },
                    "destination": {
                      "description": "Airport is an IATA defined location. Airport can actually be a location of type: 1 - Off-Line Point 2 - Metropolitan Area 3 - Airport 4 - Bus Station 5 - Railway Station 6 - Heliport 7 - Ferry Port ",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "IATA location code.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "code"
                      ]
                    },
                    "departureDateTime": {
                      "format": "date-time",
                      "description": "DateTime of departure of the segment flight. It is specified as local time at origin of the segment.",
                      "type": "string"
                    },
                    "marketingFlight": {
                      "description": "Marketing representation of the flight.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Flight number. Max of four digits, when less than 3 then prefix with zeroes up till 3 digits. For example: 006, 022, 1001.",
                          "type": "string"
                        },
                        "carrier": {
                          "description": "Carrier that is connected to the flight. Can be different for MarketingFlight and OperatingFlight.",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "IATA airline code.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "code"
                          ]
                        }
                      },
                      "required": [
                        "number",
                        "carrier"
                      ]
                    }
                  },
                  "required": [
                    "farebase",
                    "origin",
                    "destination",
                    "departureDateTime",
                    "marketingFlight"
                  ]
                }
              }
            },
            "required": [
              "dateInterval"
            ]
          }
        },
        "shortest": {
          "description": "Indicates whether shortest route should be found",
          "type": "boolean"
        }
      },
      "required": [
        "cabinClass",
        "passengerCount",
        "currency",
        "type",
        "requestedConnections"
      ]
    },
    "FO/AvailableOffers": {
      "type": "object",
      "properties": {}
    },
    "AvailableOffers": {
      "description": "Available-offers request the lowest available flight offers for the given details. Request contains number of passengers per type, cabin class, currency and a list of connections.",
      "type": "object",
      "properties": {
        "cabinClass": {
          "description": "Code for cabin class. Either ECONOMY or BUSINESS for now.",
          "type": "string",
          "enum": [
            "ECONOMY",
            "BUSINESS"
          ]
        },
        "discountCode": {
          "description": "Internet discount code",
          "type": "string"
        },
        "passengerCount": {
          "description": "Describes the number of passengers. Total number of passengers must be 1-9.",
          "type": "object",
          "properties": {
            "YOUNG_ADULT": {
              "description": "Number of young adults. 12-15 years.",
              "type": "integer",
              "default": 0
            },
            "INFANT": {
              "description": "Number of infants. Under 2 years.",
              "type": "integer",
              "default": 0
            },
            "CHILD": {
              "description": "Number of children. 2-11 years.",
              "type": "integer",
              "default": 0
            },
            "ADULT": {
              "description": "Number of adults. 16 years and older.",
              "type": "integer",
              "default": 1
            }
          },
          "required": [
            "YOUNG_ADULT",
            "INFANT",
            "CHILD",
            "ADULT"
          ]
        },
        "currency": {
          "description": "Indicates the currency to be used for prices in response.  Three letter currency code according to ISO 4217.",
          "type": "string",
          "default": "EUR"
        },
        "minimumAccuracy": {
          "description": "Minimum accuracy requested as percentage.",
          "type": "integer"
        },
        "requestedConnections": {
          "maxItems": 6,
          "type": "array",
          "items": {
            "description": "Specification of a connection as part of request. Connection is specified by EITHER origin and destination (any flight) OR ordered list of segments (selected flight).",
            "type": "object",
            "properties": {
              "origin": {
                "description": "StationView is helper object. StationView is specified by EITHER City OR Airport.",
                "type": "object",
                "properties": {
                  "airport": {
                    "description": "Airport is an IATA defined location. Airport can actually be a location of type: 1 - Off-Line Point 2 - Metropolitan Area 3 - Airport 4 - Bus Station 5 - Railway Station 6 - Heliport 7 - Ferry Port ",
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "IATA location code",
                        "type": "string"
                      }
                    },
                    "required": [
                      "code"
                    ]
                  }
                }
              },
              "destination": {
                "description": "StationView is helper object. StationView is specified by EITHER City OR Airport.",
                "type": "object",
                "properties": {
                  "airport": {
                    "description": "Airport is an IATA defined location. Airport can actually be a location of type: 1 - Off-Line Point 2 - Metropolitan Area 3 - Airport 4 - Bus Station 5 - Railway Station 6 - Heliport 7 - Ferry Port ",
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "IATA location code",
                        "type": "string"
                      }
                    },
                    "required": [
                      "code"
                    ]
                  }
                }
              },
              "departureDate": {
                "description": "String representing the departure date requested for the Connection. Format is: 'YYYY-MM[-DD]/YYYY-MM[-DD]",
                "type": "string"
              },
              "segments": {
                "type": "array",
                "items": {
                  "description": "Segment is a direct flight from its origin to its destination.",
                  "type": "object",
                  "properties": {
                    "farebase": {
                      "type": "object"
                    },
                    "origin": {
                      "description": "Airport is an IATA defined location. Airport can actually be a location of type: 1 - Off-Line Point 2 - Metropolitan Area 3 - Airport 4 - Bus Station 5 - Railway Station 6 - Heliport 7 - Ferry Port ",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "IATA location code",
                          "type": "string"
                        }
                      },
                      "required": [
                        "code"
                      ]
                    },
                    "destination": {
                      "description": "Airport is an IATA defined location. Airport can actually be a location of type: 1 - Off-Line Point 2 - Metropolitan Area 3 - Airport 4 - Bus Station 5 - Railway Station 6 - Heliport 7 - Ferry Port ",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "IATA location code",
                          "type": "string"
                        }
                      },
                      "required": [
                        "code"
                      ]
                    },
                    "departureDateTime": {
                      "format": "date-time",
                      "description": "DateTime of departure of the segment flight. It is specified as local time at origin of the segment.",
                      "type": "string"
                    },
                    "marketingFlight": {
                      "description": "Marketing representation of the flight.",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Max of four digits, when less than 3 then prefix with zeroes up till 3 digits. For example: 006, 022, 1001.",
                          "type": "string"
                        },
                        "carrier": {
                          "description": "Carrier that is connected to the flight. Can be different for MarketingFlight and OperatingFlight.",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "IATA airline code",
                              "type": "string"
                            }
                          },
                          "required": [
                            "code"
                          ]
                        }
                      },
                      "required": [
                        "number",
                        "carrier"
                      ]
                    }
                  },
                  "required": [
                    "origin",
                    "destination",
                    "departureDateTime",
                    "marketingFlight"
                  ]
                }
              }
            }
          }
        },
        "shortest": {
          "description": "Indicates whether shortest route should be found",
          "type": "boolean"
        }
      },
      "required": [
        "cabinClass",
        "currency"
      ]
    },
    "UpsellOffers": {
      "type": "object",
      "properties": {
        "cabinClass": {
          "type": "string",
          "enum": [
            "ECONOMY",
            "BUSINESS"
          ]
        },
        "passengerCount": {
          "description": "Describes the number of passengers. Total number of passengers must be 1-9.",
          "type": "object",
          "properties": {
            "YOUNG_ADULT": {
              "description": "Number of young adults. 12-15 years.",
              "type": "integer",
              "default": 0
            },
            "INFANT": {
              "description": "Number of infants. Under 2 years.",
              "type": "integer",
              "default": 0
            },
            "CHILD": {
              "description": "Number of children. 2-11 years.",
              "type": "integer",
              "default": 0
            },
            "ADULT": {
              "description": "Number of adults. 16 years and older.",
              "type": "integer",
              "default": 1
            }
          },
          "required": [
            "YOUNG_ADULT",
            "INFANT",
            "CHILD",
            "ADULT"
          ]
        },
        "requestedConnections": {
          "maxItems": 6,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "farebase": {
                "type": "string"
              },
              "segments": {
                "type": "array",
                "items": {
                  "description": "Segment is a single flight from its origin to its destination with possibly stops in between.",
                  "type": "object",
                  "properties": {
                    "origin": {
                      "description": "Airport is an IATA defined location. Airport can actually be a location of type: 1 - Off-Line Point 2 - Metropolitan Area 3 - Airport 4 - Bus Station 5 - Railway Station 6 - Heliport 7 - Ferry Port ",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "IATA location code",
                          "type": "string"
                        }
                      },
                      "required": [
                        "code"
                      ]
                    },
                    "destination": {
                      "description": "Airport is an IATA defined location. Airport can actually be a location of type: 1 - Off-Line Point 2 - Metropolitan Area 3 - Airport 4 - Bus Station 5 - Railway Station 6 - Heliport 7 - Ferry Port ",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "IATA location code",
                          "type": "string"
                        }
                      },
                      "required": [
                        "code"
                      ]
                    },
                    "departureDateTime": {
                      "format": "date-time",
                      "description": "The date and time of the departure of the segment in local time of the origin. Format is: 'YYYY-MM[-DD]/YYYY-MM[-DD]'",
                      "type": "string"
                    },
                    "marketingFlightNumber": {
                      "description": "Max of four digits, when less than 3 then prefix with zeroes up till 3 digits. For example: 006, 022, 1001.",
                      "type": "string"
                    },
                    "marketingFlightCarrier": {
                      "description": "IATA airline code",
                      "type": "string"
                    },
                    "sellingClass": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "origin",
                    "destination",
                    "departureDateTime",
                    "marketingFlightNumber",
                    "marketingFlightCarrier",
                    "sellingClass"
                  ]
                }
              }
            },
            "required": [
              "farebase"
            ]
          }
        }
      },
      "required": [
        "cabinClass",
        "passengerCount",
        "requestedConnections"
      ]
    },
    "CreateAccessfortheLounge": {
      "type": "object",
      "properties": {
        "loungeDevice": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "servicePoint": {
              "description": "'Location'",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "required": [
            "id",
            "servicePoint"
          ]
        },
        "identification": {
          "type": "object",
          "properties": {
            "boardingPass": {
              "type": "object",
              "properties": {
                "bcbp": {
                  "description": "Data from barcode on boardingPass",
                  "type": "string"
                }
              },
              "required": [
                "bcbp"
              ]
            }
          },
          "required": [
            "boardingPass"
          ]
        },
        "individual": {
          "description": "At least, 1 of the attribute must be filled, when Individual is included in the request",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "globalTrackingId": {
              "type": "string"
            },
            "trackingId": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "loungeDevice",
        "identification"
      ]
    },
    "GetLounges": {
      "type": "object",
      "properties": {}
    },
    "UpdateLoungeAccessResource": {
      "type": "object",
      "properties": {
        "access": {
          "type": "object",
          "properties": {
            "loungeDevice": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "servicePoint": {
                  "description": "'Location'",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "required": [
                "id",
                "servicePoint"
              ]
            },
            "cancelled": {
              "type": "boolean"
            }
          },
          "required": [
            "loungeDevice",
            "cancelled"
          ]
        }
      },
      "required": [
        "access"
      ]
    },
    "CreateAccessandRegistrationforthelounge": {
      "type": "object",
      "properties": {
        "loungeDevice": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "servicePoint": {
              "description": "'Location'",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "required": [
            "id",
            "servicePoint"
          ]
        },
        "access": {
          "type": "object",
          "properties": {
            "identification": {
              "type": "object",
              "properties": {
                "boardingPass": {
                  "type": "object",
                  "properties": {
                    "bcbp": {
                      "description": "Data from barcode on boardingPass",
                      "type": "string"
                    }
                  },
                  "required": [
                    "bcbp"
                  ]
                }
              },
              "required": [
                "boardingPass"
              ]
            },
            "host": {
              "description": "Only applicable when 'accesses/registrations' is called to perform access/registration of the guest. When so, Customer.Access.id is the host id (of the host who is inviting a guest)",
              "type": "object",
              "properties": {
                "access": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "required": [
                "access"
              ]
            }
          },
          "required": [
            "identification"
          ]
        }
      },
      "required": [
        "loungeDevice",
        "access"
      ]
    },
    "CreateRegistrationforthelounge": {
      "type": "object",
      "properties": {
        "loungeDevice": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "servicePoint": {
              "description": "'Location'",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "required": [
            "id",
            "servicePoint"
          ]
        },
        "access": {
          "type": "object",
          "properties": {
            "individual": {
              "description": "At least, 1 of the attribute must be filled, when Individual is included in the request",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "globalTrackingId": {
                  "type": "string"
                },
                "trackingId": {
                  "type": "string"
                }
              }
            },
            "id": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "loungeDevice",
        "access"
      ]
    },
    "AddPassengertoCheckinGroup": {
      "type": "object",
      "properties": {
        "passenger": {
          "type": "object",
          "properties": {
            "tickets": {
              "type": "array",
              "items": {
                "description": "An airline ticket is a document, issued by an airline or a travel agency, to confirm that an individual has purchased a seat on a flight on an aircraft.  In this POST request only the first Ticket is processed. Additional Tickets are ignored",
                "type": "object",
                "properties": {
                  "ticketBooklets": {
                    "maxItems": 99,
                    "type": "array",
                    "items": {
                      "description": "A set of max 4 coupons belonging to a specific ticket. if one ticket holds multiple booklets, then it is aka conjunction ticket. In this POST request only the first TicketBooklet is processed. Additional TicketBooklets are ignored",
                      "type": "object",
                      "properties": {
                        "number": {
                          "description": "Format of a valid Ticket Number is: Length 13 or 14 numeric characters without any blank/white space ",
                          "type": "string"
                        }
                      },
                      "required": [
                        "number"
                      ]
                    }
                  }
                },
                "required": [
                  "ticketBooklets"
                ]
              }
            }
          },
          "required": [
            "tickets"
          ]
        }
      },
      "required": [
        "passenger"
      ]
    },
    "CheckinDocumentsOptions": {
      "type": "object",
      "properties": {}
    },
    "CheckinPassenger": {
      "type": "object",
      "properties": {
        "acceptanceStatus": {
          "description": "Collection of passengers from one or more reservations treated as a group for check-in related actions ",
          "type": "object",
          "properties": {
            "selectedForCheckinGroup": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "gender": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "enum": [
                          "MALE",
                          "FEMALE"
                        ]
                      }
                    },
                    "required": [
                      "code"
                    ]
                  },
                  "id": {
                    "description": "The generated unique ID",
                    "type": "string"
                  },
                  "infant": {
                    "type": "object",
                    "properties": {
                      "gender": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "enum": [
                              "MALE",
                              "FEMALE"
                            ]
                          }
                        },
                        "required": [
                          "code"
                        ]
                      },
                      "id": {
                        "description": "The generated unique ID",
                        "type": "string"
                      },
                      "infant": {
                        "type": "object",
                        "properties": {
                          "gender": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "enum": [
                                  "MALE",
                                  "FEMALE"
                                ]
                              }
                            },
                            "required": [
                              "code"
                            ]
                          },
                          "id": {
                            "description": "The generated unique ID",
                            "type": "string"
                          },
                          "infant": {
                            "type": "object",
                            "properties": {
                              "gender": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "enum": [
                                      "MALE",
                                      "FEMALE"
                                    ]
                                  }
                                },
                                "required": [
                                  "code"
                                ]
                              },
                              "id": {
                                "description": "The generated unique ID",
                                "type": "string"
                              },
                              "type": {
                                "description": "Formally, the passenger type needs to be compliant with the dateOfBirth and arrivalDateTime of the last connection in the reservation. This is beyond the scope of check-in, where the last connection in the Reservation is not known.",
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "enum": [
                                      "ADULT",
                                      "CHILD",
                                      "INFANT"
                                    ]
                                  }
                                },
                                "required": [
                                  "code"
                                ]
                              },
                              "termsAndConditions": {
                                "type": "array",
                                "items": {
                                  "description": "Show a specific condition that a Passenger or the complete CheckinGroup must confirm to able to get accepted. Example: Typological Fares (Passenger on Student Fare needs to present Student Card to airline employee), Security questions",
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "description": "Unique code of the condition within the checkingroups resource instance ",
                                      "type": "string"
                                    },
                                    "confirmed": {
                                      "description": "Indicates if condition has been confirmed",
                                      "type": "boolean"
                                    }
                                  },
                                  "required": [
                                    "code"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "gender",
                              "id",
                              "type"
                            ]
                          },
                          "type": {
                            "description": "Formally, the passenger type needs to be compliant with the dateOfBirth and arrivalDateTime of the last connection in the reservation. This is beyond the scope of check-in, where the last connection in the Reservation is not known.",
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "enum": [
                                  "ADULT",
                                  "CHILD",
                                  "INFANT"
                                ]
                              }
                            },
                            "required": [
                              "code"
                            ]
                          },
                          "termsAndConditions": {
                            "type": "array",
                            "items": {
                              "description": "Show a specific condition that a Passenger or the complete CheckinGroup must confirm to able to get accepted. Example: Typological Fares (Passenger on Student Fare needs to present Student Card to airline employee), Security questions",
                              "type": "object",
                              "properties": {
                                "code": {
                                  "description": "Unique code of the condition within the checkingroups resource instance ",
                                  "type": "string"
                                },
                                "confirmed": {
                                  "description": "Indicates if condition has been confirmed",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "code"
                              ]
                            }
                          }
                        },
                        "required": [
                          "gender",
                          "id",
                          "type"
                        ]
                      },
                      "type": {
                        "description": "Formally, the passenger type needs to be compliant with the dateOfBirth and arrivalDateTime of the last connection in the reservation. This is beyond the scope of check-in, where the last connection in the Reservation is not known.",
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "enum": [
                              "ADULT",
                              "CHILD",
                              "INFANT"
                            ]
                          }
                        },
                        "required": [
                          "code"
                        ]
                      },
                      "termsAndConditions": {
                        "type": "array",
                        "items": {
                          "description": "Show a specific condition that a Passenger or the complete CheckinGroup must confirm to able to get accepted. Example: Typological Fares (Passenger on Student Fare needs to present Student Card to airline employee), Security questions",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "Unique code of the condition within the checkingroups resource instance ",
                              "type": "string"
                            },
                            "confirmed": {
                              "description": "Indicates if condition has been confirmed",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "code"
                          ]
                        }
                      }
                    },
                    "required": [
                      "gender",
                      "id",
                      "type"
                    ]
                  },
                  "type": {
                    "description": "Formally, the passenger type needs to be compliant with the dateOfBirth and arrivalDateTime of the last connection in the reservation. This is beyond the scope of check-in, where the last connection in the Reservation is not known.",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "enum": [
                          "ADULT",
                          "CHILD",
                          "INFANT"
                        ]
                      }
                    },
                    "required": [
                      "code"
                    ]
                  },
                  "termsAndConditions": {
                    "type": "array",
                    "items": {
                      "description": "Show a specific condition that a Passenger or the complete CheckinGroup must confirm to able to get accepted. Example: Typological Fares (Passenger on Student Fare needs to present Student Card to airline employee), Security questions",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Unique code of the condition within the checkingroups resource instance ",
                          "type": "string"
                        },
                        "confirmed": {
                          "description": "Indicates if condition has been confirmed",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "code"
                      ]
                    }
                  }
                },
                "required": [
                  "gender",
                  "id",
                  "type"
                ]
              }
            },
            "connections": {
              "maxItems": 2,
              "type": "array",
              "items": {
                "description": "A Connection is a set of sequential segments on which the passenger can travel from an origin to a destination",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The connection(s) for which the check-in action is requested must be passed in the request.  Note: passing only the id of the return connection in case of a day return is not supported yet  ",
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              }
            },
            "termsAndConditions": {
              "type": "array",
              "items": {
                "description": "Show a specific condition that a Passenger or the complete CheckinGroup must confirm to able to get accepted. Example: Typological Fares (Passenger on Student Fare needs to present Student Card to airline employee), Security questions",
                "type": "object",
                "properties": {
                  "code": {
                    "description": "Unique code of the condition within the checkingroups resource instance ",
                    "type": "string"
                  },
                  "confirmed": {
                    "description": "Indicates if condition has been confirmed",
                    "type": "boolean"
                  }
                },
                "required": [
                  "code"
                ]
              }
            }
          },
          "required": [
            "selectedForCheckinGroup",
            "connections"
          ]
        }
      },
      "required": [
        "acceptanceStatus"
      ]
    },
    "IdentifyPassengerbyName": {
      "type": "object",
      "properties": {
        "name": {
          "type": "object",
          "properties": {
            "passengers": {
              "type": "array",
              "items": {
                "description": "In this POST request only the first Passenger is processed. Additional Passengers are ignored.",
                "type": "object",
                "properties": {
                  "firstName": {
                    "description": "first name as recorded in Amadeus",
                    "type": "string"
                  },
                  "lastName": {
                    "description": "last name as recorded in Amadeus ",
                    "type": "string"
                  }
                },
                "required": [
                  "firstName",
                  "lastName"
                ]
              }
            },
            "itinerary": {
              "type": "object",
              "properties": {
                "connections": {
                  "maxItems": 2,
                  "type": "array",
                  "items": {
                    "description": "In this POST request only the first connection is processed. Additional Connections will be ignored.",
                    "type": "object",
                    "properties": {
                      "segments": {
                        "type": "array",
                        "items": {
                          "description": "Segment from Network perspective. Not the Segment as currently known in Checkin. In this POST request only the first Segment is processed. Additional Segments are ignored.",
                          "type": "object",
                          "properties": {
                            "departureStation": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "IATACode": {
                                  "type": "string"
                                }
                              }
                            },
                            "arrivalStation": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "IATACode": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "required": [
                            "departureStation",
                            "arrivalStation"
                          ]
                        }
                      }
                    },
                    "required": [
                      "segments"
                    ]
                  }
                }
              },
              "required": [
                "connections"
              ]
            }
          },
          "required": [
            "passengers",
            "itinerary"
          ]
        }
      },
      "required": [
        "name"
      ]
    },
    "IdentifyPassengerbyReservation": {
      "type": "object",
      "properties": {
        "reservation": {
          "type": "object",
          "properties": {
            "passengers": {
              "type": "array",
              "items": {
                "description": "In this POST request only the first Passenger is processed. Additional Passengers are ignored",
                "type": "object",
                "properties": {
                  "tickets": {
                    "type": "array",
                    "items": {
                      "description": "The container of 1 or more TicketBooklets belonging to one Passenger in one Reservation In this POST request only the first Ticket is processed. Additional Tickets are ignored.",
                      "type": "object",
                      "properties": {
                        "ticketBooklets": {
                          "maxItems": 99,
                          "type": "array",
                          "items": {
                            "description": "A set of max 4 TicketCoupons belonging to a specific ticket. If one ticket holds multiple booklets, then it is also known as a conjunction ticket In this POST request only the first TicketBooklet is processed. Additional TicketBooklets are ignored.",
                            "type": "object",
                            "properties": {
                              "number": {
                                "description": "Length 13 or 14 digits only so any request should not contain a dash, hyphen, spaces or other not numeric characters",
                                "type": "string"
                              }
                            },
                            "required": [
                              "number"
                            ]
                          }
                        }
                      },
                      "required": [
                        "ticketBooklets"
                      ]
                    }
                  }
                },
                "required": [
                  "tickets"
                ]
              }
            },
            "itinerary": {
              "description": "A set of one or more connections booked in one Reservation",
              "type": "object",
              "properties": {
                "connections": {
                  "maxItems": 2,
                  "type": "array",
                  "items": {
                    "description": "A Connection is a set of sequential segments on which the passenger can travel from an origin to a destination In this POST request, only the first Connection is processed. Additional Connections will be ignored",
                    "type": "object",
                    "properties": {
                      "segments": {
                        "type": "array",
                        "items": {
                          "description": "The smallest piece of the Network that a passenger is able to book as (part of) a Connection. A coupon will be issued for each Segment In this POST request only the first Segment is processed. Additional Segments will be ignored",
                          "type": "object",
                          "properties": {
                            "departureStation": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "IATACode": {
                                  "type": "string"
                                }
                              }
                            },
                            "operatingFlightSegment": {
                              "description": "The (part of the) Flight that operates the Segment ",
                              "type": "object",
                              "properties": {
                                "operatingFlight": {
                                  "type": "object",
                                  "properties": {
                                    "number": {
                                      "description": "Max 4 character string containing the numeric part of the flight designator (leading zeroes will be added upto 3 digits). Example 006, 022, 1001. Please refer to IATA AIR IMP Section 2.8.2",
                                      "type": "string"
                                    },
                                    "carrier": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "description": "Max 3 character alphanumeric airline code (IATA). Examples: KL, AF, A5, etc.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "code"
                                      ]
                                    },
                                    "operationalSuffix": {
                                      "description": "One character",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "number",
                                    "carrier"
                                  ]
                                },
                                "marketingFlight": {
                                  "type": "object",
                                  "properties": {
                                    "number": {
                                      "description": "Max 4 character string containing the numeric part of the flight designator (leading zeroes will be added upto 3 digits). Example 006, 022, 1001. Please refer to IATA AIR IMP Section 2.8.2",
                                      "type": "string"
                                    },
                                    "carrier": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "description": "Max 3 character alphanumeric airline code (IATA). Examples: KL, AF, A5, etc.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "code"
                                      ]
                                    },
                                    "operationalSuffix": {
                                      "description": "One character",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "number",
                                    "carrier"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "segments"
                    ]
                  }
                }
              },
              "required": [
                "connections"
              ]
            },
            "bookingCode": {
              "description": "PNR",
              "type": "string"
            }
          },
          "required": [
            "itinerary"
          ]
        }
      },
      "required": [
        "reservation"
      ]
    },
    "PassbookBoardingpass": {
      "type": "object",
      "properties": {}
    },
    "PassengerSelection": {
      "type": "object",
      "properties": {
        "selection": {
          "type": "object",
          "properties": {
            "selectedForCheckinGroup": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Generated identifier",
                    "type": "string"
                  },
                  "infant": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Generated identifier",
                        "type": "string"
                      },
                      "infant": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Generated identifier",
                            "type": "string"
                          },
                          "infant": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Generated identifier",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          },
          "required": [
            "selectedForCheckinGroup"
          ]
        }
      },
      "required": [
        "selection"
      ]
    },
    "RetrieveAlternativeflightsforGoShow": {
      "type": "object",
      "properties": {
        "QueryParameter": {
          "type": "string"
        }
      },
      "required": [
        "QueryParameter"
      ]
    },
    "RetrieveAlternativeflightsforSSCOP": {
      "type": "object",
      "properties": {
        "QueryParameter": {
          "type": "string"
        }
      },
      "required": [
        "QueryParameter"
      ]
    },
    "RetrieveCheckinDocuments": {
      "type": "object",
      "properties": {
        "documentsToBeRetrieved": {
          "description": "The set of CheckinDocuments that are requested to be sent to a DeliveryAddress",
          "type": "object",
          "properties": {
            "deliveryAddress": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "ON_DEVICE"
                  ]
                }
              },
              "required": [
                "type"
              ]
            },
            "checkinDocuments": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "bagTag": {
                    "type": "object",
                    "properties": {
                      "passenger": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "tagId": {
                        "description": "tagnumber in case of a re-print",
                        "type": "string"
                      },
                      "passengerId": {
                        "type": "string"
                      },
                      "numberOfTags": {
                        "description": "number of new bagtags to create",
                        "type": "integer"
                      },
                      "selected": {
                        "type": "array",
                        "items": {
                          "description": "In this POST request only the first DeliveryOption is processed. Additional DeliveryOptions are ignored. This might change in future releases when multiple (byte encoded) on_device documents can be combined.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PDF",
                                "EBP",
                                "PASSBOOK",
                                "PECTAB",
                                "RAW_DATA_EBP"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "passenger",
                      "passengerId",
                      "selected"
                    ]
                  },
                  "checkinConfirmation": {
                    "description": "aka ConfirmationPrint",
                    "type": "object",
                    "properties": {
                      "passenger": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "passengerId": {
                        "type": "string"
                      },
                      "selected": {
                        "type": "array",
                        "items": {
                          "description": "In this POST request only the first DeliveryOption is processed. Additional DeliveryOptions are ignored. This might change in future releases when multiple (byte encoded) on_device documents can be combined.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PDF",
                                "EBP",
                                "PASSBOOK",
                                "PECTAB",
                                "RAW_DATA_EBP"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "passenger",
                      "passengerId",
                      "selected"
                    ]
                  },
                  "boardingPass": {
                    "description": "<ul>  <li>It is a representation (view) of passenger segment(s) data that is required for boarding.</li>  <li>It contains among others a bar code.   </li>  <li>If a BoardingPass has an association with more than 1 BoardingPassSegment it is a MultiSegment BoardingPass</li> </ul>",
                    "type": "object",
                    "properties": {
                      "passenger": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "passengerId": {
                        "type": "string"
                      },
                      "selected": {
                        "type": "array",
                        "items": {
                          "description": "In this POST request only the first DeliveryOption is processed. Additional DeliveryOptions are ignored. This might change in future releases when multiple (byte encoded) on_device documents can be combined.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PDF",
                                "EBP",
                                "PASSBOOK",
                                "PECTAB",
                                "RAW_DATA_EBP"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ]
                        }
                      }
                    },
                    "required": [
                      "passenger",
                      "passengerId",
                      "selected"
                    ]
                  }
                }
              }
            }
          },
          "required": [
            "deliveryAddress",
            "checkinDocuments"
          ]
        }
      },
      "required": [
        "documentsToBeRetrieved"
      ]
    },
    "RetrieveReferenceData": {
      "type": "object",
      "properties": {}
    },
    "SendOutCheckinDocuments": {
      "type": "object",
      "properties": {
        "documentsToBeSent": {
          "type": "array",
          "items": {
            "description": "The set of CheckinDocuments that are requested to be sent to a DeliveryAddress",
            "type": "object",
            "properties": {
              "deliveryAddress": {
                "type": "object",
                "properties": {
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "address"
                      ]
                    }
                  },
                  "phone": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "number"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "EMAIL",
                      "SMS",
                      "MMS"
                    ]
                  }
                },
                "required": [
                  "type"
                ]
              },
              "checkinDocuments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "bagTag": {
                      "type": "object",
                      "properties": {
                        "tagId": {
                          "description": "tagnumber in case of a re-print",
                          "type": "string"
                        },
                        "numberOfTags": {
                          "description": "number of new bagtags to create",
                          "type": "integer"
                        }
                      }
                    },
                    "checkinConfirmation": {
                      "description": "aka ConfirmationPrint",
                      "type": "object",
                      "properties": {
                        "passengerId": {
                          "description": "the generated of the passenger",
                          "type": "string"
                        },
                        "selected": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "PDF",
                                  "EBP"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        }
                      },
                      "required": [
                        "passengerId",
                        "selected"
                      ]
                    },
                    "boardingPass": {
                      "description": "<ul>  <li>It is a representation (view) of passenger segment(s) data that is required for boarding.</li>  <li>It contains among others a bar code.   </li>  <li>If a BoardingPass has an association with more than 1 BoardingPassSegment it is a MultiSegment BoardingPass</li> </ul>",
                      "type": "object",
                      "properties": {
                        "passengerId": {
                          "description": "the generated of the passenger",
                          "type": "string"
                        },
                        "selected": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "PDF",
                                  "EBP"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          }
                        }
                      },
                      "required": [
                        "passengerId",
                        "selected"
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "deliveryAddress",
              "checkinDocuments"
            ]
          }
        }
      },
      "required": [
        "documentsToBeSent"
      ]
    },
    "TransferPassenger": {
      "type": "object",
      "properties": {
        "passengerTransferInformation": {
          "description": "A Connection is a set of sequential segments on which the passenger can travel from an origin to a destination",
          "type": "object",
          "properties": {
            "id": {
              "description": "The connection(s) for which the check-in action is requested must be passed in the request.  Note: passing only the id of the return connection in case of a day return is not supported yet  ",
              "type": "string"
            }
          },
          "required": [
            "id"
          ]
        }
      },
      "required": [
        "passengerTransferInformation"
      ]
    },
    "UpdatePassengerinformation": {
      "type": "object",
      "properties": {
        "passengerInformation": {
          "description": "Collection of passengers from one or more reservations treated as a group for check-in related actions  ",
          "type": "object",
          "properties": {
            "selectedForCheckinGroup": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "gender": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "enum": [
                          "MALE",
                          "FEMALE"
                        ]
                      }
                    },
                    "required": [
                      "code"
                    ]
                  },
                  "dateOfBirth": {
                    "format": "date-time",
                    "description": "Format: ISO 8601 RFC3339 Cannot be in the future.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The generated unique ID",
                    "type": "string"
                  },
                  "type": {
                    "description": "Formally, the passenger type needs to be compliant with the dateOfBirth and arrivalDateTime of the last connection in the reservation. This is beyond the scope of check-in, where the last connection in the Reservation is not known.",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "enum": [
                          "ADULT",
                          "CHILD",
                          "INFANT"
                        ]
                      }
                    },
                    "required": [
                      "code"
                    ]
                  },
                  "infant": {
                    "type": "object",
                    "properties": {
                      "gender": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "enum": [
                              "MALE",
                              "FEMALE"
                            ]
                          }
                        },
                        "required": [
                          "code"
                        ]
                      },
                      "dateOfBirth": {
                        "format": "date-time",
                        "description": "Format: ISO 8601 RFC3339 Cannot be in the future.",
                        "type": "string"
                      },
                      "id": {
                        "description": "The generated unique ID",
                        "type": "string"
                      },
                      "type": {
                        "description": "Formally, the passenger type needs to be compliant with the dateOfBirth and arrivalDateTime of the last connection in the reservation. This is beyond the scope of check-in, where the last connection in the Reservation is not known.",
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "enum": [
                              "ADULT",
                              "CHILD",
                              "INFANT"
                            ]
                          }
                        },
                        "required": [
                          "code"
                        ]
                      },
                      "infant": {
                        "type": "object",
                        "properties": {
                          "gender": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "enum": [
                                  "MALE",
                                  "FEMALE"
                                ]
                              }
                            },
                            "required": [
                              "code"
                            ]
                          },
                          "dateOfBirth": {
                            "format": "date-time",
                            "description": "Format: ISO 8601 RFC3339 Cannot be in the future.",
                            "type": "string"
                          },
                          "id": {
                            "description": "The generated unique ID",
                            "type": "string"
                          },
                          "type": {
                            "description": "Formally, the passenger type needs to be compliant with the dateOfBirth and arrivalDateTime of the last connection in the reservation. This is beyond the scope of check-in, where the last connection in the Reservation is not known.",
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "enum": [
                                  "ADULT",
                                  "CHILD",
                                  "INFANT"
                                ]
                              }
                            },
                            "required": [
                              "code"
                            ]
                          },
                          "infant": {
                            "type": "object",
                            "properties": {
                              "gender": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "enum": [
                                      "MALE",
                                      "FEMALE"
                                    ]
                                  }
                                },
                                "required": [
                                  "code"
                                ]
                              },
                              "dateOfBirth": {
                                "format": "date-time",
                                "description": "Format: ISO 8601 RFC3339 Cannot be in the future.",
                                "type": "string"
                              },
                              "id": {
                                "description": "The generated unique ID",
                                "type": "string"
                              },
                              "type": {
                                "description": "Formally, the passenger type needs to be compliant with the dateOfBirth and arrivalDateTime of the last connection in the reservation. This is beyond the scope of check-in, where the last connection in the Reservation is not known.",
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "enum": [
                                      "ADULT",
                                      "CHILD",
                                      "INFANT"
                                    ]
                                  }
                                },
                                "required": [
                                  "code"
                                ]
                              },
                              "title": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "enum": [
                                      "MISS",
                                      "MR",
                                      "MRS",
                                      "MSTR",
                                      "MS"
                                    ]
                                  }
                                },
                                "required": [
                                  "code"
                                ]
                              },
                              "advancedPassengerInformation": {
                                "description": "Passenger Information that needs to be shared in advance with authorities of the (intermediate) destination country(s). This is also known as the API destinations. The fields to provide are based on regularity requirements. Each element is accompanied with a required indicator; if this has value 'true' then it means that the element <b>must</b> be updated even when the element itself already pre-filled. Although it is possible to register advance passenger information per Segment in the Reservation, the information provided is consolidated across all segments. When provided in a request all segments will be updated with the same information  Besides providing the information in case of a API destination it is also possible to store the same type of information for any other reason It is expected that the model will be changed in near future to be aligned again with the reservation API",
                                "type": "object",
                                "properties": {
                                  "identificationDocuments": {
                                    "type": "array",
                                    "items": {
                                      "description": "Document that is used as formal identification of the passenger as required for API destinations. These documents can be primary identification documents like Passport, National ID or Military ID, or secondary identification documents like Permanent Resident Card, Border Crossing Card, US Naturalization Card, Refugee Reentry Permit. Secondary identification documents always need to be accompanied by a primary identification document.  Depending on the AdvancedPassengerInformation provided, multiple IdentificationDocument combinations may be allowed for acceptance. E.g. Passport and Permanent Resident Card or Military ID and Permanent Resident Card. IdentificationDocument details for one of those combinations need to be provided by the passenger, to be able to get accepted.",
                                      "type": "object",
                                      "properties": {
                                        "expiryDate": {
                                          "format": "date-time",
                                          "description": "Format: ISO 8601 RFC3339",
                                          "type": "string"
                                        },
                                        "firstName": {
                                          "description": "First name as it appears in the IdentificationDocument.",
                                          "type": "string"
                                        },
                                        "lastName": {
                                          "description": "Last name as it appears in the IdentificationDocument",
                                          "type": "string"
                                        },
                                        "number": {
                                          "description": "Format: Alphanumeric (A-Za-z0-9), no spaces allowed",
                                          "type": "string"
                                        },
                                        "placeOfIssue": {
                                          "description": "City where the IdentificationDocument is issued. This may also be the city where the consulate or embassy in a foreign country is located.",
                                          "type": "string"
                                        },
                                        "countryOfIssue": {
                                          "description": "Country that issued the IdentificationDocument. This should not be confused with the country where the IdentificationDocument is issued (e.g. consulate or embassy in a foreign country).",
                                          "type": "string"
                                        },
                                        "yearOfExpiry": {
                                          "description": "Dont use: will be removed",
                                          "type": "string"
                                        },
                                        "monthOfExpiry": {
                                          "description": "Dont use: will be removed",
                                          "type": "string"
                                        },
                                        "dateOfIssue": {
                                          "format": "date-time",
                                          "description": "Format: ISO 8601 RFC3339",
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "object",
                                          "properties": {
                                            "code": {
                                              "type": "string",
                                              "enum": [
                                                "PASSPORT",
                                                "NATIONAL_ID",
                                                "MILITARY_ID",
                                                "PERMANENT_RESIDENT_CARD",
                                                "BORDER_CROSSING_CARD",
                                                "REENTRY_PERMIT",
                                                "US_NATURALIZATION_CERTIFICATE"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "code"
                                          ]
                                        },
                                        "mrzIndication": {
                                          "description": "Indicates whether the IdentificationDocument is swiped and the document details are retrieved from the machine-readable zone. ",
                                          "type": "boolean"
                                        },
                                        "dayOfExpiry": {
                                          "description": "Dont use: will be removed",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "destinationAddress": {
                                    "description": "Address details applicable for the arrival destination of the Connection. Special instructions apply for passenger that transit to another destination country, go on a cruise or continue with train, bus, camper, etcetera.",
                                    "type": "object",
                                    "properties": {
                                      "country": {
                                        "description": "Format: ISO 3166-1 alpha-2",
                                        "type": "string"
                                      },
                                      "streetAndNumber": {
                                        "description": "Format: Alphanumeric (A-Za-z0-9), spaces allowed",
                                        "type": "string"
                                      },
                                      "town": {
                                        "description": "Format: Alphabetic (A-Za-z), spaces allowed, max length 30",
                                        "type": "string"
                                      },
                                      "postalCode": {
                                        "description": "Format: Alphanumeric (A-Za-z0-9), no spaces allowed",
                                        "type": "string"
                                      },
                                      "stateCode": {
                                        "description": "Format: Length 2 alphabetic characters only",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "nationality": {
                                    "description": "Nationality as is appears in you identification document Format: ISO 3166-1 alpha-2",
                                    "type": "string"
                                  },
                                  "countryOfResidence": {
                                    "description": "The country where the passenger lives. Format: ISO 3166-1 alpha-2",
                                    "type": "string"
                                  }
                                }
                              },
                              "termsAndConditions": {
                                "type": "array",
                                "items": {
                                  "description": "Show a specific condition that a Passenger or the complete CheckinGroup must confirm to able to get accepted. Example: Typological Fares (Passenger on Student Fare needs to present Student Card to airline employee), Security questions",
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "description": "Unique code of the condition within the checkingroups resource instance  ",
                                      "type": "string"
                                    },
                                    "confirmed": {
                                      "description": "Indicates if condition has been confirmed ",
                                      "type": "boolean"
                                    }
                                  },
                                  "required": [
                                    "code"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          "title": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "enum": [
                                  "MISS",
                                  "MR",
                                  "MRS",
                                  "MSTR",
                                  "MS"
                                ]
                              }
                            },
                            "required": [
                              "code"
                            ]
                          },
                          "advancedPassengerInformation": {
                            "description": "Passenger Information that needs to be shared in advance with authorities of the (intermediate) destination country(s). This is also known as the API destinations. The fields to provide are based on regularity requirements. Each element is accompanied with a required indicator; if this has value 'true' then it means that the element <b>must</b> be updated even when the element itself already pre-filled. Although it is possible to register advance passenger information per Segment in the Reservation, the information provided is consolidated across all segments. When provided in a request all segments will be updated with the same information  Besides providing the information in case of a API destination it is also possible to store the same type of information for any other reason It is expected that the model will be changed in near future to be aligned again with the reservation API",
                            "type": "object",
                            "properties": {
                              "identificationDocuments": {
                                "type": "array",
                                "items": {
                                  "description": "Document that is used as formal identification of the passenger as required for API destinations. These documents can be primary identification documents like Passport, National ID or Military ID, or secondary identification documents like Permanent Resident Card, Border Crossing Card, US Naturalization Card, Refugee Reentry Permit. Secondary identification documents always need to be accompanied by a primary identification document.  Depending on the AdvancedPassengerInformation provided, multiple IdentificationDocument combinations may be allowed for acceptance. E.g. Passport and Permanent Resident Card or Military ID and Permanent Resident Card. IdentificationDocument details for one of those combinations need to be provided by the passenger, to be able to get accepted.",
                                  "type": "object",
                                  "properties": {
                                    "expiryDate": {
                                      "format": "date-time",
                                      "description": "Format: ISO 8601 RFC3339",
                                      "type": "string"
                                    },
                                    "firstName": {
                                      "description": "First name as it appears in the IdentificationDocument.",
                                      "type": "string"
                                    },
                                    "lastName": {
                                      "description": "Last name as it appears in the IdentificationDocument",
                                      "type": "string"
                                    },
                                    "number": {
                                      "description": "Format: Alphanumeric (A-Za-z0-9), no spaces allowed",
                                      "type": "string"
                                    },
                                    "placeOfIssue": {
                                      "description": "City where the IdentificationDocument is issued. This may also be the city where the consulate or embassy in a foreign country is located.",
                                      "type": "string"
                                    },
                                    "countryOfIssue": {
                                      "description": "Country that issued the IdentificationDocument. This should not be confused with the country where the IdentificationDocument is issued (e.g. consulate or embassy in a foreign country).",
                                      "type": "string"
                                    },
                                    "yearOfExpiry": {
                                      "description": "Dont use: will be removed",
                                      "type": "string"
                                    },
                                    "monthOfExpiry": {
                                      "description": "Dont use: will be removed",
                                      "type": "string"
                                    },
                                    "dateOfIssue": {
                                      "format": "date-time",
                                      "description": "Format: ISO 8601 RFC3339",
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "type": "string",
                                          "enum": [
                                            "PASSPORT",
                                            "NATIONAL_ID",
                                            "MILITARY_ID",
                                            "PERMANENT_RESIDENT_CARD",
                                            "BORDER_CROSSING_CARD",
                                            "REENTRY_PERMIT",
                                            "US_NATURALIZATION_CERTIFICATE"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "code"
                                      ]
                                    },
                                    "mrzIndication": {
                                      "description": "Indicates whether the IdentificationDocument is swiped and the document details are retrieved from the machine-readable zone. ",
                                      "type": "boolean"
                                    },
                                    "dayOfExpiry": {
                                      "description": "Dont use: will be removed",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "destinationAddress": {
                                "description": "Address details applicable for the arrival destination of the Connection. Special instructions apply for passenger that transit to another destination country, go on a cruise or continue with train, bus, camper, etcetera.",
                                "type": "object",
                                "properties": {
                                  "country": {
                                    "description": "Format: ISO 3166-1 alpha-2",
                                    "type": "string"
                                  },
                                  "streetAndNumber": {
                                    "description": "Format: Alphanumeric (A-Za-z0-9), spaces allowed",
                                    "type": "string"
                                  },
                                  "town": {
                                    "description": "Format: Alphabetic (A-Za-z), spaces allowed, max length 30",
                                    "type": "string"
                                  },
                                  "postalCode": {
                                    "description": "Format: Alphanumeric (A-Za-z0-9), no spaces allowed",
                                    "type": "string"
                                  },
                                  "stateCode": {
                                    "description": "Format: Length 2 alphabetic characters only",
                                    "type": "string"
                                  }
                                }
                              },
                              "nationality": {
                                "description": "Nationality as is appears in you identification document Format: ISO 3166-1 alpha-2",
                                "type": "string"
                              },
                              "countryOfResidence": {
                                "description": "The country where the passenger lives. Format: ISO 3166-1 alpha-2",
                                "type": "string"
                              }
                            }
                          },
                          "termsAndConditions": {
                            "type": "array",
                            "items": {
                              "description": "Show a specific condition that a Passenger or the complete CheckinGroup must confirm to able to get accepted. Example: Typological Fares (Passenger on Student Fare needs to present Student Card to airline employee), Security questions",
                              "type": "object",
                              "properties": {
                                "code": {
                                  "description": "Unique code of the condition within the checkingroups resource instance  ",
                                  "type": "string"
                                },
                                "confirmed": {
                                  "description": "Indicates if condition has been confirmed ",
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "code"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      "title": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "enum": [
                              "MISS",
                              "MR",
                              "MRS",
                              "MSTR",
                              "MS"
                            ]
                          }
                        },
                        "required": [
                          "code"
                        ]
                      },
                      "advancedPassengerInformation": {
                        "description": "Passenger Information that needs to be shared in advance with authorities of the (intermediate) destination country(s). This is also known as the API destinations. The fields to provide are based on regularity requirements. Each element is accompanied with a required indicator; if this has value 'true' then it means that the element <b>must</b> be updated even when the element itself already pre-filled. Although it is possible to register advance passenger information per Segment in the Reservation, the information provided is consolidated across all segments. When provided in a request all segments will be updated with the same information  Besides providing the information in case of a API destination it is also possible to store the same type of information for any other reason It is expected that the model will be changed in near future to be aligned again with the reservation API",
                        "type": "object",
                        "properties": {
                          "identificationDocuments": {
                            "type": "array",
                            "items": {
                              "description": "Document that is used as formal identification of the passenger as required for API destinations. These documents can be primary identification documents like Passport, National ID or Military ID, or secondary identification documents like Permanent Resident Card, Border Crossing Card, US Naturalization Card, Refugee Reentry Permit. Secondary identification documents always need to be accompanied by a primary identification document.  Depending on the AdvancedPassengerInformation provided, multiple IdentificationDocument combinations may be allowed for acceptance. E.g. Passport and Permanent Resident Card or Military ID and Permanent Resident Card. IdentificationDocument details for one of those combinations need to be provided by the passenger, to be able to get accepted.",
                              "type": "object",
                              "properties": {
                                "expiryDate": {
                                  "format": "date-time",
                                  "description": "Format: ISO 8601 RFC3339",
                                  "type": "string"
                                },
                                "firstName": {
                                  "description": "First name as it appears in the IdentificationDocument.",
                                  "type": "string"
                                },
                                "lastName": {
                                  "description": "Last name as it appears in the IdentificationDocument",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "Format: Alphanumeric (A-Za-z0-9), no spaces allowed",
                                  "type": "string"
                                },
                                "placeOfIssue": {
                                  "description": "City where the IdentificationDocument is issued. This may also be the city where the consulate or embassy in a foreign country is located.",
                                  "type": "string"
                                },
                                "countryOfIssue": {
                                  "description": "Country that issued the IdentificationDocument. This should not be confused with the country where the IdentificationDocument is issued (e.g. consulate or embassy in a foreign country).",
                                  "type": "string"
                                },
                                "yearOfExpiry": {
                                  "description": "Dont use: will be removed",
                                  "type": "string"
                                },
                                "monthOfExpiry": {
                                  "description": "Dont use: will be removed",
                                  "type": "string"
                                },
                                "dateOfIssue": {
                                  "format": "date-time",
                                  "description": "Format: ISO 8601 RFC3339",
                                  "type": "string"
                                },
                                "type": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "enum": [
                                        "PASSPORT",
                                        "NATIONAL_ID",
                                        "MILITARY_ID",
                                        "PERMANENT_RESIDENT_CARD",
                                        "BORDER_CROSSING_CARD",
                                        "REENTRY_PERMIT",
                                        "US_NATURALIZATION_CERTIFICATE"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "code"
                                  ]
                                },
                                "mrzIndication": {
                                  "description": "Indicates whether the IdentificationDocument is swiped and the document details are retrieved from the machine-readable zone. ",
                                  "type": "boolean"
                                },
                                "dayOfExpiry": {
                                  "description": "Dont use: will be removed",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "destinationAddress": {
                            "description": "Address details applicable for the arrival destination of the Connection. Special instructions apply for passenger that transit to another destination country, go on a cruise or continue with train, bus, camper, etcetera.",
                            "type": "object",
                            "properties": {
                              "country": {
                                "description": "Format: ISO 3166-1 alpha-2",
                                "type": "string"
                              },
                              "streetAndNumber": {
                                "description": "Format: Alphanumeric (A-Za-z0-9), spaces allowed",
                                "type": "string"
                              },
                              "town": {
                                "description": "Format: Alphabetic (A-Za-z), spaces allowed, max length 30",
                                "type": "string"
                              },
                              "postalCode": {
                                "description": "Format: Alphanumeric (A-Za-z0-9), no spaces allowed",
                                "type": "string"
                              },
                              "stateCode": {
                                "description": "Format: Length 2 alphabetic characters only",
                                "type": "string"
                              }
                            }
                          },
                          "nationality": {
                            "description": "Nationality as is appears in you identification document Format: ISO 3166-1 alpha-2",
                            "type": "string"
                          },
                          "countryOfResidence": {
                            "description": "The country where the passenger lives. Format: ISO 3166-1 alpha-2",
                            "type": "string"
                          }
                        }
                      },
                      "termsAndConditions": {
                        "type": "array",
                        "items": {
                          "description": "Show a specific condition that a Passenger or the complete CheckinGroup must confirm to able to get accepted. Example: Typological Fares (Passenger on Student Fare needs to present Student Card to airline employee), Security questions",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "Unique code of the condition within the checkingroups resource instance  ",
                              "type": "string"
                            },
                            "confirmed": {
                              "description": "Indicates if condition has been confirmed ",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "code"
                          ]
                        }
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  "title": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "enum": [
                          "MISS",
                          "MR",
                          "MRS",
                          "MSTR",
                          "MS"
                        ]
                      }
                    },
                    "required": [
                      "code"
                    ]
                  },
                  "advancedPassengerInformation": {
                    "description": "Passenger Information that needs to be shared in advance with authorities of the (intermediate) destination country(s). This is also known as the API destinations. The fields to provide are based on regularity requirements. Each element is accompanied with a required indicator; if this has value 'true' then it means that the element <b>must</b> be updated even when the element itself already pre-filled. Although it is possible to register advance passenger information per Segment in the Reservation, the information provided is consolidated across all segments. When provided in a request all segments will be updated with the same information  Besides providing the information in case of a API destination it is also possible to store the same type of information for any other reason It is expected that the model will be changed in near future to be aligned again with the reservation API",
                    "type": "object",
                    "properties": {
                      "identificationDocuments": {
                        "type": "array",
                        "items": {
                          "description": "Document that is used as formal identification of the passenger as required for API destinations. These documents can be primary identification documents like Passport, National ID or Military ID, or secondary identification documents like Permanent Resident Card, Border Crossing Card, US Naturalization Card, Refugee Reentry Permit. Secondary identification documents always need to be accompanied by a primary identification document.  Depending on the AdvancedPassengerInformation provided, multiple IdentificationDocument combinations may be allowed for acceptance. E.g. Passport and Permanent Resident Card or Military ID and Permanent Resident Card. IdentificationDocument details for one of those combinations need to be provided by the passenger, to be able to get accepted.",
                          "type": "object",
                          "properties": {
                            "expiryDate": {
                              "format": "date-time",
                              "description": "Format: ISO 8601 RFC3339",
                              "type": "string"
                            },
                            "firstName": {
                              "description": "First name as it appears in the IdentificationDocument.",
                              "type": "string"
                            },
                            "lastName": {
                              "description": "Last name as it appears in the IdentificationDocument",
                              "type": "string"
                            },
                            "number": {
                              "description": "Format: Alphanumeric (A-Za-z0-9), no spaces allowed",
                              "type": "string"
                            },
                            "placeOfIssue": {
                              "description": "City where the IdentificationDocument is issued. This may also be the city where the consulate or embassy in a foreign country is located.",
                              "type": "string"
                            },
                            "countryOfIssue": {
                              "description": "Country that issued the IdentificationDocument. This should not be confused with the country where the IdentificationDocument is issued (e.g. consulate or embassy in a foreign country).",
                              "type": "string"
                            },
                            "yearOfExpiry": {
                              "description": "Dont use: will be removed",
                              "type": "string"
                            },
                            "monthOfExpiry": {
                              "description": "Dont use: will be removed",
                              "type": "string"
                            },
                            "dateOfIssue": {
                              "format": "date-time",
                              "description": "Format: ISO 8601 RFC3339",
                              "type": "string"
                            },
                            "type": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "enum": [
                                    "PASSPORT",
                                    "NATIONAL_ID",
                                    "MILITARY_ID",
                                    "PERMANENT_RESIDENT_CARD",
                                    "BORDER_CROSSING_CARD",
                                    "REENTRY_PERMIT",
                                    "US_NATURALIZATION_CERTIFICATE"
                                  ]
                                }
                              },
                              "required": [
                                "code"
                              ]
                            },
                            "mrzIndication": {
                              "description": "Indicates whether the IdentificationDocument is swiped and the document details are retrieved from the machine-readable zone. ",
                              "type": "boolean"
                            },
                            "dayOfExpiry": {
                              "description": "Dont use: will be removed",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "destinationAddress": {
                        "description": "Address details applicable for the arrival destination of the Connection. Special instructions apply for passenger that transit to another destination country, go on a cruise or continue with train, bus, camper, etcetera.",
                        "type": "object",
                        "properties": {
                          "country": {
                            "description": "Format: ISO 3166-1 alpha-2",
                            "type": "string"
                          },
                          "streetAndNumber": {
                            "description": "Format: Alphanumeric (A-Za-z0-9), spaces allowed",
                            "type": "string"
                          },
                          "town": {
                            "description": "Format: Alphabetic (A-Za-z), spaces allowed, max length 30",
                            "type": "string"
                          },
                          "postalCode": {
                            "description": "Format: Alphanumeric (A-Za-z0-9), no spaces allowed",
                            "type": "string"
                          },
                          "stateCode": {
                            "description": "Format: Length 2 alphabetic characters only",
                            "type": "string"
                          }
                        }
                      },
                      "nationality": {
                        "description": "Nationality as is appears in you identification document Format: ISO 3166-1 alpha-2",
                        "type": "string"
                      },
                      "countryOfResidence": {
                        "description": "The country where the passenger lives. Format: ISO 3166-1 alpha-2",
                        "type": "string"
                      }
                    }
                  },
                  "termsAndConditions": {
                    "type": "array",
                    "items": {
                      "description": "Show a specific condition that a Passenger or the complete CheckinGroup must confirm to able to get accepted. Example: Typological Fares (Passenger on Student Fare needs to present Student Card to airline employee), Security questions",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Unique code of the condition within the checkingroups resource instance  ",
                          "type": "string"
                        },
                        "confirmed": {
                          "description": "Indicates if condition has been confirmed ",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "code"
                      ]
                    }
                  }
                },
                "required": [
                  "id"
                ]
              }
            },
            "termsAndConditions": {
              "type": "array",
              "items": {
                "description": "Show a specific condition that a Passenger or the complete CheckinGroup must confirm to able to get accepted. Example: Typological Fares (Passenger on Student Fare needs to present Student Card to airline employee), Security questions",
                "type": "object",
                "properties": {
                  "code": {
                    "description": "Unique code of the condition within the checkingroups resource instance  ",
                    "type": "string"
                  },
                  "confirmed": {
                    "description": "Indicates if condition has been confirmed ",
                    "type": "boolean"
                  }
                },
                "required": [
                  "code"
                ]
              }
            }
          },
          "required": [
            "selectedForCheckinGroup"
          ]
        }
      },
      "required": [
        "passengerInformation"
      ]
    },
    "AncillaryShop": {
      "type": "object",
      "properties": {}
    },
    "AddproducttoCart": {
      "type": "object",
      "properties": {
        "shopID": {
          "type": "string"
        }
      },
      "required": [
        "shopID"
      ]
    },
    "DeleteproductfromCart": {
      "type": "object",
      "properties": {}
    },
    "SelectedProducts": {
      "type": "object",
      "properties": {}
    },
    "OfferedProductsBaggage": {
      "type": "object",
      "properties": {}
    },
    "OfferedProductsConnectivity": {
      "type": "object",
      "properties": {}
    },
    "OfferedProductsEnvironmental": {
      "type": "object",
      "properties": {}
    },
    "OfferedProductsFlexibility": {
      "type": "object",
      "properties": {}
    },
    "OfferedProductsMissedFlightCover": {
      "type": "object",
      "properties": {}
    },
    "OfferedProductsInsurance": {
      "type": "object",
      "properties": {}
    },
    "OfferedProductsLounge": {
      "type": "object",
      "properties": {}
    },
    "OfferedProductsMealSpecialALC": {
      "type": "object",
      "properties": {}
    },
    "OfferedProductsSeat": {
      "type": "object",
      "properties": {
        "passenger": {
          "type": "object",
          "properties": {
            "passengerId": {
              "description": "system generated",
              "type": "string"
            }
          },
          "required": [
            "passengerId"
          ]
        },
        "segment": {
          "description": "<b>Mapping: </b>From domain model: Segment",
          "type": "object",
          "properties": {
            "segmentId": {
              "description": "<b>Mapping: </b>From domain model: Segment/segmentId",
              "type": "integer"
            }
          },
          "required": [
            "segmentId"
          ]
        }
      },
      "required": [
        "passenger",
        "segment"
      ]
    },
    "OfferedProductsSSR": {
      "type": "object",
      "properties": {}
    },
    "CreateNewRating": {
      "type": "object",
      "properties": {
        "ratings": {
          "type": "object",
          "properties": {
            "flight": {
              "type": "object",
              "properties": {
                "travelDate": {
                  "type": "string"
                },
                "origin": {
                  "type": "string"
                },
                "destination": {
                  "type": "string"
                },
                "flightNumber": {
                  "description": "Max 6 character string containing the numeric part of the flight designator (leading zeroes will be added upto 3 digits). Example 006, 022, 1001. Please refer to IATA AIR IMP Section 2.8.2",
                  "type": "string"
                }
              },
              "required": [
                "travelDate",
                "flightNumber"
              ]
            },
            "positiveComment": {
              "type": "string"
            },
            "passenger": {
              "type": "object",
              "properties": {
                "cabinCode": {
                  "type": "string"
                },
                "seat": {
                  "type": "object",
                  "properties": {
                    "seatNumber": {
                      "type": "string"
                    }
                  }
                },
                "firstName": {
                  "type": "string"
                },
                "familyName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              },
              "required": [
                "seat"
              ]
            },
            "isPublished": {
              "type": "boolean"
            },
            "rating": {
              "type": "string"
            },
            "negativeComment": {
              "type": "string"
            }
          },
          "required": [
            "flight",
            "passenger",
            "rating"
          ]
        }
      },
      "required": [
        "ratings"
      ]
    },
    "Queryingforareservation": {
      "type": "object",
      "properties": {}
    },
    "RequestinganInvoice": {
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string"
        },
        "streetAndHouseNr": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "chamberOfCommerceNumber": {
          "type": "string"
        }
      },
      "required": [
        "emailAddress",
        "streetAndHouseNr",
        "city",
        "postalCode",
        "name"
      ]
    },
    "Retrievingeligibilityforrebooking": {
      "description": "For each connection in the itinerary returns <ul>  <li>When eligible for re-booking: An URI (in an <i>update</i> element) the consumer can use to start the process to change an itinerary. </li>  <li>When NOT eligible for re-booking: The reason this connection is not eligible for re-booking. </li> </ul>",
      "type": "object",
      "properties": {}
    },
    "UpdatingAPIS": {
      "description": "Data, necessary for entering APIS eligible countries.",
      "type": "object",
      "properties": {
        "addresses": {
          "maxItems": 255,
          "type": "array",
          "items": {
            "description": "An address, as is to be provided as part of an APIS application. Can be either an address at destination or an address of residence.  See IATA AIRIMP section 3.13.3 - API - Passenger Address Information",
            "type": "object",
            "properties": {
              "zipCode": {
                "description": "Zip/ postal code of the address ",
                "type": "string"
              },
              "address": {
                "description": "The street name and house number of the address ",
                "type": "string"
              },
              "stateOrProvince": {
                "description": "State or province the address is located in. The format is free text, but for USA and Canada two letter state abbreviations tend to be used.",
                "type": "string"
              },
              "city": {
                "description": "The city of the address ",
                "type": "string"
              },
              "type": {
                "description": " The role the address plays in the APIS application.",
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "enum": [
                      "DESTINATION",
                      "RESIDENCY"
                    ]
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "code",
                  "name"
                ]
              }
            },
            "required": [
              "type"
            ]
          }
        },
        "documents": {
          "maxItems": 255,
          "type": "array",
          "items": {
            "description": "A document necessary for entering APIS eligible countries. ",
            "type": "object",
            "properties": {
              "number": {
                "description": "The number of the Document.   Can have at most 15 numbers (including spaces)",
                "type": "string"
              },
              "Document Type": {
                "type": "string",
                "enum": [
                  "TRAVELDOCUMENT",
                  "SUPPLEMENTARYDOCUMENT",
                  "ADDRESS"
                ]
              }
            },
            "required": [
              "Document Type"
            ]
          }
        }
      }
    },
    "Updatingloyaltymemberships": {
      "type": "object",
      "properties": {
        "number": {
          "description": "Unique identification of a LoyaltyProgramMembership within a (normalized) LoyaltyProgram.   <i>For NormalizedProgramId = 'JSME'</i> 2 letters and 5 numbers (e.g. NL12345)  <i>For NormalizedProgramId = 'MyAccount'</i> the accountID. Note: this is NOT the GIN that is in use in front end applications.  <i>For Flying Blue (and all other IndividualLoayltyMemberships not being MyAccount):</i> A number, usually about ten numbers long (e.g. 1234567890)",
          "type": "string"
        },
        "update": {
          "format": "uri",
          "description": "Reference to the location that can be used to update this membership.",
          "type": "string"
        },
        "Membership Type": {
          "type": "string",
          "enum": [
            "MEMBERSHIP",
            "FREQUENTTRAVELERMEMBERSHIP"
          ]
        },
        "loyaltyProgram": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "enum": [
                "MY_ACCOUNT",
                "FLYING_BLUE",
                "SKY_TEAM",
                "BLUE_BIZ",
                "DYNASTY_FLYER",
                "CLUB_PREMIER",
                "AEROLINEAS_PLUS",
                "MILEAGE_PLAN",
                "MILLEMIGLIA",
                "ONEPASS",
                "SKY_PEARL_CLUB",
                "SKYMILES",
                "UMBI_UMBI_CLUB",
                "EASTERN_MILES",
                "GARUDAMILES3",
                "SMILES",
                "MILEAGE_BANK",
                "SKYPASS",
                "CEDAR_MILES",
                "EGRET_CLUB",
                "ENRICH",
                "KESTRELFLYER",
                "OK_PLUS",
                "FLYERBONUS",
                "PANORAMA",
                "BONUS",
                "ALFURSAN",
                "GOLDEN_LOTUS_PLUS",
                "JET_PRIVILEGE",
                "SUMA"
              ]
            }
          },
          "required": [
            "code"
          ]
        }
      },
      "required": [
        "number",
        "Membership Type",
        "loyaltyProgram"
      ]
    },
    "AircraftAmenitiesView": {
      "type": "object",
      "properties": {
        "aircraft": {
          "description": "Aircraft amenities",
          "$ref": "#/definitions/AmenitiesListView"
        },
        "cabinClasses": {
          "type": "object",
          "description": "Amenities by cabin class",
          "additionalProperties": {
            "$ref": "#/definitions/AmenitiesListView"
          }
        }
      }
    },
    "AmenitiesCategoryView": {
      "type": "object",
      "required": [
        "label"
      ],
      "properties": {
        "label": {
          "type": "string",
          "example": "Comfort",
          "description": "Amenity category label to be displayed."
        }
      }
    },
    "AmenitiesListView": {
      "type": "object",
      "required": [
        "amenities",
        "amenitiesNb"
      ],
      "properties": {
        "amenities": {
          "type": "array",
          "example": "WIFI,IFE,SEAT_FULL_FLAT",
          "description": "List of amenities codes.",
          "items": {
            "type": "string"
          }
        },
        "amenitiesNb": {
          "type": "integer",
          "format": "int32",
          "description": "Number of amenities."
        }
      }
    },
    "AmenityView": {
      "type": "object",
      "required": [
        "category",
        "label"
      ],
      "properties": {
        "category": {
          "type": "string",
          "example": "EQUIPMENT",
          "description": "Category code."
        },
        "imageUrl": {
          "type": "string",
          "example": "http://objects.airfrance.com/FR/common/common/img/pictos/WIFI.jpg",
          "description": "Amenity pictogram to be displayed."
        },
        "label": {
          "type": "string",
          "example": "In-Flight Entertainment",
          "description": "Amenity label to be displayed."
        }
      }
    },
    "ErrorView": {
      "type": "object",
      "required": [
        "error",
        "requestId"
      ],
      "properties": {
        "error": {
          "type": "string",
          "example": "Missing parameter: xxx.",
          "description": "Error message."
        },
        "requestId": {
          "type": "string",
          "example": "c1f3c206-7b3d-4ce0-abb3-968a3788eba4",
          "description": "Unique identifier of the request."
        }
      }
    },
    "AboutView": {
      "type": "object",
      "properties": {
        "buildDate": {
          "type": "string"
        },
        "buildNumber": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "EmbeddedErrorView": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "example": 404,
          "description": "Corresponding HTTP status."
        },
        "message": {
          "type": "string",
          "example": "XXX not found.",
          "description": "Error message."
        }
      }
    },
    "AmenitiesView": {
      "type": "object",
      "required": [
        "acv"
      ],
      "properties": {
        "acv": {
          "type": "object",
          "description": "Map between an ACV and its amenities",
          "additionalProperties": {
            "$ref": "#/definitions/AircraftAmenitiesView"
          }
        },
        "amenities": {
          "type": "object",
          "description": "Map between an amenity code and its definition.",
          "additionalProperties": {
            "$ref": "#/definitions/AmenityView"
          }
        },
        "categories": {
          "type": "object",
          "description": "Map between an amenity category code and its definition.",
          "additionalProperties": {
            "$ref": "#/definitions/AmenitiesCategoryView"
          }
        },
        "errors": {
          "type": "array",
          "description": "Embeds errors if the entire response is not an error.",
          "items": {
            "$ref": "#/definitions/EmbeddedErrorView"
          }
        }
      }
    }
  }
}