{
  "swagger": "2.0",
  "x-hasEquivalentPaths": true,
  "info": {
    "title": "UnderArmour API V7",
    "version": "1.0.0",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/mashery2openapi"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "description": " Use your client application's key and secret to authenticate. Resources in /api/0.x are beta endpoints. Resources in /v7.x are production endpoints.",
    "x-mashery-id": "1337"
  },
  "schemes": [
    "http"
  ],
  "host": "api.underarmour.com",
  "basePath": "/",
  "externalDocs": {
    "description": "You can also view our written documentation.",
    "url": "https://developer.underarmour.com/io-docs"
  },
  "consumes": [],
  "produces": [],
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "",
      "tokenUrl": "",
      "scopes": {}
    }
  },
  "security": [
    {
      "oauth2": []
    }
  ],
  "tags": [
    {
      "name": "Achievement Resources"
    },
    {
      "name": "Activity Type Resources"
    },
    {
      "name": "Aggregate Resources"
    },
    {
      "name": "All Day Activity Resources"
    },
    {
      "name": "Body Mass Resources"
    },
    {
      "name": "Course Resources"
    },
    {
      "name": "Data Source Resources"
    },
    {
      "name": "Data Source Priority Resources"
    },
    {
      "name": "Gear Resources *NEW*"
    },
    {
      "name": "Group Resources"
    },
    {
      "name": "Group Invite Resources"
    },
    {
      "name": "Group Leaderboard Resources"
    },
    {
      "name": "Group Purpose Resources"
    },
    {
      "name": "Group User Resources"
    },
    {
      "name": "Heart Rate Zone Resources"
    },
    {
      "name": "Heart Rate Zone Calculation Resources"
    },
    {
      "name": "Map Marker Image Resources"
    },
    {
      "name": "Membership Resources"
    },
    {
      "name": "Page Resources"
    },
    {
      "name": "Remote Connection Resources"
    },
    {
      "name": "Remote Connection Type Resources"
    },
    {
      "name": "Route Resources"
    },
    {
      "name": "Sleep Resources"
    },
    {
      "name": "User Resources"
    },
    {
      "name": "User Achievement Resources"
    },
    {
      "name": "User Profile Photo Resources"
    },
    {
      "name": "User Gear Resources *NEW*"
    },
    {
      "name": "Webhook Resources"
    },
    {
      "name": "Workout Resources"
    },
    {
      "name": "Workout Heart Rate Resources"
    }
  ],
  "paths": {
    "/v7.1/achievement/{achievement_id}/": {
      "get": {
        "operationId": "GetAchievementAchievementResources",
        "summary": "Returns achievement information",
        "tags": [
          "Achievement Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "achievement_id",
            "type": "integer",
            "description": "The ID of the achievement",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/activity_type/{activity_type_id}/": {
      "get": {
        "operationId": "GetActivityTypeActivityTypeResources",
        "summary": "Returns a specific activity type",
        "tags": [
          "Activity Type Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "activity_type_id",
            "type": "integer",
            "description": "Activity Type Id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/activity_type/": {
      "get": {
        "operationId": "GetActivityTypesActivityTypeResources",
        "summary": "Returns all activity types available",
        "tags": [
          "Activity Type Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/aggregate/": {
      "get": {
        "operationId": "SearchAggregateDataAggregateResources",
        "summary": "Fetches aggregated user data based on the query",
        "tags": [
          "Aggregate Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "data_types",
            "type": "string",
            "description": "A list of data types for which to return aggregate values",
            "in": "query",
            "required": true
          },
          {
            "name": "end_datetime",
            "type": "string",
            "description": "The end of the aggregation window as an ISO-8601 Datetime string.",
            "in": "query",
            "required": true,
            "default": "2014-05-05"
          },
          {
            "name": "period",
            "type": "string",
            "description": "The periodic grouping of aggregate values, specified in ISO-8601 duration values:.",
            "in": "query",
            "required": false,
            "default": "P1D"
          },
          {
            "name": "start_datetime",
            "type": "string",
            "description": "The start of the aggregation window as an ISO-8601 Datetime string.",
            "in": "query",
            "required": true,
            "default": "2014-05-05"
          },
          {
            "name": "user_id",
            "type": "integer",
            "description": "The user_id of interest. Users are only authorized to see their data.",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/allday_activity/{activity_id}": {
      "put": {
        "operationId": "UpdateanActivityAllDayActivityResources",
        "summary": "Updates existing Activity",
        "tags": [
          "All Day Activity Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "activity_id",
            "type": "string",
            "description": "The Activity ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/allday_activity/": {
      "post": {
        "operationId": "AddanActivityAllDayActivityResources",
        "summary": "Creates a new All-Day Activity",
        "tags": [
          "All Day Activity Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "SearchActivitiesAllDayActivityResources",
        "summary": "Fetches a list of Activities based on the query",
        "tags": [
          "All Day Activity Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "data_source",
            "type": "string",
            "description": "The data_source id or href responsible for recording the activities",
            "in": "query",
            "required": true,
            "default": "<your data_source ID or href here>"
          },
          {
            "name": "limit",
            "type": "integer",
            "description": "Results per page",
            "in": "query",
            "required": false,
            "default": "1"
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "The page offset",
            "in": "query",
            "required": false,
            "default": "0"
          },
          {
            "name": "order_by",
            "type": "string",
            "description": "The way the results are ordered",
            "in": "query",
            "required": false,
            "default": "-date"
          },
          {
            "name": "target_end_datetime",
            "type": "string",
            "description": "ISO-8601 Datetime string",
            "in": "query",
            "required": true,
            "default": "2014-09-12T23:30:00+00:00"
          },
          {
            "name": "target_start_datetime",
            "type": "string",
            "description": "ISO-8601 Datetime string",
            "in": "query",
            "required": true,
            "default": "2014-09-12T23:30:00+00:00"
          },
          {
            "name": "user",
            "type": "string",
            "description": "The user id or href of the user whose activities are being requested",
            "in": "query",
            "required": true,
            "default": "<your user ID or href here>"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/allday_activity/{activity_id}/": {
      "get": {
        "operationId": "GetActivityByIDAllDayActivityResources",
        "summary": "Fetches a user's activity by user ID",
        "tags": [
          "All Day Activity Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "activity_id",
            "type": "string",
            "description": "The Activity ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/bodymass/": {
      "get": {
        "operationId": "SearchBodyMassActivitiesBodyMassResources",
        "summary": "Fetches a list of Body Mass Activities based on th...",
        "description": "Fetches a list of Body Mass Activities based on the query",
        "tags": [
          "Body Mass Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "target_end_datetime",
            "type": "string",
            "description": "ISO-8601 Datetime string",
            "in": "query",
            "required": true,
            "default": "2014-05-05"
          },
          {
            "name": "target_start_datetime",
            "type": "string",
            "description": "ISO-8601 Datetime string",
            "in": "query",
            "required": true,
            "default": "2014-05-05"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "operationId": "AddaBodyMassActivityBodyMassResources",
        "summary": "Creates a new Body Mass Activity",
        "tags": [
          "Body Mass Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/bodymass/{bodymass_id}": {
      "put": {
        "operationId": "UpdateaBodyMassActivityBodyMassResources",
        "summary": "Creates a new Body Mass Activity",
        "tags": [
          "Body Mass Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "bodymass_id",
            "type": "string",
            "description": "The Body Mass Activity ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/bodymass/{bodymass_id}/": {
      "get": {
        "operationId": "GetBodyMassActivityByIDBodyMassResources",
        "summary": "Fetches resource's information by user ID'",
        "tags": [
          "Body Mass Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "bodymass_id",
            "type": "string",
            "description": "The Body Mass ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/0.1/course_leaderboard/{course_id}/": {
      "get": {
        "operationId": "GetCourseLeaderboardCourseResources",
        "summary": "Returns leaderboard data for a course",
        "tags": [
          "Course Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "course_id",
            "type": "integer",
            "description": "The ID of the desired course",
            "in": "path",
            "required": true
          },
          {
            "name": "activity_type_id",
            "type": "integer",
            "description": "Specifies which type of activity the leaderboard should be generated for",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/overall_leaderboard_entry/": {
      "get": {
        "operationId": "GetOverallLeaderboardEntriesPageResources",
        "summary": "Returns overall leaderboard entries.",
        "tags": [
          "Page Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "activity_type",
            "type": "string",
            "description": "The ID of an ActivityType resource to filter entries on. e.g. /v7.1/activity_type/11",
            "in": "query",
            "required": true
          },
          {
            "name": "age",
            "type": "integer",
            "description": "The age to filter entries on. e.g. 35 will result in the range 30-39",
            "in": "query",
            "required": true
          },
          {
            "name": "gender",
            "type": "string",
            "description": "The gender to filter entries on. e.g. 'm' or 'f'",
            "in": "query",
            "required": true
          },
          {
            "name": "month",
            "type": "integer",
            "description": "The month to filter entries on. Options: [1-12]",
            "in": "query",
            "required": true
          },
          {
            "name": "user",
            "type": "string",
            "description": "The ID of a User resource to offset the results on. e.g. /v7.1/user/36142",
            "in": "query",
            "required": true
          },
          {
            "name": "year",
            "type": "integer",
            "description": "The year to filter entries on.",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/0.1/course_map/{course_id}/": {
      "get": {
        "operationId": "GetCourseMapCourseResources",
        "summary": "Returns an array of map points which describe the ...",
        "description": "Returns an array of map points which describe the course given a course ID",
        "tags": [
          "Course Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "course_id",
            "type": "integer",
            "description": "The ID of the desired course",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/overall_leaderboard_entry/{user_id}/": {
      "get": {
        "operationId": "GetOverallLeaderboardEntryPageResources",
        "summary": "Returns single overall leaderboard entry for a use...",
        "description": "Returns single overall leaderboard entry for a user",
        "tags": [
          "Page Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "user_id",
            "type": "integer",
            "description": "The ID of a User.",
            "in": "path",
            "required": true
          },
          {
            "name": "activity_type",
            "type": "string",
            "description": "The ID of an ActivityType resource to calculate rank against. e.g. /v7.1/activity_type/11",
            "in": "query",
            "required": true
          },
          {
            "name": "age",
            "type": "integer",
            "description": "The age to calculate rank against. e.g. 35 will result in the range 30-39",
            "in": "query",
            "required": true
          },
          {
            "name": "gender",
            "type": "string",
            "description": "The gender to calculate rank against. e.g. 'm' or 'f'",
            "in": "query",
            "required": true
          },
          {
            "name": "month",
            "type": "integer",
            "description": "The month to filter on. Options: [1-12]",
            "in": "query",
            "required": true
          },
          {
            "name": "year",
            "type": "integer",
            "description": "The year to filter on.",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/course/": {
      "get": {
        "operationId": "SearchCoursesCourseResources",
        "summary": "Return a list of courses associated with a workout...",
        "description": "Return a list of courses associated with a workout or a route, or allows for retrieval of multiple courses by course ID or href.",
        "tags": [
          "Course Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "course",
            "type": "string",
            "description": "One (but only one) of this, 'workout', or 'route' are required. Direct search for the specified courses. Can be specified as either the course ID or its resource href. May specify multiple values by either repeating the parameter in the query or by providing a comma-delimited list within a single 'course' parameter.",
            "in": "query",
            "required": false
          },
          {
            "name": "field_set",
            "type": "string",
            "description": "Optional. Specifies the set of fields to be returned. Valid values are 'default' (the default if not specified) or 'minimal'.",
            "in": "query",
            "required": false,
            "enum": [
              "default",
              "minimal"
            ]
          },
          {
            "name": "route",
            "type": "string",
            "description": "One (but only one) of this, 'workout', or 'course' are required. Searches for courses that are contained within the specified route. Can be specified as either the route ID or its resource href. May only specify one.",
            "in": "query",
            "required": false
          },
          {
            "name": "thumbnail",
            "type": "string",
            "description": "Optional. Specify 'True' if you would like the course thumbnail link to be included in the response. Defaults to 'False'.",
            "in": "query",
            "required": false,
            "enum": [
              "True",
              "False"
            ]
          },
          {
            "name": "thumbnail_height",
            "type": "integer",
            "description": "Optional. In pixels. Ignored unless 'thumbnail' is 'True'. Defaults to '60'.",
            "in": "query",
            "required": false,
            "enum": [
              "60",
              "120",
              "180"
            ]
          },
          {
            "name": "thumbnail_width",
            "type": "integer",
            "description": "Optional. In pixels. Ignored unless 'thumbnail' is 'True'. Defaults to '60'.",
            "in": "query",
            "required": false,
            "enum": [
              "60",
              "120",
              "180"
            ]
          },
          {
            "name": "workout",
            "type": "string",
            "description": "One (but only one) of this, 'route', or 'course' are required. Searches for courses that were completed during the specified workout. Can be specified as either the workout ID or its resource href. May only specify one.",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/course/{course_id}/": {
      "get": {
        "operationId": "GetCourseByIdCourseResources",
        "summary": "Returns details for a single course given a course...",
        "description": "Returns details for a single course given a course ID",
        "tags": [
          "Course Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "course_id",
            "type": "integer",
            "description": "The ID of the desired course",
            "in": "path",
            "required": true
          },
          {
            "name": "field_set",
            "type": "string",
            "description": "Optional. Specifies the set of fields to be returned. Valid values are 'default' (the default if not specified) or 'minimal'.",
            "in": "query",
            "required": false,
            "enum": [
              "default",
              "minimal"
            ]
          },
          {
            "name": "thumbnail",
            "type": "string",
            "description": "Optional. Specify 'True' if you would like the course thumbnail link to be included in the response. Defaults to 'False'.",
            "in": "query",
            "required": false,
            "enum": [
              "True",
              "False"
            ]
          },
          {
            "name": "thumbnail_height",
            "type": "integer",
            "description": "Optional. In pixels. Ignored unless 'thumbnail' is 'True'. Defaults to '60'.",
            "in": "query",
            "required": false,
            "enum": [
              "60",
              "120",
              "180"
            ]
          },
          {
            "name": "thumbnail_width",
            "type": "integer",
            "description": "Optional. In pixels. Ignored unless 'thumbnail' is 'True'. Defaults to '60'.",
            "in": "query",
            "required": false,
            "enum": [
              "60",
              "120",
              "180"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/0.1/course_history/{course_id_}{user_id}/": {
      "get": {
        "operationId": "GetCourseUserHistoryCourseResources",
        "summary": "Returns information about a user's interaction wit...",
        "description": "Returns information about a user's interaction with a given course",
        "tags": [
          "Course Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "course_id",
            "type": "integer",
            "description": "The ID of the desired course",
            "in": "query",
            "required": true
          },
          {
            "name": "user_id",
            "type": "integer",
            "description": "The ID of the user for which history is desired",
            "in": "path",
            "required": true
          },
          {
            "name": "activity_type_id",
            "type": "integer",
            "description": "If specified, returns history that pertains only to the type of activity indicated",
            "in": "query",
            "required": false
          },
          {
            "name": "course_id_",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/data_source/{data_source_id}/": {
      "get": {
        "operationId": "GetDataSourcebyidDataSourceResources",
        "summary": "Get a Data Source record by id",
        "tags": [
          "Data Source Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "data_source_id",
            "type": "integer",
            "description": "Data Source id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "operationId": "UpdateDataSourceDataSourceResources",
        "summary": "Update a Data Source record by id",
        "tags": [
          "Data Source Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "data_source_id",
            "type": "integer",
            "description": "Data Source id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/data_source/": {
      "post": {
        "operationId": "AddaDataSourceDataSourceResources",
        "summary": "Add a Data Source based on an embedded Device",
        "tags": [
          "Data Source Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "GetDataSourcesbydeviceDataSourceResources",
        "summary": "Returns all privacy options available",
        "tags": [
          "Data Source Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "device",
            "type": "string",
            "description": "The device being used by the data source. Valid id or href",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/data_source_priority/": {
      "get": {
        "operationId": "GetDataSourcePriorityfordaterangeDataSourcePriorityResources",
        "summary": "Returns all privacy options available",
        "tags": [
          "Data Source Priority Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "priority_filter",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false,
            "enum": [
              "unique",
              "active",
              "history"
            ]
          },
          {
            "name": "priority_type",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false,
            "enum": [
              "sleep",
              "activity"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "operationId": "CreateaDataSourcePriorityDataSourcePriorityResources",
        "summary": "Submit new Data Source Priority data",
        "tags": [
          "Data Source Priority Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/data_source_priority/{data_source_priority_id}/": {
      "get": {
        "operationId": "GetDataSourcePrioritydatabyidDataSourcePriorityResources",
        "summary": "Get a Data Source Priority record by id",
        "tags": [
          "Data Source Priority Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "data_source_priority_id",
            "type": "integer",
            "description": "Data Source Priority id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/gear/": {
      "get": {
        "operationId": "ListGearGearResources*NEW*",
        "summary": "List all the Gear for a User",
        "tags": [
          "Gear Resources *NEW*"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "brand",
            "type": "string",
            "description": "A brand name.",
            "in": "query",
            "required": false
          },
          {
            "name": "query",
            "type": "string",
            "description": "A search term.",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/gear/{id}/": {
      "get": {
        "operationId": "GetapieceofGearGearResources*NEW*",
        "summary": "Get an individual piece of Gear by ID",
        "tags": [
          "Gear Resources *NEW*"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "description": "The Gear ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "operationId": "DeleteapieceofGearGearResources*NEW*",
        "summary": "Delete an individual piece of Gear by ID",
        "tags": [
          "Gear Resources *NEW*"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "description": "The Gear ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/group/{id}/": {
      "put": {
        "operationId": "ReplaceaGroupGroupResources",
        "summary": "Replace a Group by ID. Only for admins of the Grou...",
        "description": "Replace a Group by ID. Only for admins of the Group",
        "tags": [
          "Group Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "integer",
            "description": "The Group ID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "GetaGroupGroupResources",
        "summary": "Get a Group by ID",
        "tags": [
          "Group Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "integer",
            "description": "The Group ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "operationId": "DeleteaGroupGroupResources",
        "summary": "Delete a Group by ID. Only for admins of the Group...",
        "description": "Delete a Group by ID. Only for admins of the Group",
        "tags": [
          "Group Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "integer",
            "description": "The Group ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "operationId": "UpdateaGroupGroupResources",
        "summary": "Update a Group by ID. Only for admins of the Group...",
        "description": "Update a Group by ID. Only for admins of the Group",
        "tags": [
          "Group Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "integer",
            "description": "The Group ID",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/group/": {
      "post": {
        "operationId": "CreateaGroupGroupResources",
        "summary": "Create a new Group",
        "tags": [
          "Group Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "type": "string",
            "description": "The JSON request body. See the documentation for more information.",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "ListGroupsGroupResources",
        "summary": "List all the Groups",
        "tags": [
          "Group Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "group_purpose",
            "type": "string",
            "description": "Limit Groups to a purpose",
            "in": "query",
            "required": false
          },
          {
            "name": "keyword",
            "type": "string",
            "description": "With search view, search for this",
            "in": "query",
            "required": false
          },
          {
            "name": "location_coords",
            "type": "string",
            "description": "With search view, search near here",
            "in": "query",
            "required": false
          },
          {
            "name": "search_radius",
            "type": "integer",
            "description": "With location_coords, how far from to search",
            "in": "query",
            "required": true
          },
          {
            "name": "user_id",
            "type": "integer",
            "description": "Limit the Groups to a user",
            "in": "query",
            "required": true
          },
          {
            "name": "view",
            "type": "string",
            "description": "A subset of Groups to return",
            "in": "query",
            "required": false,
            "enum": [
              "member",
              "invited",
              "all",
              "in_progress",
              "completed",
              "search"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/group_invite/{id}/": {
      "delete": {
        "operationId": "DeleteaGroupInvitebyIDGroupInviteResources",
        "summary": "Delete a Group Invite by ID. Only for admins of th...",
        "description": "Delete a Group Invite by ID. Only for admins of the Group",
        "tags": [
          "Group Invite Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "integer",
            "description": "The Group Invite ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "GetaGroupInviteGroupInviteResources",
        "summary": "Get a Group Invite by ID",
        "tags": [
          "Group Invite Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "integer",
            "description": "The Group Invite ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/group_invite/": {
      "post": {
        "operationId": "CreateaGroupInviteGroupInviteResources",
        "summary": "Create a new Group Invite",
        "tags": [
          "Group Invite Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "operationId": "CreateabatchofGroupInvitesGroupInviteResources",
        "summary": "Create several new Group Invites at once",
        "tags": [
          "Group Invite Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "ListGroupInvitesGroupInviteResources",
        "summary": "List Group Invites for a User or Group",
        "tags": [
          "Group Invite Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "group_id",
            "type": "integer",
            "description": "Limit the Group Invites to a Group",
            "in": "query",
            "required": false
          },
          {
            "name": "user_id",
            "type": "integer",
            "description": "Limit the Group Invites to a User",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/group_leaderboard/": {
      "get": {
        "operationId": "ListGroupLeaderboardsGroupLeaderboardResources",
        "summary": "List Group Leaderboards for a Group",
        "tags": [
          "Group Leaderboard Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "group_id",
            "type": "integer",
            "description": "The Group ID",
            "in": "query",
            "required": true
          },
          {
            "name": "iteration",
            "type": "integer",
            "description": "The iteration of the Group Leaderboard to show",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/group_purpose/": {
      "get": {
        "operationId": "ListGroupPurposesGroupPurposeResources",
        "summary": "List all the Group Purposes",
        "tags": [
          "Group Purpose Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/group_purpose/{id}/": {
      "get": {
        "operationId": "GetaGroupPurposeGroupPurposeResources",
        "summary": "Get a Group Purpose by ID",
        "tags": [
          "Group Purpose Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "integer",
            "description": "The Group Purpose ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/group_user/{id}/": {
      "get": {
        "operationId": "GetaGroupUserGroupUserResources",
        "summary": "Get a Group User by ID",
        "tags": [
          "Group User Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "integer",
            "description": "The Group User ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "operationId": "DeleteaGroupUserGroupUserResources",
        "summary": "Delete a Group User by ID. Only for admins of the ...",
        "description": "Delete a Group User by ID. Only for admins of the Group or the User involved",
        "tags": [
          "Group User Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "integer",
            "description": "The Group User ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/group_user/": {
      "get": {
        "operationId": "ListGroupUsersGroupUserResources",
        "summary": "List all the Group Users for a User or a Group",
        "tags": [
          "Group User Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "group_id",
            "type": "integer",
            "description": "A Group's ID",
            "in": "query",
            "required": true
          },
          {
            "name": "user_id",
            "type": "integer",
            "description": "A User's ID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "operationId": "AddaUsertoaGroupGroupUserResources",
        "summary": "Create a membership (Add a User to a Group)",
        "tags": [
          "Group User Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "body",
            "type": "string",
            "description": "The JSON request body. See the documentation for more information.",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/heart_rate_zones/{id}/": {
      "get": {
        "operationId": "GetHeartRateZonesByIDHeartRateZoneResources",
        "summary": "Fetches Heart Rate Zones by ID",
        "tags": [
          "Heart Rate Zone Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "integer",
            "description": "The resource ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/heart_rate_zones/": {
      "post": {
        "operationId": "CreateorUpdateHeartRateZoneSettingsHeartRateZoneResources",
        "summary": "Posts data about a user's current heart rate zone ...",
        "description": "Posts data about a user's current heart rate zone settings",
        "tags": [
          "Heart Rate Zone Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "GetHeartRateZoneSettingsforUserHeartRateZoneResources",
        "summary": "Gets a user's current heart rate zone settings",
        "tags": [
          "Heart Rate Zone Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "user",
            "type": "string",
            "description": "The User whose heart rate zones are being queried",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/heart_rate_zone_calculation/": {
      "get": {
        "operationId": "CalculateHeartRateZonesByAgeHeartRateZoneCalculationResources",
        "summary": "Fetches a heart rate zone calculation based on an ...",
        "description": "Fetches a heart rate zone calculation based on an age",
        "tags": [
          "Heart Rate Zone Calculation Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "age",
            "type": "integer",
            "description": "The age for which the heart rate zones will be calculated",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/map_marker_image/0/": {
      "get": {
        "operationId": "GetDistanceMarkerImageMapMarkerImageResources",
        "summary": "Fetch the distance marker image with optional text...",
        "description": "Fetch the distance marker image with optional text to be composited.",
        "tags": [
          "Map Marker Image Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "format",
            "type": "string",
            "description": "The field_set desired",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "png"
            ]
          },
          {
            "name": "txt",
            "type": "string",
            "description": "The text to be composited upon the marker image",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/map_marker_image/": {
      "get": {
        "operationId": "GetListofMapMarkerImagesMapMarkerImageResources",
        "summary": "Fetches a list of json descriptions of each reques...",
        "description": "Fetches a list of json descriptions of each requested marker type.",
        "tags": [
          "Map Marker Image Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "marker_type_id",
            "type": "string",
            "description": "A list of comma-separated marker type IDs being requested (or none for all)",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/map_marker_image/{marker_type_id}/": {
      "get": {
        "operationId": "GetMapMarkerImageMapMarkerImageResources",
        "summary": "Fetch a map marker image as png or a json descript...",
        "description": "Fetch a map marker image as png or a json description.",
        "tags": [
          "Map Marker Image Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "marker_type_id",
            "type": "integer",
            "description": "The marker type ID",
            "in": "path",
            "required": true
          },
          {
            "name": "format",
            "type": "string",
            "description": "The field_set desired",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "png"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/membership/{user_id}/": {
      "get": {
        "operationId": "GetMembershipByUserIDMembershipResources",
        "summary": "Fetches membership information by a user ID",
        "tags": [
          "Membership Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "user_id",
            "type": "integer",
            "description": "The user ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/page/": {
      "get": {
        "operationId": "SearchPagesPageResources",
        "summary": "Return a list of pages associated with a workout o...",
        "description": "Return a list of pages associated with a workout or a route, or allows for retrieval of multiple pages by page ID or href.",
        "tags": [
          "Page Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "page",
            "type": "string",
            "description": "One (but only one) of this, 'workout', or 'route' are required. Direct search for the specified pages. Can be specified as either the page ID or its resource href. May specify multiple values by either repeating the parameter in the query or by providing a comma-delimited list within a single 'page' parameter.",
            "in": "query",
            "required": false
          },
          {
            "name": "route",
            "type": "string",
            "description": "One (but only one) of this, 'workout', or 'page' are required. Searches for pages that are contained within the specified route. Can be specified as either the route ID or its resource href. May only specify one.",
            "in": "query",
            "required": false
          },
          {
            "name": "workout",
            "type": "string",
            "description": "One (but only one) of this, 'route', or 'page' are required. Searches for pages that were completed during the specified workout. Can be specified as either the workout ID or its resource href. May only specify one.",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/page/{page_alias}/": {
      "get": {
        "operationId": "GetPageByAliasPageResources",
        "summary": "Returns details for a single page given a page ali...",
        "description": "Returns details for a single page given a page alias",
        "tags": [
          "Page Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "page_alias",
            "type": "string",
            "description": "The ID of the desired page",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/0.1/page_history/{page_id_}{user_id}/": {
      "get": {
        "operationId": "GetPageUserHistoryPageResources",
        "summary": "Returns information about a user's interaction wit...",
        "description": "Returns information about a user's interaction with a given page",
        "tags": [
          "Page Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "page_id",
            "type": "integer",
            "description": "The ID of the desired page",
            "in": "query",
            "required": true
          },
          {
            "name": "user_id",
            "type": "integer",
            "description": "The ID of the user for which history is desired",
            "in": "path",
            "required": true
          },
          {
            "name": "activity_type_id",
            "type": "integer",
            "description": "If specified, returns history that pertains only to the type of activity indicated",
            "in": "query",
            "required": false
          },
          {
            "name": "page_id_",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/0.1/page_leaderboard/{page_id}/": {
      "get": {
        "operationId": "GetPageLeaderboardPageResources",
        "summary": "Returns leaderboard data for a page",
        "tags": [
          "Page Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "page_id",
            "type": "integer",
            "description": "The ID of the desired page",
            "in": "path",
            "required": true
          },
          {
            "name": "activity_type_id",
            "type": "integer",
            "description": "Specifies which type of activity the leaderboard should be generated for",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/page/{page_id}/": {
      "get": {
        "operationId": "GetPageByIdPageResources",
        "summary": "Returns details for a single page given a page ID",
        "tags": [
          "Page Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "page_id",
            "type": "integer",
            "description": "The ID of the desired page",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/0.1/page_map/{page_id}/": {
      "get": {
        "operationId": "GetPageMapPageResources",
        "summary": "Returns an array of map points which describe the ...",
        "description": "Returns an array of map points which describe the page given a page ID",
        "tags": [
          "Page Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "page_id",
            "type": "integer",
            "description": "The ID of the desired page",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/remoteconnection/": {
      "get": {
        "operationId": "ListRemoteConnectionsRemoteConnectionResources",
        "summary": "List Remote Connections for the active user",
        "tags": [
          "Remote Connection Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/remoteconnection/{id}/": {
      "get": {
        "operationId": "GetRemoteConnectionsbyidRemoteConnectionResources",
        "summary": "Get one of a user's Remote Connections",
        "tags": [
          "Remote Connection Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "integer",
            "description": "the remote connection id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "operationId": "RevokeaRemoteConnectionbyidRemoteConnectionResources",
        "summary": "Revoke one of a user's Remote Connections",
        "tags": [
          "Remote Connection Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "integer",
            "description": "the remote connection id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/remoteconnectiontype/": {
      "get": {
        "operationId": "ListallRemoteConnectionTypesRemoteConnectionTypeResources",
        "summary": "List all the Remote Connection Types",
        "tags": [
          "Remote Connection Type Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/remoteconnectiontype/{id}/": {
      "get": {
        "operationId": "GetaRemoteConnectionTypebyidRemoteConnectionTypeResources",
        "summary": "Get a single Remote Connection Type",
        "tags": [
          "Remote Connection Type Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "integer",
            "description": "the remote connection id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/route/": {
      "get": {
        "operationId": "GetRoutesForUserRouteResources",
        "summary": "Fetches route meta information",
        "tags": [
          "Route Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "user",
            "type": "string",
            "description": "The user id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "operationId": "AddRouteRouteResources",
        "summary": "Submit a new route.",
        "tags": [
          "Route Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/route_bookmark/{route_bookmark_id}/": {
      "delete": {
        "operationId": "DeleteaBookmarkforaRouteRouteResources",
        "summary": "Deletes a route bookmark for user",
        "tags": [
          "Route Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "route_bookmark_id",
            "type": "string",
            "description": "The route bookmark id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/route_bookmark/": {
      "post": {
        "operationId": "AddaBookmarktoaRouteRouteResources",
        "summary": "Add a bookmark from a user to a route.",
        "tags": [
          "Route Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "GetBookmarkedRoutesForUserRouteResources",
        "summary": "Fetches route bookmarks for user",
        "tags": [
          "Route Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "user",
            "type": "string",
            "description": "The user id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/route/{route_id}/": {
      "get": {
        "operationId": "GetRoutebyIDRouteResources",
        "summary": "Fetches route meta information",
        "tags": [
          "Route Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "route_id",
            "type": "integer",
            "description": "The ID of the route",
            "in": "path",
            "required": true
          },
          {
            "name": "field_set",
            "type": "string",
            "description": "The field_set desired",
            "in": "query",
            "required": false,
            "enum": [
              "detailed"
            ]
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the output file",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "gpx",
              "kml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "operationId": "UpdateRouteRouteResources",
        "summary": "Submit a new route.",
        "tags": [
          "Route Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "route_id",
            "type": "integer",
            "description": "The ID of the route",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "operationId": "DeleteRoutebyIDRouteResources",
        "summary": "Delete route",
        "tags": [
          "Route Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "route_id",
            "type": "integer",
            "description": "The ID of the route",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/sleep/{sleep_id}/": {
      "delete": {
        "operationId": "DeleteSleepSleepResources",
        "summary": "Delete a Sleep record by id",
        "tags": [
          "Sleep Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "sleep_id",
            "type": "integer",
            "description": "Sleep id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "GetSleepdatabyidSleepResources",
        "summary": "Get a Sleep record by id",
        "tags": [
          "Sleep Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "sleep_id",
            "type": "integer",
            "description": "Sleep id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "operationId": "UpdateSleepSleepResources",
        "summary": "Update a Sleep record by id",
        "tags": [
          "Sleep Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "sleep_id",
            "type": "integer",
            "description": "Sleep id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/sleep/": {
      "get": {
        "operationId": "GetSleepfordaterangeSleepResources",
        "summary": "Returns all privacy options available",
        "tags": [
          "Sleep Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "field_set",
            "type": "string",
            "description": "The field_set desired",
            "in": "query",
            "required": false,
            "enum": [
              "time_series"
            ]
          },
          {
            "name": "target_end_datetime",
            "type": "string",
            "description": "",
            "in": "query",
            "required": false
          },
          {
            "name": "target_start_datetime",
            "type": "string",
            "description": "",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "operationId": "AddSleepSleepResources",
        "summary": "Submit new Sleep data",
        "tags": [
          "Sleep Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/user/self/": {
      "get": {
        "operationId": "GetAuthenticatedUserUserResources",
        "summary": "Fetches authenticated user's information",
        "tags": [
          "User Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/user/{user_id}/": {
      "put": {
        "operationId": "UpdateaUserUserResources",
        "summary": "Fetches friends of a user",
        "tags": [
          "User Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "user_id",
            "type": "integer",
            "description": "The user id (must be the authenticated user)",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "GetUserByIDUserResources",
        "summary": "Fetches user's information by user ID",
        "tags": [
          "User Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "user_id",
            "type": "integer",
            "description": "The user id",
            "in": "path",
            "required": true
          },
          {
            "name": "field_set",
            "type": "string",
            "description": "The field_set desired",
            "in": "query",
            "required": false,
            "enum": [
              "is_mvp"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/user_achievement/": {
      "get": {
        "operationId": "GetUserAchievementsUserAchievementResources",
        "summary": "Returns achievements for a user",
        "tags": [
          "User Achievement Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "user",
            "type": "integer",
            "description": "The ID of the user",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/user_profile_photo/{user_id}/": {
      "get": {
        "operationId": "GetUserProfilePhotoUserProfilePhotoResources",
        "summary": "Fetches user's profile photo by user ID",
        "tags": [
          "User Profile Photo Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "user_id",
            "type": "integer",
            "description": "The user id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/usergear/": {
      "get": {
        "operationId": "ListUserGearUserGearResources*NEW*",
        "summary": "List User Gear",
        "tags": [
          "User Gear Resources *NEW*"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "operationId": "CreateaUserGearUserGearResources*NEW*",
        "summary": "Create a User Gear",
        "tags": [
          "User Gear Resources *NEW*"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/usergear/{id}/": {
      "patch": {
        "operationId": "UpdateaUserGearUserGearResources*NEW*",
        "summary": "Update a User Gear",
        "tags": [
          "User Gear Resources *NEW*"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "description": "the user gear id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "operationId": "DeleteaUserGearUserGearResources*NEW*",
        "summary": "Delete a User Gear",
        "tags": [
          "User Gear Resources *NEW*"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "description": "the user gear id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "GetasingleUserGearUserGearResources*NEW*",
        "summary": "Get a single User Gear",
        "tags": [
          "User Gear Resources *NEW*"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "string",
            "description": "the user gear id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/webhook/{webhook_id}/": {
      "get": {
        "operationId": "GetwebhookbyIDWebhookResources",
        "summary": "Returns a webhook by id",
        "tags": [
          "Webhook Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "webhook_id",
            "type": "integer",
            "description": "The ID of the webhook",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "put": {
        "operationId": "ModifyawebhookstatusWebhookResources",
        "summary": "Updates a webhook's status. See https://www.mapmya...",
        "description": "Updates a webhook's status. See https://www.mapmyapi.com/docs/Webhook",
        "tags": [
          "Webhook Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "webhook_id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/webhook/": {
      "post": {
        "operationId": "AddawebhookWebhookResources",
        "summary": "https://www.mapmyapi.com/docs/Webhook",
        "tags": [
          "Webhook Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "GetwebhooksforclientWebhookResources",
        "summary": "Returns list of webhooks for a client.  See https:...",
        "description": "Returns list of webhooks for a client.  See https://www.mapmyapi.com/docs/Webhook",
        "tags": [
          "Webhook Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/workout/": {
      "post": {
        "operationId": "AddaWorkoutWorkoutResources",
        "summary": "https://www.mapmyapi.com/docs/Workout",
        "tags": [
          "Workout Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "get": {
        "operationId": "GetWorkoutsForUserWorkoutResources",
        "summary": "Returns list of workouts for a user.  See https://...",
        "description": "Returns list of workouts for a user.  See https://www.mapmyapi.com/docs/Workout",
        "tags": [
          "Workout Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "activity_type",
            "type": "string",
            "description": "Activity Type to limit the results to.  eg.  /v7.1/activity_type/11/",
            "in": "query",
            "required": false
          },
          {
            "name": "started_after",
            "type": "string",
            "description": "Filters to workouts started after this time in UTC",
            "in": "query",
            "required": false
          },
          {
            "name": "started_before",
            "type": "string",
            "description": "Filters to workouts started before this time in UTC",
            "in": "query",
            "required": false
          },
          {
            "name": "user",
            "type": "string",
            "description": "The user's workouts you are searching. eg: /v7.1/user/36142/",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/workout/{workout_id}/": {
      "get": {
        "operationId": "GetWorkoutbyIDWorkoutResources",
        "summary": "Returns a workout by id",
        "tags": [
          "Workout Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "workout_id",
            "type": "integer",
            "description": "The ID of the workout",
            "in": "path",
            "required": true
          },
          {
            "name": "field_set",
            "type": "string",
            "description": "Controls fields to return",
            "in": "query",
            "required": false,
            "enum": [
              "time_series"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v7.1/workout_heart_rate/{id}/": {
      "get": {
        "operationId": "GetHeartRateWorkoutByIDWorkoutHeartRateResources",
        "summary": "Fetches Heart Rate Zones for a workout by ID",
        "tags": [
          "Workout Heart Rate Resources"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Content type of the payload",
            "in": "header",
            "required": true,
            "default": "application/json"
          },
          {
            "name": "Api-Key",
            "type": "string",
            "description": "Client Id",
            "in": "header",
            "required": true
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Add Auth token to the header",
            "in": "header",
            "required": true
          },
          {
            "name": "id",
            "type": "integer",
            "description": "The HeartRate Workout ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {}
}
