{
  "swagger": "2.0",
  "info": {
    "title": "Fundraiser developer APIs",
    "version": "1",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/mashery2openapi"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "description": " You can test the various APIs available under the Fundraiser developer package from here",
    "x-mashery-id": "846"
  },
  "schemes": [
    "http"
  ],
  "host": "api.virginmoneygiving.com",
  "basePath": "/fundraisers/v1",
  "externalDocs": {
    "description": "You can use IO Docs to make API calls directly against our sandbox environment, allowing you to test the calls you need for your live application.You can also view our written documentation.Please select one of the API packages from the list below.",
    "url": "https://developer.virginmoneygiving.com/docs"
  },
  "consumes": [],
  "produces": [],
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "apikey",
      "in": "query"
    }
  },
  "security": [
    {
      "key": []
    }
  ],
  "tags": [
    {
      "name": "APIs in this package"
    }
  ],
  "paths": {
    "/search": {
      "get": {
        "operationId": "FundraisersearchAPIsinthispackage",
        "summary": "Search for a fundraiser by surname and optionally ...",
        "description": "Search for a fundraiser by surname and optionally forename",
        "tags": [
          "APIs in this package"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Output format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "name": "surname",
            "type": "string",
            "description": "Surname to search for",
            "in": "query",
            "required": true
          },
          {
            "name": "forename",
            "type": "string",
            "description": "Forename to search for",
            "in": "query",
            "required": false
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/account/{resourceId}": {
      "get": {
        "operationId": "FundraiserdetailsAPIsinthispackage",
        "summary": "Retrieve details for a fundraiser based on their A...",
        "description": "Retrieve details for a fundraiser based on their API reference",
        "tags": [
          "APIs in this package"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Output format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "name": "resourceId",
            "type": "string",
            "description": "Resource Id (API reference) of the fundraiser",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/account/{resourceId}/pages/{pageId}": {
      "get": {
        "operationId": "FundraisingpagedetailsAPIsinthispackage",
        "summary": "Retrieve a fundraising page based on a fundraiser'...",
        "description": "Retrieve a fundraising page based on a fundraiser's API reference and the page id",
        "tags": [
          "APIs in this package"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Output format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "name": "resourceId",
            "type": "string",
            "description": "Resource Id (API reference) of the fundraiser",
            "in": "path",
            "required": true
          },
          {
            "name": "pageId",
            "type": "integer",
            "description": "Id of the page to retrieve",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {}
}