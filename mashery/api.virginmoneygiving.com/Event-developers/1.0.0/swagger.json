{
  "swagger": "2.0",
  "info": {
    "title": "Event developer APIs",
    "version": "1.0.0",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/mashery2openapi"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "description": " You can test the various APIs available under the Event developer package from here",
    "x-mashery-id": "848"
  },
  "schemes": [
    "http"
  ],
  "host": "api.virginmoneygiving.com",
  "basePath": "/",
  "externalDocs": {
    "description": "You can use IO Docs to make API calls directly against our sandbox environment, allowing you to test the calls you need for your live application.You can also view our written documentation.Please select one of the API packages from the list below.",
    "url": "https://developer.virginmoneygiving.com/docs"
  },
  "consumes": [],
  "produces": [],
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "apikey",
      "in": "query"
    }
  },
  "security": [
    {
      "key": []
    }
  ],
  "tags": [
    {
      "name": "APIs in this package"
    }
  ],
  "paths": {
    "/fundraisers/v1/account/{resourceId}": {
      "get": {
        "operationId": "FundraiserdetailsAPIsinthispackage",
        "summary": "Retrieve details for a fundraiser based on their A...",
        "description": "Retrieve details for a fundraiser based on their API reference",
        "tags": [
          "APIs in this package"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Output format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "name": "resourceId",
            "type": "string",
            "description": "Resource Id (API reference) of the fundraiser",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/charities/v1/search": {
      "get": {
        "operationId": "CharitysearchAPIsinthispackage",
        "summary": "Search for a charity by name",
        "tags": [
          "APIs in this package"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Output format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "name": "name",
            "type": "string",
            "description": "Charity name to search for",
            "in": "query",
            "required": false
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/fundraisers/v1/urls/{urlToCheck}": {
      "get": {
        "operationId": "ValidatefundraiserURLAPIsinthispackage",
        "summary": "Checks if the requested fundraiser URL is availabl...",
        "description": "Checks if the requested fundraiser URL is available, and if not, suggests alternatives",
        "tags": [
          "APIs in this package"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Output format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "name": "urlToCheck",
            "type": "string",
            "description": "Fundraiser URL to check",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/fundraisers/v1/urls/teams/{urlToCheck}": {
      "get": {
        "operationId": "ValidateteamURLAPIsinthispackage",
        "summary": "Checks if the requested team URL is available, and...",
        "description": "Checks if the requested team URL is available, and if not, suggests alternatives",
        "tags": [
          "APIs in this package"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Output format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "name": "urlToCheck",
            "type": "string",
            "description": "Team URL to check",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/fundraisers/v1/countries": {
      "get": {
        "operationId": "CountrycodelookupAPIsinthispackage",
        "summary": "Fetch a list of all countries in our database",
        "tags": [
          "APIs in this package"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Output format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/fundraisers/v1/postcode/{lookupValue}": {
      "get": {
        "operationId": "AddresslookupAPIsinthispackage",
        "summary": "Performs a UK postcode lookup",
        "tags": [
          "APIs in this package"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Output format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "name": "lookupValue",
            "type": "string",
            "description": "Postcode to look up",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/fundraisers/v1/newaccount": {
      "post": {
        "operationId": "CreatefundraiseraccountAPIsinthispackage",
        "summary": "Create a new fundraiser account",
        "tags": [
          "APIs in this package"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Input format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Output format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "name": "redirect_uri",
            "type": "string",
            "description": "The Redirect URI configured in your application",
            "in": "query",
            "required": true
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/fundraisers/v1/activities": {
      "get": {
        "operationId": "ActivitylookupAPIsinthispackage",
        "summary": "Fetch activity codes that can be used to create ne...",
        "description": "Fetch activity codes that can be used to create new fundraising pages via the API",
        "tags": [
          "APIs in this package"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Output format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/fundraisers/v1/account/secure/{resourceId}/newpage": {
      "post": {
        "operationId": "CreatefundraiserpageAPIsinthispackage",
        "summary": "Create a new fundraising page for an existing fund...",
        "description": "Create a new fundraising page for an existing fundraiser",
        "tags": [
          "APIs in this package"
        ],
        "parameters": [
          {
            "name": "Content-Type",
            "type": "string",
            "description": "Input format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Output format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "name": "Authorization",
            "type": "string",
            "description": "Access Token. Format is: Bearer yourAccessToken (Don't forget to add the word 'Bearer ' before the access token)",
            "in": "header",
            "required": true
          },
          {
            "name": "resourceId",
            "type": "string",
            "description": "The resource Id (API reference) of the fundraiser you are creating this page for",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/events/v1/account/{eventResourceId}/summary": {
      "get": {
        "operationId": "EventsummaryAPIsinthispackage",
        "summary": "Retrieve donation summary for an event",
        "tags": [
          "APIs in this package"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Output format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "name": "eventResourceId",
            "type": "string",
            "description": "Resource Id (API reference) of the event",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/events/v1/account/{eventResourceId}/pages": {
      "get": {
        "operationId": "EventfundraisersAPIsinthispackage",
        "summary": "Retrieve all fundraisers and their fundraising pag...",
        "description": "Retrieve all fundraisers and their fundraising pages for an event",
        "tags": [
          "APIs in this package"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Output format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "name": "eventResourceId",
            "type": "string",
            "description": "Resource Id (API reference) of the event",
            "in": "path",
            "required": true
          },
          {
            "name": "sortOrder",
            "type": "string",
            "description": "Sort order",
            "in": "query",
            "required": false,
            "enum": [
              "D",
              "A"
            ]
          },
          {
            "name": "sortField",
            "type": "string",
            "description": "Field to sort on",
            "in": "query",
            "required": false,
            "enum": [
              "donationTotalNet",
              "totalGiftAid",
              "donationTotalGA",
              "offlineAmount",
              "donationTotalGross"
            ]
          },
          {
            "name": "numRecords",
            "type": "integer",
            "description": "Number of records to return",
            "in": "query",
            "required": false
          },
          {
            "name": "startRecordNum",
            "type": "integer",
            "description": "Offset i.e. Start record number of the result set",
            "in": "query",
            "required": false
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/charities/v1/account/{charityResourceId}": {
      "get": {
        "operationId": "CharitydetailsAPIsinthispackage",
        "summary": "Retrieve details for a charity based on the API re...",
        "description": "Retrieve details for a charity based on the API reference of the charity",
        "tags": [
          "APIs in this package"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "Output format as JSON or XML",
            "in": "header",
            "required": false,
            "enum": [
              "application/json",
              "application/xml"
            ]
          },
          {
            "name": "charityResourceId",
            "type": "string",
            "description": "Resource Id (API reference) of the charity",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {}
}