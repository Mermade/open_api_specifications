{
  "swagger": "2.0",
  "info": {
    "title": "v2 - Ownership-Owners",
    "version": "2",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/mashery2openapi"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "x-origin": [
      {
        "url": "http://developer.edgar-online.com/iodocs",
        "format": "io_docs"
      }
    ],
    "description": "Test our API services using I/O Docs. ",
    "x-mashery-id": "3164"
  },
  "schemes": [
    "http"
  ],
  "host": "api.edgar-online.com",
  "basePath": "/v2/ownerships",
  "externalDocs": {
    "description": "You can also view our written documentation.",
    "url": "http://developer.edgar-online.com/iodocs/docs"
  },
  "consumes": [],
  "produces": [],
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "apikey",
      "in": "query"
    }
  },
  "security": [
    {
      "key": []
    }
  ],
  "tags": [
    {
      "name": "Ownership-Owners"
    }
  ],
  "paths": {
    "/owners": {
      "get": {
        "operationId": "SearchOwnership-OwnersresourceOwnership-Owners",
        "summary": "",
        "tags": [
          "Ownership-Owners"
        ],
        "parameters": [
          {
            "name": "filter",
            "type": "string",
            "description": "Filter parameter supports expression based search; example: filerid eq 424.",
            "in": "query",
            "required": false
          },
          {
            "name": "fields",
            "type": "string",
            "description": "Use to add or suppress the fields in the response. To include fields, type a field name seperated by comma; to exclude a field use !; example to exclude fields: !filerid.",
            "in": "query",
            "required": false,
            "default": "ownername,filerid"
          },
          {
            "name": "filerids",
            "type": "integer",
            "description": "Search by filerids, separated by comma.",
            "in": "query",
            "required": false,
            "default": 435
          },
          {
            "name": "ownernames",
            "type": "string",
            "description": "Search by ownernames, separated by comma; this field supports wildcard search, starts with (name*), ends with (*name), contains (*name*).",
            "in": "query",
            "required": false
          },
          {
            "name": "ciks",
            "type": "string",
            "description": "Search data using single CIK or list of CIKs separated by comma. Example: 0001287145,000094982,0001097945, etc., numeric value only.",
            "in": "query",
            "required": false
          },
          {
            "name": "cities",
            "type": "string",
            "description": "Search by city, separated by comma; this field supports wildcard search, starts with (name*), ends with (*name), contains (*name*).",
            "in": "query",
            "required": false
          },
          {
            "name": "states",
            "type": "string",
            "description": "Search by state, separated by comma; this field supports wildcard search, starts with (name*), ends with (*name), contains (*name*).",
            "in": "query",
            "required": false
          },
          {
            "name": "zips",
            "type": "string",
            "description": "Search by zip, separated by comma; this field supports wildcard search, starts with (name*), ends with (*name), contains (*name*).",
            "in": "query",
            "required": false
          },
          {
            "name": "currentreportdate",
            "type": "string",
            "format": "date",
            "description": "Search by most recent period end date of a filing for an owner, separated by comma.",
            "in": "query",
            "required": false
          },
          {
            "name": "modifiedsince",
            "type": "string",
            "description": "Search data based on modified since date range; example: range - 20111001~20131001, or start date - 20141001.",
            "in": "query",
            "required": false
          },
          {
            "name": "deleted",
            "type": "string",
            "description": "Parameter to filter the result set by IsDeleted.",
            "in": "query",
            "required": false,
            "enum": [
              "true",
              "false",
              "any"
            ]
          },
          {
            "name": "limit",
            "type": "integer",
            "description": "Limit is used with paging to define the number of rows to return in a single call; use a number between 1 - 9999.",
            "in": "query",
            "required": false
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Offset is used with paging to define which page number to retrieve based on total numbers of rows and limit.",
            "in": "query",
            "required": false
          },
          {
            "name": "debug",
            "type": "boolean",
            "description": "Debug parameter helps developers investigate what happened during the call and what items were substituted if any during the call; select true to invoke debug parameter.",
            "in": "query",
            "required": false
          },
          {
            "name": "sortby",
            "type": "string",
            "description": "Sort can be used to sort the data as ASC or DESC; for example to sort by states enter states in this field followed by ASC for ascending order and DESC for descending order (states asc).",
            "in": "query",
            "required": false,
            "default": "filerid asc"
          },
          {
            "name": "Accept",
            "type": "string",
            "description": "Get the response in XML or JSON.",
            "in": "header",
            "required": false,
            "enum": [
              "application/xml",
              "application/json"
            ]
          }
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {}
}