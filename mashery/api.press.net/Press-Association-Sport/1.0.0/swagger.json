{
  "swagger": "2.0",
  "info": {
    "title": "Press Association Sport API",
    "version": "1.0.0",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/mashery2openapi"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "x-origin": [
      {
        "url": "http://developer.press.net/io-docs",
        "format": "io_docs"
      }
    ],
    "description": "Test our API services using I/O Docs. Welcome to the IO Docs page for the Press Association Sport API.",
    "x-mashery-id": "4087"
  },
  "schemes": [
    "http"
  ],
  "host": "api.press.net",
  "basePath": "/",
  "externalDocs": {
    "description": "You can also view our written documentation.",
    "url": "http://developer.press.net/io-docs/docs"
  },
  "consumes": [],
  "produces": [],
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "apikey",
      "in": "query"
    }
  },
  "security": [
    {
      "key": []
    }
  ],
  "tags": [
    {
      "name": "Root"
    },
    {
      "name": "Country"
    },
    {
      "name": "Draw"
    },
    {
      "name": "Event"
    },
    {
      "name": "Participant"
    },
    {
      "name": "Season"
    },
    {
      "name": "Sport"
    },
    {
      "name": "Standing"
    },
    {
      "name": "Stage"
    },
    {
      "name": "Tournament"
    },
    {
      "name": "Venue"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "operationId": "GetResourcesRoot",
        "summary": "Return a collection of available resources. This e...",
        "description": "Return a collection of available resources. This endpoint is for navigation of the API only.",
        "tags": [
          "Root"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/country": {
      "get": {
        "operationId": "CountryCollectionCountry",
        "summary": "Return a collection of countries.",
        "tags": [
          "Country"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "limit",
            "type": "integer",
            "description": "Limit the the number of items to be returned per page. For example: 5.\n\nThe 'limit' parameter is typically used with the 'offset' parameter to facilitate pagination.\n\nMaximum limit: 100",
            "in": "query",
            "required": false,
            "default": 100
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "The page offset of the first item to be returned. For example: 2.\n\nThe 'offset' parameter is typically used with the 'limit' parameter to facilitate pagination.",
            "in": "query",
            "required": false,
            "default": 0
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/country/{countryId}": {
      "get": {
        "operationId": "CountryDetailCountry",
        "summary": "Return the country's details.",
        "tags": [
          "Country"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "countryId",
            "type": "integer",
            "description": "The identifier for the country requested.",
            "in": "path",
            "required": true,
            "default": 2
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/draw": {
      "get": {
        "operationId": "DrawCollectionDraw",
        "summary": "Return a collection of draws.",
        "tags": [
          "Draw"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "stage",
            "type": "integer",
            "description": "The Stage ID for the draw selection.",
            "in": "query",
            "required": true,
            "default": 842242
          },
          {
            "name": "limit",
            "type": "integer",
            "description": "Limit the the number of items to be returned per page. For example: 5.\n\nThe 'limit' parameter is typically used with the 'offset' parameter to facilitate pagination.\n\nMaximum limit: 30",
            "in": "query",
            "required": false,
            "default": 30
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "The page offset of the first item to be returned. For example: 2.\n\nThe 'offset' parameter is typically used with the 'limit' parameter to facilitate pagination.",
            "in": "query",
            "required": false,
            "default": 0
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/draw/{drawId}": {
      "get": {
        "operationId": "DrawDetailDraw",
        "summary": "Return the draw's details.",
        "tags": [
          "Draw"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "drawId",
            "type": "integer",
            "description": "The identifier for the draw requested.",
            "in": "path",
            "required": true,
            "default": 7433
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/event": {
      "get": {
        "operationId": "EventCollectionEvent",
        "summary": "Return a collection of events. One request paramet...",
        "description": "Return a collection of events. One request parameter is required unless the combination of country and sport is used.",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "sport",
            "type": "integer",
            "description": "The Sport ID for the event selection.",
            "in": "query",
            "required": false,
            "default": 2
          },
          {
            "name": "country",
            "type": "integer",
            "description": "The Country ID for the event selection.",
            "in": "query",
            "required": false
          },
          {
            "name": "tournament",
            "type": "integer",
            "description": "The Tournament ID for the event selection.",
            "in": "query",
            "required": false,
            "default": 153
          },
          {
            "name": "season",
            "type": "integer",
            "description": "The Season ID for the event selection.",
            "in": "query",
            "required": false,
            "default": 9001
          },
          {
            "name": "stage",
            "type": "integer",
            "description": "The stage ID for the event selection.",
            "in": "query",
            "required": false,
            "default": 837177
          },
          {
            "name": "start",
            "type": "string",
            "format": "date",
            "description": "Limit the events to ones scheduled to the selected date provided. For example: 2014-04-17.\n\nThe 'end' parameter is typically used in combination with the 'start' param to form a date range.\n\nFormats Supported:\n\n\n\n'YYYY-MM-DD'\n'YYYY-MM-DD[T]HH:mm:ssZ'\n'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n'YYYY-MM-DD[T]HH:mm:ss'\n'YYYY-MM-DD[T]HH:mm'\n'now'\n'today'\n'tomorrow'\n'now.plus.n'\n'now.minus.n'",
            "in": "query",
            "required": false
          },
          {
            "name": "end",
            "type": "string",
            "format": "date",
            "description": "Limit the events to ones scheduled before the selected date provided. For example: 2014-04-17.\n\nThe 'end' parameter is typically used in combination with the 'start' param to form a date range.\n\nFormats Supported:\n\n\nyyyy/MM/dd \n\n'YYYY-MM-DD'\n'YYYY-MM-DD[T]HH:mm:ssZ'\n'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n'YYYY-MM-DD[T]HH:mm:ss'\n'YYYY-MM-DD[T]HH:mm'\n'now'\n'today'\n'tomorrow'\n'now.plus.n'\n'now.minus.n'",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "description": "Limit the the number of items to be returned per page. For example: 5.\n\nThe 'limit' parameter is typically used with the 'offset' parameter to facilitate pagination. \n\nMaximum limit: 20",
            "in": "query",
            "required": false,
            "default": 20
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "The page offset of the first item to be returned. For example: 2.\n\nThe 'offset' parameter is typically used with the 'limit' parameter to facilitate pagination.",
            "in": "query",
            "required": false,
            "default": 0
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/event/{eventId}": {
      "get": {
        "operationId": "EventDetailEvent",
        "summary": "Return the event's details.",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "eventId",
            "type": "integer",
            "description": "The identifier for the event requested.",
            "in": "path",
            "required": true,
            "default": 2112825
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/event/{eventId}/actions": {
      "get": {
        "operationId": "EventActionsEvent",
        "summary": "Return the event's actions.",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "eventId",
            "type": "integer",
            "description": "The identifier for the event requested.",
            "in": "path",
            "required": true,
            "default": 1992996
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/event/{eventId}/composition": {
      "get": {
        "operationId": "EventCompositionEvent",
        "summary": "Return the event composition.",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "eventId",
            "type": "integer",
            "description": "The identifier for the event requested.",
            "in": "path",
            "required": true,
            "default": 2112825
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/participant/{participantId}": {
      "get": {
        "operationId": "ParticipantDetailParticipant",
        "summary": "Return the participant's details.",
        "tags": [
          "Participant"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "participantId",
            "type": "integer",
            "description": "The identifier for the participant requested.",
            "in": "path",
            "required": true,
            "default": 47969
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/season": {
      "get": {
        "operationId": "SeasonCollectionSeason",
        "summary": "Return a collection of seasons.",
        "tags": [
          "Season"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "tournament",
            "type": "integer",
            "description": "The Tournament ID for the event selection.",
            "in": "query",
            "required": true,
            "default": 156
          },
          {
            "name": "limit",
            "type": "integer",
            "description": "Limit the the number of items to be returned per page. For example: 5.\n\nThe 'limit' parameter is typically used with the 'offset' parameter to facilitate pagination.\n\nMaximum limit: 30",
            "in": "query",
            "required": false,
            "default": 30
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "The page offset of the first item to be returned. For example: 2.\n\nThe 'offset' parameter is typically used with the 'limit' parameter to facilitate pagination.",
            "in": "query",
            "required": false,
            "default": 0
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/season/{seasonId}": {
      "get": {
        "operationId": "SeasonDetailSeason",
        "summary": "Return the season's details.",
        "tags": [
          "Season"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "seasonId",
            "type": "integer",
            "description": "The identifier for the season requested.",
            "in": "path",
            "required": true,
            "default": 8986
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/sport": {
      "get": {
        "operationId": "SportCollectionSport",
        "summary": "Return a collection of sports.",
        "tags": [
          "Sport"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "limit",
            "type": "integer",
            "description": "Limit the the number of items to be returned per page. For example: 5.\n\nThe 'limit' parameter is typically used with the 'offset' parameter to facilitate pagination.\n\nMaximum limit: 30",
            "in": "query",
            "required": false,
            "default": 30
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "The page offset of the first item to be returned. For example: 2.\n\nThe 'offset' parameter is typically used with the 'limit' parameter to facilitate pagination.",
            "in": "query",
            "required": false,
            "default": 0
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/sport/{sportId}": {
      "get": {
        "operationId": "SportDetailSport",
        "summary": "Return the standing's details.",
        "tags": [
          "Sport"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "sportId",
            "type": "integer",
            "description": "The identifier for the sport requested.",
            "in": "path",
            "required": true,
            "default": 1
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/standing": {
      "get": {
        "operationId": "StandingCollectionStanding",
        "summary": "Return a collection of standings.",
        "tags": [
          "Standing"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "start",
            "type": "string",
            "format": "date",
            "description": "Limit the standings to ones scheduled to the selected date provided. For example: 2014-04-17.\n\nThe 'end' parameter is typically used in combination with the 'start' param to form a date range.\n\nFormats Supported:\n\n\n\n'YYYY-MM-DD'\n'YYYY-MM-DD[T]HH:mm:ssZ'\n'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n'YYYY-MM-DD[T]HH:mm:ss'\n'YYYY-MM-DD[T]HH:mm'\n'now'\n'today'\n'tomorrow'\n'now.plus.n'\n'now.minus.n'",
            "in": "query",
            "required": false
          },
          {
            "name": "end",
            "type": "string",
            "format": "date",
            "description": "Limit the standings to ones scheduled before the selected date provided. For example: 2014-04-17.\n\nThe 'end' parameter is typically used in combination with the 'start' param to form a date range.\n\nFormats Supported:\n\n\nyyyy/MM/dd \n\n'YYYY-MM-DD'\n'YYYY-MM-DD[T]HH:mm:ssZ'\n'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n'YYYY-MM-DD[T]HH:mm:ss'\n'YYYY-MM-DD[T]HH:mm'\n'now'\n'today'\n'tomorrow'\n'now.plus.n'\n'now.minus.n'",
            "in": "query",
            "required": false
          },
          {
            "name": "sport",
            "type": "integer",
            "description": "The Sport ID for the standings selection.",
            "in": "query",
            "required": false
          },
          {
            "name": "tournament",
            "type": "integer",
            "description": "The Tournament ID for the standings selection.",
            "in": "query",
            "required": false
          },
          {
            "name": "season",
            "type": "integer",
            "description": "The Season ID for the standings selection.",
            "in": "query",
            "required": false
          },
          {
            "name": "stage",
            "type": "integer",
            "description": "The Stage ID for the standings selection.",
            "in": "query",
            "required": false,
            "default": 840491
          },
          {
            "name": "event",
            "type": "integer",
            "description": "The Event ID for the standings selection.",
            "in": "query",
            "required": false
          },
          {
            "name": "participant",
            "type": "integer",
            "description": "The Participant ID for the standings selection.",
            "in": "query",
            "required": false
          },
          {
            "name": "limit",
            "type": "integer",
            "description": "Limit the the number of items to be returned per page. For example: 5.\n\nThe 'limit' parameter is typically used with the 'offset' parameter to facilitate pagination.\n\nMaximum limit: 20",
            "in": "query",
            "required": false,
            "default": 20
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "The page offset of the first item to be returned. For example: 2.\n\nThe 'offset' parameter is typically used with the 'limit' parameter to facilitate pagination.",
            "in": "query",
            "required": false,
            "default": 0
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/standing/{standingId}": {
      "get": {
        "operationId": "StandingDetailStanding",
        "summary": "Return the standing's details.",
        "tags": [
          "Standing"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "standingId",
            "type": "integer",
            "description": "The identifier for the standing requested.",
            "in": "path",
            "required": true,
            "default": 27743
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/stage": {
      "get": {
        "operationId": "StageCollectionStage",
        "summary": "Return a collection of stages.",
        "tags": [
          "Stage"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "start",
            "type": "string",
            "format": "date",
            "description": "Limit the stages to ones scheduled to the selected date provided. For example: 2014-04-17.\n\nThe 'end' parameter is typically used in combination with the 'start' param to form a date range.\n\nFormats Supported:\n\n\n\n'YYYY-MM-DD'\n'YYYY-MM-DD[T]HH:mm:ssZ'\n'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n'YYYY-MM-DD[T]HH:mm:ss'\n'YYYY-MM-DD[T]HH:mm'\n'now'\n'today'\n'tomorrow'\n'now.plus.n'\n'now.minus.n'",
            "in": "query",
            "required": false
          },
          {
            "name": "end",
            "type": "string",
            "format": "date",
            "description": "Limit the stages to ones scheduled before the selected date provided. For example: 2014-04-17.\n\nThe 'end' parameter is typically used in combination with the 'start' param to form a date range.\n\nFormats Supported:\n\n\nyyyy/MM/dd \n\n'YYYY-MM-DD'\n'YYYY-MM-DD[T]HH:mm:ssZ'\n'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n'YYYY-MM-DD[T]HH:mm:ss'\n'YYYY-MM-DD[T]HH:mm'\n'now'\n'today'\n'tomorrow'\n'now.plus.n'\n'now.minus.n'",
            "in": "query",
            "required": false
          },
          {
            "name": "sport",
            "type": "integer",
            "description": "The Sport ID for the stage selection.",
            "in": "query",
            "required": false
          },
          {
            "name": "season",
            "type": "integer",
            "description": "The Season ID for the stage selection.",
            "in": "query",
            "required": false,
            "default": 8986
          },
          {
            "name": "limit",
            "type": "integer",
            "description": "Limit the the number of items to be returned per page. For example: 5.\n\nThe 'limit' parameter is typically used with the 'offset' parameter to facilitate pagination.\n\nMaximum limit: 50",
            "in": "query",
            "required": false,
            "default": 50
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "The page offset of the first item to be returned. For example: 2.\n\nThe 'offset' parameter is typically used with the 'limit' parameter to facilitate pagination.",
            "in": "query",
            "required": false,
            "default": 0
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/stage/{stageId}": {
      "get": {
        "operationId": "StageDetailStage",
        "summary": "Return the stage's details.",
        "tags": [
          "Stage"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "stageId",
            "type": "integer",
            "description": "The identifier for the stage requested.",
            "in": "path",
            "required": true,
            "default": 830505
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/tournament": {
      "get": {
        "operationId": "TournamentCollectionTournament",
        "summary": "Return a collection of tournaments.",
        "tags": [
          "Tournament"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "sport",
            "type": "integer",
            "description": "The Sport ID for the tournament selection.",
            "in": "query",
            "required": true,
            "default": 3
          },
          {
            "name": "limit",
            "type": "integer",
            "description": "Limit the the number of items to be returned per page. For example: 5.\n\nThe 'limit' parameter is typically used with the 'offset' parameter to facilitate pagination.\n\nMaximum limit: 50",
            "in": "query",
            "required": false,
            "default": 50
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "The page offset of the first item to be returned. For example: 2.\n\nThe 'offset' parameter is typically used with the 'limit' parameter to facilitate pagination.",
            "in": "query",
            "required": false,
            "default": 0
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/tournament/{tournamentId}": {
      "get": {
        "operationId": "TournamentDetailTournament",
        "summary": "Return the tournament's details.",
        "tags": [
          "Tournament"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "tournamentId",
            "type": "integer",
            "description": "The identifier for the tournament requested.",
            "in": "path",
            "required": true,
            "default": 86
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/venue/{venueId}": {
      "get": {
        "operationId": "VenueDetailVenue",
        "summary": "Return the venue's details.",
        "tags": [
          "Venue"
        ],
        "parameters": [
          {
            "name": "Accept",
            "type": "string",
            "description": "The response format.",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ]
          },
          {
            "name": "venueId",
            "type": "integer",
            "description": "The identifier for the venue requested.",
            "in": "path",
            "required": true,
            "default": 100
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {}
}