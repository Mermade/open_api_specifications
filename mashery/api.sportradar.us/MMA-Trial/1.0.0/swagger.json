{
  "swagger": "2.0",
  "info": {
    "title": "MMA Trial",
    "version": "1.0.0",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/mashery2openapi"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "description": "Test our API services using I/O Docs!    Enter your sport specific TRIAL KEY in the box below. Sportradar's MMA API",
    "x-mashery-id": "1757"
  },
  "schemes": [
    "http"
  ],
  "host": "api.sportradar.us",
  "basePath": "/mma-t1",
  "externalDocs": {
    "description": "Note: For seasons which span multiple calendar years (e.g. 2015-16), use the earlier year as the season parameter (e.g. 2015).  The Golf API season parameter is based on the PGA official season year.",
    "url": "http://developer.sportradar.us/io-docs"
  },
  "consumes": [
    "application/xml"
  ],
  "produces": [
    "application/xml"
  ],
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "apikey",
      "in": "query"
    }
  },
  "security": [
    {
      "key": []
    }
  ],
  "tags": [
    {
      "name": "MMA"
    }
  ],
  "paths": {
    "/schedule.xml": {
      "get": {
        "operationId": "ScheduleMMA",
        "summary": "List of all events and fights, scheduled to take p...",
        "description": "List of all events and fights, scheduled to take place or having taken place over the last 12 months",
        "tags": [
          "MMA"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/events/{event_id}/summary.xml": {
      "get": {
        "operationId": "EventResultsMMA",
        "summary": "List of all fights in an event, including the loca...",
        "description": "List of all fights in an event, including the location, all participants, and fight results",
        "tags": [
          "MMA"
        ],
        "parameters": [
          {
            "name": "event_id",
            "type": "string",
            "description": "The ID of a given event, found in the schedule feed",
            "in": "path",
            "required": true,
            "default": "efef77f3-d832-4e75-8c16-c9260c7b3c40"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/profiles.xml": {
      "get": {
        "operationId": "ParticipantListMMA",
        "summary": "Information regarding all fighters, judges, and re...",
        "description": "Information regarding all fighters, judges, and referees associated with a specific organization",
        "tags": [
          "MMA"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/participants/{fighter_id}/profile.xml": {
      "get": {
        "operationId": "ParticipantProfileMMA",
        "summary": "Information regarding a specific fighter, judge, o...",
        "description": "Information regarding a specific fighter, judge, or referee",
        "tags": [
          "MMA"
        ],
        "parameters": [
          {
            "name": "fighter_id",
            "type": "string",
            "description": "The ID of a given participant, found in the participant list feed",
            "in": "path",
            "required": true,
            "default": "f43a41cd-068f-4982-9d89-4af0556230ee"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {}
}