{
  "swagger": "2.0",
  "info": {
    "title": "Metadata and Search APIs",
    "version": "1.0.0",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/mashery2openapi"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "x-origin": [
      {
        "url": "http://developer.rovicorp.com/io-docs",
        "format": "io_docs"
      }
    ],
    "description": "Test our API services using these I/O Docs. For detailed information about any call or parameter, please see our complete documentation.  Note: For I/O Docs to work properly, you need to be logged into your developer account. You can sign in by clicking the link on the top right of this page. World-class metadata provides rich information about TV, music, and movies.",
    "x-mashery-id": "117"
  },
  "schemes": [
    "http"
  ],
  "host": "api.rovicorp.com",
  "basePath": "/",
  "externalDocs": {
    "description": "You can also view our written documentation.",
    "url": "http://developer.rovicorp.com/io-docs/docs"
  },
  "consumes": [],
  "produces": [],
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "apikey",
      "in": "query"
    }
  },
  "security": [
    {
      "key": []
    }
  ],
  "tags": [
    {
      "name": "Search"
    },
    {
      "name": "Recommendations"
    },
    {
      "name": "Video"
    },
    {
      "name": "Movie"
    },
    {
      "name": "Movie Release"
    },
    {
      "name": "Music Album"
    },
    {
      "name": "Music Composition"
    },
    {
      "name": "Music Performance"
    },
    {
      "name": "Music Release"
    },
    {
      "name": "Music Song"
    },
    {
      "name": "Name"
    },
    {
      "name": "Descriptor"
    }
  ],
  "paths": {
    "/search/v2.1/{endpoint}/search": {
      "get": {
        "operationId": "SearchSearch",
        "summary": "Searches titles or names in Rovi Cloud Services an...",
        "description": "Searches titles or names in Rovi Cloud Services and returns results in order of popularity and similarity to the search query. Fields in bold are required.",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "endpoint",
            "type": "string",
            "description": "Database to search.",
            "in": "path",
            "required": true,
            "enum": [
              "music",
              "amgvideo",
              "video"
            ]
          },
          {
            "name": "entitytype",
            "type": "string",
            "description": "Type of content to search for.",
            "in": "query",
            "required": false,
            "enum": [
              "song",
              "album",
              "artist",
              "onetimeonly",
              "movie",
              "credit",
              "tvseries"
            ]
          },
          {
            "name": "query",
            "type": "string",
            "description": "The search string.",
            "in": "query",
            "required": true
          },
          {
            "name": "clu",
            "type": "string",
            "description": "For an \"endpoint\" of 'video,' the service ID of the television service that will be broadcasting the movie or TV show. For example, 360861. You can get service IDs from the TV Listings API with a Services request.",
            "in": "query",
            "required": false
          },
          {
            "name": "start",
            "type": "string",
            "description": "If you specify \"clu\", you can specify here the start of the schedule in UTC time in YYYYMMDDhhmmssZ format. For example 20120315140000Z. Default and earliest time is the time of the request.",
            "in": "query",
            "required": false
          },
          {
            "name": "end",
            "type": "string",
            "description": "If you specify \"clu\", you can specify here the end of the schedule in UTC time in YYYYMMDDhhmmssZ format. For example 20120315140000Z. Default and latest time is two weeks after the time of the request.",
            "in": "query",
            "required": false
          },
          {
            "name": "rep",
            "type": "integer",
            "description": "If you specify \"clu\", you can specify here the maximum number of broadcasts to be returned for each movie or program. Default is 1. Results are returned in an 'availabilities' object.",
            "in": "query",
            "required": false,
            "default": 1
          },
          {
            "name": "facet",
            "type": "string",
            "description": "Whether to return a count of found items by entity type or by genre. Default is no count.",
            "in": "query",
            "required": false,
            "enum": [
              "type",
              "genre"
            ]
          },
          {
            "name": "filter",
            "type": "string",
            "description": "Returns only results with fields that meet your criteria. For example: 'decade:1990s,toneid:D++1292' (replace plus signs with spaces). For a list of possible filters and values, see the documentation page for Search.",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Additional data to include in each result. For example: 'moods,themes'. For a list of possible values, see the documentation page for Search.",
            "in": "query",
            "required": false
          },
          {
            "name": "size",
            "type": "integer",
            "description": "Number of items you want to be returned. Default is 20.",
            "in": "query",
            "required": false,
            "default": 20
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"size\" parameters to paginate available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the response language. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/search/v2.1/{endpoint}/singlestagesearch": {
      "get": {
        "operationId": "Single-StageSearchSearch",
        "summary": "Returns search results for titles or names as a us...",
        "description": "Returns search results for titles or names as a user is typing, sorted in order of popularity and the priorities specified in the request filters. Fields in bold are required.",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "endpoint",
            "type": "string",
            "description": "Database to search.",
            "in": "path",
            "required": true,
            "enum": [
              "music",
              "amgvideo",
              "video"
            ]
          },
          {
            "name": "entitytype",
            "type": "string",
            "description": "Type of content to search for.",
            "in": "query",
            "required": false,
            "enum": [
              "song",
              "album",
              "artist",
              "onetimeonly",
              "movie",
              "credit",
              "tvseries"
            ]
          },
          {
            "name": "query",
            "type": "string",
            "description": "The search string.",
            "in": "query",
            "required": true
          },
          {
            "name": "clu",
            "type": "string",
            "description": "For an \"endpoint\" of 'video,' the service ID of the television service that will be broadcasting the movie or TV show. For example, 360861. You can get service IDs from the TV Listings API with a Services request.",
            "in": "query",
            "required": false
          },
          {
            "name": "start",
            "type": "string",
            "description": "If you specify \"clu\", you can specify here the start of the schedule in UTC time in YYYYMMDDhhmmssZ format. For example 20120315140000Z. Default and earliest time is the time of the request.",
            "in": "query",
            "required": false
          },
          {
            "name": "end",
            "type": "string",
            "description": "If you specify \"clu\", you can specify here the end of the schedule in UTC time in YYYYMMDDhhmmssZ format. For example 20120315140000Z. Default and latest time is two weeks after the time of the request.",
            "in": "query",
            "required": false
          },
          {
            "name": "rep",
            "type": "integer",
            "description": "If you specify \"clu\", you can specify here the maximum number of broadcasts to be returned for each movie or program. Default is 1. Results are returned in an 'availabilities' object.",
            "in": "query",
            "required": false,
            "default": 1
          },
          {
            "name": "facet",
            "type": "string",
            "description": "Whether to return a count of found items by entity type or by genre. Default is no count.",
            "in": "query",
            "required": false,
            "enum": [
              "type",
              "genre"
            ]
          },
          {
            "name": "filter",
            "type": "string",
            "description": "Returns only results with fields that meet your criteria. For example: 'decade:1990s,toneid:D++1292'. For a list of possible filters and values, see the documentation page for Single-Stage Search.",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Additional data to include in each result. For example: 'moods,themes'. For a list of possible values, see the documentation page for Single-Stage Search.",
            "in": "query",
            "required": false
          },
          {
            "name": "size",
            "type": "integer",
            "description": "Number of items you want to be returned. Default is 20.",
            "in": "query",
            "required": false,
            "default": 20
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"size\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/search/v2.1/{endpoint}/filterbrowse": {
      "get": {
        "operationId": "FilterBrowseSearch",
        "summary": "Locates content in Rovi Cloud Services based on fi...",
        "description": "Locates content in Rovi Cloud Services based on field-level criteria and returns results listed in order of relevance. Fields in bold are required.",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "endpoint",
            "type": "string",
            "description": "Database to search.",
            "in": "path",
            "required": true,
            "enum": [
              "music",
              "amgvideo",
              "video"
            ]
          },
          {
            "name": "entitytype",
            "type": "string",
            "description": "Type of content to search for.",
            "in": "query",
            "required": false,
            "enum": [
              "song",
              "album",
              "artist",
              "onetimeonly",
              "movie",
              "credit",
              "tvseries"
            ]
          },
          {
            "name": "facet",
            "type": "string",
            "description": "Whether to return a count of found items by entity type or by genre. Default is no count.",
            "in": "query",
            "required": false,
            "enum": [
              "type",
              "genre"
            ]
          },
          {
            "name": "filter",
            "type": "string",
            "description": "Returns only results with fields that meet your criteria. For example: 'decade:1990s,toneid:D++1292' (replace plus signs with spaces). For a list of possible filters and values, see the documentation page for FilterBrowse.",
            "in": "query",
            "required": false
          },
          {
            "name": "clu",
            "type": "string",
            "description": "For an \"endpoint\" of 'video,' the service ID of the television service that will be broadcasting the movie or TV show. For example, 360861. You can get service IDs from the TV Listings API with a Services request.",
            "in": "query",
            "required": false
          },
          {
            "name": "start",
            "type": "string",
            "description": "If you specify \"clu\", you can specify here the start of the schedule in UTC time in YYYYMMDDhhmmssZ format. For example 20120315140000Z. Default and earliest time is the time of the request.",
            "in": "query",
            "required": false
          },
          {
            "name": "end",
            "type": "string",
            "description": "If you specify \"clu\", you can specify here the end of the schedule in UTC time in YYYYMMDDhhmmssZ format. For example 20120315140000Z. Default and latest time is two weeks after the time of the request.",
            "in": "query",
            "required": false
          },
          {
            "name": "rep",
            "type": "integer",
            "description": "If you specify \"clu\", you can specify here the maximum number of broadcasts to be returned for each movie or program. Default is 1. Results are returned in an 'availabilities' object.",
            "in": "query",
            "required": false,
            "default": 1
          },
          {
            "name": "include",
            "type": "string",
            "description": "Additional data to include in each result. For example: 'moods,themes'. For a list of possible values, see the documentation page for FilterBrowse.",
            "in": "query",
            "required": false
          },
          {
            "name": "size",
            "type": "integer",
            "description": "Number of items you want to be returned. Default is 20.",
            "in": "query",
            "required": false,
            "default": 20
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"size\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/recs/v2.1/{endpoint}/similar": {
      "get": {
        "operationId": "SimilarRecommendations",
        "summary": "Returns similar items in order of similarity and p...",
        "description": "Returns similar items in order of similarity and popularity. Please specify a value for albumid, trackid, amgvideoid, cosmoprogramid, or nameid. Fields in bold are required.",
        "tags": [
          "Recommendations"
        ],
        "parameters": [
          {
            "name": "endpoint",
            "type": "string",
            "description": "Database to search.",
            "in": "path",
            "required": true,
            "enum": [
              "music",
              "amgvideo",
              "video"
            ]
          },
          {
            "name": "entitytype",
            "type": "string",
            "description": "Type of content to search for.",
            "in": "query",
            "required": false,
            "enum": [
              "song",
              "album",
              "artist",
              "onetimeonly",
              "movie",
              "credit",
              "tvseries"
            ]
          },
          {
            "name": "albumid",
            "type": "string",
            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number. For example: MW0000111184. For a request with an album ID, specify an \"endpoint\" of 'music' and an \"entitytype\" of 'album'.",
            "in": "query",
            "required": false
          },
          {
            "name": "trackid",
            "type": "string",
            "description": "Rovi Music ID for a song, consisting of the prefix MT followed by a ten-digit number. For example: MT0009472348. For a request with a track ID, specify an \"endpoint\" of 'music' and an \"entitytype\" of 'song'.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgvideoid",
            "type": "string",
            "description": "AMG database ID for a movie or TV series, consisting of a ten-character string that starts with V and is followed by 9 digits with leading spaces. For example: V+++352199 (replace plus signs with spaces). For a request with an amgvideo ID, specify an \"endpoint\" of 'amgvideo' and an \"entitytype\" of 'movie' or 'tvseries'.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoprogramid",
            "type": "string",
            "description": "Cosmo database ID for the movie or television series. For example: 7903. For a request with a Cosmo ID, specify an \"endpoint\" of video and an \"entitytype\" of 'movie' or 'tvseries'.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi Music ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478. For a request with a name ID, specify an \"endpoint\" of 'music' and an \"entitytype\" of 'artist'.",
            "in": "query",
            "required": false
          },
          {
            "name": "filter",
            "type": "string",
            "description": "Returns only results with fields that meet your criteria. For example: 'releaseyear>:2009,ratingid:3'. For a list of possible filters and values, see the documentation page for Recommendations Similar.",
            "in": "query",
            "required": false
          },
          {
            "name": "clu",
            "type": "string",
            "description": "For an \"endpoint\" of 'video,' the service ID of the television service that will be broadcasting the movie or TV show. For example, 360861. You can get service IDs from the TV Listings API with a Services request.",
            "in": "query",
            "required": false
          },
          {
            "name": "start",
            "type": "string",
            "description": "If you specify \"clu\", you can specify here the start of the schedule in UTC time in YYYYMMDDhhmmssZ format. For example 20120315140000Z. Default and earliest time is the time of the request.",
            "in": "query",
            "required": false
          },
          {
            "name": "end",
            "type": "string",
            "description": "If you specify \"clu\", you can specify here the end of the schedule in UTC time in YYYYMMDDhhmmssZ format. For example 20120315140000Z. Default and latest time is two weeks after the time of the request.",
            "in": "query",
            "required": false
          },
          {
            "name": "rep",
            "type": "integer",
            "description": "If you specify \"clu\", you can specify here the maximum number of broadcasts to be returned for each movie or program. Default is 1. Results are returned in an 'availabilities' object.",
            "in": "query",
            "required": false,
            "default": 1
          },
          {
            "name": "size",
            "type": "integer",
            "description": "Number of items you want to be returned. Default is 20.",
            "in": "query",
            "required": false,
            "default": 20
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/info": {
      "get": {
        "operationId": "InfoVideo",
        "summary": "Returns information about a movie, TV series, or T...",
        "description": "Returns information about a movie, TV series, or TV program. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "serviceid",
            "type": "string",
            "description": "Database ID of a television service for an area. For example: 360861. Returns a URL to a schedule of upcoming broadcasts of the program, if available. If you also specify 'schedule' in \"include\", the schedule returns. You can get service IDs from the TV Listings API with a Services request.",
            "in": "query",
            "required": false
          },
          {
            "name": "inprogress",
            "type": "boolean",
            "description": "If you specify \"serviceid\" for a schedule of upcoming broadcasts of the program, you can specify here whether shows that are in progress at \"starttime\" are included in the schedule.",
            "in": "query",
            "required": false
          },
          {
            "name": "sourceid",
            "type": "string",
            "description": "If you specify \"serviceid\" for a schedule of broadcasts of the program, you can limit here the channel sources, and thus the channels. For example: 5,436,429,696,873,994,1274,9426,14633,14635,27080,34396. You can get channel source IDs from the TV Listings API with GridSchedule.",
            "in": "query",
            "required": false
          },
          {
            "name": "sourceexclude",
            "type": "string",
            "description": "If you specify \"sourceid\" to select the television sources to be returned, you can specify here attributes of the channels in the source ID list that you want to eliminate from the channels returned: HD, PPV, Music.",
            "in": "query",
            "required": false
          },
          {
            "name": "sourceinclude",
            "type": "string",
            "description": "If you specify \"sourceid\" to select the television sources to be returned, you can specify here an attribute of the channels in the source ID list that you want to include in the list of channels returned: HD, PPV, Music.",
            "in": "query",
            "required": false,
            "enum": [
              "HD",
              "PPV",
              "Music"
            ]
          },
          {
            "name": "starttime",
            "type": "string",
            "description": "If you specify \"serviceid\" for a schedule of broadcasts of the program, you can specify here the start of the schedule in UTC time in YYYYMMDDhhmmssZ format. For example 20120315140000Z. Default and earliest time is the time of the request.",
            "in": "query",
            "required": false
          },
          {
            "name": "duration",
            "type": "integer",
            "description": "If you specify \"serviceid\" for a schedule of upcoming broadcasts of the program, you can specify here the number of minutes the schedule will cover.",
            "in": "query",
            "required": false,
            "default": 20160
          },
          {
            "name": "titletype",
            "type": "integer",
            "description": "If you specify \"serviceid\" for a schedule of upcoming broadcasts of the program, you can specify here the type of program title to return as described in the TitleType table. For details, see the documentation of Video/Info",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Additional data to include in each result. For example: 'moods,themes'. For a list of possible values, see the documentation page for Video/Info.",
            "in": "query",
            "required": false
          },
          {
            "name": "formatid",
            "type": "string",
            "description": "If you specify 'images' in the \"include\" parameter, you can specify here the size and file format of returned images. Select the format IDs you want from the Format IDs table and specify multiple format IDs in a comma-separated list, like this: 36,44,51. Note: Returned images meet a combination of all specified filters (formatid, imagesize, and imagetypeid).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesize",
            "type": "string",
            "description": "If you specify 'images' in the \"include\" parameter, you can specify here the image sizes to be returned. Images are not dynamically resized to fit, so only available sizes are returned. Specify an exact size in width x height format, like this: 332x419. Specify a size range in width x height format, like this: 60-80x80-100. Specify multiple sizes in a comma-separated list, like this: 332x419,60-80x80-100. Note: Returned images meet a combination of all specified filters (formatid, imagesize, and imagetypeid).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesort",
            "type": "string",
            "description": "If you specify 'images' in the \"include\" parameter, you can specify here the sort order of returned images. Images can be sorted in ascending or descending order by the following properties: width, height, formatid, author, copyrightowner, url, imageorder, zoomlevel. Specify a descending sort order with a minus (-) sign, like this: -width. Specify a multilevel sort in highest-to-lowest order in a comma-separated list, like this: formatid,-height,width.",
            "in": "query",
            "required": false
          },
          {
            "name": "imagetypeid",
            "type": "string",
            "description": "If you specify 'images' in the \"include\" parameter, you can specify here the image type of returned images. Select the IDs you want from the Image Type IDs table. Specify multiple image type IDs in a comma-separated list, like this: 4,6. To change the order in which image types are returned, use the imagesort parameter with the imageorder value. Note: Returned images meet a combination of all specified filters (formatid, imagesize, and imagetypeid).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagecount",
            "type": "integer",
            "description": "If you specify 'images' in the \"include\" parameter, you can specify here the number of images to be returned. If fewer images are available, the available images are returned without error. The default is 25.",
            "in": "query",
            "required": false
          },
          {
            "name": "imageoffset",
            "type": "integer",
            "description": "If you specify 'images' in the \"include\" parameter, you can specify here the number of images at the start of the response to skip. The default is zero.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country for the language that is specified for the \"language\" parameter, stated as a two-character ISO 3166 country code.",
            "in": "query",
            "required": false,
            "enum": [
              "US",
              "AR",
              "AT",
              "BE",
              "BM",
              "BO",
              "CA",
              "CH",
              "CL",
              "CO",
              "CR",
              "DE",
              "DK",
              "DO",
              "EC",
              "ES",
              "FI",
              "FR",
              "GB",
              "GT",
              "HN",
              "IE",
              "IT",
              "JM",
              "LU",
              "MX",
              "NI",
              "NL",
              "NO",
              "PA",
              "PE",
              "PL",
              "PT",
              "SE",
              "SV",
              "VE"
            ]
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of program titles, keywords, and synopses, stated as a two-character ISO 639 language code.",
            "in": "query",
            "required": false,
            "enum": [
              "en",
              "da",
              "de",
              "es",
              "fi",
              "fl",
              "fr",
              "it",
              "nl",
              "no",
              "pl",
              "pt",
              "sv"
            ]
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/season/{season}/episode/{episode}/info": {
      "get": {
        "operationId": "EpisodeInfoVideo",
        "summary": "Returns information about an episode in a televisi...",
        "description": "Returns information about an episode in a television series. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "season",
            "type": "integer",
            "description": "Season number of the television series.",
            "in": "path",
            "required": true
          },
          {
            "name": "episode",
            "type": "integer",
            "description": "Episode number of the season.",
            "in": "path",
            "required": true
          },
          {
            "name": "video",
            "type": "string",
            "description": "Title of the television series or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "serviceid",
            "type": "string",
            "description": "Database ID of a television service for an area. For example: 360861. Returns a URL to a schedule of upcoming broadcasts of the program, if available. If you also specify 'schedule' in \"include\", the schedule returns. You can get service IDs from the TV Listings API with a Services request.",
            "in": "query",
            "required": false
          },
          {
            "name": "inprogress",
            "type": "boolean",
            "description": "If you specify \"serviceid\" for a schedule of upcoming broadcasts of the program, you can specify here whether shows that are in progress at \"starttime\" are included in the schedule.",
            "in": "query",
            "required": false
          },
          {
            "name": "sourceid",
            "type": "string",
            "description": "If you specify \"serviceid\" for a schedule of broadcasts of the program, you can limit here the channel sources, and thus the channels. For example: 5,436,429,696,873,994,1274,9426,14633,14635,27080,34396. You can get channel source IDs from the TV Listings API with GridSchedule.",
            "in": "query",
            "required": false
          },
          {
            "name": "sourceexclude",
            "type": "string",
            "description": "If you specify \"sourceid\" to select the television sources to be returned, you can specify here attributes of the channels in the source ID list that you want to eliminate from the channels returned: HD, PPV, Music.",
            "in": "query",
            "required": false
          },
          {
            "name": "sourceinclude",
            "type": "string",
            "description": "If you specify \"sourceid\" to select the television sources to be returned, you can specify here an attribute of the channels in the source ID list that you want to include in the list of channels returned: HD, PPV, Music.",
            "in": "query",
            "required": false,
            "enum": [
              "HD",
              "PPV",
              "Music"
            ]
          },
          {
            "name": "starttime",
            "type": "string",
            "description": "If you specify \"serviceid\" for a schedule of broadcasts of the program, you can specify here the start of the schedule in UTC time in YYYYMMDDhhmmssZ format. For example 20120315140000Z. Default and earliest time is the time of the request.",
            "in": "query",
            "required": false
          },
          {
            "name": "duration",
            "type": "integer",
            "description": "If you specify \"serviceid\" for a schedule of upcoming broadcasts of the program, you can specify here the number of minutes the schedule will cover.",
            "in": "query",
            "required": false,
            "default": 20160
          },
          {
            "name": "titletype",
            "type": "integer",
            "description": "If you specify \"serviceid\" for a schedule of upcoming broadcasts of the program, you can specify here the type of program title to return as described in the TitleType table.",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Additional data to include in each result. For example: 'moods,themes'. For a list of possible values, see the documentation page for Video/Season/Episode/Info.",
            "in": "query",
            "required": false
          },
          {
            "name": "formatid",
            "type": "string",
            "description": "If you specify 'images' in the \"include\" parameter, you can specify here the size and file format of returned images. Select the format IDs you want from the Format IDs table and specify multiple format IDs in a comma-separated list, like this: 36,44,51. Note: Returned images meet a combination of all specified filters (formatid, imagesize, and imagetypeid).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesize",
            "type": "string",
            "description": "If you specify 'images' in the \"include\" parameter, you can specify here the image sizes to be returned. Images are not dynamically resized to fit, so only available sizes are returned. Specify an exact size in width x height format, like this: 332x419. Specify a size range in width x height format, like this: 60-80x80-100. Specify multiple sizes in a comma-separated list, like this: 332x419,60-80x80-100. Note: Returned images meet a combination of all specified filters (formatid, imagesize, and imagetypeid).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesort",
            "type": "string",
            "description": "If you specify 'images' in the \"include\" parameter, you can specify here the sort order of returned images. Images can be sorted in ascending or descending order by the following properties: width, height, formatid, author, copyrightowner, url, imageorder, zoomlevel. Specify a descending sort order with a minus (-) sign, like this: -width. Specify a multilevel sort in highest-to-lowest order in a comma-separated list, like this: formatid,-height,width.",
            "in": "query",
            "required": false
          },
          {
            "name": "imagetypeid",
            "type": "string",
            "description": "If you specify 'images' in the \"include\" parameter, you can specify here the image type of returned images. Select the IDs you want from the Image Type IDs table. Specify multiple image type IDs in a comma-separated list, like this: 4,6. To change the order in which image types are returned, use the \"imagesort\" parameter with the 'imageorder' value. Note: Returned images meet a combination of all specified filters (formatid, imagesize, and imagetypeid).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagecount",
            "type": "integer",
            "description": "If you specify 'images' in the \"include\" parameter, you can specify here the number of images to be returned. If fewer images are available, the available images are returned without error. The default is 25.",
            "in": "query",
            "required": false
          },
          {
            "name": "imageoffset",
            "type": "integer",
            "description": "If you specify 'images' in the \"include\" parameter, you can specify here the number of images at the start of the response to skip. The default is zero.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country for the language that is specified for the \"language\" parameter, stated as a two-character ISO 3166 country code.",
            "in": "query",
            "required": false,
            "enum": [
              "US",
              "AR",
              "AT",
              "BE",
              "BM",
              "BO",
              "CA",
              "CH",
              "CL",
              "CO",
              "CR",
              "DE",
              "DK",
              "DO",
              "EC",
              "ES",
              "FI",
              "FR",
              "GB",
              "GT",
              "HN",
              "IE",
              "IT",
              "JM",
              "LU",
              "MX",
              "NI",
              "NL",
              "NO",
              "PA",
              "PE",
              "PL",
              "PT",
              "SE",
              "SV",
              "VE"
            ]
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of program titles, keywords, and descriptions, stated as a two-character ISO 639 language code.",
            "in": "query",
            "required": false,
            "enum": [
              "en",
              "da",
              "de",
              "es",
              "fi",
              "fl",
              "fr",
              "it",
              "nl",
              "no",
              "pl",
              "pt",
              "sv"
            ]
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/associatedalbums": {
      "get": {
        "operationId": "AssociatedAlbumsVideo",
        "summary": "Returns a list of albums associated with a movie, ...",
        "description": "Returns a list of albums associated with a movie, series, or program. Note: Access to this data is governed by subscription level. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "The ID for the television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country for the language that is specified for the \"language\" parameter, stated as a two-character ISO 3166 country code.",
            "in": "query",
            "required": false,
            "enum": [
              "US",
              "AR",
              "AT",
              "BE",
              "BM",
              "BO",
              "CA",
              "CH",
              "CL",
              "CO",
              "CR",
              "DE",
              "DK",
              "DO",
              "EC",
              "ES",
              "FI",
              "FR",
              "GB",
              "GT",
              "HN",
              "IE",
              "IT",
              "JM",
              "LU",
              "MX",
              "NI",
              "NL",
              "NO",
              "PA",
              "PE",
              "PL",
              "PT",
              "SE",
              "SV",
              "VE"
            ]
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of program titles, keywords, and descriptions, stated as a two-character ISO 639 language code.",
            "in": "query",
            "required": false,
            "enum": [
              "en",
              "da",
              "de",
              "es",
              "fi",
              "fl",
              "fr",
              "it",
              "nl",
              "no",
              "pl",
              "pt",
              "sv"
            ]
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/associatedtracks": {
      "get": {
        "operationId": "AssociatedTracksVideo",
        "summary": "Returns a list of songs associated with a movie, s...",
        "description": "Returns a list of songs associated with a movie, series, or program. Note: Access to this data is governed by subscription level. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "The ID for the television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country for the language that is specified for the \"language\" parameter, stated as a two-character ISO 3166 country code.",
            "in": "query",
            "required": false,
            "enum": [
              "US",
              "AR",
              "AT",
              "BE",
              "BM",
              "BO",
              "CA",
              "CH",
              "CL",
              "CO",
              "CR",
              "DE",
              "DK",
              "DO",
              "EC",
              "ES",
              "FI",
              "FR",
              "GB",
              "GT",
              "HN",
              "IE",
              "IT",
              "JM",
              "LU",
              "MX",
              "NI",
              "NL",
              "NO",
              "PA",
              "PE",
              "PL",
              "PT",
              "SE",
              "SV",
              "VE"
            ]
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of program titles, keywords, and descriptions, stated as a two-character ISO 639 language code.",
            "in": "query",
            "required": false,
            "enum": [
              "en",
              "da",
              "de",
              "es",
              "fi",
              "fl",
              "fr",
              "it",
              "nl",
              "no",
              "pl",
              "pt",
              "sv"
            ]
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/awards": {
      "get": {
        "operationId": "AwardsVideo",
        "summary": "Returns awards a program has been nominated for or...",
        "description": "Returns awards a program has been nominated for or won. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country for the language that is specified for the \"language\" parameter, stated as a two-character ISO 3166 country code.",
            "in": "query",
            "required": false,
            "enum": [
              "US",
              "AR",
              "AT",
              "BE",
              "BM",
              "BO",
              "CA",
              "CH",
              "CL",
              "CO",
              "CR",
              "DE",
              "DK",
              "DO",
              "EC",
              "ES",
              "FI",
              "FR",
              "GB",
              "GT",
              "HN",
              "IE",
              "IT",
              "JM",
              "LU",
              "MX",
              "NI",
              "NL",
              "NO",
              "PA",
              "PE",
              "PL",
              "PT",
              "SE",
              "SV",
              "VE"
            ]
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of program titles, keywords, and descriptions, stated as a two-character ISO 639 language code.",
            "in": "query",
            "required": false,
            "enum": [
              "en",
              "da",
              "de",
              "es",
              "fi",
              "fl",
              "fr",
              "it",
              "nl",
              "no",
              "pl",
              "pt",
              "sv"
            ]
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/cast": {
      "get": {
        "operationId": "CastVideo",
        "summary": "Returns information about cast members with links ...",
        "description": "Returns information about cast members with links to images. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "ID for the television program used by the i-Guideâ¢ interactive TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "filteradultcontents",
            "type": "boolean",
            "description": "Whether to filter out cast members who are tagged as Adult.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States}.",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/clip": {
      "get": {
        "operationId": "ClipVideo",
        "summary": "Returns data you can use to construct links to tra...",
        "description": "Returns data you can use to construct links to trailers and video clips. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/crew": {
      "get": {
        "operationId": "CrewVideo",
        "summary": "Returns information about crew members with links ...",
        "description": "Returns information about crew members with links to images. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "filteradultcontents",
            "type": "boolean",
            "description": "Whether to filter out cast members who are tagged as Adult.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States}.",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/event": {
      "get": {
        "operationId": "EventVideo",
        "summary": "Returns information about a televised sporting eve...",
        "description": "Returns information about a televised sporting event. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 14363849. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States}.",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/images": {
      "get": {
        "operationId": "ImagesVideo",
        "summary": "Returns links to movie and television program imag...",
        "description": "Returns links to movie and television program images. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "formatid",
            "type": "string",
            "description": "Size and file format of returned images. Select the format IDs you want from the Format IDs table and specify multiple format IDs in a comma-separated list, like this: 36,44,51. Note: Returned images meet a combination of all specified filters (formatid, imagesize, and imagetypeid).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesize",
            "type": "string",
            "description": "Image sizes to be returned. Images are not dynamically resized to fit, so only available sizes are returned. Specify an exact size in width x height format, like this: 332x419. Specify a size range in width x height format, like this: 60-80x80-100. Specify multiple sizes in a comma-separated list, like this: 332x419,60-80x80-100. Note: Returned images meet a combination of all specified filters (formatid, imagesize, and imagetypeid).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesort",
            "type": "string",
            "description": "Sort order of returned images. Images can be sorted in ascending or descending order by the following properties: width, height, formatid, author, copyrightowner, url, imageorder, zoomlevel. Specify a descending sort order with a minus (-) sign, like this: -width. Specify a multilevel sort in highest-to-lowest order in a comma-separated list, like this: formatid,-height,width.",
            "in": "query",
            "required": false
          },
          {
            "name": "imagetypeid",
            "type": "string",
            "description": "Image type of returned images. Select the IDs you want from the Image Type IDs table. Specify multiple image type IDs in a comma-separated list, like this: 4,6. To change the order in which image types are returned, use the imagesort parameter with the imageorder value. Note: Returned images meet a combination of all specified filters (formatid, imagesize, and imagetypeid).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagecount",
            "type": "integer",
            "description": "Number of images to be returned. If fewer images are available, the available images are returned without error. The default is 25.",
            "in": "query",
            "required": false
          },
          {
            "name": "imageoffset",
            "type": "integer",
            "description": "Number of images at the start of the response to skip. The default is zero. Use the \"imagecount\" and \"imageoffset\" parameters to paginate the available results.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/keywords": {
      "get": {
        "operationId": "KeywordsVideo",
        "summary": "Returns keywords and characteristics that apply to...",
        "description": "Returns keywords and characteristics that apply to a movie, TV series, or TV program. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "ID for the television program used by the i-Guideâ¢ interactive TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country for the language that is specified for the \"language\" parameter, stated as a two-character ISO 3166 country code.",
            "in": "query",
            "required": false,
            "enum": [
              "US",
              "AR",
              "AT",
              "BE",
              "BM",
              "BO",
              "CA",
              "CH",
              "CL",
              "CO",
              "CR",
              "DE",
              "DK",
              "DO",
              "EC",
              "ES",
              "FI",
              "FR",
              "GB",
              "GT",
              "HN",
              "IE",
              "IT",
              "JM",
              "LU",
              "MX",
              "NI",
              "NL",
              "NO",
              "PA",
              "PE",
              "PL",
              "PT",
              "SE",
              "SV",
              "VE"
            ]
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of program titles, keywords, and descriptions, stated as a two-character ISO 639 language code.",
            "in": "query",
            "required": false,
            "enum": [
              "en",
              "da",
              "de",
              "es",
              "fi",
              "fl",
              "fr",
              "it",
              "nl",
              "no",
              "pl",
              "pt",
              "sv"
            ]
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/moods": {
      "get": {
        "operationId": "MoodsVideo",
        "summary": "Returns terms that describe expressive characteris...",
        "description": "Returns terms that describe expressive characteristics of a movie or television program, along with weightings that reflect the relative strength of each term. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States}.",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/parentalratings": {
      "get": {
        "operationId": "ParentalRatingsVideo",
        "summary": "Returns the parental ratings for a movie or televi...",
        "description": "Returns the parental ratings for a movie or television program. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/related": {
      "get": {
        "operationId": "RelatedVideo",
        "summary": "Returns movies, series, seasons, and programs that...",
        "description": "Returns movies, series, seasons, and programs that have a relationship with a movie, series, season, or program specified in the request. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country for the language that is specified for the \"language\" parameter, stated as a two-character ISO 3166 country code.",
            "in": "query",
            "required": false,
            "enum": [
              "US",
              "AR",
              "AT",
              "BE",
              "BM",
              "BO",
              "CA",
              "CH",
              "CL",
              "CO",
              "CR",
              "DE",
              "DK",
              "DO",
              "EC",
              "ES",
              "FI",
              "FR",
              "GB",
              "GT",
              "HN",
              "IE",
              "IT",
              "JM",
              "LU",
              "MX",
              "NI",
              "NL",
              "NO",
              "PA",
              "PE",
              "PL",
              "PT",
              "SE",
              "SV",
              "VE"
            ]
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of program titles, keywords, and descriptions, stated as a two-character ISO 639 language code.",
            "in": "query",
            "required": false,
            "enum": [
              "en",
              "da",
              "de",
              "es",
              "fi",
              "fl",
              "fr",
              "it",
              "nl",
              "no",
              "pl",
              "pt",
              "sv"
            ]
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/review": {
      "get": {
        "operationId": "ReviewVideo",
        "summary": "Returns a professional review of a movie or progra...",
        "description": "Returns a professional review of a movie or program. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 62991. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/schedule": {
      "get": {
        "operationId": "ScheduleVideo",
        "summary": "Returns a list of recent and upcoming television b...",
        "description": "Returns a list of recent and upcoming television broadcasts of a movie or program. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "serviceid",
            "type": "string",
            "description": "Database ID of a television service for an area. For example: 360861. You can get service IDs from the TV Listings API with a Services request.",
            "in": "query",
            "required": true
          },
          {
            "name": "inprogress",
            "type": "boolean",
            "description": "Whether shows that are in progress at starttime are included in the schedule.",
            "in": "query",
            "required": false
          },
          {
            "name": "sourceid",
            "type": "string",
            "description": "The channel sources, and thus the channels, to be returned. For example: 5,436,429,696,873,994,1274,9426,14633,14635,27080,34396. You can get channel source IDs from the TV Listings API with GridSchedule.",
            "in": "query",
            "required": false
          },
          {
            "name": "sourceexclude",
            "type": "string",
            "description": "If you specify \"sourceid\" to select the television sources to be returned, you can specify here attributes of the channels in the source ID list that you want to eliminate from the channels returned: HD, PPV, Music.",
            "in": "query",
            "required": false
          },
          {
            "name": "sourceinclude",
            "type": "string",
            "description": "If you specify \"sourceid\" to select the television sources to be returned, you can specify here an attribute of the channels in the source ID list that you want to include in the list of channels returned: HD, PPV, Music.",
            "in": "query",
            "required": false,
            "enum": [
              "HD",
              "PPV",
              "Music"
            ]
          },
          {
            "name": "starttime",
            "type": "string",
            "description": "Start of the schedule in UTC time in YYYYMMDDhhmmssZ format. For example 20120315140000Z. Default and earliest time is the time of the request.",
            "in": "query",
            "required": false
          },
          {
            "name": "duration",
            "type": "integer",
            "description": "Number of minutes the schedule will cover, from 1 to 20160. Default is 20160 (14 days).",
            "in": "query",
            "required": false,
            "default": 20160
          },
          {
            "name": "titletype",
            "type": "integer",
            "description": "Type of program title to return as described in the TitleType table.",
            "in": "query",
            "required": false
          },
          {
            "name": "copytexttype",
            "type": "string",
            "description": "Type of description you want returned for the movie, program, or TV series. For a short description, for example, choose 5. For a long description, choose 1. See the video/schedule documentation for other values.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country for the language that is specified for the \"language\" parameter, stated as a two-character ISO 3166 country code.",
            "in": "query",
            "required": false,
            "enum": [
              "US",
              "AR",
              "AT",
              "BE",
              "BM",
              "BO",
              "CA",
              "CH",
              "CL",
              "CO",
              "CR",
              "DE",
              "DK",
              "DO",
              "EC",
              "ES",
              "FI",
              "FR",
              "GB",
              "GT",
              "HN",
              "IE",
              "IT",
              "JM",
              "LU",
              "MX",
              "NI",
              "NL",
              "NO",
              "PA",
              "PE",
              "PL",
              "PT",
              "SE",
              "SV",
              "VE"
            ]
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of program titles, keywords, and descriptions, stated as a two-character ISO 639 language code.",
            "in": "query",
            "required": false,
            "enum": [
              "en",
              "da",
              "de",
              "es",
              "fi",
              "fl",
              "fr",
              "it",
              "nl",
              "no",
              "pl",
              "pt",
              "sv"
            ]
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/season/{season}/info": {
      "get": {
        "operationId": "SeasonInfoVideo",
        "summary": "Returns information about a season of a TV series....",
        "description": "Returns information about a season of a TV series. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "season",
            "type": "integer",
            "description": "Season number of the television series.",
            "in": "path",
            "required": true
          },
          {
            "name": "video",
            "type": "string",
            "description": "Title of the television series or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "ID for the television series used by the i-Guideâ¢ interactive TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Specify 'all' here to return episode IDs and titles in the response.",
            "in": "query",
            "required": false,
            "enum": [
              "all"
            ]
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/season/0/info": {
      "get": {
        "operationId": "Season0InfoVideo",
        "summary": "Returns information about unsequenced episodes in ...",
        "description": "Returns information about unsequenced episodes in a TV seriesâ-episodes that, for one reason or another, have not been assigned to a season. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the television series or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "ID for the television series used by the i-Guideâ¢ interactive TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Specify 'all' here to return episode IDs and titles in the response.",
            "in": "query",
            "required": false,
            "enum": [
              "all"
            ]
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/season/{season}/episodes": {
      "get": {
        "operationId": "SeasonEpisodesVideo",
        "summary": "Links to every episode in a season of a television...",
        "description": "Links to every episode in a season of a television series. Please set a value for video, cosmoid, or iguideid. Fields in bold are required.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "season",
            "type": "integer",
            "description": "Season number of the television series.",
            "in": "path",
            "required": true
          },
          {
            "name": "video",
            "type": "string",
            "description": "Title of the television series or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the television series. For example: 7903. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "ID for the television series used by the i-Guideâ¢ interactive TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Specify 'all' here to return episode IDs and titles in the response.",
            "in": "query",
            "required": false,
            "enum": [
              "all"
            ]
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/synopsis": {
      "get": {
        "operationId": "SynopsisVideo",
        "summary": "Returns the best available synopsis associated wit...",
        "description": "Returns the best available synopsis associated with a movie or program. Please set a value for video, cosmoid, or iguideid.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 62991. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/themes": {
      "get": {
        "operationId": "ThemesVideo",
        "summary": "Returns a list of topics and circumstances that mo...",
        "description": "Returns a list of topics and circumstances that motivate or fit with a movie or program. Please set a value for video, cosmoid, or iguideid.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 62991. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/tones": {
      "get": {
        "operationId": "TonesVideo",
        "summary": "Returns feelings and attitudes that motivate or fi...",
        "description": "Returns feelings and attitudes that motivate or fit with a movie or program, along with weightings that reflect the relative strength of each term. Please set a value for video, cosmoid, or iguideid.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 62991. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/video/web": {
      "get": {
        "operationId": "WebVideo",
        "summary": "Returns information resources on the Internet abou...",
        "description": "Returns information resources on the Internet about a movie or TV program. Note: Access to this information is governed by subscription level. Please set a value for video, cosmoid, or iguideid.",
        "tags": [
          "Video"
        ],
        "parameters": [
          {
            "name": "video",
            "type": "string",
            "description": "Title of the movie, television program, or television series, or keywords from the title.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 15926143. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "iguideid",
            "type": "string",
            "description": "An ID for a television program used by the i-Guideâ¢ interactive digital cable TV program guide.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movie/info": {
      "get": {
        "operationId": "InfoMovie",
        "summary": "Returns basic information about a movie or TV seri...",
        "description": "Returns basic information about a movie or TV series. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
        "tags": [
          "Movie"
        ],
        "parameters": [
          {
            "name": "movie",
            "type": "string",
            "description": "Keywords from the title of the movie or TV series.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 262068. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "movieid",
            "type": "string",
            "description": "AMG ID of the movie or TV series, consisting of the letter V followed by 9 digits with leading spaces. For example: V++++20546 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Additional data to include in each result. For example: 'moods,themes' or 'all'. For a list of possible values, see the documentation page for Movie/Info.",
            "in": "query",
            "required": false
          },
          {
            "name": "formatid",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the size and file format of returned images. Select the format IDs you want from the Format IDs table and specify multiple format IDs in a comma-separated list, like this: 36,44,51. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesize",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the image sizes to be returned. Images are not dynamically resized to fit, so only available sizes are returned. Specify an exact size in width x height format, like this: 332x419. Specify a size range in width x height format, like this: 60-80x80-100. Specify multiple sizes in a comma-separated list, like this: 332x419,60-80x80-100. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesort",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the sort order of returned images. Images can be sorted in ascending or descending order by the following properties: width, height, formatid, author, copyrightowner, url, imageorder, zoomlevel. Specify a descending sort order with a minus (-) sign, like this: -width. Specify a multilevel sort in highest-to-lowest order in a comma-separated list, like this: formatid,-height,width.",
            "in": "query",
            "required": false
          },
          {
            "name": "imagecount",
            "type": "integer",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the number of images to be returned. If fewer images are available, the available images are returned without error. The default is 25.",
            "in": "query",
            "required": false
          },
          {
            "name": "imageoffset",
            "type": "integer",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the number of images at the start of the response to skip. The default is zero. Use the \"imagecount\" and \"imageoffset\" parameters to paginate the available list of images.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movie/alttitles": {
      "get": {
        "operationId": "AlttitlesMovie",
        "summary": "Returns alternate and international titles for a m...",
        "description": "Returns alternate and international titles for a movie. Please set a value for movie, or cosmoid, or movieid.",
        "tags": [
          "Movie"
        ],
        "parameters": [
          {
            "name": "movie",
            "type": "string",
            "description": "Keywords from the title of the movie or TV series.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 1219814. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "movieid",
            "type": "string",
            "description": "AMG ID of the movie or TV series, consisting of the letter V followed by 9 digits with leading spaces. For example: V++++++349 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movie/cast": {
      "get": {
        "operationId": "CastMovie",
        "summary": "Returns information about cast members with links ...",
        "description": "Returns information about cast members with links to images. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
        "tags": [
          "Movie"
        ],
        "parameters": [
          {
            "name": "movie",
            "type": "string",
            "description": "Keywords from the title of the movie or TV series.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 262068. For example: 262068. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "movieid",
            "type": "string",
            "description": "AMG ID of the movie or TV series, consisting of the letter V followed by 9 digits with leading spaces. For example: V++++20546 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movie/crew": {
      "get": {
        "operationId": "CrewMovie",
        "summary": "Returns information about crew members with links ...",
        "description": "Returns information about crew members with links to images. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
        "tags": [
          "Movie"
        ],
        "parameters": [
          {
            "name": "movie",
            "type": "string",
            "description": "Keywords from the title of the movie or TV series.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 262068. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "movieid",
            "type": "string",
            "description": "AMG ID of the movie or TV series, consisting of the letter V followed by 9 digits with leading spaces. For example: V++++20546 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movie/images": {
      "get": {
        "operationId": "ImagesMovie",
        "summary": "Returns URLs to images of a movie along with assoc...",
        "description": "Returns URLs to images of a movie along with associated image information. Note: Access to images is governed by your subscription level and geographical location. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
        "tags": [
          "Movie"
        ],
        "parameters": [
          {
            "name": "movie",
            "type": "string",
            "description": "Keywords from the title of the movie or TV series.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 262068. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "movieid",
            "type": "string",
            "description": "AMG ID of the movie or TV series, consisting of the letter V followed by 9 digits with leading spaces. For example: V++++20546 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "formatid",
            "type": "string",
            "description": "Size and file format of returned images. Select the format IDs you want from the Format IDs table and specify multiple format IDs in a comma-separated list, like this: 36,44,51. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesize",
            "type": "string",
            "description": "Image sizes to be returned. Images are not dynamically resized to fit, so only available sizes are returned. Specify an exact size in width x height format, like this: 332x419. Specify a size range in width x height format, like this: 60-80x80-100. Specify multiple sizes in a comma-separated list, like this: 332x419,60-80x80-100. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesort",
            "type": "string",
            "description": "Sort order of returned images. Images can be sorted in ascending or descending order by the following properties: width, height, formatid, author, copyrightowner, url, imageorder, zoomlevel. Specify a descending sort order with a minus (-) sign, like this: -width. Specify a multilevel sort in highest-to-lowest order in a comma-separated list, like this: formatid,-height,width.",
            "in": "query",
            "required": false
          },
          {
            "name": "imagecount",
            "type": "integer",
            "description": "Number of images to be returned. If fewer images are available, the available images are returned without error. The default is 25.",
            "in": "query",
            "required": false
          },
          {
            "name": "imageoffset",
            "type": "integer",
            "description": "Number of images at the start of the response to skip. The default is zero. Use the \"imagecount\" and \"imageoffset\" parameters to paginate the available results.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movie/keywords": {
      "get": {
        "operationId": "KeywordsMovie",
        "summary": "Returns keywords that apply to a movie and weighti...",
        "description": "Returns keywords that apply to a movie and weightings that reflect the relative importance of each keyword. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
        "tags": [
          "Movie"
        ],
        "parameters": [
          {
            "name": "movie",
            "type": "string",
            "description": "Keywords from the title of the movie or TV series.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 262068. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "movieid",
            "type": "string",
            "description": "AMG ID of the movie or TV series, consisting of the letter V followed by 9 digits with leading spaces. For example: V++++20546 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movie/moods": {
      "get": {
        "operationId": "MoodsMovie",
        "summary": "Returns keywords that apply to a movie and weighti...",
        "description": "Returns keywords that apply to a movie and weightings that reflect the relative importance of each keyword. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
        "tags": [
          "Movie"
        ],
        "parameters": [
          {
            "name": "movie",
            "type": "string",
            "description": "Keywords from the title of the movie or TV series.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 262068. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "movieid",
            "type": "string",
            "description": "AMG ID of the movie or TV series, consisting of the letter V followed by 9 digits with leading spaces. For example: V++++20546 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movie/related": {
      "get": {
        "operationId": "RelatedMovie",
        "summary": "Returns titles of movies that are related to a mov...",
        "description": "Returns titles of movies that are related to a movie specified in the request. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
        "tags": [
          "Movie"
        ],
        "parameters": [
          {
            "name": "movie",
            "type": "string",
            "description": "Keywords from the title of the movie or TV series.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 262068. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "movieid",
            "type": "string",
            "description": "AMG ID of the movie or TV series, consisting of the letter V followed by 9 digits with leading spaces. For example: V++++20546 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movie/releases": {
      "get": {
        "operationId": "ReleasesMovie",
        "summary": "Returns information about DVDs, Blu-rays, and othe...",
        "description": "Returns information about DVDs, Blu-rays, and other movie releases. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
        "tags": [
          "Movie"
        ],
        "parameters": [
          {
            "name": "movie",
            "type": "string",
            "description": "Keywords from the title of the movie or TV series.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 262068. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "movieid",
            "type": "string",
            "description": "AMG ID of the movie or TV series, consisting of the letter V followed by 9 digits with leading spaces. For example: V++++20546 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movie/review": {
      "get": {
        "operationId": "ReviewMovie",
        "summary": "Returns a review of a movie. Please set a value fo...",
        "description": "Returns a review of a movie. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
        "tags": [
          "Movie"
        ],
        "parameters": [
          {
            "name": "movie",
            "type": "string",
            "description": "Keywords from the title of the movie or TV series.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 262068. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "movieid",
            "type": "string",
            "description": "AMG ID of the movie or TV series, consisting of the letter V followed by 9 digits with leading spaces. For example: V++++20546 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movie/synopsis": {
      "get": {
        "operationId": "SynopsisMovie",
        "summary": "Returns a synopsis of the plot and the name of the...",
        "description": "Returns a synopsis of the plot and the name of the author. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
        "tags": [
          "Movie"
        ],
        "parameters": [
          {
            "name": "movie",
            "type": "string",
            "description": "Keywords from the title of the movie or TV series.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 262068. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "movieid",
            "type": "string",
            "description": "AMG ID of the movie or TV series, consisting of the letter V followed by 9 digits with leading spaces. For example: V++++20546 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movie/themes": {
      "get": {
        "operationId": "ThemesMovie",
        "summary": "Returns a list of topics and circumstances that mo...",
        "description": "Returns a list of topics and circumstances that motivate or fit with a movie, along with weightings that reflect the relative importance of each. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
        "tags": [
          "Movie"
        ],
        "parameters": [
          {
            "name": "movie",
            "type": "string",
            "description": "Keywords from the title of the movie or TV series.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 262068. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "movieid",
            "type": "string",
            "description": "AMG ID of the movie or TV series, consisting of the letter V followed by 9 digits with leading spaces. For example: V++++20546 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movie/tones": {
      "get": {
        "operationId": "TonesMovie",
        "summary": "Returns a list of feelings that motivate or fit wi...",
        "description": "Returns a list of feelings that motivate or fit with the movie or TV series, along with weightings that reflect the relative importance of each. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
        "tags": [
          "Movie"
        ],
        "parameters": [
          {
            "name": "movie",
            "type": "string",
            "description": "Keywords from the title of the movie or TV series.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 262068. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "movieid",
            "type": "string",
            "description": "AMG ID of the movie or TV series, consisting of the letter V followed by 9 digits with leading spaces. For example: V++++20546 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movie/types": {
      "get": {
        "operationId": "TypesMovie",
        "summary": "Returns movie subgenres that apply to the movie, a...",
        "description": "Returns movie subgenres that apply to the movie, along with weightings that reflect the relative importance of each. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
        "tags": [
          "Movie"
        ],
        "parameters": [
          {
            "name": "movie",
            "type": "string",
            "description": "Keywords from the title of the movie or TV series.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 262068. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "movieid",
            "type": "string",
            "description": "AMG ID of the movie or TV series, consisting of the letter V followed by 9 digits with leading spaces. For example: V++++20546 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movie/videos": {
      "get": {
        "operationId": "VideosMovie",
        "summary": "Returns data for constructing links to movie trail...",
        "description": "Returns data for constructing links to movie trailers. Please set a value for movie, or cosmoid, or movieid. Fields in bold are required.",
        "tags": [
          "Movie"
        ],
        "parameters": [
          {
            "name": "movie",
            "type": "string",
            "description": "Keywords from the title of the movie or TV series.",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "integer",
            "description": "Cosmo database ID for the movie or television series. For example: 262068. Cosmo is a database of television information.",
            "in": "query",
            "required": false
          },
          {
            "name": "movieid",
            "type": "string",
            "description": "AMG ID of the movie or TV series, consisting of the letter V followed by 9 digits with leading spaces. For example: V++++20546 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movierelease/info": {
      "get": {
        "operationId": "InfoMovieRelease",
        "summary": "Returns basic information about a movie release. P...",
        "description": "Returns basic information about a movie release. Please set a value for upcid or moviereleaseid. Fields in bold are required.",
        "tags": [
          "Movie Release"
        ],
        "parameters": [
          {
            "name": "moviereleaseid",
            "type": "integer",
            "description": "ID of a movie release. For example: E247882.",
            "in": "query",
            "required": false
          },
          {
            "name": "upcid",
            "type": "integer",
            "description": "Universal Product Code for an item. For example: 024543713678.",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Additional data to include in each result. For example: 'images,features' or 'all'. For a list of possible values, see the documentation page for MovieRelease/Info.",
            "in": "query",
            "required": false
          },
          {
            "name": "formatid",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the size and file format of returned images. Select the format IDs you want from the Format IDs table and specify multiple format IDs in a comma-separated list, like this: 36,44,51. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesize",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the image sizes to be returned. Images are not dynamically resized to fit, so only available sizes are returned. Specify an exact size in width x height format, like this: 332x419. Specify a size range in width x height format, like this: 60-80x80-100. Specify multiple sizes in a comma-separated list, like this: 332x419,60-80x80-100. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesort",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the sort order of returned images. Images can be sorted in ascending or descending order by the following properties: width, height, formatid, author, copyrightowner, url, imageorder, zoomlevel. Specify a descending sort order with a minus (-) sign, like this: -width. Specify a multilevel sort in highest-to-lowest order in a comma-separated list, like this: formatid,-height,width.",
            "in": "query",
            "required": false
          },
          {
            "name": "imagecount",
            "type": "integer",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the number of images to be returned. If fewer images are available, the available images are returned without error. The default is 25.",
            "in": "query",
            "required": false
          },
          {
            "name": "imageoffset",
            "type": "integer",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the number of images at the start of the response to skip. The default is zero. Use the \"imagecount\" and \"imageoffset\" parameters to page the available list of images.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movierelease/description": {
      "get": {
        "operationId": "DescriptionMovieRelease",
        "summary": "Returns the description of a movie release. Please...",
        "description": "Returns the description of a movie release. Please set a value for upcid or moviereleaseid. Fields in bold are required.",
        "tags": [
          "Movie Release"
        ],
        "parameters": [
          {
            "name": "moviereleaseid",
            "type": "integer",
            "description": "ID of a movie release. For example: E278289.",
            "in": "query",
            "required": false
          },
          {
            "name": "upcid",
            "type": "integer",
            "description": "Universal Product Code for an item. For example: 025192117442.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movierelease/features": {
      "get": {
        "operationId": "FeaturesMovieRelease",
        "summary": "Returns the description of a movie release. Please...",
        "description": "Returns the description of a movie release. Please set a value for upcid or moviereleaseid. Fields in bold are required. Fields in bold are required.",
        "tags": [
          "Movie Release"
        ],
        "parameters": [
          {
            "name": "moviereleaseid",
            "type": "integer",
            "description": "ID of a movie release. For example: E247882.",
            "in": "query",
            "required": false
          },
          {
            "name": "upcid",
            "type": "integer",
            "description": "Universal Product Code for an item. For example: 024543713678.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movierelease/images": {
      "get": {
        "operationId": "ImagesMovieRelease",
        "summary": "Returns URLs to images of a movie release along wi...",
        "description": "Returns URLs to images of a movie release along with associated image information. Note: Access to images is governed by your subscription level and geographical location. Please set a value for upcid or moviereleaseid. Fields in bold are required.",
        "tags": [
          "Movie Release"
        ],
        "parameters": [
          {
            "name": "moviereleaseid",
            "type": "integer",
            "description": "ID of a movie release. For example: E247882.",
            "in": "query",
            "required": false
          },
          {
            "name": "upcid",
            "type": "integer",
            "description": "Universal Product Code for an item. For example: 024543713678.",
            "in": "query",
            "required": false
          },
          {
            "name": "formatid",
            "type": "string",
            "description": "Size and file format of returned images. Select the format IDs you want from the Format IDs table and specify multiple format IDs in a comma-separated list, like this: 36,44,51. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesize",
            "type": "string",
            "description": "Image sizes to be returned. Images are not dynamically resized to fit, so only available sizes are returned. Specify an exact size in width x height format, like this: 332x419. Specify a size range in width x height format, like this: 60-80x80-100. Specify multiple sizes in a comma-separated list, like this: 332x419,60-80x80-100. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesort",
            "type": "string",
            "description": "Sort order of returned images. Images can be sorted in ascending or descending order by the following properties: width, height, formatid, author, copyrightowner, url, imageorder, zoomlevel. Specify a descending sort order with a minus (-) sign, like this: -width. Specify a multilevel sort in highest-to-lowest order in a comma-separated list, like this: formatid,-height,width.",
            "in": "query",
            "required": false
          },
          {
            "name": "imagecount",
            "type": "integer",
            "description": "Number of images to be returned. If fewer images are available, the available images are returned without error. The default is 25.",
            "in": "query",
            "required": false
          },
          {
            "name": "imageoffset",
            "type": "integer",
            "description": "Number of images at the start of the response to skip. The default is zero. Use the \"imagecount\" and \"imageoffset\" parameters to paginate the available images.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/movierelease/videos": {
      "get": {
        "operationId": "VideosMovieRelease",
        "summary": "Returns data for constructing links to trailers of...",
        "description": "Returns data for constructing links to trailers of a movie release. Please set a value for upcid or moviereleaseid. Fields in bold are required.",
        "tags": [
          "Movie Release"
        ],
        "parameters": [
          {
            "name": "moviereleaseid",
            "type": "integer",
            "description": "ID of a movie release. For example: E247882.",
            "in": "query",
            "required": false
          },
          {
            "name": "upcid",
            "type": "integer",
            "description": "Universal Product Code for an item. For example: 024543713678.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/album/info": {
      "get": {
        "operationId": "InfoMusicAlbum",
        "summary": "Returns basic information about an album. Please s...",
        "description": "Returns basic information about an album. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Album"
        ],
        "parameters": [
          {
            "name": "album",
            "type": "string",
            "description": "Keywords from the album title.",
            "in": "query",
            "required": false
          },
          {
            "name": "albumid",
            "type": "string",
            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number. For example: MW0000111184.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++++20987 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++304960 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Additional data to include in each result. For example: 'moods,themes' or 'all'. For a list of possible values, see the documentation page for Album/Info.",
            "in": "query",
            "required": false
          },
          {
            "name": "formatid",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the size and file format of returned images. Select the format IDs you want from the Format IDs table and specify multiple format IDs in a comma-separated list, like this: 36,44,51. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesize",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the image sizes to be returned. Images are not dynamically resized to fit, so only available sizes are returned. Specify an exact size in width x height format, like this: 332x419. Specify a size range in width x height format, like this: 60-80x80-100. Specify multiple sizes in a comma-separated list, like this: 332x419,60-80x80-100. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesort",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the sort order of returned images. Images can be sorted in ascending or descending order by the following properties: width, height, formatid, author, copyrightowner, url, imageorder, zoomlevel. Specify a descending sort order with a minus (-) sign, like this: -width. Specify a multilevel sort in highest-to-lowest order in a comma-separated list, like this: formatid,-height,width.",
            "in": "query",
            "required": false
          },
          {
            "name": "imagecount",
            "type": "integer",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the number of images to be returned. If fewer images are available, the available images are returned without error. The default is 25.",
            "in": "query",
            "required": false
          },
          {
            "name": "imageoffset",
            "type": "integer",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the number of images at the start of the response to skip. The default is zero. Use \"imagecount\" and \"imageoffset\" to paginate the available images.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/album/classicalreview": {
      "get": {
        "operationId": "ClassicalReviewMusicAlbum",
        "summary": "Returns an editorial review of a classical music a...",
        "description": "Returns an editorial review of a classical music album. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Album"
        ],
        "parameters": [
          {
            "name": "album",
            "type": "string",
            "description": "Keywords from the album title.",
            "in": "query",
            "required": false
          },
          {
            "name": "albumid",
            "type": "string",
            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number. For example: MW0002565048.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R+++518192 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++304960 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/album/credits": {
      "get": {
        "operationId": "CreditsMusicAlbum",
        "summary": "Returns the production credits for an album, a lis...",
        "description": "Returns the production credits for an album, a list of the names and roles of the people and groups that produced the album. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Album"
        ],
        "parameters": [
          {
            "name": "album",
            "type": "string",
            "description": "Keywords from the album title.",
            "in": "query",
            "required": false
          },
          {
            "name": "albumid",
            "type": "string",
            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number. For example: MW0000111184.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++++20987 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++304960 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/album/images": {
      "get": {
        "operationId": "ImagesMusicAlbum",
        "summary": "Returns URLs to pictures of an album along with as...",
        "description": "Returns URLs to pictures of an album along with associated image information. Note: Access to images is governed by your subscription level and geographical location. Photography credits must be displayed with images. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Album"
        ],
        "parameters": [
          {
            "name": "album",
            "type": "string",
            "description": "Keywords from the album title.",
            "in": "query",
            "required": false
          },
          {
            "name": "albumid",
            "type": "string",
            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number. For example: MW0000111184.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++++20987 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++304960 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "formatid",
            "type": "string",
            "description": "Size and file format of returned images. Select the format IDs you want from the Format IDs table and specify multiple format IDs in a comma-separated list, like this: 36,44,51. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesize",
            "type": "string",
            "description": "Image sizes to be returned. Images are not dynamically resized to fit, so only available sizes are returned. Specify an exact size in width x height format, like this: 332x419. Specify a size range in width x height format, like this: 60-80x80-100. Specify multiple sizes in a comma-separated list, like this: 332x419,60-80x80-100. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesort",
            "type": "string",
            "description": "Sort order of returned images. Images can be sorted in ascending or descending order by the following properties: width, height, formatid, author, copyrightowner, url, imageorder, zoomlevel. Specify a descending sort order with a minus (-) sign, like this: -width. Specify a multilevel sort in highest-to-lowest order in a comma-separated list, like this: formatid,-height,width",
            "in": "query",
            "required": false
          },
          {
            "name": "imagecount",
            "type": "integer",
            "description": "Number of images to be returned. If fewer images are available, the available images are returned without error. The default is 25.",
            "in": "query",
            "required": false
          },
          {
            "name": "imageoffset",
            "type": "integer",
            "description": "Number of images at the start of the response to skip. The default is zero. Use the \"imagecount\" and \"imageoffset\" parameters to paginate the available images.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/album/moods": {
      "get": {
        "operationId": "MoodsMusicAlbum",
        "summary": "Returns a list of terms that describe expressive c...",
        "description": "Returns a list of terms that describe expressive characteristics of the music, along with weightings that reflect the relative strength of each term. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required. Fields in bold are required.",
        "tags": [
          "Music Album"
        ],
        "parameters": [
          {
            "name": "album",
            "type": "string",
            "description": "Keywords from the album title.",
            "in": "query",
            "required": false
          },
          {
            "name": "albumid",
            "type": "string",
            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number. For example: MW0000111184.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++++20987 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++304960 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/album/primaryreview": {
      "get": {
        "operationId": "PrimaryReviewMusicAlbum",
        "summary": "Returns the most recent major review of an album. ...",
        "description": "Returns the most recent major review of an album. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Album"
        ],
        "parameters": [
          {
            "name": "album",
            "type": "string",
            "description": "Keywords from the album title.",
            "in": "query",
            "required": false
          },
          {
            "name": "albumid",
            "type": "string",
            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number. For example: MW0000111184.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++++20987 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W++++67248 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/album/releases": {
      "get": {
        "operationId": "ReleasesMusicAlbum",
        "summary": "Returns information about the releases of an album...",
        "description": "Returns information about the releases of an album, including media type and whether it can be purchased. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Album"
        ],
        "parameters": [
          {
            "name": "album",
            "type": "string",
            "description": "Keywords from the album title.",
            "in": "query",
            "required": false
          },
          {
            "name": "albumid",
            "type": "string",
            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number. For example: MW0000111184.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++++20987 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++304960 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/album/styles": {
      "get": {
        "operationId": "StylesMusicAlbum",
        "summary": "Returns a list of musical styles that apply to the...",
        "description": "Returns a list of musical styles that apply to the music on an album along with weightings that reflect the importance of each style in the music. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Album"
        ],
        "parameters": [
          {
            "name": "album",
            "type": "string",
            "description": "Keywords from the album title.",
            "in": "query",
            "required": false
          },
          {
            "name": "albumid",
            "type": "string",
            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number. For example: MW0000111184.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++++20987 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++304960 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/album/themes": {
      "get": {
        "operationId": "ThemesMusicAlbum",
        "summary": "Returns a list of topics, feelings, and circumstan...",
        "description": "Returns a list of topics, feelings, and circumstances that motivate or fit with the music on an album. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Album"
        ],
        "parameters": [
          {
            "name": "album",
            "type": "string",
            "description": "Keywords from the album title.",
            "in": "query",
            "required": false
          },
          {
            "name": "albumid",
            "type": "string",
            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number. For example: MW0000111184.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++++20987 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++306362 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/album/tracks": {
      "get": {
        "operationId": "TracksMusicAlbum",
        "summary": "Returns information about the songs on a popular m...",
        "description": "Returns information about the songs on a popular music album and the performances on a classical music album. Popular music songs are identified by track IDs; classical music performances are identified by performance IDs. Please set a value for album, albumid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Album"
        ],
        "parameters": [
          {
            "name": "album",
            "type": "string",
            "description": "Keywords from the album title.",
            "in": "query",
            "required": false
          },
          {
            "name": "albumid",
            "type": "string",
            "description": "Rovi Music ID for an album, consisting of the prefix MW followed by a ten-digit number. For example: MW0000111184",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++++20987 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++304960 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/composition/info": {
      "get": {
        "operationId": "InfoMusicComposition",
        "summary": "Returns basic information about a classical music ...",
        "description": "Returns basic information about a classical music composition. Please set a value for compositionid or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Composition"
        ],
        "parameters": [
          {
            "name": "compositionid",
            "type": "string",
            "description": "Rovi Music ID for a classical music composition, consisting of the prefix MC followed by a ten-digit number. For example: MC0002369165.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C++++43235 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Additional data to include in each result. For example: 'parts,releases,description' or 'all'.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/composition/description": {
      "get": {
        "operationId": "DescriptionMusicComposition",
        "summary": "Returns a description of a classical music composi...",
        "description": "Returns a description of a classical music composition. Please set a value for compositionid or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Composition"
        ],
        "parameters": [
          {
            "name": "compositionid",
            "type": "string",
            "description": "Rovi Music ID for a classical music composition, consisting of the prefix MC followed by a ten-digit number. For example: MC0002369165.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C++++43235 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/composition/parts": {
      "get": {
        "operationId": "PartsMusicComposition",
        "summary": "Returns the names of the parts or movements of a c...",
        "description": "Returns the names of the parts or movements of a classical music composition, each of which is recorded as a single track. Please set a value for compositionid or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Composition"
        ],
        "parameters": [
          {
            "name": "compositionid",
            "type": "string",
            "description": "Rovi Music ID for a classical music composition, consisting of the prefix MC followed by a ten-digit number. For example: MC0002369165.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C++++43235 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/composition/releases": {
      "get": {
        "operationId": "ReleasesMusicComposition",
        "summary": "Returns a list of album releases that feature a pe...",
        "description": "Returns a list of album releases that feature a performance of a composition. Please set a value for compositionid or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Composition"
        ],
        "parameters": [
          {
            "name": "compositionid",
            "type": "string",
            "description": "Rovi Music ID for a classical music composition, consisting of the prefix MC followed by a ten-digit number. For example: MC0002369165.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C++++43235 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/performance/info": {
      "get": {
        "operationId": "InfoMusicPerformance",
        "summary": "Returns basic information about a classical music ...",
        "description": "Returns basic information about a classical music performance. Please set a value for performanceid or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Performance"
        ],
        "parameters": [
          {
            "name": "performanceid",
            "type": "string",
            "description": "Rovi Music ID for a classical music performance, consisting of the prefix MQ followed by a ten-digit number. For example, MQ0001169372.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C++++43235 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Additional data to include in each result. For example: 'credits,images' or 'all'. For a list of possible values, see the documentation page for Performance/Info.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/performance/composition": {
      "get": {
        "operationId": "CompositionMusicPerformance",
        "summary": "Returns information about a composition played in ...",
        "description": "Returns information about a composition played in a classical music performance. Please set a value for performanceid or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Performance"
        ],
        "parameters": [
          {
            "name": "performanceid",
            "type": "string",
            "description": "Rovi Music ID for a classical music performance, consisting of the prefix MQ followed by a ten-digit number. For example, MQ0001169372.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C++++43235 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/performance/credits": {
      "get": {
        "operationId": "CreditsMusicPerformance",
        "summary": "Returns the names and roles of the people, groups,...",
        "description": "Returns the names and roles of the people, groups, and organizations that contributed to a classical music performance and the album release. Please set a value for performanceid or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Performance"
        ],
        "parameters": [
          {
            "name": "performanceid",
            "type": "string",
            "description": "Rovi Music ID for a classical music performance, consisting of the prefix MQ followed by a ten-digit number. For example, MQ0001169372.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C++++43235 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/performance/images": {
      "get": {
        "operationId": "ImagesMusicPerformance",
        "summary": "Returns URLs to images of an album that contains t...",
        "description": "Returns URLs to images of an album that contains the recording a classical music performance, along with associated image information. Note: Access to images is governed by your subscription level and geographical location. Photography credits must be displayed with images. Please set a value for performanceid or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Performance"
        ],
        "parameters": [
          {
            "name": "performanceid",
            "type": "string",
            "description": "Rovi Music ID for a classical music performance, consisting of the prefix MQ followed by a ten-digit number. For example, MQ0001169372.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C++++43235 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/performance/release": {
      "get": {
        "operationId": "ReleaseMusicPerformance",
        "summary": "Returns information about an album release that co...",
        "description": "Returns information about an album release that contains the recording of a classical music performance. Please set a value for performanceid or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Performance"
        ],
        "parameters": [
          {
            "name": "performanceid",
            "type": "string",
            "description": "Rovi Music ID for a classical music performance, consisting of the prefix MQ followed by a ten-digit number. For example, MQ0001169372.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music composition, consisting of a ten-character string that starts with C and is followed by nine digits with leading spaces. For example: C++++43235 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/release/info": {
      "get": {
        "operationId": "InfoMusicRelease",
        "summary": "Returns basic information about an LP, CD, DVD, ca...",
        "description": "Returns basic information about an LP, CD, DVD, cassette, download, or other release of an album. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Release"
        ],
        "parameters": [
          {
            "name": "eanid",
            "type": "string",
            "description": "EAN code of the release.",
            "in": "query",
            "required": false
          },
          {
            "name": "upcid",
            "type": "string",
            "description": "Universal Product Code for an item.",
            "in": "query",
            "required": false
          },
          {
            "name": "releaseid",
            "type": "string",
            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R+++518192 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++180317 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "formatid",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the size and file format of returned images. Select the format IDs you want from the Format IDs table and specify multiple format IDs in a comma-separated list, like this: 36,44,51. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesize",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the image sizes to be returned. Images are not dynamically resized to fit, so only available sizes are returned. Specify an exact size in width x height format, like this: 332x419. Specify a size range in width x height format, like this: 60-80x80-100. Specify multiple sizes in a comma-separated list, like this: 332x419,60-80x80-100. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesort",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the sort order of returned images. Images can be sorted in ascending or descending order by the following properties: width, height, formatid, author, copyrightowner, url, imageorder, zoomlevel. Specify a descending sort order with a minus (-) sign, like this: -width. Specify a multilevel sort in highest-to-lowest order in a comma-separated list, like this: formatid,-height,width.",
            "in": "query",
            "required": false
          },
          {
            "name": "imagecount",
            "type": "integer",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the number of images to be returned. If fewer images are available, the available images are returned without error. The default is 25.",
            "in": "query",
            "required": false
          },
          {
            "name": "imageoffset",
            "type": "integer",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the number of images at the start of the response to skip. The default is zero. Use \"imagecount\" and \"imageoffset\" to paginate the list of available images.",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Additional data to include in each result. For example: 'moods,themes' or 'all'. For a list of possible values, see the documentation page for Release/Info.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/release/classicalreview": {
      "get": {
        "operationId": "ClassicalReviewMusicRelease",
        "summary": "Returns an editorial review of a classical music a...",
        "description": "Returns an editorial review of a classical music album. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Release"
        ],
        "parameters": [
          {
            "name": "eanid",
            "type": "string",
            "description": "EAN code of the release.",
            "in": "query",
            "required": false
          },
          {
            "name": "upcid",
            "type": "string",
            "description": "Universal Product Code for an item.",
            "in": "query",
            "required": false
          },
          {
            "name": "releaseid",
            "type": "string",
            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++1805889 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++180317 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/release/credits": {
      "get": {
        "operationId": "CreditsMusicRelease",
        "summary": "Returns the names and roles of the people, groups,...",
        "description": "Returns the names and roles of the people, groups, and organizations that contributed to a release. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Release"
        ],
        "parameters": [
          {
            "name": "eanid",
            "type": "string",
            "description": "EAN code of the release.",
            "in": "query",
            "required": false
          },
          {
            "name": "upcid",
            "type": "string",
            "description": "Universal Product Code for an item.",
            "in": "query",
            "required": false
          },
          {
            "name": "releaseid",
            "type": "string",
            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++1805889 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++180317 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/release/images": {
      "get": {
        "operationId": "ImagesMusicRelease",
        "summary": "Returns URLs to pictures of the album release alon...",
        "description": "Returns URLs to pictures of the album release along with associated image information. Note: Access to images is governed by your subscription level and geographical location. Photography credits must be displayed with images. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Release"
        ],
        "parameters": [
          {
            "name": "eanid",
            "type": "string",
            "description": "EAN code of the release.",
            "in": "query",
            "required": false
          },
          {
            "name": "upcid",
            "type": "string",
            "description": "Universal Product Code for an item.",
            "in": "query",
            "required": false
          },
          {
            "name": "releaseid",
            "type": "string",
            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++1805889 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++180317 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "formatid",
            "type": "string",
            "description": "Size and file format of returned images. Select the format IDs you want from the Format IDs table and specify multiple format IDs in a comma-separated list, like this: 36,44,51. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesize",
            "type": "string",
            "description": "Image sizes to be returned. Images are not dynamically resized to fit, so only available sizes are returned. Specify an exact size in width x height format, like this: 332x419. Specify a size range in width x height format, like this: 60-80x80-100. Specify multiple sizes in a comma-separated list, like this: 332x419,60-80x80-100. Note: Returned images meet a combination of all specified filters (formatid and imagesize).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesort",
            "type": "string",
            "description": "Sort order of returned images. Images can be sorted in ascending or descending order by the following properties: width, height, formatid, author, copyrightowner, url, imageorder, zoomlevel. Specify a descending sort order with a minus (-) sign, like this: -width. Specify a multilevel sort in highest-to-lowest order in a comma-separated list, like this: formatid,-height,width.",
            "in": "query",
            "required": false
          },
          {
            "name": "imagecount",
            "type": "integer",
            "description": "Number of images to be returned. If fewer images are available, the available images are returned without error. The default is 25.",
            "in": "query",
            "required": false
          },
          {
            "name": "imageoffset",
            "type": "integer",
            "description": "Number of images at the start of the response to skip. The default is zero. Use imagecount and imageoffset to paginate the list of available images.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/release/moods": {
      "get": {
        "operationId": "MoodsMusicRelease",
        "summary": "Returns a list of terms that describe expressive c...",
        "description": "Returns a list of terms that describe expressive characteristics of the music, along with weightings that reflect the relative strength of each term. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Release"
        ],
        "parameters": [
          {
            "name": "eanid",
            "type": "string",
            "description": "EAN code of the release.",
            "in": "query",
            "required": false
          },
          {
            "name": "upcid",
            "type": "string",
            "description": "Universal Product Code for an item.",
            "in": "query",
            "required": false
          },
          {
            "name": "releaseid",
            "type": "string",
            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++1805889 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++180317 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/release/performances": {
      "get": {
        "operationId": "PerformancesMusicRelease",
        "summary": "Returns information about the performances on a re...",
        "description": "Returns information about the performances on a release of a classical music album. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Release"
        ],
        "parameters": [
          {
            "name": "eanid",
            "type": "string",
            "description": "EAN code of the release.",
            "in": "query",
            "required": false
          },
          {
            "name": "upcid",
            "type": "string",
            "description": "Universal Product Code for an item.",
            "in": "query",
            "required": false
          },
          {
            "name": "releaseid",
            "type": "string",
            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++1805889 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++180317 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/release/primaryreview": {
      "get": {
        "operationId": "PrimaryReviewMusicRelease",
        "summary": "Returns the most recent major review of a release ...",
        "description": "Returns the most recent major review of a release of an album. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Release"
        ],
        "parameters": [
          {
            "name": "eanid",
            "type": "string",
            "description": "EAN code of the release.",
            "in": "query",
            "required": false
          },
          {
            "name": "upcid",
            "type": "string",
            "description": "Universal Product Code for an item.",
            "in": "query",
            "required": false
          },
          {
            "name": "releaseid",
            "type": "string",
            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++1805889 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++180317 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/release/styles": {
      "get": {
        "operationId": "StylesMusicRelease",
        "summary": "Returns a list of musical styles relevant to the m...",
        "description": "Returns a list of musical styles relevant to the music on an album release along with weightings that reflect the importance of each style in the music. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Release"
        ],
        "parameters": [
          {
            "name": "eanid",
            "type": "string",
            "description": "EAN code of the release.",
            "in": "query",
            "required": false
          },
          {
            "name": "upcid",
            "type": "string",
            "description": "Universal Product Code for an item.",
            "in": "query",
            "required": false
          },
          {
            "name": "releaseid",
            "type": "string",
            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++1805889 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++180317 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/release/themes": {
      "get": {
        "operationId": "ThemesMusicRelease",
        "summary": "Returns a list of topics, feelings, and circumstan...",
        "description": "Returns a list of topics, feelings, and circumstances that motivate or fit with the music on an album release, along with weightings that reflect the relative importance of each. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Release"
        ],
        "parameters": [
          {
            "name": "eanid",
            "type": "string",
            "description": "EAN code of the release.",
            "in": "query",
            "required": false
          },
          {
            "name": "upcid",
            "type": "string",
            "description": "Universal Product Code for an item.",
            "in": "query",
            "required": false
          },
          {
            "name": "releaseid",
            "type": "string",
            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++1805889 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++180317 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/release/tracks": {
      "get": {
        "operationId": "TracksMusicRelease",
        "summary": "Returns information about the tracks on a release ...",
        "description": "Returns information about the tracks on a release of an album. Please set a value for eanid, upcid, releaseid, amgpopid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Music Release"
        ],
        "parameters": [
          {
            "name": "eanid",
            "type": "string",
            "description": "EAN code of the release.",
            "in": "query",
            "required": false
          },
          {
            "name": "upcid",
            "type": "string",
            "description": "Universal Product Code for an item.",
            "in": "query",
            "required": false
          },
          {
            "name": "releaseid",
            "type": "string",
            "description": "Rovi Music ID for the release, consisting of the prefix MR followed by a ten-digit number.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music album, consisting of a ten-character string that starts with R and is followed by nine digits with leading spaces. For example: R++1805889 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music album, consisting of a ten-character string that starts with W and is followed by nine digits with leading spaces. For example: W+++180317 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/song/info": {
      "get": {
        "operationId": "InfoMusicSong",
        "summary": "Returns basic information about a song. Please set...",
        "description": "Returns basic information about a song. Please set a value for track, trackid, isrcid, muzeid, amgpoptrackid, or amgclassicaltrackid. Fields in bold are required.",
        "tags": [
          "Music Song"
        ],
        "parameters": [
          {
            "name": "track",
            "type": "string",
            "description": "Title of the song.",
            "in": "query",
            "required": false
          },
          {
            "name": "trackid",
            "type": "string",
            "description": "Rovi Music ID for a popular song, consisting of the prefix MT followed by a ten-digit number. For example: MT0009472348.",
            "in": "query",
            "required": false
          },
          {
            "name": "isrcid",
            "type": "string",
            "description": "International Standard Recording Code (ISRC) for a song recording. For example: GBAAA8200005.",
            "in": "query",
            "required": false
          },
          {
            "name": "muzeid",
            "type": "string",
            "description": "Legacy ID from the Muze database. For example: 23638394.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpoptrackid",
            "type": "string",
            "description": "AMG ID for a track on a popular music album, consisting of a ten-character string that starts with T and is followed by 9 digits with leading spaces. For example: T+12311598 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicaltrackid",
            "type": "string",
            "description": "AMG ID for a track on a classical music album, consisting of a ten-character string that starts with Y and is followed by 9 digits with leading spaces. For example: Y+++304892 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Additional data to include in each result. For example: 'review,appearances' or 'all'. For a list of possible values, see the documentation page for Song/Info.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/song/appearances": {
      "get": {
        "operationId": "AppearancesMusicSong",
        "summary": "Returns a list of albums and videos a song track a...",
        "description": "Returns a list of albums and videos a song track appears on. Please set a value for track, trackid, isrcid, muzeid, amgpoptrackid, or amgclassicaltrackid. Fields in bold are required.",
        "tags": [
          "Music Song"
        ],
        "parameters": [
          {
            "name": "track",
            "type": "string",
            "description": "Title of the song.",
            "in": "query",
            "required": false
          },
          {
            "name": "trackid",
            "type": "string",
            "description": "Rovi Music ID for a popular song, consisting of the prefix MT followed by a ten-digit number. For example: MT0009472348.",
            "in": "query",
            "required": false
          },
          {
            "name": "isrcid",
            "type": "string",
            "description": "International Standard Recording Code (ISRC) for a song recording. For example: GBAAA8200005.",
            "in": "query",
            "required": false
          },
          {
            "name": "muzeid",
            "type": "string",
            "description": "Legacy ID from the Muze database. For example: 23638394.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpoptrackid",
            "type": "string",
            "description": "AMG ID for a track on a popular music album, consisting of a ten-character string that starts with T and is followed by 9 digits with leading spaces. For example: T+12311598 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicaltrackid",
            "type": "string",
            "description": "AMG ID for a track on a classical music album, consisting of a ten-character string that starts with Y and is followed by 9 digits with leading spaces. For example: Y+++304892 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/song/review": {
      "get": {
        "operationId": "ReviewMusicSong",
        "summary": "Returns the most recent major review of a song. Pl...",
        "description": "Returns the most recent major review of a song. Please set a value for track, trackid, isrcid, muzeid, amgpoptrackid, or amgclassicaltrackid. Fields in bold are required.",
        "tags": [
          "Music Song"
        ],
        "parameters": [
          {
            "name": "track",
            "type": "string",
            "description": "Title of the song.",
            "in": "query",
            "required": false
          },
          {
            "name": "trackid",
            "type": "string",
            "description": "Rovi Music ID for a popular song, consisting of the prefix MT followed by a ten-digit number. For example: MT0010499650.",
            "in": "query",
            "required": false
          },
          {
            "name": "isrcid",
            "type": "string",
            "description": "International Standard Recording Code (ISRC) for a song recording. For example: USWB10001137.",
            "in": "query",
            "required": false
          },
          {
            "name": "muzeid",
            "type": "string",
            "description": "Legacy ID from the Muze database. For example: 23638394.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpoptrackid",
            "type": "string",
            "description": "AMG ID for a track on a popular music album, consisting of a ten-character string that starts with T and is followed by 9 digits with leading spaces. For example: T+18504574 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicaltrackid",
            "type": "string",
            "description": "AMG ID for a track on a classical music album, consisting of a ten-character string that starts with Y and is followed by 9 digits with leading spaces.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/info": {
      "get": {
        "operationId": "InfoName",
        "summary": "Returns basic information about a person or group....",
        "description": "Returns basic information about a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+81651 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++++910 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++7057 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 100857.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Additional data to include in each result. For example: 'moods,themes' or 'all'. For a list of possible values, see the documentation page for Name/Info.",
            "in": "query",
            "required": false
          },
          {
            "name": "type",
            "type": "string",
            "description": "If you request 'All' or 'Discography' in the \"include\" parameter, type specifies what types of discography to return. For multiple include values, separate the values with commas. Valid values: main, video, singles, compilations, others.",
            "in": "query",
            "required": false
          },
          {
            "name": "serviceid",
            "type": "string",
            "description": "Database ID of a television service for an area. For example: 360861. Returns a URL to a schedule of upcoming broadcasts of the program, if available. If you also specify 'schedule' in \"include\", the schedule returns. You can get service IDs from the TV Listings API with a Services request.",
            "in": "query",
            "required": false
          },
          {
            "name": "duration",
            "type": "integer",
            "description": "If you specify \"serviceid\" for a schedule of broadcasts the person appears in, you can specify here the number of minutes the schedule will cover.",
            "in": "query",
            "required": false,
            "default": 10080
          },
          {
            "name": "inprogress",
            "type": "boolean",
            "description": "If you specify \"serviceid\" for a schedule of broadcasts the person appears in, you can specify here whether shows that are in progress at \"starttime\" are included in the schedule.",
            "in": "query",
            "required": false
          },
          {
            "name": "sourceid",
            "type": "string",
            "description": "If you specify \"serviceid\" for a schedule of broadcasts that the person appears in, you can limit here the channel sources, and thus the channels. For example: 5,436,429,696,873,994,1274,9426,14633,14635,27080,34396. You can get channel source IDs from the TV Listings API with GridSchedule.",
            "in": "query",
            "required": false
          },
          {
            "name": "sourceexclude",
            "type": "string",
            "description": "If you specify \"sourceid\" to select the television sources to be returned, you can specify here attributes of the channels in the source ID list that you want to eliminate from the channels returned: HD, PPV, Music.",
            "in": "query",
            "required": false
          },
          {
            "name": "sourceinclude",
            "type": "string",
            "description": "If you specify \"sourceid\" to select the television sources to be returned, you can specify here an attribute of the channels in the source ID list that you want to include in the list of channels returned: HD, PPV, Music.",
            "in": "query",
            "required": false,
            "enum": [
              "HD",
              "PPV",
              "Music"
            ]
          },
          {
            "name": "starttime",
            "type": "string",
            "description": "If you specify \"serviceid\" for a schedule of broadcasts the person appears in, you can specify here the start of the schedule in UTC time in YYYYMMDDhhmmssZ format. For example 20120315140000Z. Default and earliest time is the time of the request.",
            "in": "query",
            "required": false
          },
          {
            "name": "formatid",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the size and file format of returned images. Select the format IDs you want from the Format IDs table and specify multiple format IDs in a comma-separated list, like this: 36,44,51. Note: Returned images meet a combination of all specified filters (formatid, imagesize, and imagetypeid).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesize",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the image sizes to be returned. Images are not dynamically resized to fit, so only available sizes are returned. Specify an exact size in width x height format, like this: 332x419. Specify a size range in width x height format, like this: 60-80x80-100. Specify multiple sizes in a comma-separated list, like this: 332x419,60-80x80-100. Note: Returned images meet a combination of all specified filters (formatid, imagesize, and imagetypeid).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesort",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the sort order of returned images. Images can be sorted in ascending or descending order by the following properties: width, height, formatid, author, copyrightowner, url. Specify a descending sort order with a minus (-) sign, like this: -width. Specify a multilevel sort in highest-to-lowest order in a comma-separated list, like this: formatid,-height,width.",
            "in": "query",
            "required": false
          },
          {
            "name": "imagetypeid",
            "type": "string",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the image type of returned images. Select the IDs you want from the Image Type IDs table. Specify multiple image type IDs in a comma-separated list, like this: 4,6. Image types are returned in the order shown in the Image Order table. Note: Returned images meet a combination of all specified filters (formatid, imagesize, and imagetypeid).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagecount",
            "type": "integer",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the number of images to be returned. If fewer images are available, the available images are returned without error. The default is 25.",
            "in": "query",
            "required": false
          },
          {
            "name": "imageoffset",
            "type": "integer",
            "description": "If you specify 'all' or 'images' in the \"include\" parameter, you can specify here the number of images at the start of the response to skip. The default is zero. Use imagecount and imageoffset to paginate the list of available images.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/aliases": {
      "get": {
        "operationId": "AliasesName",
        "summary": "Returns other names a person or group has been kno...",
        "description": "Returns other names a person or group has been known by. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+81651 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces.  For example: P++++++910 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++7057 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/associatedwith": {
      "get": {
        "operationId": "AssociatedWithName",
        "summary": "Returns names of people and groups who participate...",
        "description": "Returns names of people and groups who participated in the work of a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+81651 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++++910 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++7057 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi Music ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/classicalbio": {
      "get": {
        "operationId": "ClassicalBioName",
        "summary": "Returns names of people and groups who participate...",
        "description": "Returns names of people and groups who participated in the work of a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+81651 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++++910 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++7057 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/collaboratorwith": {
      "get": {
        "operationId": "CollaboratorWithName",
        "summary": "Returns names of people and groups who collaborate...",
        "description": "Returns names of people and groups who collaborated with a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+81651 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++++910 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++7057 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/compositions": {
      "get": {
        "operationId": "CompositionsName",
        "summary": "Returns a list of classical compositions by a pers...",
        "description": "Returns a list of classical compositions by a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+81651 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++++910 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++7057 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/contemporaries": {
      "get": {
        "operationId": "ContemporariesName",
        "summary": "Returns names of people doing comparable work and ...",
        "description": "Returns names of people doing comparable work and living during the same time as a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+81651 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++++910 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++7057 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000239859.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/discography": {
      "get": {
        "operationId": "DiscographyName",
        "summary": "Returns a list of albums that a person or group co...",
        "description": "Returns a list of albums that a person or group contributed to. The response can by filtered by type of album. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+81651 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++++910 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000239859.",
            "in": "query",
            "required": false
          },
          {
            "name": "type",
            "type": "string",
            "description": "Types of discography to return: main, video, singles, compilations, or other. Separate multiple values with commas like this: video,singles.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/filmography": {
      "get": {
        "operationId": "FilmographyName",
        "summary": "Returns information about the films a person or gr...",
        "description": "Returns information about the films a person or group contributed to. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+81651 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++++910 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000239859.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/followers": {
      "get": {
        "operationId": "FollowersName",
        "summary": "Returns a list of people who followed a person or ...",
        "description": "Returns a list of people who followed a person or group and were influenced by them. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+81651 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++++910 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000239859.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/groupmembers": {
      "get": {
        "operationId": "GroupMembersName",
        "summary": "Returns the names of members of a group. Please sp...",
        "description": "Returns the names of members of a group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a group that works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+19698 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music group, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P+++++4119 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music group, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q++++99625 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a group.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000114342.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/images": {
      "get": {
        "operationId": "ImagesName",
        "summary": "Returns URLs to images of a person or group. Note:...",
        "description": "Returns URLs to images of a person or group. Note: Access to images is governed by your subscription level and geographical location. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+81651 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++++910 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000239859.",
            "in": "query",
            "required": false
          },
          {
            "name": "formatid",
            "type": "string",
            "description": "Size and file format of returned images. Select the format IDs you want from the Format IDs table and specify multiple format IDs in a comma-separated list, like this: 36,44,51. Note: Returned images meet a combination of all specified filters (formatid, imagesize, and imagetypeid).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesize",
            "type": "string",
            "description": "Image sizes to be returned. Images are not dynamically resized to fit, so only available sizes are returned. Specify an exact size in width x height format, like this: 332x419. Specify a size range in width x height format, like this: 60-80x80-100. Specify multiple sizes in a comma-separated list, like this: 332x419,60-80x80-100. Note: Returned images meet a combination of all specified filters (formatid, imagesize, and imagetypeid).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagesort",
            "type": "string",
            "description": "Sort order of returned images. Images can be sorted in ascending or descending order by the following properties: width, height, formatid, author, copyrightowner, url. Specify a descending sort order with a minus (-) sign, like this: -width. Specify a multilevel sort in highest-to-lowest order in a comma-separated list, like this: formatid,-height,width.",
            "in": "query",
            "required": false
          },
          {
            "name": "imagetypeid",
            "type": "string",
            "description": "Image type of returned images. Select the IDs you want from the Image Type IDs table. Specify multiple image type IDs in a comma-separated list, like this: 4,6. Image types are returned in the order shown in the Image Order table. Note: Returned images meet a combination of all specified filters (formatid, imagesize, and imagetypeid).",
            "in": "query",
            "required": false
          },
          {
            "name": "imagecount",
            "type": "integer",
            "description": "Number of images to be returned. If fewer images are available, the available images are returned without error. The default is 25.",
            "in": "query",
            "required": false
          },
          {
            "name": "imageoffset",
            "type": "integer",
            "description": "Number of images at the start of the response to skip. The default is zero. Use imagecount and imageoffset to paginate the list of available images.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/influencers": {
      "get": {
        "operationId": "InfluencersName",
        "summary": "Returns a list of those who influenced a person or...",
        "description": "Returns a list of those who influenced a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+81651 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++++910 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000239859.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/memberof": {
      "get": {
        "operationId": "MemberOfName",
        "summary": "Returns names of groups that a person has been a m...",
        "description": "Returns names of groups that a person has been a member of. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+85122 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++64692 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 165019.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/moods": {
      "get": {
        "operationId": "MoodsName",
        "summary": "Returns a list of terms that describe expressive c...",
        "description": "Returns a list of terms that describe expressive characteristics of the work of a person or group, along with weightings that reflect the relative strength of each term. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+85122 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++64692 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/moviebio": {
      "get": {
        "operationId": "MovieBioName",
        "summary": "Returns a biography of a person or group involved ...",
        "description": "Returns a biography of a person or group involved in movies. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+85122 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++64692 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/moviestyles": {
      "get": {
        "operationId": "MovieStylesName",
        "summary": "Returns a list of styles relevant to the work of a...",
        "description": "Returns a list of styles relevant to the work of a person or group in movies, along with weightings that reflect the importance of each style. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+85122 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++64692 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/musicbio": {
      "get": {
        "operationId": "MusicBioName",
        "summary": "Returns a biography of a person or group involved ...",
        "description": "Returns a biography of a person or group involved in music plus a biographical overview. Please specify a name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+85122 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++64692 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the biographical overview. The following languages are supported: English, Spanish, and German (case-insensitive). The default is English. If the biographical overview is not available in the requested language, English is returned.",
            "in": "query",
            "required": false,
            "enum": [
              "English",
              "German",
              "Spanish"
            ]
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/musiccredits": {
      "get": {
        "operationId": "MusicCreditsName",
        "summary": "Returns a list of the music production credits of ...",
        "description": "Returns a list of the music production credits of a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+85122 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++64692 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/musicstyles": {
      "get": {
        "operationId": "MusicStylesName",
        "summary": "Returns a list of the musical styles of a person o...",
        "description": "Returns a list of the musical styles of a person or group, along with weightings that reflect the importance of each style. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+85122 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++64692 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/schedule": {
      "get": {
        "operationId": "ScheduleName",
        "summary": "Returns a list of recent and upcoming television b...",
        "description": "Returns a list of recent and upcoming television broadcasts of a movie or program. Please set a value for name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "serviceid",
            "type": "string",
            "description": "Database ID of a television service for an area. For example: 360861. You can get service IDs from the TV Listings API with a Services request.",
            "in": "query",
            "required": true
          },
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+30474 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++84363 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q++1475190 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 100857.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0001598722.",
            "in": "query",
            "required": false
          },
          {
            "name": "inprogress",
            "type": "boolean",
            "description": "Whether shows that are in progress at starttime are included in the schedule.",
            "in": "query",
            "required": false
          },
          {
            "name": "sourceid",
            "type": "string",
            "description": "The channel sources, and thus the channels, to be returned. For example: 5,436,429,696,873,994,1274,9426,14633,14635,27080,34396. You can get channel source IDs from the TV Listings API with GridSchedule.",
            "in": "query",
            "required": false
          },
          {
            "name": "sourceexclude",
            "type": "string",
            "description": "If you specify \"sourceid\" to select the television sources to be returned, you can specify here attributes of the channels in the source ID list that you want to eliminate from the channels returned: HD, PPV, Music.",
            "in": "query",
            "required": false
          },
          {
            "name": "sourceinclude",
            "type": "string",
            "description": "If you specify \"sourceid\" to select the television sources to be returned, you can specify here an attribute of the channels in the source ID list that you want to include in the list of channels returned: HD, PPV, Music.",
            "in": "query",
            "required": false,
            "enum": [
              "HD",
              "PPV",
              "Music"
            ]
          },
          {
            "name": "starttime",
            "type": "string",
            "description": "Beginning of the time period covered by the schedule in UTC time in YYYYMMDDhhmmssZ format. For example 20120315140000Z. Default and earliest time is the time of the request.",
            "in": "query",
            "required": false
          },
          {
            "name": "duration",
            "type": "integer",
            "description": "Number of minutes the schedule will cover, from 1 to 20160. Default is 20160 (14 days).",
            "in": "query",
            "required": false,
            "default": 20160
          },
          {
            "name": "titletype",
            "type": "integer",
            "description": "Type of program title to return as described in the TitleType table.",
            "in": "query",
            "required": false
          },
          {
            "name": "copytexttype",
            "type": "string",
            "description": "Type of description you want returned for the movie, program, or TV series. For a short description, for example, choose 5. For a long description, choose 1. See the name/schedule documentation for other values.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country for the language that is specified for the \"language\" parameter, stated as a two-character ISO 3166 country code.",
            "in": "query",
            "required": false,
            "enum": [
              "US",
              "AR",
              "AT",
              "BE",
              "BM",
              "BO",
              "CA",
              "CH",
              "CL",
              "CO",
              "CR",
              "DE",
              "DK",
              "DO",
              "EC",
              "ES",
              "FI",
              "FR",
              "GB",
              "GT",
              "HN",
              "IE",
              "IT",
              "JM",
              "LU",
              "MX",
              "NI",
              "NL",
              "NO",
              "PA",
              "PE",
              "PL",
              "PT",
              "SE",
              "SV",
              "VE"
            ]
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of program titles, keywords, and descriptions, stated as a two-character ISO 639 language code.",
            "in": "query",
            "required": false,
            "enum": [
              "en",
              "da",
              "de",
              "es",
              "fi",
              "fl",
              "fr",
              "it",
              "nl",
              "no",
              "pl",
              "pt",
              "sv"
            ]
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/similars": {
      "get": {
        "operationId": "SimilarsName",
        "summary": "Returns names of similar people or groups. Please ...",
        "description": "Returns names of similar people or groups. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+85122 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++64692 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0001598722.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/songs": {
      "get": {
        "operationId": "SongsName",
        "summary": "Returns information about the songs a person or gr...",
        "description": "Returns information about the songs a person or group contributed to. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+85122 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++64692 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/themes": {
      "get": {
        "operationId": "ThemesName",
        "summary": "Returns a list of topics, feelings, and circumstan...",
        "description": "Returns a list of topics, feelings, and circumstances that motivate or fit with a person or group, along with weightings that reflect the relative importance of each. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+85122 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular music artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++64692 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical music artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 105549.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/videos": {
      "get": {
        "operationId": "VideosName",
        "summary": "Returns data for constructing links to music video...",
        "description": "Returns data for constructing links to music videos and movie trailers that are associated with a person or group. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid. Fields in bold are required.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+85122 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++64692 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 165019.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/name/web": {
      "get": {
        "operationId": "WebName",
        "summary": "Returns Twitter and Facebook resources for a perso...",
        "description": "Returns Twitter and Facebook resources for a person or group. Note: Access to Facebook data is governed by subscription level. Please specify name, nameid, cosmoid, amgpopid, amgmovieid, or amgclassicalid.",
        "tags": [
          "Name"
        ],
        "parameters": [
          {
            "name": "name",
            "type": "string",
            "description": "Name of the person or group.",
            "in": "query",
            "required": false
          },
          {
            "name": "amgmovieid",
            "type": "string",
            "description": "AMG ID for a person who works in movies, consisting of a seven-character string that starts with P and is followed by 6 digits with leading spaces. For example: P+85122 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgpopid",
            "type": "string",
            "description": "AMG ID for a popular artist, consisting of a ten-character string that starts with P and is followed by 9 digits with leading spaces. For example: P++++64692 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "amgclassicalid",
            "type": "string",
            "description": "AMG ID for a classical artist, consisting of a ten-character string that starts with Q and is followed by nine digits with leading spaces. For example: Q+++++9065 (replace plus signs with spaces).",
            "in": "query",
            "required": false
          },
          {
            "name": "cosmoid",
            "type": "string",
            "description": "Cosmo database ID for a person or group. For example: 165019.",
            "in": "query",
            "required": false
          },
          {
            "name": "nameid",
            "type": "string",
            "description": "Rovi ID for a person or group, consisting of the prefix MN followed by a ten-digit number. For example: MN0000187478.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/descriptor/moviegenres": {
      "get": {
        "operationId": "MovieGenresDescriptor",
        "summary": "Returns the movie genres and subgenres recognized ...",
        "description": "Returns the movie genres and subgenres recognized by Rovi DVDs.",
        "tags": [
          "Descriptor"
        ],
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "description": "Specify 'subgenres' here to include movie subgenres in the response.",
            "in": "query",
            "required": false,
            "enum": [
              "subgenres"
            ]
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/descriptor/musicgenres": {
      "get": {
        "operationId": "MusicGenresDescriptor",
        "summary": "Returns the music genres recognized by Rovi Music....",
        "description": "Returns the music genres recognized by Rovi Music. Use the \"include\" parameter to include subgenres and music styles in the response.",
        "tags": [
          "Descriptor"
        ],
        "parameters": [
          {
            "name": "include",
            "type": "string",
            "description": "Specify 'subgenres' here to return subgenres in the response. Specify 'all' to return both subgenres and music styles.",
            "in": "query",
            "required": false,
            "enum": [
              "subgenres",
              "all"
            ]
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/descriptor/styles": {
      "get": {
        "operationId": "MusicStylesDescriptor",
        "summary": "Returns descriptions of music styles recognized by...",
        "description": "Returns descriptions of music styles recognized by Rovi Cloud Services.",
        "tags": [
          "Descriptor"
        ],
        "parameters": [
          {
            "name": "styleids",
            "type": "string",
            "description": "A specific style ID you want the description for.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/descriptor/genres": {
      "get": {
        "operationId": "GenresDescriptor",
        "summary": "Returns descriptions of genres used in Rovi Cloud ...",
        "description": "Returns descriptions of genres used in Rovi Cloud Services, plus optional lists of subgenres and musical styles.",
        "tags": [
          "Descriptor"
        ],
        "parameters": [
          {
            "name": "genreids",
            "type": "string",
            "description": "Specific genre IDs you want information about.",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Specify 'subgenres' here to return subgenres in the response. Specify 'all' to return both subgenres and music styles.",
            "in": "query",
            "required": false,
            "enum": [
              "subgenres",
              "all"
            ]
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/descriptor/subgenres": {
      "get": {
        "operationId": "SubgenresDescriptor",
        "summary": "Returns descriptions of the subgenres recognized b...",
        "description": "Returns descriptions of the subgenres recognized by Rovi Music and Rovi DVDs, plus optional lists of music styles of music subgenres.",
        "tags": [
          "Descriptor"
        ],
        "parameters": [
          {
            "name": "subgenreids",
            "type": "string",
            "description": "Specific subgenre IDs you want information about.",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Specify 'styles' here to also return the music styles in each of the music subgenres.",
            "in": "query",
            "required": false,
            "enum": [
              "styles"
            ]
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/descriptor/musicmoods": {
      "get": {
        "operationId": "MusicMoodsDescriptor",
        "summary": "Returns the moods in music that are recognized by ...",
        "description": "Returns the moods in music that are recognized by Rovi Music.",
        "tags": [
          "Descriptor"
        ],
        "parameters": [
          {
            "name": "moodids",
            "type": "string",
            "description": "Specific mood IDs you want information about.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/descriptor/musicthemes": {
      "get": {
        "operationId": "MusicThemesDescriptor",
        "summary": "Returns the themes in music that are recognized by...",
        "description": "Returns the themes in music that are recognized by Rovi Music.",
        "tags": [
          "Descriptor"
        ],
        "parameters": [
          {
            "name": "moodids",
            "type": "string",
            "description": "Specific theme IDs you want information about.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/descriptor/tvcategories": {
      "get": {
        "operationId": "TVCategoriesDescriptor",
        "summary": "Returns local television categories that are recog...",
        "description": "Returns local television categories that are recognized by Rovi Video and Rovi TV Listings.",
        "tags": [
          "Descriptor"
        ],
        "parameters": [
          {
            "name": "categoryids",
            "type": "string",
            "description": "Specific TV category IDs you want information about.",
            "in": "query",
            "required": false
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response.",
            "in": "query",
            "required": false,
            "enum": [
              "US",
              "AR",
              "AT",
              "BE",
              "BM",
              "BO",
              "CA",
              "CH",
              "CL",
              "CO",
              "CR",
              "DE",
              "DK",
              "DO",
              "EC",
              "ES",
              "FI",
              "FR",
              "GB",
              "GT",
              "HN",
              "IE",
              "IT",
              "JM",
              "LU",
              "MX",
              "NI",
              "NL",
              "NO",
              "PA",
              "PE",
              "PL",
              "PT",
              "SE",
              "SV",
              "VE"
            ]
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data.",
            "in": "query",
            "required": false,
            "enum": [
              "en",
              "da",
              "de",
              "es",
              "fi",
              "fr",
              "it",
              "nl",
              "no",
              "pl",
              "pt",
              "sv"
            ]
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/descriptor/moviecategories": {
      "get": {
        "operationId": "MovieCategoriesDescriptor",
        "summary": "Returns local television categories that are recog...",
        "description": "Returns local television categories that are recognized by Rovi Video and Rovi TV Listings.",
        "tags": [
          "Descriptor"
        ],
        "parameters": [
          {
            "name": "categoryids",
            "type": "string",
            "description": "Specific movie category IDs you want information about.",
            "in": "query",
            "required": false
          },
          {
            "name": "include",
            "type": "string",
            "description": "Specify 'subcategories' here to also list the subcategories in each category.",
            "in": "query",
            "required": false,
            "enum": [
              "subcategories"
            ]
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response.",
            "in": "query",
            "required": false,
            "enum": [
              "US",
              "AR",
              "AT",
              "BE",
              "BM",
              "BO",
              "CA",
              "CH",
              "CL",
              "CO",
              "CR",
              "DE",
              "DK",
              "DO",
              "EC",
              "ES",
              "FI",
              "FR",
              "GB",
              "GT",
              "HN",
              "IE",
              "IT",
              "JM",
              "LU",
              "MX",
              "NI",
              "NL",
              "NO",
              "PA",
              "PE",
              "PL",
              "PT",
              "SE",
              "SV",
              "VE"
            ]
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data.",
            "in": "query",
            "required": false,
            "enum": [
              "en",
              "da",
              "de",
              "es",
              "fi",
              "fr",
              "it",
              "nl",
              "no",
              "pl",
              "pt",
              "sv"
            ]
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/descriptor/significantmovies": {
      "get": {
        "operationId": "SignificantMoviesDescriptor",
        "summary": "Returns the top movies and TV shows in a movie gen...",
        "description": "Returns the top movies and TV shows in a movie genre or subgenre. Fields in bold are required.",
        "tags": [
          "Descriptor"
        ],
        "parameters": [
          {
            "name": "genreids",
            "type": "string",
            "description": "Genre ID or subgenre ID.",
            "in": "query",
            "required": true
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/descriptor/significantsongs": {
      "get": {
        "operationId": "SignificantSongsDescriptor",
        "summary": "Returns the top songs in a musical genre or subgen...",
        "description": "Returns the top songs in a musical genre or subgenre. Fields in bold are required.",
        "tags": [
          "Descriptor"
        ],
        "parameters": [
          {
            "name": "genreids",
            "type": "string",
            "description": "Genre ID or subgenre ID.",
            "in": "query",
            "required": true
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/descriptor/significantartists": {
      "get": {
        "operationId": "SignificantArtistsDescriptor",
        "summary": "Returns the top artists in a musical genre or subg...",
        "description": "Returns the top artists in a musical genre or subgenre. Fields in bold are required.",
        "tags": [
          "Descriptor"
        ],
        "parameters": [
          {
            "name": "genreids",
            "type": "string",
            "description": "Genre ID or subgenre ID.",
            "in": "query",
            "required": true
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/descriptor/significantalbums": {
      "get": {
        "operationId": "SignificantAlbumsDescriptor",
        "summary": "Returns the top albums in a musical genre or subge...",
        "description": "Returns the top albums in a musical genre or subgenre. Fields in bold are required.",
        "tags": [
          "Descriptor"
        ],
        "parameters": [
          {
            "name": "genreids",
            "type": "string",
            "description": "Genre ID or subgenre ID.",
            "in": "query",
            "required": true
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/descriptor/significantcomposers": {
      "get": {
        "operationId": "SignificantComposersDescriptor",
        "summary": "Returns the top composers in a classical music sub...",
        "description": "Returns the top composers in a classical music subgenre. Fields in bold are required.",
        "tags": [
          "Descriptor"
        ],
        "parameters": [
          {
            "name": "genreids",
            "type": "string",
            "description": "Genre ID or subgenre ID.",
            "in": "query",
            "required": true
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/data/v1.1/descriptor/significantcompositions": {
      "get": {
        "operationId": "SignificantCompositionsDescriptor",
        "summary": "Returns the top compositions in the classical musi...",
        "description": "Returns the top compositions in the classical music genre and subgenres. Fields in bold are required.",
        "tags": [
          "Descriptor"
        ],
        "parameters": [
          {
            "name": "genreids",
            "type": "string",
            "description": "Genre ID or subgenre ID.",
            "in": "query",
            "required": true
          },
          {
            "name": "count",
            "type": "integer",
            "description": "Number of items you want to be returned. The default is zero, which returns all items after the \"offset\".",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "offset",
            "type": "integer",
            "description": "Number of items at the start of the response to skip. The default is zero. Use the \"offset\" and \"count\" parameters to paginate the available results.",
            "in": "query",
            "required": false,
            "default": 0
          },
          {
            "name": "country",
            "type": "string",
            "description": "Country of the language of the response. This request currently supports only 'US' (United States).",
            "in": "query",
            "required": false,
            "default": "US"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language of the response data. This request currently supports only 'en' (English).",
            "in": "query",
            "required": false,
            "default": "en"
          },
          {
            "name": "format",
            "type": "string",
            "description": "Format of the returned data: JSON or XML. Default is JSON.",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {}
}