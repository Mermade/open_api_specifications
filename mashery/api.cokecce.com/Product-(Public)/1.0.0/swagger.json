{
  "swagger": "2.0",
  "info": {
    "title": "Product API (Public) **",
    "version": "1.0.0",
    "contact": {
      "name": "Mike Ralphson",
      "email": "mike.ralphson@gmail.com",
      "url": "https://github.com/mermade/mashery2openapi"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "description": "Test our API services using I/O Docs. API for product information",
    "x-mashery-id": "168"
  },
  "schemes": [
    "http"
  ],
  "host": "api.cokecce.com",
  "basePath": "/product",
  "externalDocs": {
    "description": "You can also view our written documentation.",
    "url": "http://developer.cokecce.com/io-docs/docs"
  },
  "consumes": [],
  "produces": [],
  "securityDefinitions": {
    "key": {
      "type": "apiKey",
      "name": "apikey",
      "in": "query"
    }
  },
  "security": [
    {
      "key": []
    }
  ],
  "tags": [
    {
      "name": "Product Methods"
    }
  ],
  "paths": {
    "/search": {
      "get": {
        "operationId": "searchProductMethods",
        "summary": "Returns product search results",
        "tags": [
          "Product Methods"
        ],
        "parameters": [
          {
            "name": "query",
            "type": "string",
            "description": "Keyword search query against product description, with multi-character wildcard operator (e.g. FANTA, COKE*)",
            "in": "query",
            "required": true,
            "default": "*FANTA*"
          },
          {
            "name": "maxRows",
            "type": "integer",
            "description": "Maximum number of rows to return",
            "in": "query",
            "required": true,
            "default": "20"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language",
            "in": "query",
            "required": false,
            "enum": [
              "EN",
              "FR",
              "NL"
            ]
          },
          {
            "name": "format",
            "type": "string",
            "description": "Content type",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          },
          {
            "name": "callback",
            "type": "string",
            "description": "JSONP callback name (e.g. myFunctionName)",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/details": {
      "get": {
        "operationId": "detailsProductMethods",
        "summary": "Returns product description details",
        "tags": [
          "Product Methods"
        ],
        "parameters": [
          {
            "name": "materials",
            "type": "string",
            "description": "Materials separated by comma (e.g. 408001, 409528)",
            "in": "query",
            "required": true,
            "default": "408001, 409528"
          },
          {
            "name": "language",
            "type": "string",
            "description": "Language",
            "in": "query",
            "required": false,
            "enum": [
              "EN",
              "FR",
              "NL"
            ]
          },
          {
            "name": "format",
            "type": "string",
            "description": "Content type",
            "in": "query",
            "required": false,
            "enum": [
              "json",
              "xml"
            ]
          },
          {
            "name": "callback",
            "type": "string",
            "description": "JSONP callback name (e.g. myFunctionName)",
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {}
}